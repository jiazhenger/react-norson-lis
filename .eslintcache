[{"F:\\test\\react-my\\src\\index.js":"1","F:\\test\\react-my\\src\\App.js":"2","F:\\test\\react-my\\src\\reportWebVitals.js":"3","F:\\test\\react-my\\src\\router.js":"4","F:\\test\\react-my\\src\\common\\bundle.js":"5","F:\\test\\react-my\\src\\global\\template\\toast.js":"6","F:\\test\\react-my\\src\\global\\template\\data-loading.js":"7","F:\\test\\react-my\\src\\global\\component\\add-last.js":"8","F:\\test\\react-my\\src\\views\\404.js":"9","F:\\test\\react-my\\src\\views\\index.js":"10","F:\\test\\react-my\\src\\views\\login.js":"11","F:\\test\\react-my\\src\\global\\template\\page-loading.js":"12","F:\\test\\react-my\\src\\global\\template\\content.js":"13","F:\\test\\react-my\\src\\private\\template\\content\\content-page.js":"14","F:\\test\\react-my\\src\\common\\global.js":"15","F:\\test\\react-my\\src\\common\\async.js":"16","F:\\test\\react-my\\src\\common\\fn.js":"17","F:\\test\\react-my\\src\\common\\config.js":"18","F:\\test\\react-my\\src\\common\\http.js":"19","F:\\test\\react-my\\src\\common\\utils\\data-type.js":"20","F:\\test\\react-my\\src\\common\\core\\rest.js":"21","F:\\test\\react-my\\src\\common\\core\\storage.js":"22","F:\\test\\react-my\\src\\common\\core\\inner.js":"23","F:\\test\\react-my\\src\\common\\core\\query.js":"24","F:\\test\\react-my\\src\\common\\store\\storage.js":"25","F:\\jia-git\\react-norson-lis\\src\\index.js":"26","F:\\jia-git\\react-norson-lis\\src\\App.js":"27","F:\\jia-git\\react-norson-lis\\src\\reportWebVitals.js":"28","F:\\jia-git\\react-norson-lis\\src\\common\\global.js":"29","F:\\jia-git\\react-norson-lis\\src\\router.js":"30","F:\\jia-git\\react-norson-lis\\src\\common\\fn.js":"31","F:\\jia-git\\react-norson-lis\\src\\common\\async.js":"32","F:\\jia-git\\react-norson-lis\\src\\common\\http.js":"33","F:\\jia-git\\react-norson-lis\\src\\common\\config.js":"34","F:\\jia-git\\react-norson-lis\\src\\global\\template\\toast.js":"35","F:\\jia-git\\react-norson-lis\\src\\global\\template\\data-loading.js":"36","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\lang.js":"37","F:\\jia-git\\react-norson-lis\\src\\common\\bundle.js":"38","F:\\jia-git\\react-norson-lis\\src\\common\\utils\\data-type.js":"39","F:\\jia-git\\react-norson-lis\\src\\common\\core\\storage.js":"40","F:\\jia-git\\react-norson-lis\\src\\common\\core\\rest.js":"41","F:\\jia-git\\react-norson-lis\\src\\common\\core\\query.js":"42","F:\\jia-git\\react-norson-lis\\src\\common\\core\\form-table.js":"43","F:\\jia-git\\react-norson-lis\\src\\common\\core\\inner.js":"44","F:\\jia-git\\react-norson-lis\\src\\global\\component\\add-last.js":"45","F:\\jia-git\\react-norson-lis\\src\\global\\template\\page-loading.js":"46","F:\\jia-git\\react-norson-lis\\src\\views\\404.js":"47","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\main.js":"48","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\router.js":"49","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\ban-split.js":"50","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\barcode-record.js":"51","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\basic-data-entry\\index.js":"52","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\generate-barcode.js":"53","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\has-been-split.js":"54","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\index.js":"55","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\print-expernum.js":"56","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\print-expernum-bycode.js":"57","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\processed-image-audit.js":"58","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\processed-image-relevance.js":"59","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\processed-image-upload.js":"60","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\processed-image.js":"61","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\receive-box-child.js":"62","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\project-list\\index.js":"63","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\receive-box.js":"64","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\receive-records.js":"65","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\recipients-records.js":"66","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\sorting-manage.js":"67","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-collection-record.js":"68","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-anomaly-manage.js":"69","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-invalidation-records.js":"70","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-log.js":"71","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\basic-data-entry\\tp\\doubleentry.js":"72","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\basic-data-entry\\tp\\patient-details.js":"73","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\basic-data-entry\\tp\\quickentry-table-datas.js":"74","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\project-list\\tp\\batch-code.js":"75","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\basic-data-entry\\tp\\quickentry.js":"76","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\project-list\\tp\\info-project.js":"77","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\project-list\\tp\\invalid-project.js":"78","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\project-list\\tp\\project-details.js":"79","F:\\jia-git\\react-norson-lis\\src\\views\\workbench\\set.js":"80","F:\\jia-git\\react-norson-lis\\src\\common\\store\\storage.js":"81","F:\\jia-git\\react-norson-lis\\src\\common\\store\\indexdb.js":"82","F:\\jia-git\\react-norson-lis\\src\\views\\workbench\\main.js":"83","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-shelf-manage.js":"84","F:\\jia-git\\react-norson-lis\\src\\views\\workbench\\info.js":"85","F:\\jia-git\\react-norson-lis\\src\\views\\workbench\\index.js":"86","F:\\jia-git\\react-norson-lis\\src\\views\\systemManagement\\router.js":"87","F:\\jia-git\\react-norson-lis\\src\\views\\systemManagement\\system-manage\\index.js":"88","F:\\jia-git\\react-norson-lis\\src\\views\\systemManagement\\main.js":"89","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\report-termination-record.js":"90","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\statistics\\index.js":"91","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\infochange.js":"92","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\customer-feedback.js":"93","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\statistics\\tp\\hospital-tab.js":"94","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\index.js":"95","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\statistics\\tp\\testitem-tab.js":"96","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\statistics\\tp\\addsubtract-tab.js":"97","F:\\jia-git\\react-norson-lis\\src\\private\\js\\common.js":"98","F:\\jia-git\\react-norson-lis\\src\\global\\template\\content.js":"99","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\message.js":"100","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\button.js":"101","F:\\jia-git\\react-norson-lis\\src\\global\\template\\image.js":"102","F:\\jia-git\\react-norson-lis\\src\\global\\template\\text.js":"103","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\select.js":"104","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\checkbox.js":"105","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\datePicker.js":"106","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\input.js":"107","F:\\jia-git\\react-norson-lis\\src\\private\\component\\search-form.js":"108","F:\\jia-git\\react-norson-lis\\src\\private\\component\\table.js":"109","F:\\jia-git\\react-norson-lis\\src\\private\\template\\title.js":"110","F:\\jia-git\\react-norson-lis\\src\\private\\template\\page-container.js":"111","F:\\jia-git\\react-norson-lis\\src\\private\\api\\cacheApi.js":"112","F:\\jia-git\\react-norson-lis\\src\\private\\template\\content\\content-aside.js":"113","F:\\jia-git\\react-norson-lis\\src\\private\\template\\box\\box.js":"114","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\addsubtract.js":"115","F:\\jia-git\\react-norson-lis\\src\\private\\component\\submit-form.js":"116","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\modal.js":"117","F:\\jia-git\\react-norson-lis\\src\\views\\service\\router.js":"118","F:\\jia-git\\react-norson-lis\\src\\views\\service\\main.js":"119","F:\\jia-git\\react-norson-lis\\src\\private\\frame\\menu.js":"120","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\tp\\accessrecord-form.js":"121","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\tp\\infochange-form.js":"122","F:\\jia-git\\react-norson-lis\\src\\private\\frame\\frame.js":"123","F:\\jia-git\\react-norson-lis\\src\\private\\template\\box\\box-scroll.js":"124","F:\\jia-git\\react-norson-lis\\src\\private\\template\\tabs.js":"125","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\confirm.js":"126","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\upload.js":"127","F:\\jia-git\\react-norson-lis\\src\\private\\template\\box\\container.js":"128","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\empty.js":"129","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\pagination.js":"130","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\loading.js":"131","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\item.js":"132","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\form.js":"133","F:\\jia-git\\react-norson-lis\\src\\global\\template\\svg\\def-img.js":"134","F:\\jia-git\\react-norson-lis\\src\\common\\utils\\moment.js":"135","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\tp\\addsubtract-form.js":"136","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\switch.js":"137","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\radio.js":"138","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\index.js":"139","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\index.js":"140","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\index.js":"141","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\index.js":"142","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\index.js":"143","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\index.js":"144","F:\\jia-git\\react-norson-lis\\src\\private\\frame\\router.js":"145","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\tabs.js":"146","F:\\jia-git\\react-norson-lis\\src\\views\\login.js":"147","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\router.js":"148","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\main.js":"149","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\teus\\use-record.js":"150","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\teus\\logistics-office.js":"151","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\teus\\index.js":"152","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\reports-delivered.js":"153","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-teu\\index.js":"154","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-outsourcing-list.js":"155","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-hospital\\report.js":"156","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-hospital\\index.js":"157","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-application\\index.js":"158","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-application\\detail.js":"159","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\logistics-tracking\\index.js":"160","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\generate-barcode-record.js":"161","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\enter-barcode\\index.js":"162","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\box-transfer\\part-transfer.js":"163","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\box-transfer\\index.js":"164","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\box-transfer\\full-transfer.js":"165","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\enter-barcode\\tp\\barcode-info.js":"166","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\upload-report.js":"167","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\spec-abnormal.js":"168","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\upload-img.js":"169","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\set-result.js":"170","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\result-44016-2.js":"171","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\result-44016-1.js":"172","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\resulting-operation-log.js":"173","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\reference-range.js":"174","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\person-detail.js":"175","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\project-list.js":"176","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition.js":"177","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44030.js":"178","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44031.js":"179","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44029.js":"180","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44022.js":"181","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44021.js":"182","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44018.js":"183","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44016.js":"184","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44015.js":"185","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44014.js":"186","F:\\jia-git\\react-norson-lis\\src\\private\\template\\content\\content-page.js":"187","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44013.js":"188","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\common.js":"189","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\control.js":"190","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44031.js":"191","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\template.js":"192","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44030.js":"193","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44029.js":"194","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44022.js":"195","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44021.js":"196","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44018.js":"197","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44016.js":"198","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44015.js":"199","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44014.js":"200","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44013.js":"201","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\router.js":"202","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\main.js":"203","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\test-data.js":"204","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\tat.js":"205","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\sampling-time-in.js":"206","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\sample.js":"207","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\delay.js":"208","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\critical-value.js":"209","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\chargeback.js":"210","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\rotation-manage\\index.js":"211","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\rotation-manage\\bind-rotation.js":"212","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\view-report.js":"213","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\undelivered-report.js":"214","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\version-manage.js":"215","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\report-title.js":"216","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\report-template.js":"217","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\report-manage.js":"218","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\project-statistics\\index.js":"219","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\project-result\\index.js":"220","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\pathological\\tct.js":"221","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\tp\\add-associate.js":"222","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\tp\\add-company.js":"223","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\outsorcing-person.js":"224","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\outsorcing-list.js":"225","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\outsorcing-company.js":"226","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\index.js":"227","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\microorganism\\drug-sensitivity-comb.js":"228","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\microorganism\\drug-sensitivity.js":"229","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\microorganism\\tp\\dialog-view-drug.js":"230","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\material\\stock-warning.js":"231","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\material\\material-list.js":"232","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\material\\material-import.js":"233","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\material\\material-export.js":"234","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\material\\application-list.js":"235","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\laboratory-settings\\rule-setting.js":"236","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\merge-rules.js":"237","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\merge-project.js":"238","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\tp\\label-template-form.js":"239","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\expno-template.js":"240","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\label-template.js":"241","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\expno-template-add.js":"242","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\experiment-num\\index.js":"243","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\repair-record.js":"244","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\project-related.js":"245","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-result-manage.js":"246","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\instrument-manage.js":"247","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-repair.js":"248","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-maintain.js":"249","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-list.js":"250","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-gps.js":"251","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-list-add.js":"252","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\calibration-record.js":"253","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\calibration-plan.js":"254","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\absurdity-value\\index.js":"255","F:\\jia-git\\react-norson-lis\\src\\views\\index.js":"256","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\router.js":"257","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\absurdity-value\\tp\\detail-table.js":"258","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\main.js":"259","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\outsourcing-list.js":"260","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\tp\\natural-projects.js":"261","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\tp\\natural-projects-child.js":"262","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\tp\\display-form.js":"263","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\tp\\control.js":"264","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\settlement-hospital.js":"265","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\settlement-details.js":"266","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\finance-confirm.js":"267","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\sett-hospital-child.js":"268","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\sett-details-child.js":"269","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\finance-confirm-child.js":"270","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\bill-inquiry-child.js":"271","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\bill-inquiry.js":"272","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\bill-info.js":"273","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\bill-details-table.js":"274","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\bill-details.js":"275","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\cost-breakdown.js":"276","F:\\jia-git\\react-norson-lis\\src\\views\\business\\main.js":"277","F:\\jia-git\\react-norson-lis\\src\\views\\business\\router.js":"278","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\salesman-region.js":"279","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\salesman-manage.js":"280","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\hospital-clients.js":"281","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\contract-manage.js":"282","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\price-control.js":"283","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\operation-record.js":"284","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\my-hospital-child.js":"285","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\enclosure.js":"286","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\hosp-child-table.js":"287","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\contract-signing-record.js":"288","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\contract-signing-edit.js":"289","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\bill-ToBeConfirmed.js":"290","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\My-lowerLevel-salesman.js":"291","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\My-finance-bill.js":"292","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\My-hospital-clients.js":"293","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\My-contract-manage.js":"294","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\Modify-project-price.js":"295","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\LowerLevel-hospital-clients.js":"296","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\LowerLevel-finance-bill.js":"297","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\LowerLevel-contract-manage.js":"298","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\single.js":"299","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\subordinate.js":"300","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\marketing.js":"301","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\index.js":"302","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\combination.js":"303","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\tp\\subordinate-form.js":"304","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\tp\\reference-range-form.js":"305","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\process\\process-list.js":"306","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\process\\process-authorization.js":"307","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\process\\node-list.js":"308","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\printer\\index.js":"309","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\printer\\tp\\relate.js":"310","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\organization\\staff.js":"311","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\organization\\office.js":"312","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\organization\\post.js":"313","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\organization\\department.js":"314","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\logs\\system-log.js":"315","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\organization\\company.js":"316","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\logs\\login-log.js":"317","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\group-settings\\source-config.js":"318","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\group-settings\\price-management.js":"319","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\group-settings\\tp\\template-detail.js":"320","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\group-settings\\index.js":"321","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\export-rule\\template.js":"322","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\export-rule\\index.js":"323","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\group-settings\\company-template.js":"324","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\dictionary\\dictionary-data.js":"325","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\dictionary\\dictionary-classify.js":"326","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\basic-settings\\list-mode.js":"327","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\tp\\menu-relate.js":"328","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\tp\\submit-form.js":"329","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\system-config.js":"330","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\role.js":"331","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\position.js":"332","F:\\jia-git\\react-norson-lis\\src\\common\\utils\\time.js":"333","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\permission.js":"334","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\menu.js":"335","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\associated.js":"336","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\group.js":"337","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\tp\\specimens-query-child.js":"338","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\to-break-up.js":"339","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\to-be-distributed.js":"340","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimens-receive.js":"341","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimens-receive-quick.js":"342","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimens-receive-child.js":"343","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimens-query.js":"344","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimens-query-slog.js":"345","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-shelves.js":"346","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-shelves-enter.js":"347","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-shelves-complete.js":"348","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-shelves-batch.js":"349","F:\\jia-git\\react-norson-lis\\src\\private\\template\\page-container-scroll.js":"350","F:\\jia-git\\react-norson-lis\\src\\private\\component\\printer-settings.js":"351","F:\\jia-git\\react-norson-lis\\src\\global\\component\\p-img.js":"352","F:\\jia-git\\react-norson-lis\\src\\common\\plugins\\encrypt.js":"353"},{"size":1130,"mtime":1610616772567,"results":"354","hashOfConfig":"355"},{"size":560,"mtime":1610617587596,"results":"356","hashOfConfig":"355"},{"size":362,"mtime":499162500000,"results":"357","hashOfConfig":"355"},{"size":816,"mtime":1610617736167,"results":"358","hashOfConfig":"355"},{"size":919,"mtime":1610615032702,"results":"359","hashOfConfig":"355"},{"size":456,"mtime":1610615327306,"results":"360","hashOfConfig":"355"},{"size":1243,"mtime":1610615294411,"results":"361","hashOfConfig":"355"},{"size":1151,"mtime":1610615231768,"results":"362","hashOfConfig":"355"},{"size":683,"mtime":1610615952035,"results":"363","hashOfConfig":"355"},{"size":679,"mtime":1610617186904,"results":"364","hashOfConfig":"355"},{"size":624,"mtime":1610615443484,"results":"365","hashOfConfig":"355"},{"size":584,"mtime":1610615310030,"results":"366","hashOfConfig":"355"},{"size":585,"mtime":1610615273629,"results":"367","hashOfConfig":"355"},{"size":557,"mtime":1610615369994,"results":"368","hashOfConfig":"355"},{"size":295,"mtime":1595986528184,"results":"369","hashOfConfig":"355"},{"size":658,"mtime":1610614905576,"results":"370","hashOfConfig":"355"},{"size":3151,"mtime":1610615051837,"results":"371","hashOfConfig":"355"},{"size":895,"mtime":1588925976000,"results":"372","hashOfConfig":"355"},{"size":11122,"mtime":1610615190401,"results":"373","hashOfConfig":"355"},{"size":533,"mtime":1606700015117,"results":"374","hashOfConfig":"355"},{"size":629,"mtime":1596255254572,"results":"375","hashOfConfig":"355"},{"size":809,"mtime":1600939484859,"results":"376","hashOfConfig":"355"},{"size":2637,"mtime":1601267654016,"results":"377","hashOfConfig":"355"},{"size":811,"mtime":1602293820917,"results":"378","hashOfConfig":"355"},{"size":950,"mtime":1610615209916,"results":"379","hashOfConfig":"355"},{"size":1130,"mtime":1610937726074,"results":"380","hashOfConfig":"381"},{"size":741,"mtime":1610937813381,"results":"382","hashOfConfig":"381"},{"size":362,"mtime":499162500000,"results":"383","hashOfConfig":"381"},{"size":295,"mtime":1595986528184,"results":"384","hashOfConfig":"381"},{"size":1257,"mtime":1610938704743,"results":"385","hashOfConfig":"381"},{"size":8400,"mtime":1610937854814,"results":"386","hashOfConfig":"381"},{"size":637,"mtime":1589942755696,"results":"387","hashOfConfig":"381"},{"size":11365,"mtime":1608091534104,"results":"388","hashOfConfig":"381"},{"size":906,"mtime":1610937861909,"results":"389","hashOfConfig":"381"},{"size":435,"mtime":1596257348133,"results":"390","hashOfConfig":"381"},{"size":1222,"mtime":1596257677726,"results":"391","hashOfConfig":"381"},{"size":368,"mtime":1601459494711,"results":"392","hashOfConfig":"381"},{"size":898,"mtime":1596257693432,"results":"393","hashOfConfig":"381"},{"size":533,"mtime":1606699937889,"results":"394","hashOfConfig":"381"},{"size":992,"mtime":1602810860771,"results":"395","hashOfConfig":"381"},{"size":629,"mtime":1596255254572,"results":"396","hashOfConfig":"381"},{"size":811,"mtime":1602293820917,"results":"397","hashOfConfig":"381"},{"size":1780,"mtime":1608031229857,"results":"398","hashOfConfig":"381"},{"size":2726,"mtime":1608031229857,"results":"399","hashOfConfig":"381"},{"size":1145,"mtime":1577779138000,"results":"400","hashOfConfig":"381"},{"size":561,"mtime":1596257363890,"results":"401","hashOfConfig":"381"},{"size":703,"mtime":1601170432472,"results":"402","hashOfConfig":"381"},{"size":1042,"mtime":1610617810722,"results":"403","hashOfConfig":"381"},{"size":2177,"mtime":1610617810723,"results":"404","hashOfConfig":"381"},{"size":2452,"mtime":1603157717267,"results":"405","hashOfConfig":"381"},{"size":3088,"mtime":1603157717267,"results":"406","hashOfConfig":"381"},{"size":9620,"mtime":1610617810724,"results":"407","hashOfConfig":"381"},{"size":5936,"mtime":1604649447795,"results":"408","hashOfConfig":"381"},{"size":2596,"mtime":1603157717268,"results":"409","hashOfConfig":"381"},{"size":4692,"mtime":1610617810790,"results":"410","hashOfConfig":"381"},{"size":4610,"mtime":1604649447799,"results":"411","hashOfConfig":"381"},{"size":3409,"mtime":1604649447797,"results":"412","hashOfConfig":"381"},{"size":3646,"mtime":1604649447799,"results":"413","hashOfConfig":"381"},{"size":2797,"mtime":1604649447800,"results":"414","hashOfConfig":"381"},{"size":2700,"mtime":1604649447800,"results":"415","hashOfConfig":"381"},{"size":4386,"mtime":1610617810800,"results":"416","hashOfConfig":"381"},{"size":1976,"mtime":1603157717269,"results":"417","hashOfConfig":"381"},{"size":13171,"mtime":1608031230033,"results":"418","hashOfConfig":"381"},{"size":4168,"mtime":1603277033422,"results":"419","hashOfConfig":"381"},{"size":2599,"mtime":1603157717270,"results":"420","hashOfConfig":"381"},{"size":2475,"mtime":1603157717270,"results":"421","hashOfConfig":"381"},{"size":6601,"mtime":1603157717271,"results":"422","hashOfConfig":"381"},{"size":4453,"mtime":1603157717272,"results":"423","hashOfConfig":"381"},{"size":4513,"mtime":1603157717271,"results":"424","hashOfConfig":"381"},{"size":3590,"mtime":1603157717272,"results":"425","hashOfConfig":"381"},{"size":3420,"mtime":1603157717273,"results":"426","hashOfConfig":"381"},{"size":6410,"mtime":1608031229958,"results":"427","hashOfConfig":"381"},{"size":26282,"mtime":1610617810731,"results":"428","hashOfConfig":"381"},{"size":1862,"mtime":1610617810758,"results":"429","hashOfConfig":"381"},{"size":2380,"mtime":1608031230033,"results":"430","hashOfConfig":"381"},{"size":5646,"mtime":1610617810767,"results":"431","hashOfConfig":"381"},{"size":16320,"mtime":1608031230050,"results":"432","hashOfConfig":"381"},{"size":2663,"mtime":1608031230065,"results":"433","hashOfConfig":"381"},{"size":4784,"mtime":1608031230074,"results":"434","hashOfConfig":"381"},{"size":2981,"mtime":1608105191406,"results":"435","hashOfConfig":"381"},{"size":931,"mtime":1599470129708,"results":"436","hashOfConfig":"381"},{"size":2113,"mtime":1592378138988,"results":"437","hashOfConfig":"381"},{"size":659,"mtime":1603507157477,"results":"438","hashOfConfig":"381"},{"size":7877,"mtime":1603157717273,"results":"439","hashOfConfig":"381"},{"size":4084,"mtime":1604583740188,"results":"440","hashOfConfig":"381"},{"size":5402,"mtime":1608105562703,"results":"441","hashOfConfig":"381"},{"size":990,"mtime":1610617811545,"results":"442","hashOfConfig":"381"},{"size":3867,"mtime":1610617811546,"results":"443","hashOfConfig":"381"},{"size":577,"mtime":1610617811544,"results":"444","hashOfConfig":"381"},{"size":2814,"mtime":1610617811500,"results":"445","hashOfConfig":"381"},{"size":1750,"mtime":1610617811502,"results":"446","hashOfConfig":"381"},{"size":9448,"mtime":1610617811495,"results":"447","hashOfConfig":"381"},{"size":6687,"mtime":1610617811479,"results":"448","hashOfConfig":"381"},{"size":2588,"mtime":1610617811530,"results":"449","hashOfConfig":"381"},{"size":1819,"mtime":1610617811480,"results":"450","hashOfConfig":"381"},{"size":2595,"mtime":1610617811543,"results":"451","hashOfConfig":"381"},{"size":2909,"mtime":1610617811518,"results":"452","hashOfConfig":"381"},{"size":3973,"mtime":1610617810717,"results":"453","hashOfConfig":"381"},{"size":562,"mtime":1600996633314,"results":"454","hashOfConfig":"381"},{"size":524,"mtime":1601170432469,"results":"455","hashOfConfig":"381"},{"size":1313,"mtime":1610617810625,"results":"456","hashOfConfig":"381"},{"size":1017,"mtime":1601017561804,"results":"457","hashOfConfig":"381"},{"size":271,"mtime":1604890651867,"results":"458","hashOfConfig":"381"},{"size":3214,"mtime":1608031229933,"results":"459","hashOfConfig":"381"},{"size":1153,"mtime":1610617810635,"results":"460","hashOfConfig":"381"},{"size":2845,"mtime":1603157717265,"results":"461","hashOfConfig":"381"},{"size":2286,"mtime":1610617810636,"results":"462","hashOfConfig":"381"},{"size":4398,"mtime":1610617810693,"results":"463","hashOfConfig":"381"},{"size":12450,"mtime":1610941886429,"results":"464","hashOfConfig":"381"},{"size":534,"mtime":1608031229954,"results":"465","hashOfConfig":"381"},{"size":650,"mtime":1608031229954,"results":"466","hashOfConfig":"381"},{"size":3608,"mtime":1610617810665,"results":"467","hashOfConfig":"381"},{"size":467,"mtime":1602811583205,"results":"468","hashOfConfig":"381"},{"size":905,"mtime":1602323716552,"results":"469","hashOfConfig":"381"},{"size":6258,"mtime":1610617811465,"results":"470","hashOfConfig":"381"},{"size":7397,"mtime":1610617810705,"results":"471","hashOfConfig":"381"},{"size":2272,"mtime":1610617810647,"results":"472","hashOfConfig":"381"},{"size":934,"mtime":1610617811456,"results":"473","hashOfConfig":"381"},{"size":563,"mtime":1610617811456,"results":"474","hashOfConfig":"381"},{"size":3777,"mtime":1602299718841,"results":"475","hashOfConfig":"381"},{"size":6514,"mtime":1610617810812,"results":"476","hashOfConfig":"381"},{"size":4524,"mtime":1610617810847,"results":"477","hashOfConfig":"381"},{"size":3409,"mtime":1608105032334,"results":"478","hashOfConfig":"381"},{"size":692,"mtime":1602488217147,"results":"479","hashOfConfig":"381"},{"size":819,"mtime":1602318280582,"results":"480","hashOfConfig":"381"},{"size":704,"mtime":1604649447783,"results":"481","hashOfConfig":"381"},{"size":3753,"mtime":1610617810654,"results":"482","hashOfConfig":"381"},{"size":1103,"mtime":1608031229947,"results":"483","hashOfConfig":"381"},{"size":602,"mtime":1601378344000,"results":"484","hashOfConfig":"381"},{"size":970,"mtime":1608104853835,"results":"485","hashOfConfig":"381"},{"size":504,"mtime":1601440518597,"results":"486","hashOfConfig":"381"},{"size":496,"mtime":1608031229932,"results":"487","hashOfConfig":"381"},{"size":906,"mtime":1601267307049,"results":"488","hashOfConfig":"381"},{"size":1959,"mtime":1577945594000,"results":"489","hashOfConfig":"381"},{"size":1083,"mtime":1601258086348,"results":"490","hashOfConfig":"381"},{"size":5668,"mtime":1610617810842,"results":"491","hashOfConfig":"381"},{"size":1163,"mtime":1596263567098,"results":"492","hashOfConfig":"381"},{"size":1178,"mtime":1604649447785,"results":"493","hashOfConfig":"381"},{"size":2955,"mtime":1610617810848,"results":"494","hashOfConfig":"381"},{"size":4462,"mtime":1610617811447,"results":"495","hashOfConfig":"381"},{"size":1814,"mtime":1608031230235,"results":"496","hashOfConfig":"381"},{"size":4138,"mtime":1610617811129,"results":"497","hashOfConfig":"381"},{"size":7637,"mtime":1610939299712,"results":"498","hashOfConfig":"381"},{"size":3370,"mtime":1610617811016,"results":"499","hashOfConfig":"381"},{"size":4254,"mtime":1610939334573,"results":"500","hashOfConfig":"381"},{"size":526,"mtime":1602299454134,"results":"501","hashOfConfig":"381"},{"size":5677,"mtime":1608091550325,"results":"502","hashOfConfig":"381"},{"size":942,"mtime":1608031230346,"results":"503","hashOfConfig":"381"},{"size":566,"mtime":1608031230346,"results":"504","hashOfConfig":"381"},{"size":2472,"mtime":1608031230346,"results":"505","hashOfConfig":"381"},{"size":6240,"mtime":1608031230345,"results":"506","hashOfConfig":"381"},{"size":11319,"mtime":1608031230335,"results":"507","hashOfConfig":"381"},{"size":4882,"mtime":1608031230323,"results":"508","hashOfConfig":"381"},{"size":5267,"mtime":1608031230322,"results":"509","hashOfConfig":"381"},{"size":4126,"mtime":1608031230305,"results":"510","hashOfConfig":"381"},{"size":2891,"mtime":1608031230304,"results":"511","hashOfConfig":"381"},{"size":4561,"mtime":1608031230295,"results":"512","hashOfConfig":"381"},{"size":5591,"mtime":1608031230294,"results":"513","hashOfConfig":"381"},{"size":5629,"mtime":1608031230269,"results":"514","hashOfConfig":"381"},{"size":3693,"mtime":1608031230267,"results":"515","hashOfConfig":"381"},{"size":3504,"mtime":1610617811427,"results":"516","hashOfConfig":"381"},{"size":12208,"mtime":1610617811401,"results":"517","hashOfConfig":"381"},{"size":5334,"mtime":1608031230238,"results":"518","hashOfConfig":"381"},{"size":2704,"mtime":1608031230238,"results":"519","hashOfConfig":"381"},{"size":4492,"mtime":1608031230237,"results":"520","hashOfConfig":"381"},{"size":2659,"mtime":1610617811403,"results":"521","hashOfConfig":"381"},{"size":2806,"mtime":1610617811394,"results":"522","hashOfConfig":"381"},{"size":3534,"mtime":1610617811356,"results":"523","hashOfConfig":"381"},{"size":4923,"mtime":1610617811374,"results":"524","hashOfConfig":"381"},{"size":5363,"mtime":1610617811356,"results":"525","hashOfConfig":"381"},{"size":3945,"mtime":1610617811354,"results":"526","hashOfConfig":"381"},{"size":8637,"mtime":1610617811353,"results":"527","hashOfConfig":"381"},{"size":2274,"mtime":1610617811355,"results":"528","hashOfConfig":"381"},{"size":2850,"mtime":1610617811342,"results":"529","hashOfConfig":"381"},{"size":2709,"mtime":1610617811340,"results":"530","hashOfConfig":"381"},{"size":3975,"mtime":1610617811341,"results":"531","hashOfConfig":"381"},{"size":1491,"mtime":1602471060496,"results":"532","hashOfConfig":"381"},{"size":5048,"mtime":1610617811328,"results":"533","hashOfConfig":"381"},{"size":7292,"mtime":1610617811340,"results":"534","hashOfConfig":"381"},{"size":5215,"mtime":1610617811328,"results":"535","hashOfConfig":"381"},{"size":9020,"mtime":1610617811327,"results":"536","hashOfConfig":"381"},{"size":13830,"mtime":1610617811303,"results":"537","hashOfConfig":"381"},{"size":9980,"mtime":1610617811303,"results":"538","hashOfConfig":"381"},{"size":1552,"mtime":1610617811301,"results":"539","hashOfConfig":"381"},{"size":10156,"mtime":1610617811296,"results":"540","hashOfConfig":"381"},{"size":4498,"mtime":1610617811281,"results":"541","hashOfConfig":"381"},{"size":534,"mtime":1601182021046,"results":"542","hashOfConfig":"381"},{"size":5165,"mtime":1610617811280,"results":"543","hashOfConfig":"381"},{"size":7628,"mtime":1610617811261,"results":"544","hashOfConfig":"381"},{"size":14886,"mtime":1610617811279,"results":"545","hashOfConfig":"381"},{"size":3734,"mtime":1610617811248,"results":"546","hashOfConfig":"381"},{"size":3222,"mtime":1602487105563,"results":"547","hashOfConfig":"381"},{"size":3734,"mtime":1610617811229,"results":"548","hashOfConfig":"381"},{"size":3734,"mtime":1610617811219,"results":"549","hashOfConfig":"381"},{"size":3733,"mtime":1610617811212,"results":"550","hashOfConfig":"381"},{"size":3733,"mtime":1610617811204,"results":"551","hashOfConfig":"381"},{"size":5385,"mtime":1610617811198,"results":"552","hashOfConfig":"381"},{"size":5385,"mtime":1610617811197,"results":"553","hashOfConfig":"381"},{"size":5575,"mtime":1610617811196,"results":"554","hashOfConfig":"381"},{"size":5930,"mtime":1610617811167,"results":"555","hashOfConfig":"381"},{"size":3734,"mtime":1610617811149,"results":"556","hashOfConfig":"381"},{"size":1116,"mtime":1601181494253,"results":"557","hashOfConfig":"381"},{"size":625,"mtime":1601177420142,"results":"558","hashOfConfig":"381"},{"size":3917,"mtime":1604649447891,"results":"559","hashOfConfig":"381"},{"size":3964,"mtime":1604649447890,"results":"560","hashOfConfig":"381"},{"size":3326,"mtime":1604649447889,"results":"561","hashOfConfig":"381"},{"size":3889,"mtime":1604649447889,"results":"562","hashOfConfig":"381"},{"size":3369,"mtime":1604649447888,"results":"563","hashOfConfig":"381"},{"size":4321,"mtime":1604649447887,"results":"564","hashOfConfig":"381"},{"size":3387,"mtime":1604649447887,"results":"565","hashOfConfig":"381"},{"size":6753,"mtime":1604886493815,"results":"566","hashOfConfig":"381"},{"size":8217,"mtime":1604886493814,"results":"567","hashOfConfig":"381"},{"size":3467,"mtime":1604649447885,"results":"568","hashOfConfig":"381"},{"size":3635,"mtime":1603793801239,"results":"569","hashOfConfig":"381"},{"size":5618,"mtime":1604649447884,"results":"570","hashOfConfig":"381"},{"size":7141,"mtime":1604886493814,"results":"571","hashOfConfig":"381"},{"size":7418,"mtime":1604886493813,"results":"572","hashOfConfig":"381"},{"size":13143,"mtime":1610617811105,"results":"573","hashOfConfig":"381"},{"size":3150,"mtime":1604649447882,"results":"574","hashOfConfig":"381"},{"size":5168,"mtime":1604649447880,"results":"575","hashOfConfig":"381"},{"size":6279,"mtime":1604886493813,"results":"576","hashOfConfig":"381"},{"size":3217,"mtime":1604649447878,"results":"577","hashOfConfig":"381"},{"size":3326,"mtime":1604649447879,"results":"578","hashOfConfig":"381"},{"size":3774,"mtime":1604649447877,"results":"579","hashOfConfig":"381"},{"size":4678,"mtime":1604649447877,"results":"580","hashOfConfig":"381"},{"size":4661,"mtime":1604649447877,"results":"581","hashOfConfig":"381"},{"size":3428,"mtime":1604649447876,"results":"582","hashOfConfig":"381"},{"size":5420,"mtime":1604886493811,"results":"583","hashOfConfig":"381"},{"size":6061,"mtime":1604886493812,"results":"584","hashOfConfig":"381"},{"size":3866,"mtime":1604649447875,"results":"585","hashOfConfig":"381"},{"size":2922,"mtime":1603793801238,"results":"586","hashOfConfig":"381"},{"size":5793,"mtime":1604886493811,"results":"587","hashOfConfig":"381"},{"size":5386,"mtime":1603793801237,"results":"588","hashOfConfig":"381"},{"size":6698,"mtime":1603793801237,"results":"589","hashOfConfig":"381"},{"size":6622,"mtime":1603793801236,"results":"590","hashOfConfig":"381"},{"size":2577,"mtime":1604649447873,"results":"591","hashOfConfig":"381"},{"size":5764,"mtime":1604886493810,"results":"592","hashOfConfig":"381"},{"size":5695,"mtime":1603793801233,"results":"593","hashOfConfig":"381"},{"size":4294,"mtime":1603793801235,"results":"594","hashOfConfig":"381"},{"size":4638,"mtime":1604649447857,"results":"595","hashOfConfig":"381"},{"size":5732,"mtime":1604649447858,"results":"596","hashOfConfig":"381"},{"size":8175,"mtime":1603793801231,"results":"597","hashOfConfig":"381"},{"size":8956,"mtime":1604649447856,"results":"598","hashOfConfig":"381"},{"size":7888,"mtime":1604886493809,"results":"599","hashOfConfig":"381"},{"size":15306,"mtime":1603277033454,"results":"600","hashOfConfig":"381"},{"size":4422,"mtime":1603449783505,"results":"601","hashOfConfig":"381"},{"size":8188,"mtime":1604886493809,"results":"602","hashOfConfig":"381"},{"size":7149,"mtime":1604886493808,"results":"603","hashOfConfig":"381"},{"size":10980,"mtime":1604886493808,"results":"604","hashOfConfig":"381"},{"size":5976,"mtime":1603157717282,"results":"605","hashOfConfig":"381"},{"size":5675,"mtime":1604886493794,"results":"606","hashOfConfig":"381"},{"size":5287,"mtime":1604649447853,"results":"607","hashOfConfig":"381"},{"size":3757,"mtime":1602810860783,"results":"608","hashOfConfig":"381"},{"size":9255,"mtime":1604886493793,"results":"609","hashOfConfig":"381"},{"size":8431,"mtime":1604886493792,"results":"610","hashOfConfig":"381"},{"size":4321,"mtime":1601018221631,"results":"611","hashOfConfig":"381"},{"size":933,"mtime":1602735399665,"results":"612","hashOfConfig":"381"},{"size":7477,"mtime":1604886493793,"results":"613","hashOfConfig":"381"},{"size":571,"mtime":1608031230236,"results":"614","hashOfConfig":"381"},{"size":6175,"mtime":1610617811084,"results":"615","hashOfConfig":"381"},{"size":8777,"mtime":1610617811099,"results":"616","hashOfConfig":"381"},{"size":4022,"mtime":1610617811085,"results":"617","hashOfConfig":"381"},{"size":3868,"mtime":1610617811085,"results":"618","hashOfConfig":"381"},{"size":6442,"mtime":1604649447832,"results":"619","hashOfConfig":"381"},{"size":5163,"mtime":1608031230234,"results":"620","hashOfConfig":"381"},{"size":8901,"mtime":1610617811071,"results":"621","hashOfConfig":"381"},{"size":8408,"mtime":1610617811070,"results":"622","hashOfConfig":"381"},{"size":6279,"mtime":1610617811070,"results":"623","hashOfConfig":"381"},{"size":6115,"mtime":1608031230233,"results":"624","hashOfConfig":"381"},{"size":5089,"mtime":1610617811056,"results":"625","hashOfConfig":"381"},{"size":4349,"mtime":1610617811050,"results":"626","hashOfConfig":"381"},{"size":6071,"mtime":1608031230231,"results":"627","hashOfConfig":"381"},{"size":2710,"mtime":1610617811026,"results":"628","hashOfConfig":"381"},{"size":2981,"mtime":1608031230210,"results":"629","hashOfConfig":"381"},{"size":8923,"mtime":1610617811025,"results":"630","hashOfConfig":"381"},{"size":7362,"mtime":1610617811024,"results":"631","hashOfConfig":"381"},{"size":583,"mtime":1608031230209,"results":"632","hashOfConfig":"381"},{"size":949,"mtime":1608031230209,"results":"633","hashOfConfig":"381"},{"size":8397,"mtime":1610617811024,"results":"634","hashOfConfig":"381"},{"size":7574,"mtime":1610617811023,"results":"635","hashOfConfig":"381"},{"size":5309,"mtime":1610617810997,"results":"636","hashOfConfig":"381"},{"size":8470,"mtime":1610617810996,"results":"637","hashOfConfig":"381"},{"size":8067,"mtime":1610617810944,"results":"638","hashOfConfig":"381"},{"size":2675,"mtime":1610617810922,"results":"639","hashOfConfig":"381"},{"size":17147,"mtime":1610617810921,"results":"640","hashOfConfig":"381"},{"size":2663,"mtime":1610617810919,"results":"641","hashOfConfig":"381"},{"size":11983,"mtime":1610617810920,"results":"642","hashOfConfig":"381"},{"size":2273,"mtime":1608031230193,"results":"643","hashOfConfig":"381"},{"size":9713,"mtime":1610617810919,"results":"644","hashOfConfig":"381"},{"size":9371,"mtime":1610617810919,"results":"645","hashOfConfig":"381"},{"size":3040,"mtime":1610617810918,"results":"646","hashOfConfig":"381"},{"size":7325,"mtime":1610617810917,"results":"647","hashOfConfig":"381"},{"size":4564,"mtime":1610617810918,"results":"648","hashOfConfig":"381"},{"size":7515,"mtime":1610617810916,"results":"649","hashOfConfig":"381"},{"size":5606,"mtime":1608031230168,"results":"650","hashOfConfig":"381"},{"size":5016,"mtime":1610617810916,"results":"651","hashOfConfig":"381"},{"size":7214,"mtime":1610617810871,"results":"652","hashOfConfig":"381"},{"size":8055,"mtime":1610617810870,"results":"653","hashOfConfig":"381"},{"size":0,"mtime":1610617810868,"results":"654","hashOfConfig":"381"},{"size":27747,"mtime":1610617810869,"results":"655","hashOfConfig":"381"},{"size":9562,"mtime":1608031230136,"results":"656","hashOfConfig":"381"},{"size":8769,"mtime":1608031230135,"results":"657","hashOfConfig":"381"},{"size":10336,"mtime":1610617810868,"results":"658","hashOfConfig":"381"},{"size":12104,"mtime":1610617810870,"results":"659","hashOfConfig":"381"},{"size":5001,"mtime":1610617810869,"results":"660","hashOfConfig":"381"},{"size":6768,"mtime":1604886493791,"results":"661","hashOfConfig":"381"},{"size":8794,"mtime":1604886493791,"results":"662","hashOfConfig":"381"},{"size":8038,"mtime":1604886493790,"results":"663","hashOfConfig":"381"},{"size":6256,"mtime":1605174567266,"results":"664","hashOfConfig":"381"},{"size":2468,"mtime":1604919285297,"results":"665","hashOfConfig":"381"},{"size":13448,"mtime":1604886493790,"results":"666","hashOfConfig":"381"},{"size":9031,"mtime":1604886493789,"results":"667","hashOfConfig":"381"},{"size":10248,"mtime":1604886493789,"results":"668","hashOfConfig":"381"},{"size":8374,"mtime":1604886493788,"results":"669","hashOfConfig":"381"},{"size":2904,"mtime":1604649447816,"results":"670","hashOfConfig":"381"},{"size":9125,"mtime":1604649447817,"results":"671","hashOfConfig":"381"},{"size":2191,"mtime":1604649447816,"results":"672","hashOfConfig":"381"},{"size":5038,"mtime":1604886493786,"results":"673","hashOfConfig":"381"},{"size":7612,"mtime":1604886493786,"results":"674","hashOfConfig":"381"},{"size":5981,"mtime":1604886493787,"results":"675","hashOfConfig":"381"},{"size":6569,"mtime":1604886493785,"results":"676","hashOfConfig":"381"},{"size":10261,"mtime":1604919285295,"results":"677","hashOfConfig":"381"},{"size":7472,"mtime":1604919285295,"results":"678","hashOfConfig":"381"},{"size":8589,"mtime":1604886493785,"results":"679","hashOfConfig":"381"},{"size":6495,"mtime":1604886493784,"results":"680","hashOfConfig":"381"},{"size":5129,"mtime":1604886493783,"results":"681","hashOfConfig":"381"},{"size":4427,"mtime":1604886493783,"results":"682","hashOfConfig":"381"},{"size":4289,"mtime":1605174567247,"results":"683","hashOfConfig":"381"},{"size":5714,"mtime":1604886493782,"results":"684","hashOfConfig":"381"},{"size":4508,"mtime":1604886493781,"results":"685","hashOfConfig":"381"},{"size":5903,"mtime":1604886493781,"results":"686","hashOfConfig":"381"},{"size":5993,"mtime":1604886493780,"results":"687","hashOfConfig":"381"},{"size":3378,"mtime":1608031229858,"results":"688","hashOfConfig":"381"},{"size":6282,"mtime":1604886493780,"results":"689","hashOfConfig":"381"},{"size":7502,"mtime":1605174567222,"results":"690","hashOfConfig":"381"},{"size":5260,"mtime":1604886493778,"results":"691","hashOfConfig":"381"},{"size":5949,"mtime":1604886493779,"results":"692","hashOfConfig":"381"},{"size":2438,"mtime":1608031230112,"results":"693","hashOfConfig":"381"},{"size":3232,"mtime":1603157717275,"results":"694","hashOfConfig":"381"},{"size":5542,"mtime":1603277033423,"results":"695","hashOfConfig":"381"},{"size":7647,"mtime":1604649447807,"results":"696","hashOfConfig":"381"},{"size":5124,"mtime":1604649447806,"results":"697","hashOfConfig":"381"},{"size":2342,"mtime":1604649447806,"results":"698","hashOfConfig":"381"},{"size":7454,"mtime":1604649447805,"results":"699","hashOfConfig":"381"},{"size":2470,"mtime":1604649447804,"results":"700","hashOfConfig":"381"},{"size":1675,"mtime":1604649447803,"results":"701","hashOfConfig":"381"},{"size":7052,"mtime":1608031230102,"results":"702","hashOfConfig":"381"},{"size":4482,"mtime":1604649447802,"results":"703","hashOfConfig":"381"},{"size":7758,"mtime":1604649447801,"results":"704","hashOfConfig":"381"},{"size":828,"mtime":1608031229948,"results":"705","hashOfConfig":"381"},{"size":2955,"mtime":1605174567391,"results":"706","hashOfConfig":"381"},{"size":3030,"mtime":1610617810623,"results":"707","hashOfConfig":"381"},{"size":3516,"mtime":1600931751488,"results":"708","hashOfConfig":"381"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},"1gleg9y",{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"711"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iqd7y3",{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"771","messages":"772","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"773","messages":"774","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"766"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"766"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"781","messages":"782","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783","usedDeprecatedRules":"766"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788","usedDeprecatedRules":"766"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"766"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810","usedDeprecatedRules":"766"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813","usedDeprecatedRules":"766"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"766"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"766"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"822","usedDeprecatedRules":"766"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825","usedDeprecatedRules":"766"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828","usedDeprecatedRules":"766"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"766"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834","usedDeprecatedRules":"766"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837","usedDeprecatedRules":"766"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"766"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843","usedDeprecatedRules":"766"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"766"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"766"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"766"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"766"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858","usedDeprecatedRules":"766"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"766"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"766"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867","usedDeprecatedRules":"766"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"766"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"873","usedDeprecatedRules":"766"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"876","usedDeprecatedRules":"766"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"879","usedDeprecatedRules":"766"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"882","usedDeprecatedRules":"766"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"885","usedDeprecatedRules":"766"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888","usedDeprecatedRules":"766"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891","usedDeprecatedRules":"766"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"766"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"766"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"766"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"766"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"766"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"766"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"766"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"766"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"766"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"766"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924","usedDeprecatedRules":"766"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"766"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"766"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"766"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"766"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"766"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"942","usedDeprecatedRules":"766"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"766"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948","usedDeprecatedRules":"766"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951","usedDeprecatedRules":"766"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"954","usedDeprecatedRules":"766"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957","usedDeprecatedRules":"766"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960","usedDeprecatedRules":"766"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"963","usedDeprecatedRules":"766"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"766"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"971","usedDeprecatedRules":"766"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"974","usedDeprecatedRules":"766"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"977","usedDeprecatedRules":"766"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"984","usedDeprecatedRules":"766"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"987","usedDeprecatedRules":"766"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"990","usedDeprecatedRules":"766"},{"filePath":"991","messages":"992","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"993","messages":"994","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"995","usedDeprecatedRules":"766"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"998","usedDeprecatedRules":"766"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1001","usedDeprecatedRules":"766"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1004","usedDeprecatedRules":"766"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1007","usedDeprecatedRules":"766"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1010","usedDeprecatedRules":"766"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1013","usedDeprecatedRules":"766"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1016","usedDeprecatedRules":"766"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1019","usedDeprecatedRules":"766"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1022","usedDeprecatedRules":"766"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1027","usedDeprecatedRules":"766"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1030","usedDeprecatedRules":"766"},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1035","usedDeprecatedRules":"766"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1038","usedDeprecatedRules":"766"},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1041","usedDeprecatedRules":"766"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1044","usedDeprecatedRules":"766"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1047","usedDeprecatedRules":"766"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1050","usedDeprecatedRules":"766"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1053","usedDeprecatedRules":"766"},{"filePath":"1054","messages":"1055","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1056","usedDeprecatedRules":"766"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1059","usedDeprecatedRules":"766"},{"filePath":"1060","messages":"1061","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"1062","messages":"1063","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1064","usedDeprecatedRules":"766"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067","usedDeprecatedRules":"766"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1070","usedDeprecatedRules":"766"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1075","usedDeprecatedRules":"766"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1078","usedDeprecatedRules":"766"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1081","usedDeprecatedRules":"766"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1084","usedDeprecatedRules":"766"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1087","usedDeprecatedRules":"766"},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1092","usedDeprecatedRules":"766"},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1101","usedDeprecatedRules":"766"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1104","usedDeprecatedRules":"766"},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1107","usedDeprecatedRules":"766"},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1110","usedDeprecatedRules":"766"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1113","usedDeprecatedRules":"766"},{"filePath":"1114","messages":"1115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1116","usedDeprecatedRules":"766"},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1119","usedDeprecatedRules":"766"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1122","usedDeprecatedRules":"766"},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1125","usedDeprecatedRules":"766"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1128","usedDeprecatedRules":"766"},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1131","usedDeprecatedRules":"766"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1134","usedDeprecatedRules":"766"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1137","usedDeprecatedRules":"766"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1140","usedDeprecatedRules":"766"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1143","usedDeprecatedRules":"766"},{"filePath":"1144","messages":"1145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1146","usedDeprecatedRules":"766"},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1149","usedDeprecatedRules":"766"},{"filePath":"1150","messages":"1151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1152","usedDeprecatedRules":"766"},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1155","usedDeprecatedRules":"766"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1158","usedDeprecatedRules":"766"},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1161","usedDeprecatedRules":"766"},{"filePath":"1162","messages":"1163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1164","usedDeprecatedRules":"766"},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1167","usedDeprecatedRules":"766"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1170","usedDeprecatedRules":"766"},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1173","usedDeprecatedRules":"766"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1176","usedDeprecatedRules":"766"},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179","usedDeprecatedRules":"766"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1182","usedDeprecatedRules":"766"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1185","usedDeprecatedRules":"766"},{"filePath":"1186","messages":"1187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1188","usedDeprecatedRules":"766"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1191","usedDeprecatedRules":"766"},{"filePath":"1192","messages":"1193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1194","usedDeprecatedRules":"766"},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1197","usedDeprecatedRules":"766"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1200","usedDeprecatedRules":"766"},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1203","usedDeprecatedRules":"766"},{"filePath":"1204","messages":"1205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1206","usedDeprecatedRules":"766"},{"filePath":"1207","messages":"1208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1209","usedDeprecatedRules":"766"},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1212","usedDeprecatedRules":"766"},{"filePath":"1213","messages":"1214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1215","usedDeprecatedRules":"766"},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1218","usedDeprecatedRules":"766"},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1221","usedDeprecatedRules":"766"},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1224","usedDeprecatedRules":"766"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1227","usedDeprecatedRules":"766"},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1230","usedDeprecatedRules":"766"},{"filePath":"1231","messages":"1232","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1233","usedDeprecatedRules":"766"},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1236","usedDeprecatedRules":"766"},{"filePath":"1237","messages":"1238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1239","usedDeprecatedRules":"766"},{"filePath":"1240","messages":"1241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1242","usedDeprecatedRules":"766"},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1245","usedDeprecatedRules":"766"},{"filePath":"1246","messages":"1247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1248","usedDeprecatedRules":"766"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1251","usedDeprecatedRules":"766"},{"filePath":"1252","messages":"1253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1254","usedDeprecatedRules":"766"},{"filePath":"1255","messages":"1256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257","usedDeprecatedRules":"766"},{"filePath":"1258","messages":"1259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1260","usedDeprecatedRules":"766"},{"filePath":"1261","messages":"1262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1263","usedDeprecatedRules":"766"},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"766"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269","usedDeprecatedRules":"766"},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272","usedDeprecatedRules":"766"},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1275","usedDeprecatedRules":"766"},{"filePath":"1276","messages":"1277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1278","usedDeprecatedRules":"766"},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1281","usedDeprecatedRules":"766"},{"filePath":"1282","messages":"1283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1284","usedDeprecatedRules":"766"},{"filePath":"1285","messages":"1286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1287","usedDeprecatedRules":"766"},{"filePath":"1288","messages":"1289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1290","usedDeprecatedRules":"766"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293","usedDeprecatedRules":"766"},{"filePath":"1294","messages":"1295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296","usedDeprecatedRules":"766"},{"filePath":"1297","messages":"1298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1299","usedDeprecatedRules":"766"},{"filePath":"1300","messages":"1301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1302","usedDeprecatedRules":"766"},{"filePath":"1303","messages":"1304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1305","usedDeprecatedRules":"766"},{"filePath":"1306","messages":"1307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1308","usedDeprecatedRules":"766"},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1311","usedDeprecatedRules":"766"},{"filePath":"1312","messages":"1313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1314","usedDeprecatedRules":"766"},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1317","usedDeprecatedRules":"766"},{"filePath":"1318","messages":"1319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1320","usedDeprecatedRules":"766"},{"filePath":"1321","messages":"1322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1323","usedDeprecatedRules":"766"},{"filePath":"1324","messages":"1325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1326","usedDeprecatedRules":"766"},{"filePath":"1327","messages":"1328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1329","usedDeprecatedRules":"766"},{"filePath":"1330","messages":"1331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1332","usedDeprecatedRules":"766"},{"filePath":"1333","messages":"1334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1335","usedDeprecatedRules":"766"},{"filePath":"1336","messages":"1337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1338","usedDeprecatedRules":"766"},{"filePath":"1339","messages":"1340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1341","usedDeprecatedRules":"766"},{"filePath":"1342","messages":"1343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1344","usedDeprecatedRules":"766"},{"filePath":"1345","messages":"1346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1347","usedDeprecatedRules":"766"},{"filePath":"1348","messages":"1349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1350","usedDeprecatedRules":"766"},{"filePath":"1351","messages":"1352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1353","usedDeprecatedRules":"766"},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1356","usedDeprecatedRules":"766"},{"filePath":"1357","messages":"1358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1359","usedDeprecatedRules":"766"},{"filePath":"1360","messages":"1361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1362","usedDeprecatedRules":"766"},{"filePath":"1363","messages":"1364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1365","usedDeprecatedRules":"766"},{"filePath":"1366","messages":"1367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"766"},{"filePath":"1369","messages":"1370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1371","usedDeprecatedRules":"766"},{"filePath":"1372","messages":"1373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1374","usedDeprecatedRules":"766"},{"filePath":"1375","messages":"1376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"766"},{"filePath":"1378","messages":"1379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"766"},{"filePath":"1381","messages":"1382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1383","usedDeprecatedRules":"766"},{"filePath":"1384","messages":"1385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1386","usedDeprecatedRules":"766"},{"filePath":"1387","messages":"1388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1389","usedDeprecatedRules":"766"},{"filePath":"1390","messages":"1391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1392","usedDeprecatedRules":"766"},{"filePath":"1393","messages":"1394","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1395","usedDeprecatedRules":"766"},{"filePath":"1396","messages":"1397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1398","usedDeprecatedRules":"766"},{"filePath":"1399","messages":"1400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401","usedDeprecatedRules":"766"},{"filePath":"1402","messages":"1403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1404","usedDeprecatedRules":"766"},{"filePath":"1405","messages":"1406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1407","usedDeprecatedRules":"766"},{"filePath":"1408","messages":"1409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1410","usedDeprecatedRules":"766"},{"filePath":"1411","messages":"1412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1413","usedDeprecatedRules":"766"},{"filePath":"1414","messages":"1415","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1416","usedDeprecatedRules":"766"},{"filePath":"1417","messages":"1418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1419","usedDeprecatedRules":"766"},{"filePath":"1420","messages":"1421","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1422","usedDeprecatedRules":"766"},{"filePath":"1423","messages":"1424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1425","usedDeprecatedRules":"766"},{"filePath":"1426","messages":"1427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1428","usedDeprecatedRules":"766"},{"filePath":"1429","messages":"1430","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1431","usedDeprecatedRules":"766"},{"filePath":"1432","messages":"1433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1434","usedDeprecatedRules":"766"},{"filePath":"1435","messages":"1436","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1437","usedDeprecatedRules":"766"},{"filePath":"1438","messages":"1439","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1440","usedDeprecatedRules":"766"},{"filePath":"1441","messages":"1442","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1443","usedDeprecatedRules":"766"},{"filePath":"1444","messages":"1445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1446","usedDeprecatedRules":"766"},{"filePath":"1447","messages":"1448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1449","usedDeprecatedRules":"766"},{"filePath":"1450","messages":"1451","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1452","usedDeprecatedRules":"766"},{"filePath":"1453","messages":"1454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1455","usedDeprecatedRules":"766"},{"filePath":"1456","messages":"1457","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1458","usedDeprecatedRules":"766"},{"filePath":"1459","messages":"1460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1461","usedDeprecatedRules":"766"},{"filePath":"1462","messages":"1463","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1464","usedDeprecatedRules":"766"},{"filePath":"1465","messages":"1466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1467","usedDeprecatedRules":"766"},{"filePath":"1468","messages":"1469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1470","usedDeprecatedRules":"766"},{"filePath":"1471","messages":"1472","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1473","usedDeprecatedRules":"766"},{"filePath":"1474","messages":"1475","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1476","usedDeprecatedRules":"766"},{"filePath":"1477","messages":"1478","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1479","usedDeprecatedRules":"766"},{"filePath":"1480","messages":"1481","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1482","usedDeprecatedRules":"766"},{"filePath":"1483","messages":"1484","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1485","usedDeprecatedRules":"766"},{"filePath":"1486","messages":"1487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1488","usedDeprecatedRules":"766"},{"filePath":"1489","messages":"1490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1491","usedDeprecatedRules":"766"},{"filePath":"1492","messages":"1493","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1494","usedDeprecatedRules":"766"},{"filePath":"1495","messages":"1496","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1497","usedDeprecatedRules":"766"},{"filePath":"1498","messages":"1499","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1500","usedDeprecatedRules":"766"},{"filePath":"1501","messages":"1502","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1503","usedDeprecatedRules":"766"},{"filePath":"1504","messages":"1505","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1506","usedDeprecatedRules":"766"},{"filePath":"1507","messages":"1508","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1509","usedDeprecatedRules":"766"},{"filePath":"1510","messages":"1511","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1512","usedDeprecatedRules":"766"},{"filePath":"1513","messages":"1514","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1515","usedDeprecatedRules":"766"},{"filePath":"1516","messages":"1517","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1518","usedDeprecatedRules":"766"},{"filePath":"1519","messages":"1520","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1521","usedDeprecatedRules":"766"},{"filePath":"1522","messages":"1523","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1524","usedDeprecatedRules":"766"},{"filePath":"1525","messages":"1526","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1527","usedDeprecatedRules":"766"},{"filePath":"1528","messages":"1529","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1530","usedDeprecatedRules":"766"},{"filePath":"1531","messages":"1532","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1533","usedDeprecatedRules":"766"},{"filePath":"1534","messages":"1535","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1536","usedDeprecatedRules":"766"},{"filePath":"1537","messages":"1538","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1539","usedDeprecatedRules":"766"},{"filePath":"1540","messages":"1541","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1542","usedDeprecatedRules":"766"},{"filePath":"1543","messages":"1544","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1545","usedDeprecatedRules":"766"},{"filePath":"1546","messages":"1547","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1548","usedDeprecatedRules":"766"},{"filePath":"1549","messages":"1550","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1551","usedDeprecatedRules":"766"},{"filePath":"1552","messages":"1553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"766"},{"filePath":"1554","messages":"1555","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1556","usedDeprecatedRules":"766"},{"filePath":"1557","messages":"1558","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1559","usedDeprecatedRules":"766"},{"filePath":"1560","messages":"1561","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1562","usedDeprecatedRules":"766"},{"filePath":"1563","messages":"1564","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1565","usedDeprecatedRules":"766"},{"filePath":"1566","messages":"1567","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1568","usedDeprecatedRules":"766"},{"filePath":"1569","messages":"1570","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1571","usedDeprecatedRules":"766"},{"filePath":"1572","messages":"1573","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1574","usedDeprecatedRules":"766"},{"filePath":"1575","messages":"1576","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1577","usedDeprecatedRules":"766"},{"filePath":"1578","messages":"1579","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1580","usedDeprecatedRules":"766"},{"filePath":"1581","messages":"1582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1583","usedDeprecatedRules":"766"},{"filePath":"1584","messages":"1585","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1586","usedDeprecatedRules":"766"},{"filePath":"1587","messages":"1588","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1589","usedDeprecatedRules":"766"},{"filePath":"1590","messages":"1591","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1592","usedDeprecatedRules":"766"},{"filePath":"1593","messages":"1594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1595","usedDeprecatedRules":"766"},{"filePath":"1596","messages":"1597","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1598","usedDeprecatedRules":"766"},{"filePath":"1599","messages":"1600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1601","usedDeprecatedRules":"766"},{"filePath":"1602","messages":"1603","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1604","usedDeprecatedRules":"766"},{"filePath":"1605","messages":"1606","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1607","usedDeprecatedRules":"766"},{"filePath":"1608","messages":"1609","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1610","usedDeprecatedRules":"766"},{"filePath":"1611","messages":"1612","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1613","usedDeprecatedRules":"766"},{"filePath":"1614","messages":"1615","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1616","usedDeprecatedRules":"766"},{"filePath":"1617","messages":"1618","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1619","usedDeprecatedRules":"766"},{"filePath":"1620","messages":"1621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1622","usedDeprecatedRules":"766"},{"filePath":"1623","messages":"1624","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1625","usedDeprecatedRules":"766"},{"filePath":"1626","messages":"1627","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1628","usedDeprecatedRules":"766"},{"filePath":"1629","messages":"1630","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1631","usedDeprecatedRules":"766"},{"filePath":"1632","messages":"1633","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1634","usedDeprecatedRules":"766"},{"filePath":"1635","messages":"1636","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1637","usedDeprecatedRules":"766"},{"filePath":"1638","messages":"1639","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1640","usedDeprecatedRules":"766"},{"filePath":"1641","messages":"1642","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1643","usedDeprecatedRules":"766"},{"filePath":"1644","messages":"1645","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1646","usedDeprecatedRules":"766"},{"filePath":"1647","messages":"1648","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1649","usedDeprecatedRules":"766"},{"filePath":"1650","messages":"1651","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1652","usedDeprecatedRules":"766"},{"filePath":"1653","messages":"1654","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1655","usedDeprecatedRules":"766"},{"filePath":"1656","messages":"1657","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1658","usedDeprecatedRules":"766"},{"filePath":"1659","messages":"1660","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1661","usedDeprecatedRules":"766"},{"filePath":"1662","messages":"1663","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1664","usedDeprecatedRules":"766"},{"filePath":"1665","messages":"1666","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1667","usedDeprecatedRules":"766"},{"filePath":"1668","messages":"1669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1670","usedDeprecatedRules":"766"},{"filePath":"1671","messages":"1672","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1673","usedDeprecatedRules":"766"},{"filePath":"1674","messages":"1675","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1676","usedDeprecatedRules":"766"},{"filePath":"1677","messages":"1678","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1679","usedDeprecatedRules":"766"},{"filePath":"1680","messages":"1681","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1682","usedDeprecatedRules":"766"},{"filePath":"1683","messages":"1684","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1685","usedDeprecatedRules":"766"},{"filePath":"1686","messages":"1687","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1688","usedDeprecatedRules":"766"},{"filePath":"1689","messages":"1690","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1691","usedDeprecatedRules":"766"},{"filePath":"1692","messages":"1693","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1694","usedDeprecatedRules":"766"},{"filePath":"1695","messages":"1696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1697","usedDeprecatedRules":"766"},{"filePath":"1698","messages":"1699","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1700","usedDeprecatedRules":"766"},{"filePath":"1701","messages":"1702","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1703","usedDeprecatedRules":"766"},{"filePath":"1704","messages":"1705","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1706","usedDeprecatedRules":"766"},{"filePath":"1707","messages":"1708","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1709","usedDeprecatedRules":"766"},{"filePath":"1710","messages":"1711","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1712","usedDeprecatedRules":"766"},{"filePath":"1713","messages":"1714","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1715","usedDeprecatedRules":"766"},"F:\\test\\react-my\\src\\index.js",[],["1716","1717"],"F:\\test\\react-my\\src\\App.js",[],"F:\\test\\react-my\\src\\reportWebVitals.js",[],"F:\\test\\react-my\\src\\router.js",["1718"],"F:\\test\\react-my\\src\\common\\bundle.js",[],"F:\\test\\react-my\\src\\global\\template\\toast.js",[],"F:\\test\\react-my\\src\\global\\template\\data-loading.js",[],"F:\\test\\react-my\\src\\global\\component\\add-last.js",[],"F:\\test\\react-my\\src\\views\\404.js",[],"F:\\test\\react-my\\src\\views\\index.js",[],"F:\\test\\react-my\\src\\views\\login.js",[],"F:\\test\\react-my\\src\\global\\template\\page-loading.js",[],"F:\\test\\react-my\\src\\global\\template\\content.js",[],"F:\\test\\react-my\\src\\private\\template\\content\\content-page.js",[],"F:\\test\\react-my\\src\\common\\global.js",[],"F:\\test\\react-my\\src\\common\\async.js",[],"F:\\test\\react-my\\src\\common\\fn.js",[],"F:\\test\\react-my\\src\\common\\config.js",[],"F:\\test\\react-my\\src\\common\\http.js",[],"F:\\test\\react-my\\src\\common\\utils\\data-type.js",[],"F:\\test\\react-my\\src\\common\\core\\rest.js",[],"F:\\test\\react-my\\src\\common\\core\\storage.js",[],"F:\\test\\react-my\\src\\common\\core\\inner.js",[],"F:\\test\\react-my\\src\\common\\core\\query.js",[],"F:\\test\\react-my\\src\\common\\store\\storage.js",[],"F:\\jia-git\\react-norson-lis\\src\\index.js",[],"F:\\jia-git\\react-norson-lis\\src\\App.js",[],"F:\\jia-git\\react-norson-lis\\src\\reportWebVitals.js",[],["1719","1720"],"F:\\jia-git\\react-norson-lis\\src\\common\\global.js",[],"F:\\jia-git\\react-norson-lis\\src\\router.js",["1721"],"F:\\jia-git\\react-norson-lis\\src\\common\\fn.js",["1722","1723"],"F:\\jia-git\\react-norson-lis\\src\\common\\async.js",["1724"],"/* ====================================== 异步加载路由  ====================================== */\nimport React, { Component } from 'react'\n// =====================================================================\nexport default importComponent => {\n\treturn class extends Component {\n\t\tstate = {\n\t\t\tcomponent: null\n\t\t}\n\t\t\n\t\tcomponentDidMount() {\n\t\t\timportComponent().then(f => {\n                this.setState({ component: f.default} )\n            })\n\t\t}\n\t\t\n\t\trender() {\n\t\t\tconst Component = this.state.component\n\t\t\treturn Component ? <Component {...this.props}/> : null\n\t\t}\n\t}\r\n}\r\n// const Content = Async(()=>import('@cpx/content'))","F:\\jia-git\\react-norson-lis\\src\\common\\http.js",["1725","1726","1727","1728","1729"],"/* ====================================== http 请求  ====================================== */\r\nimport axios from 'axios'\r\n//import '@js/crypto-js'\r\nimport Config from './config'\r\nimport $fn from './fn'\r\n// ===================================================== antd\r\n//const CryptoJS = window.CryptoJS\r\n// ===================================================== 公共函数\r\n// 错误提法信息\r\nconst logMsg = (msg,content)=>{ Config.env && console.log(msg,content) }\r\n\r\n// 配置头信息\r\nconst config = ({ type, token, api, upload  })=>{\r\n\tconst content = ['application/json;charset=utf-8','application/x-www-form-urlencoded','multipart/form-data']\r\n\tif(upload){ type = 2 }\r\n\tconst contentType = content[$fn.isValid(type) ? type : Config.contentType]\r\n\t// 签名验证\r\n\t/*\r\n\tlet time = new Date().getTime();\r\n    let sign = {\r\n    \trest_timestamp:time.toString(),\r\n\t\trest_sign:CryptoJS.DES.encrypt(time.toString(), CryptoJS.enc.Utf8.parse('__UWILLBE_'), { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7}).toString()\r\n    }*/\r\n\tlet header = token === false ? \r\n\t\t{ 'Content-Type' \t: contentType } : \r\n\t\t{ \r\n\t\t\t'Content-Type'\t: contentType,\r\n\t\t\t'Authorization'\t: $fn.getToken()\r\n\t\t}\r\n                \r\n\treturn {\r\n\t\tbaseURL: api,\r\n\t\theaders: header,\r\n\t\ttimeout: 30000,\r\n\t\t//withCredentials : true\t// 跨域请求想要带上cookies设置为 true\r\n\t}\r\n}\r\n\r\n// 序列化参数 {a:1,b:2} to ?a=1&b=2\r\nconst serializeParam = (body,isPost) => {\r\n\tif(!$fn.hasObject(body)) return '';\r\n\tlet param = body;\r\n\tlet str='';\r\n\tfor(var i in param){\r\n\t\tconst p = param[i]\r\n\t\tif($fn.hasArray(p)){\r\n\t\t\tp.forEach((v,j) =>{\r\n\t\t\t\tif($fn.isObject(v)){\r\n\t\t\t\t\tfor(let k in v){\r\n\t\t\t\t\t\tstr += i + '['+j+']' + '['+ k +']' + '=' + v[k] + '&'\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstr += i + '['+j+']' + '=' + v + '&'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tif($fn.isValid(param[i]) || param[i] === ''){ str += i + '=' + param[i] + '&' }\r\n\t\t}\r\n\t}\r\n\tif (str.charAt(str.length - 1) === '&'){ str = str.slice(0, str.length - 1) }\r\n\tstr = isPost ? str : '?' + str\r\n\treturn encodeURI(str);\t// encodeURI 不对 [:, /, ;,?] 进行编码\r\n}\r\n\r\n// 序列化公参及自定义传参\r\n//const combineParam = (body) => { return serializeParam(LS.get('login')) + serializeParam(body) }\r\n\r\n// 将 body 以函数形式处理\r\nconst manageBody = body => {\r\n\tif($fn.isFunction(body)){\r\n\t\treturn body()\r\n\t}else if($fn.hasObject(body)){\r\n\t\tfor(var i in body){\r\n\t\t\tlet v = body[i]\r\n\t\t\tif( !$fn.isValid(v) ){\r\n\t\t\t\t// delete body[i]\r\n\t\t\t\tv = ''\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn body\r\n\t}else{\r\n\t\treturn body\r\n\t}\r\n}\r\n// 给空数据加类型\r\nconst setType = (_this,dataName) => {\r\n\tif(!_this) return\r\n\tlet stack = _this[dataName]\r\n\tif($fn.isArray(stack)){\r\n\t\tstack = []\r\n\t}else if($fn.isObject(stack)){\r\n\t\tstack = {}\r\n\t}else{\r\n\t\tstack = ''\r\n\t}\r\n\tif($fn.isValid(dataName)){ _this[dataName] =  stack  }\r\n\treturn stack;\r\n}\r\n// http 核心封装\r\n/**\r\n * defined = {\r\n * \t\tonError: ()=>{}\t\t// 只要出错就调用\r\n * \t\tsuceessHander:()=>{}\t\t// 只要调用接口成功就调用\r\n * \t    onEnd:()=>{}\t\t// 成功或失败都调用\r\n * \t\terror:()=>{}\t\t\t\t// 接口请求不通时调用\r\n * \t\tmyToast:true\t\t\t\t// 数据请求成功但不符合规则时，屏蔽默认提示，可在 then 中自定义提示\r\n * }\r\n *\r\n * */\r\nconst coreRequest = (url, param, action, defined) => {\r\n\tlet UD = defined || {}\r\n\t\r\n\tlet api = url.indexOf('http') !== -1 ? url : Config.api\r\n\tlet body = manageBody(param);\t\t\t\t// 处理自定义参数的不同形式 {} function\r\n\t\tbody = UD.type === 1 ? serializeParam(body,true) : body\r\n\tlet sParam = serializeParam(body);\t// 序列化参数\r\n\tlet promise;\r\n\tlet configs = config({\r\n\t\ttype\t: UD.type,\r\n\t\tupload\t: UD.upload,\r\n\t\ttoken\t: UD.token,\r\n\t\tapi\t\t: api\r\n\t})\r\n\t\r\n\t$fn.isFunction(UD.onStart) && UD.onStart()\t\t// 一开始就调用\r\n\t\r\n\tif(action === 'get'){\r\n\t\tpromise = axios.get(url + sParam, configs);\r\n\t\tlogMsg('%c' + action + ' === ' + api + url + sParam, 'color:blue')\t\t// 输出 api\r\n\t}else{\r\n\t\tpromise = axios.post(url, body, configs);\r\n\t\tlogMsg('%c' + action + ' === ' + api + url + JSON.stringify(body), 'color:blue')\t\r\n\t}\r\n\t\r\n\t// 加载效果\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tpromise.then(res => {\t// 接口正确接收数据处理\r\n\t\t\tlet data = res.data;\r\n\t\t\tlet code = data.status*1;\r\n\t\t\tif(code === 1){\t// 数据请求成功\r\n\t\t\t\tresolve(data.data);\r\n\t\t\t\tlogMsg(url + '===', data.data);\r\n\t\t\t} else if(code === -10404417 || code === -10404413){\t// 登录信息已过期，请重新登录! || 未登录\r\n\t\t\t\t$fn.toast(data['msg'])\r\n\t\t\t\t$fn.remove()\r\n\t\t\t\t$fn.loginTo()\r\n\t\t\t\t// 跳转不同登录页\r\n\t\t\t\tsetTimeout(()=>$fn.go('/login'))\r\n\t\t\t}else{ // 数据请求成功但不符合规则\r\n\t\t\t\treject(data);\r\n\t\t\t\t\t\r\n\t\t\t\tif(UD.onMsg){\r\n\t\t\t\t\t$fn.isFunction(UD.onMsg) && UD.onMsg(data)\t\t// 自定义提示\r\n\t\t\t\t}else{\r\n\t\t\t\t\t$fn.toast(data['msg'], UD.onError)\t\t\t// 默认开启出错提示\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// $fn.isFunction(UD.onError) && UD.onError(data)\t// 只要出错就调用\r\n\t\t\t\t$fn.isFunction(UD.onFail) && UD.onFail(data)\t// 数据处理不满足条件时调用\r\n\t\t\t\t\r\n\t\t\t\tlogMsg(url + '===', data);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$fn.isFunction(UD.onEnd)\t\t&& UD.onEnd(data)  \t\t// 只要调用接口就调用\r\n\t\t\t$fn.isFunction(UD.onSuccess)\t&& UD.onSuccess(data) \t// 只要调用接口成功就调用\r\n\t\t\t\r\n\t\t}, (err) => { \t\t\t\t\t// 接口错误处理\r\n\t\t\tif(!UD.noError){ $fn.toast('服务器或网络出错')}\r\n\t\t\t$fn.isFunction(UD.onNet) \t&& UD.onNet()\t\t\t\t// 服务器出错或无网络调用\r\n\t\t\t$fn.isFunction(UD.onError) \t&& UD.onError()\t\t\t\t// 只要出错就调用\r\n\t\t\t$fn.isFunction(UD.onEnd)\t&& UD.onEnd()  \t\t\t\t// 只要调用接口就调用\r\n\t\t\t//error(err, api + url)\r\n\t\t})\r\n\t})\r\n}\r\n// ===================================================== pull 请求组件\r\n// post 请求\r\nconst post = (url,body,defined) => coreRequest(url,body,'post',defined)\r\n// get 请求\r\nconst get = (url,body,defined) => coreRequest(url,body,'get',defined)\r\n// ===================================================== pull 提交\r\nconst submit = (_this,api,option)=>{\r\n\tlet opt = {\r\n\t\tparam\t\t\t: {},\r\n\t\tloadingText\t\t: '数据提交中...',\t\t\t\r\n\t\tsuccessText\t\t: '',\t\t\t\t\t// 自定义成功提示\r\n\t\tsucceedFn\t\t: null,\t\t\t\t\t// 成功之后执行\r\n\t\terrorText\t\t: '',\t\t\t\t\t// 自定义错误提示\r\n\t\tsubmitLoading\t: 'submitLoading', \t\t// 加载判断\r\n\t\tloading\t\t\t: true,\r\n\t\trunFirst\t\t: true,\t\t\t\t\t// 先跳转，后提示\r\n\t\ttype\t\t\t: Config.contentType, \t// Content-Type 类型\r\n//\t\treplace\t\t\t: null,\t\t\t\t\t// replace 路由\r\n//\t\tpush\t\t\t: null,\t\t\t\t\t// push 路由\r\n//\t\trefresh\t\t\t: false,\t\t\t\t// 是否刷新\r\n//\t\tmyToast\t\t: false,\t\t\t\t// 是否关闭默认提示\r\n//\t\tonEnd\t\t\t: null,\t\t\t\t\t// 无论请求成功或失败都执行此方法\r\n//\t\tonError\t\t\t: null,\t\t\t\t\t//\r\n//\t\tupload\t\t\t: false,\t\t\t\t// 调用上传接口\r\n//\t\ttoken\t\t\t: false,\r\n//\t\tisBody\t\t\t: false,\r\n\t\t...option\r\n\t}\r\n\t\r\n\t_this && _this.setState({ [opt.submitLoading] : true })\r\n\topt.loading && $fn.loading(true,opt.loadingText)\r\n\t\r\n\tconst run = ()=>{\r\n\t\tif(_this){\r\n\t\t\topt.replace && _this.props.history.replace(opt.replace);\r\n\t\t\topt.push && _this.props.history.push(opt.push)\r\n\t\t}\r\n\t\topt.onSuccess && opt.onSuccess()\r\n\t}\r\n\treturn new Promise((resolve, reject)=>{\r\n\t\tpost(api,opt.param,{ \r\n\t\t\tonStart\t: ()=>{ opt.onStart && opt.onStart(true) },\r\n\t\t\tonEnd\t: ()=>{\r\n\t\t\t\t\t\t\t_this && _this.setState({ [opt.submitLoading] : false })\r\n\t\t\t\t\t\t\topt.loading && $fn.loading(false)\r\n\t\t\t\t\t\t\topt.onEnd && opt.onEnd(false)\r\n\t\t\t},\r\n\t\t\tonMsg\t: opt.onMsg && ( data => { $fn.isFunction(opt.onMsg) && opt.onMsg(data) }),\r\n\t\t\tnoError\t: opt.noError,\r\n\t\t\tonError\t: opt.onError,\r\n\t\t\tupload\t: opt.upload,\r\n\t\t\ttoken\t: opt.token,\r\n\t\t\tisBody\t: opt.isBody,\r\n\t\t\ttype\t: opt.type\r\n\t\t}).then(data=>{\r\n\t\t\tresolve(data)\r\n\t\t\t// 提示后执行\r\n\t\t\tif(opt.successText){\r\n\t\t\t\tif(opt.runFirst){\r\n\t\t\t\t\t$fn.toast(opt.successText);\r\n\t\t\t\t\trun();\r\n\t\t\t\t}else{\r\n\t\t\t\t\t$fn.toast(opt.successText,run)\r\n\t\t\t\t}\r\n\t\t\t}else{ // 直接执行\r\n\t\t\t\trun();\r\n\t\t\t}\r\n\t\t},data=>{\r\n\t\t\treject(data)\r\n\t\t\tif(opt.myToast){\r\n\t\t\t\t_this.refs.toast && _this.refs.toast.open({ text: data['info'] })\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}\r\n// ===================================================== 一般数据加载\r\nconst pull = (_this,api,option)=>{\r\n\tlet opt = {\r\n\t\tdataName\t: 'data',\t\t\t\t// 数据名字\r\n\t\tloading\t\t: false,\t\t\t\t// 如果有加载效果\r\n\t\tparam\t\t:{},\t\t\t\t\t// 参数\r\n\t\tpullLoading : 'pullLoading',\t\t// 加载判断\r\n\t\tloadingText\t: '数据加载中...',\t\t\t\r\n//\t\tonSuccess\t: null,\t\t\t// 改变数据\r\n//\t\tonError\t\t: null,\r\n//\t\ttoken\t\t: false,\r\n//\t\tmyToast\t: false,\r\n\t\t...option\r\n\t}\r\n\t\r\n\tif(_this && $fn.isValid(opt.isFirst)){\r\n\t\t_this.setState({ [opt.pullLoading] : true, isFirst : opt.isFirst })\r\n\t}else{\r\n\t\t_this && _this.setState({ [opt.pullLoading] : true })\r\n\t}\r\n\t\r\n\tif(!opt.isFirst){\r\n\t\topt.loading && $fn.loading(true,opt.loadingText)\r\n\t}\r\n\t\r\n\treturn new Promise((resolve,reject)=>{\r\n\t\tget(api,opt.param,{\r\n\t\t\tonStart\t\t: ()=>{ opt.onStart && opt.onStart(true) },\r\n\t\t\tonEnd\t\t: ()=>{\r\n\t\t\t\t\t\t\t\t_this && _this.setState({ [opt.pullLoading] : false })\r\n\t\t\t\t\t\t\t\topt.loading && $fn.loading(false)\r\n\t\t\t\t\t\t\t\topt.onEnd && opt.onEnd(false)\r\n\t\t\t},\r\n\t\t\tonMsg\t: opt.onMsg && ( data => { $fn.isFunction(opt.onMsg) && opt.onMsg(data) }),\r\n\t\t\tnoError\t: opt.noError,\r\n\t\t\tonError\t: ()=>{\r\n\t\t\t\t\t\t\tsetType(_this,opt.dataName) \t // 出错，清空 data\r\n\t\t\t\t\t\t\topt.onError && opt.onError()\r\n\t\t\t\t\t\t\tif(!opt.loading){ $fn.loading(false) }\r\n\t\t\t},\r\n\t\t\ttoken\t: opt.token,\r\n\t\t}).then(data=>{\r\n\t\t\tif($fn.isValid(data)){\r\n\t\t\t\tif($fn.isFunction(opt.onSuccess)){\r\n\t\t\t\t\tdata = opt.onSuccess(data);\r\n\t\t\t\t}\r\n\t\t\t\tif($fn.isValid(opt.dataName)){\r\n\t\t\t\t\t_this && _this.setState({ [opt.dataName] : data });\r\n\t\t\t\t}\r\n\t\t\t\tresolve(data);\r\n\t\t\t}else{\r\n\t\t\t\tlet stack = setType(_this,opt.dataName);\r\n\t\t\t\tresolve(stack);\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}\r\n// ===================================================== 分页\r\nconst paging = (_this,api,option)=>{\r\n\tlet opt = {\r\n\t\tdataName\t\t: 'data',\t\t\t\t// 数据名字\r\n\t\tloading\t\t\t: true,\t\t\t\t\t// 如果有加载效果\r\n\t\tparam\t\t\t: { },\t\t\t\t\t\t// 参数\r\n\t\tpagingLoading\t: 'pullLoading',\t\t// 加载判断\r\n\t\tresetData\t\t: false,\t\t\t\t// 是否重新设置 data，false 不允许\r\n//\t\tformat\t\t\t: {},\t\t\t\t\t\t// 格式化时间\r\n\t\tpag\t\t\t\t: 'pag'\r\n\t}\r\n\t\r\n\tObject.assign(opt,option || {});\r\n\t\r\n\tconst { current, pageSize } = opt.param || {}\r\n\tconst param = {\r\n\t\tpage  \t: current || 1, \t\t// 当前页\r\n\t\tlimit \t: pageSize || 20,\t\t// 每页显示多少条数据\r\n\t    ...opt.param,\r\n\t}\r\n\tdelete param.pageSize\r\n\tdelete param.total\r\n\tdelete param.current\r\n\t\r\n\treturn new Promise((resolve)=>{\r\n\t\tpull(_this,api,{\r\n\t\t\tonStart\t\t: ()=>{ opt.onStart && opt.onStart(true) },\r\n\t\t\tonEnd\t\t: ()=>{ opt.onStart && opt.onEnd(true) },\r\n\t\t\tonError\t\t: opt.onError,\r\n\t\t\tloading\t\t: opt.loading,\r\n\t\t\tparam\t\t: param ,\r\n\t\t\tpullLoading\t: opt.pagingLoading,\r\n\t\t\tresetData\t: true,\r\n\t\t\tdataName\t: null\r\n\t\t}).then(data=>{\r\n\t\t\tconst result = data.items || data\r\n\t\t\t_this.setState({ \r\n\t\t\t\t[opt.pag]:{\r\n\t\t\t\t\t..._this.state[opt.pag],\r\n\t\t\t\t\tcurrent\t\t: +data.current, \t\t    // 当前页码\r\n\t\t\t\t\ttotal\t\t: +data.total_items,\t\t// 总共多少条数据\r\n\t\t\t\t\ttotalPage\t: +data.total_pages,\t\t// 总共多少页\r\n\t\t\t\t\tpageSize\t: +data.limit,\t\t\t\t// 每页显示多少条数据\r\n\t\t\t\t}\r\n\t\t\t},()=>{\r\n\t\t\t\tif($fn.isValid(opt.dataName)){\r\n\t\t\t\t\t_this.setState({ [opt.dataName]: result })\r\n\t\t\t\t\tresolve(result)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\topt.callback && opt.callback(data);\r\n\t\t})\r\n\t})\r\n}\r\nexport default { submit, pull, paging }","F:\\jia-git\\react-norson-lis\\src\\common\\config.js",["1730","1731","1732","1733"],"F:\\jia-git\\react-norson-lis\\src\\global\\template\\toast.js",["1734"],"import React from 'react'\r\nimport AddLast from '@cpt/add-last'\r\n// ===================================================================== toast\r\nexport default () => (\r\n\t<AddLast name='toast'>\r\n\t\t<div id='jzer-toast' className='fix_lt wh tc dn' style={{zIndex:2000}}>\r\n\t\t\t<div className='fxmc wh xplr'>\r\n\t\t\t\t<p className='jzer-toast-msg r5px cf p10 f13' style={{background:'rgba(0,0,0,0.6)'}}></p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</AddLast>\r\n)\r\n","F:\\jia-git\\react-norson-lis\\src\\global\\template\\data-loading.js",[],"F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\lang.js",["1735"],"/* ====================================== toast  ====================================== */\r\nimport React from 'react'\r\nimport { ConfigProvider } from 'antd'\r\nimport zhCN from 'antd/es/locale/zh_CN'\r\n// ===================================================================== Select\r\nexport default ({children}) => <ConfigProvider locale={zhCN}>{children}</ConfigProvider>","F:\\jia-git\\react-norson-lis\\src\\common\\bundle.js",["1736"],"/* ====================================== 异步加载路由  ====================================== */\nimport React, { Component } from 'react'\n// ===================================================================== loadding \nimport PageLoading from '@tp/page-loading'\n// =====================================================================\nexport const Bundle = importComponent => {\n    return class extends Component {\n       \t\n       \tstate = {\n       \t\tComponent: () => <PageLoading/>\n       \t}\n\n        async componentDidMount() {\n            const { default: component } = await importComponent()\n        \t\n        \tthis.setState({ Component: component })\n        }\n        \n        render() {\n            const { Component } = this.state\n\n            return Component ? <Component {...this.props} /> : null\n        }\n    }\n}\n\nexport default path => Bundle(() => import('@views/' + path))\n","F:\\jia-git\\react-norson-lis\\src\\common\\utils\\data-type.js",[],"F:\\jia-git\\react-norson-lis\\src\\common\\core\\storage.js",[],"F:\\jia-git\\react-norson-lis\\src\\common\\core\\rest.js",[],"F:\\jia-git\\react-norson-lis\\src\\common\\core\\query.js",[],"F:\\jia-git\\react-norson-lis\\src\\common\\core\\form-table.js",[],"F:\\jia-git\\react-norson-lis\\src\\common\\core\\inner.js",[],"F:\\jia-git\\react-norson-lis\\src\\global\\component\\add-last.js",[],"F:\\jia-git\\react-norson-lis\\src\\global\\template\\page-loading.js",[],"F:\\jia-git\\react-norson-lis\\src\\views\\404.js",["1737"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport { Result, Button } from 'antd'\r\n// ===================================================================== private template\r\nconst Page = window.$async(()=>import('#tp/content/content-page'))\r\n// ===================================================================== page component\r\nexport default ({ history }) => {\r\n\treturn (\r\n\t\t<Page contentClassName='fxmc'>\r\n\t\t\t<Result\r\n\t\t\t\tstatus='404'\r\n\t\t\t\ttitle='404'\r\n\t\t\t\tsubTitle='哦呵, 页面未找到'\r\n\t\t\t\textra={<Button onClick={()=>history.goBack()} size='large' type='primary' style={{width:'120px'}}>返回</Button>}\r\n\t\t\t/>\r\n\t\t</Page>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\main.js",["1738"],"import React from 'react'\r\n// ===================================================================== private template\r\nimport Router from './router'\r\nconst Frame = window.$async(()=>import('#frame/frame'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{ title: '工作台', path:'workbench'},\r\n\t{ title: '标本管理', path:'specimen-manage'},\r\n\t{ title: '检测中心', path:'testing-center'},\r\n\t{ title: '委托检验中心', path:'entrust-testing-center'},\r\n\t{ title: '实验室管理', path:'laboratory-manage'},\r\n\t\r\n\t{ title: '系统设置', path:'system-settings'},\r\n\t{ title: '系统管理', path:'system-manage'},\r\n\t{ title: '财务管理', path:'finance-page'},\r\n\t{ title: '业务系统', path:'businessList'},\r\n\t{ title: '客服系统', path:'service-page'},\r\n\t{ title: '物流系统', path:'lgistics-page'},\r\n]\r\n// ===================================================================== component\r\nexport default () => <Frame title='管理员系统' data={data} Router={Router} />","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\router.js",["1739"],"/* ====================================== 模块子路由配置  ====================================== */\r\nimport React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n// ===================================================================== 异步加载\r\nimport Import from '@com/bundle'\r\n// ===================================================================== 路由配置\r\nimport Workbench from '@views/workbench/main'\r\nimport LaboratoryManage from '@views/laboratory/laboratory-manage'\r\nimport TestingCenter from '@views/laboratory/testing-center'\r\nimport SpecimenManage from '@views/administrators/specimen-manage'\r\nimport BusinessList from '@views/business/businessList'\r\nimport Finance from '@views/finance/finance-page'\r\nimport SystemSettings from '@views/administrators/system-settings'\r\nimport Lgistics from '@views/lgistics/lgistics-page' \r\nimport Service from '@views/service/service-page' \r\nimport SystemManage from '@views/systemManagement/system-manage' \r\n// ===================================================================== 同步路由\r\nexport default () => (\r\n\t<Switch>\r\n\t\t<Route \tpath='/administrators/workbench' \t\t\tcomponent={ Workbench }  />\r\n\t\t<Route \tpath='/administrators/laboratory-manage' \tcomponent={ LaboratoryManage }  />\r\n\t\t<Route \tpath='/administrators/testing-center' \t\tcomponent={ TestingCenter }  />\r\n\t\t{/* 薛玉梅 | 2020-10-13 | 添加：标本管理 */}\r\n\t\t<Route \tpath='/administrators/specimen-manage' \t\tcomponent={ SpecimenManage }  /> \r\n\t\t<Route \tpath='/administrators/finance-page' \t\tcomponent={ Finance }  />\r\n\t\t<Route \tpath='/administrators/businessList' \t\tcomponent={ BusinessList }  />\r\n\t\t<Route \tpath='/administrators/system-settings' \t\tcomponent={ SystemSettings }  />\r\n\t\t<Route \tpath='/administrators/lgistics-page' \t\tcomponent={ Lgistics }  />\r\n\t\t<Route \tpath='/administrators/service-page' \t\tcomponent={ Service }  />\r\n\t\t<Route \tpath='/administrators/system-manage' \t\tcomponent={ SystemManage }  />\r\n\t\t{/* 重定向 */}\r\n\t\t<Route path='/administrators' children={<Redirect to='/administrators/workbench/index' />} exact  />\r\n\t\t{/* 404 */}\r\n\t\t<Route component={ Import('404') } />\r\n\t</Switch>\r\n)","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\ban-split.js",["1740"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n\t\r\n\tforms = [ \r\n\t\t{ label:'原条码',\t\tname:'old_spec_code',\ttype:'input' }, \r\n\t\t{ label:'创建时间',\t\tname:'date',\t\t\ttype:'date-range', names:['start_date', 'end_date'] } \r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'spec-split/index', param)\r\n\tcols = [ \r\n\t\t{ title: '标本类型',\t\tfield: 'spec_type_name',\twidth:150 },\r\n\t\t{ title: '原条码',\t\t\tfield: 'new_spec_code',\t\twidth:150 }, \r\n\t\t{ title: '新条码',\t\t\tfield: 'old_spec_code',\t\twidth:150 }, \r\n\t\t{ title: '说明',\t\t\tfield: 'description',\t\twidth:150 }, \r\n\t\t{ title: '创建时间',\t\tfield: 'created_at',\t\twidth:150 }, \r\n\t\t{ title: '状态',\t\t\tfield: 'split_status',\t\twidth:150, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect([{name: \"停止拆分\", value: -1}], rows.split_status, 'name', 'value') \r\n\t\t}}\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='禁止拆分' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\barcode-record.js",["1741"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n\tenabledSelect = [{name: \"已使用\", value: \"1\"}, {name: \"未使用\",value: \"0\"}]\r\n\t\r\n\tforms = [\r\n\t\t{ label:'条码号',\t\tname:'id',\t\t\ttype:'input' }, \r\n\t\t{ label:'操作人',\t\tname:'real_name',\ttype:'input' }, \r\n\t\t{ label:'医院名称',\t\tname:'hosp_id',\t\ttype:'select', data:[], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'使用状态',\t\tname:'enabled',\t\ttype:'select', data: this.enabledSelect, nameStr:'name', idStr:'value' },\r\n\t\t{ label:'生成时间',\t\tname:'date',\t\ttype:'date-range', names:['created_at_start_date','created_at_end_date'] } \r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('bs-hospital-select-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[2].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.pull(null,'bs-hospital/select', {dataName:null}).then(data=>{ \r\n\t\t\t\tthis.forms[2].data = data.items\r\n\t\t\t\t$fn.dataSave('bs-hospital-select-data', data.items)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'barcode/getBarcodeSpecList', param)\r\n\tcols = [ \r\n\t\t{ title: '标本条码',\t    field: 'id', \t        width:145 },\r\n\t\t{ title: '操作人',          field: 'real_name', \twidth:145 },\r\n\t\t{ title: '医院名称', \t\tfield: 'hosp_name', \twidth:145 },\r\n\t\t{ title: '使用状态', \t\tfield: 'enabled',    \twidth:145, render:({rows})=>{ \r\n\t\t\treturn window.$fn.filterSelect(this.enabledSelect, rows.enabled, 'name', 'value') \r\n\t\t}},\r\n\t\t{ title: '生成时间', \t\tfield: 'created_at', \twidth:145 },\r\n\t] \r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='条码记录' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading } \r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\basic-data-entry\\index.js",["1742","1743"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js' \r\n// ===================================================================== 图片\r\nimport is_pic_s from '@img/is_pic_s.png'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst Checkbox = $async(()=>import('@antd/form/checkbox'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst PImg = $async(()=>import('@cpt/p-img'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst PatientDetails = $async(()=>import('./tp/patient-details')) \r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tselectedRow: {},\r\n\t\tbatchEditFlag: false,\r\n\t\tisEditor: true, // 显示编辑按钮\r\n\t\tisSave: true, // 显示保存按钮\r\n\t\tisAudit: true, // 显示审核按钮\r\n\t\timgModel: false, // 查看图片\r\n\t} \r\n\tstatusSelect = [\r\n\t\t{ value: \"99\", label: \"全部\" },\r\n\t\t{ label: \"审核未通过\", value: -1 },\r\n\t\t{ label: \"待完善\", value: 0 },\r\n\t\t{ label: \"待审核\", value: 1 },\r\n\t\t{ label: \"审核通过\", value: 2 }\r\n\t]  \r\n\tforms = [\r\n\t\t{ label:'状态',\t\t\tname:'status',\t\t\ttype:'select', data:this.statusSelect, nameStr:'label', idStr:'value' },\r\n\t\t{ label:'医院',\t\t\tname:'hospital_id',\t\ttype:'select', data:[], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'条码号',\t\tname:'spec_code',\t\ttype:'input' },\r\n\t\t{ label:'病人姓名',\t\tname:'patient_name',\ttype:'input' },\r\n\t\t{ label:'接收日期',\t\tname:'date', \t\t\ttype:'date-range', names:['start_date','end_date'] },\r\n\t\t{ label:'仅显示有图',\tname:'view_pic',\t\t\ttype:'checkbox'}\r\n\t]\r\n\tsexSelect = []\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        this.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t\t$fn.dataSave('dis-item-45700-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n\t\t\tthis.sexSelect = local\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:45700}, loading:false}).then(data=>{\r\n\t\t\t\tthis.sexSelect = data \r\n\t\t\t\t$fn.dataSave('dis-item-45700-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t\tthis.fetch()\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'spec-case-info/index', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' }, \r\n\t\t{ title: '申请单条码', \t\tfield: 'spec_code', \t\twidth: 130,\t\tsort: true, render: ({rows}) => {\r\n\t\t\treturn <div>{rows.spec_code} {rows.pic_path && <img src={is_pic_s} />}</div>\r\n\t\t} },\r\n\t\t{ title: '审核状态', \t\tfield: 'status', \t\t\twidth: 80, render: ({rows})  => {\r\n\t\t\treturn window.$fn.filterSelect(this.statusSelect, rows.status, 'label', 'value') \r\n\t\t} },\r\n\t\t{ title: '受检人姓名', \t\tfield: 'patient_name', \t\twidth: 110 },\r\n\t\t{ title: '性别', \t\t\tfield: 'sex', \t\t\t\twidth: 50, render: ({rows})  => {\r\n\t\t\treturn window.$fn.filterSelect(this.sexSelect, rows.sex, 'name', 'value') \r\n\t\t} }, \r\n\t\t{ title: '年龄', \t\t\tfield: 'age', \t\t\t\twidth: 75 },\r\n\t\t{ title: '受检人电话', \t\tfield: 'patient_phone',\t\twidth: 100 },\r\n\t\t{ title: '身份证号', \t\tfield: 'card_no', \t\t\twidth: 150 },\r\n\t\t{ title: '送检单位', \t\tfield: 'hosp_name', \t\twidth: 220 },\r\n\t\t{ title: '送检科室', \t\tfield: 'department_name', \twidth: 100 }, \r\n\t\t{ title: '送检医生', \t\tfield: 'doctor', \t\t\twidth: 100 }, \r\n\t\t{ title: '医生电话', \t\tfield: 'doctor_phone', \t\twidth: 100 }, \r\n\t\t{ title: '接收时间', \t\tfield: 'receive_time', \t\twidth: 160 }, \r\n\t\t{ title: '采样时间', \t\tfield: 'coll_time', \t\twidth: 160 }, \r\n\t]\r\n\t\r\n    Derivedform() { \r\n\t\t$http.submit(this, 'spec-case-info/viewsexport', {param: this.model, submitLoading:'infoLoading'}).then(data => {\r\n\t\t\tif (data) {\r\n\t\t\t\twindow.location.href = data.url;\r\n\t\t\t} else {\r\n\t\t\t\tmessage.then(f => f.default.error('操作失败')) \r\n\t\t\t}\r\n\t\t}) \r\n\t}\r\n\t// 详情-判断条码状态\r\n\tsetStatus = (status) => { \r\n\t\tif (status) {\r\n\t\t\tif (String(status) === \"0\") { \r\n\t\t\t\tthis.setState({isSave: true, isAudit: true, isEditor: false})\r\n\t\t\t} else if (String(status) === \"1\") { \r\n\t\t\t\tthis.setState({isSave: true, isAudit: false, isEditor: false})\r\n\t\t\t} else if (String(status) === \"2\"){ \r\n\t\t\t\tthis.setState({isSave: true, isAudit: true, isEditor: false})\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({isSave: true, isAudit: true, isEditor: false})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.setState({isSave: true, isAudit: true, isEditor: true})\r\n\r\n\t\t} \r\n\t} \r\n\t// 详情-下一条\r\n\tnextSpec = (rows) => {\r\n\t\tconsole.log(rows)\r\n\t}\r\n\r\n\tButtonGroup = () => {\r\n\t\treturn [    \r\n\t\t{ label:'文件导入', ghost:true, onClick:()=>{}},\r\n\t\t{ label:'快捷录入', ghost:true, onClick:()=>{\r\n\t\t\t$fn.push(this, $fn.getRoot(2).root + 'basic-data-entry/index/quickentry') \r\n\t\t}},\r\n\t\t{ label:'双录入', ghost:true, onClick:()=>{\r\n\t\t\t$fn.push(this, $fn.getRoot(2).root + 'basic-data-entry/index/doubleentry') \r\n\t\t}}, // 要判断是否显示双录入\r\n\t\t{ label:'导出', ghost:true, onClick:() => {\r\n\t\t\tcoms.exportExcel({\r\n\t\t\t\tapi: 'spec-case-info/viewsexport',\r\n\t\t\t\tparam: {param: this.model}\r\n\t\t\t})\r\n\t\t} },\r\n\t\t{ label:'批量审核', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n            const param = {data: this.state.selectedKeys.map(v=> {\r\n                return {uuid:v.uuid, status:v.status}\r\n            })}\r\n\t\t\tcoms.interfaceConfirm('spec-case-info/batchpasscaseinfo', '批量审核', param, () => { this.fetch(this.model) })\r\n        }}\r\n\t\t]\r\n\t} \r\n\thandleImg () {\r\n\t\tif (this.state.selectedRow.pic_path) {\r\n\t\t\tthis.setState({imgModel: true})\r\n\t\t} else {\r\n\t\t\tmessage.then(f => f.default.error('暂无图片'))\r\n\t\t} \r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='基础资料录入' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms }   \r\n\t\t\t\t\tonChange\t= { (v,press)=> {\r\n\t\t\t\t\t\tif (Object.keys(v)[0] === 'view_pic') { \r\n\t\t\t\t\t\t\t$fn.onChange.call(this,{view_pic: v.view_pic ? 1 : 0},press)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$fn.onChange.call(this,v,press)\r\n\t\t\t\t\t\t}  \r\n\t\t\t\t\t} } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<div className='fx xplr ex'>\r\n\t\t\t\t\t<Table \r\n\t\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\t\tloading \t\t= { pullLoading } \r\n\t\t\t\t\t\tonRow\t\t\t= { (select, rows, index) => {\r\n\t\t\t\t\t\t\tthis.setState({ selectedKeys: select, selectedRow: rows })  \r\n\t\t\t\t\t\t\tif (!$fn.isEmpty(rows)) {\r\n\t\t\t\t\t\t\t\tthis.PatientDetailsRef.getInfos(rows) \r\n\t\t\t\t\t\t\t} else { \r\n\t\t\t\t\t\t\t\tthis.setState({isSave: true, isAudit: true, isEditor: true})\r\n\t\t\t\t\t\t\t\tthis.PatientDetailsRef.setState({noEditor: true})\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\t\t// selectedKeys    = { ['7234'] }\r\n\t\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) } \r\n\t\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* 查看图片 */} \r\n\t\t\t\t\t{this.state.imgModel && \r\n\t\t\t\t\t\t<div className='view-image' style={{width: 'calc(100% - 500px)', height: 'calc(100vh - 200px)', top: '130px', left: '30px'}}>\r\n\t\t\t\t\t\t\t<PImg src={this.state.selectedRow.pic_path} onClose={() => this.setState({imgModel: false})} /> \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<div className='fv r4px' style={{width: '450px', border: '1px solid #F2F2F2', marginLeft: '10px'}}>\r\n\t\t\t\t\t\t<div className='b p10'>病人详细信息</div>\r\n\t\t\t\t\t\t<div className='ex oxys p10' style={{paddingTop: 0 }}>\r\n\t\t\t\t\t\t\t<div className='fxm mb10'>\r\n\t\t\t\t\t\t\t\t<Button label='查看图片' className='mr10' disabled={!$fn.hasObject(this.state.selectedRow)} ghost onClick={() => this.handleImg()} /> \r\n\t\t\t\t\t\t\t\t<Button label='保存' className='mr10' disabled={this.state.isSave} ghost onClick={() => this.PatientDetailsRef.saves()} /> \r\n\t\t\t\t\t\t\t\t<Button label='审核' className='mr10' disabled={this.state.isAudit} ghost onClick={() => this.PatientDetailsRef.audits()} /> \r\n\t\t\t\t\t\t\t\t<Button label='编辑' className='mr10' disabled={this.state.isEditor} ghost onClick={() => this.PatientDetailsRef.edits()} /> \r\n\t\t\t\t\t\t\t\t<Checkbox label='批量编辑' value={this.state.batchEditFlag} onChange={(value) => this.setState({batchEditFlag: value})} /> \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<PatientDetails onRef={ref => this.PatientDetailsRef = ref} setStatus={v => this.setStatus(v) } setVisible={v => this.setState(v)} batchEditFlag={this.state.batchEditFlag} \r\n\t\t\t\t\t\t\tnextSpec={v => this.nextSpec(v)} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\generate-barcode.js",["1744","1745"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst Checkbox = $async(()=>import('@antd/form/checkbox')) \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tinexecution: ['numtype', 'gp_name'],\r\n\t\tcodeChecked: false, // 全选\r\n\t\tkey: 0,\r\n\t\tlistData: [],\r\n\t\tcodeSelect: [], // 选中数据\r\n\t}\r\n\r\n\tnumtypeOption = [\r\n\t\t{ name: \"三联\", value: 1 },\r\n        { name: \"六联\", value: 2 },\r\n        { name: \"九联\", value: 3 }\r\n\t]\r\n\t\r\n\tforms = [\r\n\t\t{ label:'当前条码号',\tname:'spec_code',\t\ttype:'input',   readOnly: true },\r\n\t\t{ label:'生成数量',\t\tname:'number',\t\t\ttype:'input' },  \r\n\t\t{ label:'医院名称',\t\tname:'gp_name',\t\t\ttype:'select',  data: [] },  \r\n\t\t{ label:'', \t\t\tname:'numtype',\t\t\ttype:'select', data: this.numtypeOption },\r\n\t]\r\n\tmodel = {number: '1', numtype: 1}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tthis.setState({data: data})\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t}\r\n\r\n\tfetch = () => {\r\n\t\tconst pra = {\r\n\t\t\ttype: 1,\r\n\t\t\tnumber: this.model.number,\r\n\t\t\t// hosp_name: this.model.hosp_name,\r\n\t\t\thospital_id: this.model.hospital_id\r\n\t\t} \r\n\t\t$http.submit(this,'barcode/add',{ param: pra, submitLoading:'creatLoading'}).then(data => {\r\n\t\t\tdata.lists.forEach(v => {\r\n\t\t\t\tv.rowChecked = false\r\n\t\t\t});\r\n\t\t\tthis.setState({listData: data.lists, key: this.state.key + 1})\r\n\t\t\tthis.form.setFieldsValue({spec_code: data.last_code})\r\n\t\t})\r\n\t} \r\n\t\r\n    getInfo = () => {\r\n\t\t$http.submit(this, 'barcode/info').then(data => {\r\n\t\t\tthis.form.setFieldsValue({spec_code: data.spec_code})\r\n\t\t})\r\n\t} \r\n\t// 复选\r\n\tchangeSelect = (v, row) => {\r\n\t\tlet { listData, key } = this.state\r\n\t\tlistData.forEach(i => {\r\n\t\t\tif (row.code === i.code) {\r\n\t\t\t\ti.rowChecked = v\r\n\t\t\t}\r\n\t\t})\r\n\t\tconst codeSelect = listData.filter(i => i.rowChecked)\r\n\t\tthis.setState({listData: listData, codeSelect: codeSelect, codeChecked: codeSelect.length === listData.length ? true : false, key: key + 1})\r\n\t}\r\n\t// 全选\r\n\tallSelect () {  \r\n\t\tlet { listData, codeChecked, key } = this.state\r\n\t\tlistData.forEach(i => {\r\n\t\t\ti.rowChecked = !this.state.codeChecked\r\n\t\t})\r\n\t\tconst codeSelect = listData.filter(i => i.rowChecked)\r\n\t\tthis.setState({listData: listData, codeSelect: codeSelect, codeChecked: !codeChecked, key: key + 1})\r\n\t}\r\n\tnewarr (arr, v) {\r\n\t\tlet d = arr.filter(i => i.code === v.code)\r\n\t\treturn !$fn.hasArray(d)\r\n\t}\r\n\t// 删除\r\n\tdeletes () {\r\n\t\tlet { listData, codeSelect } = this.state\r\n\t\tconst d = listData.filter(i => {\r\n\t\t\treturn this.newarr(codeSelect, i)\r\n\t\t}) \r\n\t\tthis.setState({listData: d, codeSelect: [], codeChecked: false})\r\n\t}\r\n\t// 清空\r\n\tempty () {\r\n\t\tlet { key } = this.state\r\n\t\tthis.setState({listData: [], codeSelect: [], codeChecked: false, key: key + 1})\r\n\t}\r\n\t\r\n\t// 选择全部 \r\n\trender(){\r\n\t\tconst { creatLoading, listData, codeChecked, key, codeSelect } = this.state \r\n\t\t\treturn (\r\n\t\t\t<Page title='标本条码'>\r\n                {/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press,null,true) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tloading\t\t= { creatLoading }\r\n\t\t\t\t\tsubmitText  = '生成 F4'\r\n\t\t\t\t\tinit        = { form => {\r\n\t\t\t\t\t\tthis.form = form\r\n\t\t\t\t\t\tform.setFieldsValue({number: '1', numtype: 1})\r\n\t\t\t\t\t\tthis.getInfo()\r\n\t\t\t\t\t}}\r\n\t\t\t\t/> \r\n\t\t\t\t<div className='fx p10' key={key} style={{borderTop: '1px solid #F2F2F2'}}>\r\n\t\t\t\t\t<div className='ex'>\r\n\t\t\t\t\t\t<Checkbox indeter={false} disabled={!$fn.hasArray(listData)} value={codeChecked} onChange={ (e) => this.allSelect()} label='全选' />\r\n\t\t\t\t\t\t<span>选择 {codeSelect.length} 条</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div> \r\n\t\t\t\t\t\t<Button disabled={!$fn.hasArray(codeSelect)} label='删除' ghost onClick={() => this.deletes()} /> \r\n\t\t\t\t\t\t<Button label='清空' className='ml10' ghost  onClick={() => this.empty()} /> \r\n\t\t\t\t\t\t<Button disabled={true} label='打印' className='ml10' ghost /> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='ex fxw pl10 pt5' key={key + 1} style={{border: '1px solid #e8eaec', alignContent: 'flex-start'}}>\r\n\t\t\t\t\t{listData.map((v,i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={i} className='fx oh mt10 mr10' style={{width: '140px',height: '50px'}}> \r\n\t\t\t\t\t\t\t\t<div className='ex tc' style={{lineHeight: '29px'}}>\r\n\t\t\t\t\t\t\t\t\t<Checkbox value={v.rowChecked} onChange={ (e) => this.changeSelect(e, v) } />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{width: '105px'}}>\r\n\t\t\t\t\t\t\t\t\t<div style={{height: '29px'}}><img style={{width: '100%', height: '100%'}} src={v.img} /></div>\r\n\t\t\t\t\t\t\t\t\t<div className='tc f12'>{v.code}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\has-been-split.js",["1746"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n\t\r\n\tforms = [ \r\n\t\t{ label:'原条码',\t\tname:'old_spec_code',\ttype:'input' }, \r\n\t\t{ label:'创建时间',\t\tname:'date',\t\t\tnames:['start_date','end_date'], type:'date-range' }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'spec-split/index', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '原条码',\t\t\tfield: 'old_spec_code',\t\t\twidth:120 },   \r\n\t\t{ title: '新条码',\t\t\tfield: 'new_spec_code',\t\t\twidth:120 },  \r\n\t\t{ title: '岗位',\t\t\tfield: 'project_name',\t\t\twidth:120 },   \r\n\t\t{ title: '科室',\t\t\tfield: 'parent_project_name',\t\t\twidth:120 },   \r\n\t\t{ title: '创建时间',\t\tfield: 'created_at',\t\t\twidth:140 },  \r\n\t\t{ title: '状态',\t\t\tfield: 'split_status',\t\t\twidth:100, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect([{name: \"已拆分\", value: 1}], rows.split_status, 'name', 'value') \r\n\t\t} }  \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [  \r\n\t\t\t{ label:'条码打印', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='已拆分' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\index.js",["1747"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== private template\r\nconst Menu = window.$async(()=>import('#frame/menu'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{\r\n\t\ttitle: '标本信息录入',\r\n\t\troot: 'specimen-manage',\r\n\t\tto: 'specimen-manage/generate-barcode',\r\n\t\tchildren: [ \r\n            { title: '条码生成', path: 'specimen-manage/generate-barcode' }, // 已完成 2020-10-23\r\n\t\t\t{ \r\n\t\t\t\ttitle: '基本资料录入', path: 'specimen-manage/basic-data-entry/index',  // 已完成 2020-12-4 | 自动跳下一行未完成\r\n\t\t\t\tchild:[\r\n\t\t\t\t\t{ title: '双录入', path: 'doubleentry', component: 'administrators/specimen-manage/basic-data-entry/tp/doubleentry', cache:true }, // 薛玉梅 | 2020-12-28 14:33:05 | desc: 已完成\r\n\t\t\t\t\t{ title: '快捷录入', path: 'quickentry', component: 'administrators/specimen-manage/basic-data-entry/tp/quickentry', cache:true }, // 薛玉梅 | 2020-12-28 09:24:52 | desc: 已完成\r\n\t\t\t\t]\r\n\t\t\t},   \r\n\t\t\t{ \r\n\t\t\t\ttitle: '项目清单', path: 'specimen-manage/project-list/index', // 已完成 2020-11-27 \r\n\t\t\t\tchild:[\r\n\t\t\t\t\t{ title: '录入项目/审核项目', path: 'info-project', component: 'administrators/specimen-manage/project-list/tp/info-project', cache:true }, // 已完成 2020-12-2   \r\n\t\t\t\t]\r\n\t\t\t}, \r\n\t\t\t{ \r\n\t\t\t\ttitle: '待处理标本图片', path: 'specimen-manage/processed-image', // 已完成 2020-12-28 | 完成 \r\n\t\t\t\tchild:[\r\n\t\t\t\t\t{ title: '图片上传', path: 'upload', component:'administrators/specimen-manage/processed-image-upload', cache:true }, // 已完成 2020-10-28\r\n\t\t\t\t\t{ title: '条码关联', path: 'relevance', component:'administrators/specimen-manage/processed-image-relevance', cache:true }, // 已完成 2020-10-28\r\n\t\t\t\t\t{ title: '图片审核', path: 'audit', component:'administrators/specimen-manage/processed-image-audit', cache:true }  // 已完成 2020-10-30\r\n\t\t\t\t]\r\n\t\t\t },\r\n\t\t\t{ title: '标本日志', path: 'specimen-manage/specimen-log' }, // 已完成 2020-10-19\r\n\t\t\t{ title: '条码记录', path: 'specimen-manage/barcode-record' } // 已完成\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: '接收与分发',\r\n\t\tchildren: [\r\n            { title: '接收标本箱', path: 'specimen-manage/receive-box' },  // 已完成 2020-10-20\r\n\t\t\t{ title: '标本箱接收记录', path: 'specimen-manage/receive-records' }, // 已完成\r\n\t\t\t{ title: '待分发', path: 'specimen-manage/to-be-distributed' }, // 已完成\r\n\t\t\t{ title: '标本上架', path: 'specimen-manage/specimen-shelves' }, // 已完成 2020-11-3 | 未打印，左右键盘事件\r\n\t\t\t{ title: '标本批量上架', path: 'specimen-manage/specimen-shelves-batch'}, // 已完成 2020-10-24 | ant多行文本框样式问题，上架完成参数提交问题\r\n\t\t\t{ title: '打印实验号', path: 'specimen-manage/print-expernum' }, // 已完成 2020-10-27 | 未打印\r\n\t\t\t{ \r\n\t\t\t\ttitle: '标本领取', path: 'specimen-manage/specimens-receive', // 已完成 2020-11-5 \r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{ title: '快捷领取', path: 'quick', component:'administrators/specimen-manage/specimens-receive-quick', cache:true }  // 已完成 2020-11-5 \r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{ title: '按条码打印实验号', path: 'specimen-manage/print-expernum-bycode' }, // 已完成 2020-10-27 | 未打印\r\n\t\t\t{ title: '标本领取记录', path: 'specimen-manage/specimen-collection-record' } // 已完成\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: '标本拆分管理',\r\n\t\tchildren: [\r\n\t\t\t{ title: '已拆分', path: 'specimen-manage/has-been-split' }, // 已完成(打印未完成) 2020-10-19\r\n\t\t\t{ title: '待拆分', path: 'specimen-manage/to-break-up' }, // 已完成(打印未完成) 2020-10-19\r\n\t\t\t{ title: '禁止拆分', path: 'specimen-manage/ban-split' } // 已完成\r\n\t\t]\r\n    },\r\n    { title: '标本查询', path: 'specimen-manage/specimens-query' }, // 已完成 2020-11-5\r\n\t{\r\n\t\ttitle: '容器管理', \r\n\t\tchildren: [\r\n\t\t\t{ title: '分拣管理', path: 'specimen-manage/sorting-manage' }, // 已完成\r\n\t\t\t{ title: '标本架管理', path: 'specimen-manage/specimen-shelf-manage' }, // 已完成(打印未完成) 2020-10-19\r\n\t\t\t{ title: '领用记录', path: 'specimen-manage/recipients-records' } // 已完成\r\n\t\t]\r\n    },\r\n    { title: '标本作废记录', path: 'specimen-manage/specimen-invalidation-records' }, // 已完成\r\n    { title: '标本异常管理', path: 'specimen-manage/specimen-anomaly-manage' } // 已完成\r\n] \r\n// ===================================================================== component\r\nexport default () => {\r\n\treturn <Menu data={data} />\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\print-expernum.js",["1748"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsearchForm: []\r\n\t}\r\n\t\r\n\tforms = [\r\n\t\t{ label:'打印数量',\t\tname:'copies',\t\t\ttype:'input' },\r\n\t\t{ label:'批量打印',\t\tname:'is_batch',\t\ttype:'checkbox' },\r\n\t\t{ label:'条码号',\t\tname:'spec_number',\t\ttype:'input', noVisible: false },\r\n\t\t{ label:'开始条码',\t\tname:'spec_start',\t\ttype:'input', noVisible: true },\r\n\t\t{ label:'结束条码',\t\tname:'spec_end',\t\ttype:'input', noVisible: true },\r\n\t\t{ label:'标本架代码',\tname:'sf_code',\t\t\ttype:'input' }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\tthis.setState({searchForm: this.forms})\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.ProjectTeamSelect, name: 'name', id: 'uuid', callback: (data) => { \r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        this.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})    \r\n\t}\r\n\t// paging\r\n\tfetch = param => $http.paging(this,'receive/printlists',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\t \r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '标本条码号', \t\tfield: 'spec_code', \t\twidth:120 },\r\n\t\t{ title: '病人姓名', \t\tfield: 'patient_name', \t\twidth:100 },\r\n\t\t{ title: '检测项目', \t\tfield: 'kind_name', \t\twidth:100 },\r\n\t\t{ title: '实验号', \t\t\tfield: 'lb_tpl', \t\t\twidth:100 },\r\n\t\t{ title: '岗位', \t\t\tfield: 'job_id', \t\t\twidth:100 },\r\n\t\t{ title: '科室', \t\t\tfield: 'team_name', \t\twidth:100 },\r\n\t\t{ title: '标本架代码', \t\tfield: 'sf_code', \t\t\twidth:150 }, \r\n\t\t{ title: '标本类型', \t\tfield: 'spec_type_name', \twidth:150 }, \r\n\t\t{ title: '标本接收时间',\tfield: 'sp_receive_time', \twidth:150 } \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'打印实验号标签 F2', code:'F2', disabled: !$fn.hasArray(this.selectedKeys), onClick:()=>{} }\r\n\t\t]\r\n\t} \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, searchForm } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='打印实验号' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { searchForm } \r\n\t\t\t\t\tonChange={(v, press, { name }) => {\r\n\t\t\t\t\t\t$fn.onChange.call(this, v, press, () => { \r\n\t\t\t\t\t\t\tif (name && name === 'is_batch') {  \r\n\t\t\t\t\t\t\t\tif (v.is_batch) { \r\n\t\t\t\t\t\t\t\t\tthis.form.resetFields(['spec_number'])\r\n\t\t\t\t\t\t\t\t\tsearchForm.forEach(i => {\r\n\t\t\t\t\t\t\t\t\t\tif (i.name === 'spec_number') {\r\n\t\t\t\t\t\t\t\t\t\t\ti.noVisible = true\r\n\t\t\t\t\t\t\t\t\t\t} else if (i.name === 'spec_start' || i.name === 'spec_end') {\r\n\t\t\t\t\t\t\t\t\t\t\ti.noVisible = false\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\tthis.setState({searchForm: searchForm})\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.form.resetFields(['spec_start', 'spec_end'])\r\n\t\t\t\t\t\t\t\t\tsearchForm.forEach(i => {\r\n\t\t\t\t\t\t\t\t\t\tif (i.name === 'spec_start' || i.name === 'spec_end') {\r\n\t\t\t\t\t\t\t\t\t\t\ti.noVisible = true\r\n\t\t\t\t\t\t\t\t\t\t} else if (i.name === 'spec_number') {\r\n\t\t\t\t\t\t\t\t\t\t\ti.noVisible = false\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\tthis.setState({searchForm: searchForm})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},true)\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading } \r\n\t\t\t\t\tinit    \t= { form => this.form = form }\r\n\t\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\print-expernum-bycode.js",["1749"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n\t\r\n\tforms = [\r\n\t\t{ label:'条码号', name:'spec_code',   \t type:'input' },\r\n\t\t{ label:'科室',   name:'team_id',    \t type:'select', data:[], nameStr:'name', idStr:'uuid' },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.ProjectTeamSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\t// this.setState({ProjectTeamSelect: data})\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        this.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})    \r\n\t}\r\n\t// paging\r\n\t// fetch = param => $http.paging(this,'device/index',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\tfetch = param => $fn.fetch.call(this,'specimen/printspec', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '主条码', \t\t\tfield: 'old_spec_code', \twidth:120 },\r\n\t\t{ title: '子条码', \t\t\tfield: 'spec_code', \t\twidth:120 },\r\n\t\t{ title: '科室', \t\t\tfield: 'team_name', \t\twidth:120 },\r\n\t\t{ title: '岗位', \t\t\tfield: 'job_id', \t\t\twidth:100 },\r\n\t\t{ title: '实验号', \t\t\tfield: 'lb_tpl', \t\t\twidth:100 },\r\n\t\t{ title: '自然项目', \t\tfield: 'kind_name', \t\twidth:130 },\r\n\t\t{ title: '患者姓名', \t\tfield: 'patient_name', \t\twidth:80 },\r\n\t\t{ title: '标本接收时间', \tfield: 'sp_receive_time', \twidth:150 } \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'打印实验号 F2', code:'F2', disabled: !$fn.hasArray(this.selectedKeys), onClick:()=>{} }\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='按条码打印实验号' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press,null,true) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\processed-image-audit.js",["1750"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport { Image } from 'antd' \r\nimport Modal from '@antd/modal'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global antd\r\nconst Input = $async(()=>import('@antd/form/input'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\tsubmit: [\r\n\t\t\t{ label:'驳回理由', type: 'textarea', name:'remark', required:true, full:true, width:'100%' }\r\n\t\t]\r\n\t} \r\n\tcomponentDidMount(){ \r\n\t\tthis.nextImg()\r\n\t}\r\n\tmodal = {}\r\n\tnextImg() {\r\n\t\tconst { data } = this.state\r\n\t\tlet param = {\r\n\t\t\tid: data.id ? data.id : ''\r\n\t\t} \r\n\t\t$http.submit(null,'app-upload-pic/nextaudit', { param: param, loading:false}).then(data=>{\r\n\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\tthis.setState({data: data})\r\n\t\t})\r\n\t}  \r\n    saveImg = (status, modal, callback) => {\r\n\t\tconst { data } = this.state\r\n\t\tif (data.spec_code) {\r\n\t\t  \tconst param = {\r\n\t\t\t\tuuid: data.uuid,\r\n\t\t\t\tspec_code: data.spec_code,\r\n\t\t\t\tstatus: status,\r\n\t\t\t\t...modal\r\n\t\t\t}; \r\n\t\t\t$http.submit(null,'app-upload-pic/audit', { param: param, loading:false}).then(data=>{\r\n\t\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\t\tcallback && callback()\r\n\t\t\t\tthis.nextImg();\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t  message.then(f => f.default.success('请填写关联条码'))\r\n\t\t}\r\n\t}\r\n\tonChanges = (v) => { \r\n\t\tconst {data} = this.state\r\n\t\tdata['barcode'] = v\r\n\t\tthis.setState({data: data}) \r\n\t}\r\n\tButtonGroup = () => {\r\n\t\tconst { data } = this.state \r\n\t\treturn (\r\n\t\t\t<div> \r\n\t\t\t\t关联条码： \r\n\t\t\t\t<Input p='请输入关联条码' width={150} value={data.spec_code} style={{borderRadius: '4px'}} className='mlr5' onChange={(e) => this.onChanges(e) } />\r\n\t\t\t\t<Button label='审核通过' ghost className='mlr5' onClick={()=> this.saveImg(43703) } /> \r\n\t\t\t\t<Button label='审核驳回' ghost className='mlr5' onClick={()=> this.refs.modal.open() }/> \r\n\t\t\t\t<Button label='下一个' ghost className='mlr5' onClick={()=> this.nextImg() }/> \r\n\t\t\t\t<Button label='返回' ghost className='ml5' onClick={()=> $fn.back(this) }/> \r\n\t\t\t</div>\r\n\t\t)\r\n\t} \r\n\r\n\trender(){\r\n\t\tconst { data, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='图片审核' noBtGroup={true} ButtonGroup={this.ButtonGroup()}> \r\n\t\t\t\t<div className='ex p10 tc oxys'>\r\n\t\t\t\t\t<Image src={coms.img_domain_url(data.pic_path)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => { \r\n\t\t\t\t\t\t\tthis.saveImg(43704, v, () => this.refs.modal.close())\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\processed-image-relevance.js",["1751"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport { Image } from 'antd' \r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global antd\r\nconst Input = $async(()=>import('@antd/form/input'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = { \r\n\t\tbarcode: '',\r\n\t\tdata: {}\r\n\t}\r\n\t  \r\n\tcomponentDidMount(){ \r\n\t\tthis.nextImg()\r\n\t}\r\n    nextImg() {\r\n\t\tconst { data } = this.state\r\n\t\tlet param = {\r\n\t\t\tid: data.id ? data.id : ''\r\n\t\t} \r\n\t\t$http.submit(null,'app-upload-pic/nextedit', { param: param, loading:false}).then(data=>{\r\n\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\tthis.setState({data: data})\r\n\t\t})\r\n\t} \r\n    saveImg() {\r\n\t\tconst { barcode, data } = this.state \r\n\t\tconsole.log(barcode)\r\n\t\tif (barcode) {\r\n\t\t  \tconst param = {\r\n\t\t\t\tuuid: data.uuid,\r\n\t\t\t\tspec_code: barcode\r\n\t\t  \t}; \r\n\t\t  \t$http.submit(null,'app-upload-pic/bindcode', { param: param, loading:false}).then(data=>{\r\n\t\t\t\tmessage.then(f => f.default.success('保存成功'))\r\n\t\t\t\tthis.setState({barcode: ''})\r\n\t\t\t\tthis.nextImg()\r\n\t\t\t}) \r\n\t\t} else {\r\n\t\t\tmessage.then(f => f.default.error('请填写关联条码'))\r\n\t\t}\r\n\t}\r\n\tonChanges = (v) => { \r\n\t\tthis.setState({barcode: v}) \r\n\t}\r\n\r\n\tButtonGroup = () => {\r\n\t\treturn (\r\n\t\t\t<div> \r\n\t\t\t\t关联条码：\r\n\t\t\t\t<Input p='请输入关联条码' width={150} value={this.state.barcode} style={{borderRadius: '4px'}} className='mlr5' onChange={(e) => this.onChanges(e) } />\r\n\t\t\t\t<Button label='保存' ghost className='mlr5' onClick={()=> this.saveImg() }/> \r\n\t\t\t\t<Button label='下一个' ghost className='mlr5' onClick={()=> this.nextImg() }/> \r\n\t\t\t\t<Button label='返回' ghost className='ml5' onClick={()=> $fn.back(this) }/> \r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\trender(){\r\n\t\tconst { data } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='条码关联' noBtGroup={true} ButtonGroup={this.ButtonGroup()}> \r\n\t\t\t\t<div className='ex p10 tc oxys'>\r\n\t\t\t\t\t<Image src={coms.img_domain_url(data.pic_path)} />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\processed-image-upload.js",["1752"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\nimport { Image } from 'antd'\r\nimport { CloseOutlined } from '@ant-design/icons';\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== global template\r\n// const Image = $async(()=>import('@tp/image'))\r\n// ===================================================================== antd\r\nconst Upload = $async(()=>import('@antd/upload'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container')) \r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tfileList: []\r\n\t}  \r\n\tcomponentDidMount(){ } \r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'保存', onClick:()=>{ this.submitsImg() } },\r\n\t\t\t{ label:'返回', onClick:()=>{ $fn.back(this) } }\r\n\t\t]\r\n\t}\r\n\tonchangeImg = ({fileList}) => {\r\n\t\tthis.setState({fileList: [...this.state.fileList ,...fileList]})\r\n\t}\r\n\tdeleteImg = (val) => {\r\n\t\tconst d = this.state.fileList.filter(i => i !== val)\r\n\t\tthis.setState({fileList: d})\r\n\t}\r\n\tsubmitsImg = () => {\r\n\t\tconst fileList = this.state.fileList.map(i => i.img_path);\r\n\t\tconst param = {\r\n\t\t\timages: fileList,\r\n\t\t\tlogistics_user_id: \"\"\r\n\t\t}\r\n\t\t$http.submit(null,'app-upload-pic/add', { param: param, loading:false}).then(data=>{\r\n\t\t\tmessage.then(f => f.default.success('保存成功'))\r\n\t\t\t$fn.back(this)\r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { fileList } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='图片上传' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t<div className='p10'>\r\n\t\t\t\t\t<Upload style={{width: '145px'}} multiple={true} api='app-upload-pic/upload' name='fileList' params={{modular: 110}} onChange={(val) => this.onchangeImg(val)} />\r\n\t\t\t\t</div> \r\n\t\t\t\t<div className='fxw plr10 ex' style={{alignContent: 'flex-start'}}>\r\n\t\t\t\t\t{fileList.map((i, v) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={v} style={{position: 'relative', border: '1px solid #e9e9e9', margin: '0 16px 16px 0'}}>\r\n\t\t\t\t\t\t\t<div onClick={() => this.deleteImg(i)} className='tc cp' style={{position: 'absolute', zIndex: '50', background: 'rgba(0,0,0,0.5)', top: '0', right: '0', width: '25px', height: '20px', lineHeight: '20px'}}>\r\n\t\t\t\t\t\t\t\t<CloseOutlined style={{fontSize: '16px', color: '#FFFFFF'}} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Image width={145} height={145} src={i.img_url} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})} \r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\processed-image.js",["1753"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== global template\r\n// const Image = $async(()=>import('@tp/image'))\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button')) \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table')) \r\nconst PImg = $async(()=>import('@cpt/p-img'))\r\n\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\timgModel: false,\r\n\t\trows: {}\r\n\t}\r\n\t\r\n\tforms = [\r\n\t\t{ label:'选择状态', name:'status', type:'select', data:[], nameStr:'name', idStr:'value' }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('dis-item-43700-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[0].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:43700}, loading:false}).then(data=>{\r\n\t\t\t\tthis.forms[0].data = data \r\n\t\t\t\t$fn.dataSave('dis-item-43700-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $http.paging(this,'app-upload-pic/index',{ param:{...param, pageSize:this.pageSize, ...this.model, entry_type: 'pic'}, loading:false } )\r\n\tcols = [\r\n\t\t{ title: '条码号', \t\tfield: 'spec_code', \t\twidth:120 },\r\n\t\t{ title: '图片编码', \tfield: 'pic_name', \t\t\twidth:320 },\r\n\t\t{ title: '上传时间', \tfield: 'created_at', \t\twidth:150 },\r\n\t\t{ title: '上传人', \t\tfield: 'operator_name', \twidth:100 },\r\n\t\t{ title: '状态', \t\tfield: 'pic_status_name', \twidth:80 },\r\n\t\t{ title: '审核备注', \tfield: 'audit_remark', \t\twidth:120 }, \r\n\t\t{ title: '操作', \t\talign:'tc', \t\t\t\twidth:150, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5 fx'>\r\n\t\t\t\t\t{/* 查看-未完成 */}\r\n\t\t\t\t\t<Button label='查看' ghost className='mlr5' onClick={()=> this.setState({imgModel: true, rows: rows}) }/> \r\n\t\t\t\t\t{String(rows.pic_status) !== \"43703\" && <Button label='删除' ghost className='mlr5' onClick={()=> {\r\n\t\t\t\t\t\tconst param = {uuid: rows.uuid}\r\n\t\t\t\t\t\tcoms.interfaceConfirm('app-upload-pic/del', '删除', param, () => { this.fetch() })\r\n\t\t\t\t\t}} /> }\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}} \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'图片上传 F2', code:'F2', onClick:()=>{\r\n\t\t\t\t$fn.push(this, $fn.getRoot(2).root + 'processed-image/upload')\r\n\t\t\t} },\r\n\t\t\t{ label:'条码关联', onClick:()=>{\r\n\t\t\t\t$fn.push(this, $fn.getRoot(2).root + 'processed-image/relevance')\r\n\t\t\t} },\r\n\t\t\t{ label:'图片审核', onClick:()=>{\r\n\t\t\t\t$fn.push(this, $fn.getRoot(2).root + 'processed-image/audit')\r\n\t\t\t} }\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='申请单上传' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tonAdd\t\t= { ()=> $fn.push(this, $fn.getRoot().root + 'specimen-manage/processed-image/upload') }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t\t{/* 查看图片 */} \r\n\t\t\t\t{this.state.imgModel && \r\n\t\t\t\t\t<div className='view-image full'>\r\n\t\t\t\t\t\t<PImg src={this.state.rows.pic_path} onClose={() => this.setState({imgModel: false})} /> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\receive-box-child.js",["1754"],"// ===================================================================== 薛玉梅 | 2020-10-19 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window \r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[], \r\n\t}\r\n\t\r\n\tforms = []\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\t// console.log(this.props)\r\n\t\t// this.fetch()\r\n\t}\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tif (props.data) { \r\n\t\t\tthis.fetch({box_num: props.data.box_number})\r\n\t\t}\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'specimen/boxlists', param) \r\n\tcols = [\r\n\t\t{ title: '标本箱编号', \t\tfield: 'box_num', \t\twidth:120 },\r\n\t\t{ title: '医院名称', \t\tfield: 'hosp_name', \twidth:120 },\r\n\t\t{ title: '条码号', \t\t\tfield: 'spec_code',\t\twidth:120 },\r\n\t\t{ title: '标本数量', \t\tfield: 'spec_num', \t\twidth:120 },\r\n\t\t{ title: '送检时间', \t\tfield: 'arrival_time', \twidth:120 },\r\n\t\t{ title: '项目状态', \t\tfield: 'audit_status', \twidth:120, render: ({rows}) => {\r\n\t\t\tconst opt = [\r\n\t\t\t\t{label: \"待录入\", \tvalue: \"-2\"},\r\n\t\t\t\t{label: \"审核失败\", value: \"-1\"},\r\n\t\t\t\t{label: \"待审核\", \tvalue: \"0\"},\r\n\t\t\t\t{label: \"审核成功\", value: \"1\"}\r\n\t\t\t]\r\n\t\t\treturn $fn.filterSelect(opt, rows.audit_status, 'label', 'value')\r\n\t\t} }\r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Table\r\n\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\tonRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t/>  \r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\project-list\\index.js",["1755"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== 图片\r\nimport is_pic_s from '@img/is_pic_s.png'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// =====================================================================\r\nconst Image = $async(()=>import('@tp/image'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== related component\r\nconst InvalidProject = $async(()=>import('./tp/invalid-project'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi') \r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\taudit_status_select = [\r\n\t\t{ label: '审核失败', value: -1 },\r\n\t\t{ label: '待审核', value: 0 },\r\n\t\t{ label: '审核成功', value: 1 },\r\n\t\t{ label: '待录入', value: -2 }\r\n\t]\r\n\taudit_status_select1 = [\r\n\t\t{ label: '全部', value: 99 },\r\n\t\t{ label: '待审核', value: 0 },\r\n\t\t{ label: '审核通过', value: 1 },\r\n\t\t{ label: '待录入', value: -2 } \r\n\t]\r\n\tadditional_kind_select = [\r\n\t\t{ label: '是', value: 1 },\r\n\t\t{ label: '否', value: 0 },\r\n\t]\r\n\tadditional_kind_select1 = [\r\n\t\t{ label: '是', value: 1 },\r\n\t\t{ label: '所有', value: 0 }\r\n\t] \r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tselectedRow: {},\r\n\t\tkeys: 0,\r\n\t\tkey:0,\r\n\t\thosp_name: '',\r\n\t\tbox_num: '',\r\n\t\thosp_data: [],\r\n\t\tbox_data: [],\r\n\t\tsubmit: [\r\n\t\t\t{ label:'条码号', \t\t\tname:'spec_code',\ttype: 'input',\t\t\trequired:true,\t\tdisabled:true},\r\n\t\t\t{ label:'用户名',\t\t\tname:'account',\t\ttype: 'input',\t\t\trequired:true},\r\n\t\t\t{ label:'密码', \t\t\tname:'password', \ttype: 'password',\t\trequired:true}, \r\n\t\t\t{ label:'作废原因', \t\tname:'reason',\t\ttype: 'textarea',\t\trequired:true,\t\tfull: true,\t\twidth: '100%'},\r\n\t\t],\r\n\t\tsubmit2: [\r\n\t\t\t{ label:'当前条码号', \t\tname:'old_spec_code',\t\ttype: 'input',\t\t\trequired:true,\t\tdisabled:true},\r\n\t\t\t{ label:'第三方条码', \t\tname:'third_spec_code',\t\ttype: 'input',\t\t\trequired:true},\r\n\t\t\t{ label:'第三方来源', \t\tname:'third_source_type',\ttype: 'select',\t\t\tdata: [], nameStr:'name', idStr:'value',required:true} \r\n\t\t],\r\n\t\tsubmit3: [\r\n\t\t\t{ label:'条码号', \t\t\tname:'spec_code',\ttype: 'input',\t\t\trequired:true},\r\n\t\t\t{ label:'医院名称', \t\tname:'hosp_id',\t\ttype: 'select',\t\t\tdata: [], nameStr:'name', idStr:'value',required:true},\r\n\t\t\t{ label:'用户名',\t\t\tname:'account',\t\ttype: 'input',\t\t\trequired:true},\r\n\t\t\t{ label:'密码', \t\t\tname:'password', \ttype: 'password',\t\trequired:true} \r\n\t\t],\r\n\t\tforms: [\r\n\t\t\t{ label:'加做项目',\t\tname:'additional_kind',\t\ttype:'select',\tdata: this.additional_kind_select1,  nameStr:'label', idStr:'value' },\r\n\t\t\t{ label:'状态',\t\t\tname:'audit_status',\t\ttype:'select',\tdata: this.audit_status_select1, \tnameStr:'label', idStr:'value' },\r\n\t\t\t{ label:'标本箱号', \tname:'box_num_id',\t\t\ttype:'select',\tdata: [], \tnameStr:'name', idStr:'value' }, // 下拉带搜索分页 | 未完成分页\r\n\t\t\t{ label:'条码号', \t\tname:'spec_code', \t\t\ttype:'input' }, // 回车清空无效\r\n\t\t\t{ label:'医院名称', \tname:'hosp_id',\t\t\t\ttype:'select',\tdata: [], \tnameStr:'name', idStr:'value' },  \r\n\t\t\t{ label:'录入时间', \tname:'date', \t\t\t\tnames:['start_at','end_at'], type:'date-range' },\r\n\t\t\t{ label:'仅显示有图',\tname:'view_pic',\t\t\ttype:'checkbox'}\r\n\t\t]\r\n\t} \r\n\tmodel = {start_at: coms.intervalTime(10, '00:00:00'), end_at: coms.intervalTime(null, '23:59:59')} \r\n\tcomponentDidMount(){  \r\n\t\tlet {submit2, forms, submit3} = this.state\r\n\t\tcacheApi.then(f => {\r\n\t\t\t// 医院\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tforms[4].data = data\r\n\t\t\t\t\t\tsubmit3[1].data = data\r\n\t\t\t\t\t\tthis.setState({'hosp_data': data, forms: forms, submit3: submit3})\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            forms[4].data = data\r\n\t\t\t\t\t\t\tsubmit3[1].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t\tthis.setState({'hosp_data': data, forms: forms, submit3: submit3})\r\n\t\t\t\t\t\t})\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t\t// 标本箱号\r\n\t\t$fn.dataSave('box-select3-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  forms[2].data = local\r\n\t\t\t  this.setState({'box_data': local, forms: forms})\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'box/select3').then(data=>{\r\n\t\t\t\t\tforms[2].data = data.items \r\n\t\t\t\t\t$fn.dataSave('box-select3-data', data.items)\r\n\t\t\t  \t\tthis.setState({'box_data': data.items, forms: forms})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}) \r\n\t\t// 第三方来源\r\n\t\t$fn.dataSave('dis-item-69000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){  \r\n\t\t\tsubmit2[2].data = local\r\n\t\t\tthis.setState({submit2})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:69000}, loading:false}).then(data=>{\r\n\t\t\t\tsubmit2[2].data = data\r\n\t\t\t\tthis.setState({submit2})\r\n\t\t\t\t$fn.dataSave('dis-item-69000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t\tthis.fetch()\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'specimen/itemlists', {...param, hosp_name: this.state.hosp_name, box_num: this.state.box_num, ...this.model})\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '标本箱编号', \t\tfield: 'box_num', \t\t\twidth:90 },\r\n\t\t{ title: '医院名称', \t\tfield: 'hosp_name', \t\twidth:140, \t\ttdCss: 'wpn',\tinnerCss: 'p5' },\r\n\t\t{ title: '条码号', \t\t\tfield: 'spec_code', \t\twidth:140, render: ({rows}) => {\r\n\t\t\tlet d = ''\r\n\t\t\tif ($fn.hasArray(rows.tags)) { \r\n\t\t\t\td = rows.tags.map((item, index) => {\r\n\t\t\t\t\treturn (<div style={{border: '1px solid #afdbf0', color: '#37a6da', borderRadius: '8px', padding: '0 4px', margin: '0 2px', lineHeight: '14px' }} key={index}>{item.item_name}</div>)\r\n\t\t\t\t})   \r\n\t\t\t} \r\n\t\t\tlet img = ''\r\n\t\t\tif (!$fn.isEmpty(rows.pic_path)) {\r\n\t\t\t\timg = <Image style={{margin: '0 2px 0 6px'}} src={ is_pic_s } height='12px' width='16px'/>\r\n\t\t\t}\r\n\t\t\treturn <div className='fxw xm'>{rows.spec_code} {img} {d}</div>  \r\n\t\t}, \t\ttdCss: 'wpn',\tinnerCss: 'p5' },\r\n\t\t{ title: '采样时间', \t\tfield: 'coll_time', \t\twidth:140,\t\tsort: true },\r\n\t\t{ title: '项目状态', \t\tfield: 'audit_status', \t\twidth:120, \trender: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.audit_status_select, rows.audit_status, 'label', 'value') \r\n\t\t} }, \r\n\t\t{ title: '加做项目', \t\tfield: 'additional_kind', \twidth:90, \trender: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.audit_status_select, rows.additional_kind, 'label', 'value') \r\n\t\t} },  \r\n\t\t{ title: '项目列表', \t\tfield: 'kind_str', \t\t\twidth:240, \t\ttdCss: 'wpn',\tinnerCss: 'p5'  },\r\n\t\t{ title: '录入时间', \t\tfield: 'created_at', \t\twidth:140,\t\tsort: true },\r\n\t\t{ title: '第三方来源', \t\tfield: 'third_source_type_name', \t\t\twidth:140 },\r\n\t\t{ title: '第三方条码', \t\tfield: 'third_spec_code', \t\t\t\t\twidth:140 },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\tconst { selectedKeys, selectedRow } = this.state\r\n\t\treturn [\r\n\t\t\t{ label:'录入项目F1', code:'F1', onClick:()=>{  \r\n\t\t\t\t$fn.push(this, $fn.getRoot(2).root + 'project-list/index/info-project') \r\n\t\t\t}}, \r\n\t\t\t{ label:'审核项目F2', code:'F2', disabled: !$fn.hasObject(selectedRow), ghost:true, onClick:()=>{ \r\n\t\t\t\t$fn.push(this, $fn.getRoot(2).root \r\n\t\t\t\t+ `project-list/index/info-project?isAudit=true&spec_code=${selectedRow.spec_code}&additional_kind=${selectedRow.additional_kind}&view_pic=${this.model.view_pic ? 1 : 0}`) \r\n\t\t\t}}, \r\n\t\t\t{ label:'批量审核F3', code:'F3', ghost:true, disabled: !$fn.hasArray(selectedKeys), onClick:()=>{\r\n\t\t\t\tconst param = {spec_ids: selectedKeys.map(v=>v.uuid)}\r\n\t\t\t\tcoms.interfaceConfirm('specimen/batchaudit', '批量审核', param, () => { this.fetch(this.model) })\r\n\t\t\t}}, \r\n\t\t\t{ label:'客户变更F7', code:'F7', ghost:true, onClick:()=>{\r\n\t\t\t\tthis.refs.modal3.open()  \r\n\t\t\t}}, \r\n\t\t\t{ label:'条码作废', ghost:true, disabled: !$fn.hasObject(selectedRow), onClick:()=> {\r\n\t\t\t\tthis.refs.modal.open() \r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = selectedRow.spec_code.substr(0, 12)\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} }, \r\n\t\t\t{ label:'项目作废', ghost:true, disabled: !$fn.hasObject(selectedRow), onClick:()=>{\r\n\t\t\t\tthis.refs.modal1.open() \r\n\t\t\t\tthis.InvalidProjectRef.changeList(selectedRow) \r\n\t\t\t}}, \r\n\t\t\t{ label:'绑定第三方条码', ghost:true, disabled: !$fn.hasObject(selectedRow), onClick:()=>{ \r\n\t\t\t\tthis.refs.modal2.open() \r\n\t\t\t\tconst { submit2 } = this.state\r\n\t\t\t\tsubmit2[0].value = selectedRow.spec_code.substr(0, 12)\r\n\t\t\t\tthis.setState({ submit2 })\r\n\t\t\t}}\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, keys, hosp_data, box_data, submit, submit2, submit3, forms, key } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='项目清单' ButtonGroup={this.ButtonGroup()} key={keys}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { forms }  \r\n\t\t\t\t\tkey = { key }\r\n\t\t\t\t\tonChange\t= { (v,press)=> {\r\n\t\t\t\t\t\tif (Object.keys(v)[0] === 'hosp_id') {\r\n\t\t\t\t\t\t\tconst hosp_name = v['hosp_id'] ? window.$fn.filterSelect(hosp_data, v['hosp_id'], 'name', 'value') : ''\r\n\t\t\t\t\t\t\tthis.setState({'hosp_name': hosp_name})\r\n\t\t\t\t\t\t\t$fn.onChange.call(this,v,press,null,true)\r\n\t\t\t\t\t\t} else if (Object.keys(v)[0] === 'box_num_id') { \r\n\t\t\t\t\t\t\tconst box_num = v['box_num_id'] ? window.$fn.filterSelect(box_data, v['box_num_id'], 'name', 'value') : ''\r\n\t\t\t\t\t\t\tthis.setState({'box_num': box_num})\r\n\t\t\t\t\t\t\t$fn.onChange.call(this,v,press,null,true)\r\n\t\t\t\t\t\t} else if (Object.keys(v)[0] === 'view_pic') { \r\n\t\t\t\t\t\t\t$fn.onChange.call(this,{view_pic: v.view_pic ? 1 : 0},press,null,true)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$fn.onChange.call(this,v,press,null,true)\r\n\t\t\t\t\t\t}  \r\n\t\t\t\t\t} } \r\n\t\t\t\t\t// onSubmit\t= { () => { \r\n\t\t\t\t\t// \tforms[3].value = ''\r\n\t\t\t\t\t// \tthis.state.key++\r\n\t\t\t\t\t// \tthis.setState({key, forms})\r\n\t\t\t\t\t// \t// j+2 \r\n\t\t\t\t\t// } } \r\n\t\t\t\t\tonSubmit    = { $fn.onSubmit.bind(this) }\r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit        = { form => {\r\n\t\t\t\t\t\tthis.form = form\r\n\t\t\t\t\t\tform.setFieldsValue({date:[coms.intervalTime(10, '00:00:00'), coms.intervalTime(null, '23:59:59')]})\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select, rows) => {\r\n\t\t\t\t\t\tthis.setState({ selectedKeys: select, selectedRow: rows }) \r\n\t\t\t\t\t} }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title='条码作废' width={700} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {    \r\n\t\t\t\t\t\t\t$http.submit(null, 'specimen/invalid', {param: v}).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('条码作废成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})  \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal> \r\n\t\t\t\t<Modal ref='modal1' title='项目作废' width={1000} noFooter>  \r\n\t\t\t\t\t <InvalidProject onRef={ref => this.InvalidProjectRef = ref} onchanged={() => this.fetch(this.model)} />\r\n\t\t\t\t</Modal> \r\n\t\t\t\t<Modal ref='modal2' title='绑定第三方条码' width={700} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit2 }\r\n\t\t\t\t\t\tonSubmit = { v => {  \r\n\t\t\t\t\t\t\t$http.submit(null, 'specimen/bindThirdSpec', { param: v }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('绑定成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal2.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})  \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal2.close() }\r\n\t\t\t\t\t\tinit\t= { form => {\r\n\t\t\t\t\t\t\tthis.form = form \r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal3' title='客户变更' width={700} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit3 }\r\n\t\t\t\t\t\tonSubmit = { v => {  \r\n\t\t\t\t\t\t\t$http.submit(null, 'specimen/changehosp', { param: v }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal3.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})  \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal3.close() }\r\n\t\t\t\t\t\tinit\t= { form => {\r\n\t\t\t\t\t\t\tthis.form = form \r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\receive-box.js",["1756"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\nimport { ExclamationCircleTwoTone } from '@ant-design/icons';\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst Receiveboxchild = $async(()=>import('./receive-box-child'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:{},\r\n\t\tsubmit: [\r\n\t\t\t{ label:'用户名',\t\t\tname:'account',\t\ttype: 'input',\t\t\trequired:true },\r\n\t\t\t{ label:'密码', \t\t\tname:'password', \ttype: 'password',\t\trequired:true }, \r\n\t\t\t{ label:'接收数量', \t\tname:'num',\t\t\ttype: 'input',\t\t\trequired:true },\r\n\t\t\t{ label:'开箱温度', \t\tname:'warm',\t\ttype: 'input',\t\t\trequired:true }\r\n\t\t]\r\n\t}\r\n\t\r\n\tforms = [\r\n\t\t{ label:'标本箱编号',\t\tname:'box_number',\ttype:'input' },\r\n\t\t{ label:'标本箱条码号',\t\tname:'box_code',\ttype:'input' },\r\n\t\t{ label:'收单时间',\t\t\tname:'date',\t\ttype:'date-range',  names:['start_date','end_date'] },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'box/reclist', param)\r\n\tcols = [\r\n\t\t{ title: '标本箱编号', \t\tfield: 'box_number', \twidth:120 },\r\n\t\t{ title: '标本箱条码号', \tfield: 'box_code', \t\twidth:120 },\r\n\t\t{ title: '收单人', \t\t\tfield: 'receiver_name',\twidth:120 },\r\n\t\t{ title: '条码数量', \t\tfield: 'spec_count', \twidth:120 },\r\n\t\t{ title: '标本数量', \t\tfield: 'spec_num', \t\twidth:120 },\r\n\t\t{ title: '到达时间', \t\tfield: 'arrival_time', \twidth:120 },\r\n\t\t{ title: '收单时间', \t\tfield: 'receive_time', \twidth:120 },\r\n\t] \r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'确认接收 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open() \r\n\t\t\t} } \r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, selectedKeys, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='接收标本箱' ButtonGroup={this.ButtonGroup()}> \r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t\t<Receiveboxchild className='fv rel ex xplr' data={ $fn.hasObject(selectedKeys) ? selectedKeys : ''} />\r\n\t\t\t\t<Modal ref='modal' title='确认接收' width={648} noFooter>\r\n\t\t\t\t\t<div className=\"f12 pb20 tc\"><ExclamationCircleTwoTone twoToneColor=\"#ff4d4f\" className=\"mr5\" />请输入用户名与密码进行接收确认，当前标本数量 {selectedKeys.spec_num}</div>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tlet param = { ...v, uuid: selectedKeys.uuid} \r\n\t\t\t\t\t\t\tconsole.log(param)\r\n\t\t\t\t\t\t\t$http.submit(null, 'box/receive', { param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('接收成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t}) \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\receive-records.js",["1757"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n\t\r\n\tforms = [ \r\n\t\t{ label:'标箱号',\t\tname:'box_num',\t\t\ttype:'input' },\r\n\t\t{ label:'标本条码',\t\tname:'spec_code',\t\ttype:'input' },\r\n\t\t{ label:'接收人',\t\tname:'receive_user',\ttype:'input' },\r\n\t\t{ label:'接收时间',\t\tname:'date',\t\t\ttype:'date-range', names:['start_date','end_date'] }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'sp-box-receive-log/index', param)\r\n\tcols = [\r\n\t\t{ title: '标箱编号',\t\tfield: 'box_num',\t\t\twidth:145 },\r\n\t\t{ title: '录入总标本数',\tfield: 'spec_num_total', \twidth:145 },\r\n\t\t{ title: '接收总标本数',\tfield: 'receive_count', \twidth:145 },\r\n\t\t{ title: '开箱温度', \t\tfield: 'warm',\t\t\t\twidth:145 },\r\n\t\t{ title: '标本条码', \t\tfield: 'spec_code', \t\twidth:145 },\r\n\t\t{ title: '条码标本数', \t\tfield: 'spec_num', \t\t\twidth:145 },\r\n\t\t{ title: '接收人',\t\t\tfield: 'receive_user', \t\twidth:145 },\r\n\t\t{ title: '接收时间', \t\tfield: 'created_at', \t\twidth:145 },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='标本箱接收记录' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading } \r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\recipients-records.js",["1758"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n\t\r\n\tforms = [\r\n\t\t{ label:'标本架编号',\tname:'sf_number',\t\ttype:'input' },\r\n\t\t{ label:'科室',\t\t\tname:'project_name',\ttype:'input' },  \r\n\t\t{ label:'领用时间',\t\tname:'date',\t\t\ttype:'date-range', names:['start_date', 'end_date'] } // 标本领取记录-系统默认时间轴 \r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'shelf/shelfloglist', param)\r\n\tcols = [\r\n\t\t{ title: '标本架编号',\t\tfield: 'sf_number',\t\t\twidth:120 },\r\n\t\t{ title: '标本架名称',\t\tfield: 'sf_name',\t\t\twidth:150 },\r\n\t\t{ title: '容量',\t\t\tfield: 'total_capacity',\twidth:150 },\r\n\t\t{ title: '科室',\t\t\tfield: 'project_name',\t\twidth:150 },\r\n\t\t{ title: '时间',\t\t\tfield: 'created_at',\t\twidth:150 },\r\n\t\t{ title: '领取人',\t\t\tfield: 'real_name',\t\t\twidth:150 },\r\n\t\t{ title: '状态',\t\t\tfield: 'status_name', \t\twidth:150 }\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='领用记录' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\sorting-manage.js",["1759"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tgp_typeSelect = [\r\n        { value: \"1\", name: \"普通\" },\r\n        { value: \"2\", name: \"高级\" }\r\n    ]\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label:'分拣组名称',\t\tname:'gp_name',\t\trequired:true },\r\n\t\t\t{ label:'拼音简称', \t\tname:'pinyin_short' },\r\n\t\t\t{ label:'类型', \t\t\tname:'gp_type',\t\ttype: 'select', data: this.gp_typeSelect, required:true },\r\n\t\t\t{ label:'科室', \t\t\tname:'job_id',\t\ttype: 'select', data: [], nameStr:'name', idStr:'uuid', required:true },\r\n\t\t\t{ label: '备注', \t\t\tname:'remark',\t\ttype: 'textarea', full:true, width:'100%' }\r\n\t\t]\r\n\t}\r\n\tenabledSelect = [\r\n        { value: 1, name: \"启用\" },\r\n        { value: 0, name: \"待启用\" },\r\n        { value: -1, name: \"禁用\" }\r\n\t] \r\n\t\r\n\tforms = [  \r\n\t\t{ label:'状态',\t\t\tname:'gp_status',\ttype:'select', data: this.enabledSelect, nameStr:'name', idStr:'value' },\r\n\t\t{ label:'名称',\t\t\tname:'name',\t\ttype:'input' },  \r\n\t\t{ label:'科室',\t\t\tname:'job_id',\t\ttype:'select', data: [], nameStr:'name', idStr:'uuid' },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('project-team-select-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t    this.forms[2].data = local\r\n\t\t\t    const { submit } = this.state\r\n\t\t\t\tsubmit[3].data = local\r\n\t\t\t\tthis.setState({submit})\r\n\t\t\t}else{\r\n\t\t\t  $http.pull(null,'project-team/select', {dataName:null}).then(data=>{ \r\n\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[3].data = data\r\n\t\t\t\tthis.setState({submit})\r\n\t\t\t\t$fn.dataSave('project-team-select-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'pick-group/index', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '分拣组代码',\t\tfield: 'gp_code',\t\t\twidth:120 },\r\n\t\t{ title: '分拣组名称',\t\t\tfield: 'gp_name',\t\t\twidth:120 },\r\n\t\t{ title: '科室',\t\tfield: 'job_name',\t\t\twidth:120 },\r\n\t\t{ title: '备注',\t\t\tfield: 'remark',\t\t\twidth:150 },\r\n\t\t{ title: '状态',\t\tfield: 'gp_status',\t\twidth:100 , render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.enabledSelect, rows.gp_status, 'name', 'value') \r\n\t\t}},\r\n\t\t{ title: '操作', align:'tc', width:100, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e => {\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tthis.rows = rows\r\n\t\t\t\t\t\tthis.isEdit = true\r\n\t\t\t\t\t\t$http.submit(this, 'pick-group/info', { param: {uuid: rows.uuid}} ).then(data => {\r\n\t\t\t\t\t\t\tsubmit[0].value = data['gp_name']\r\n\t\t\t\t\t\t\tsubmit[1].value = data['pinyin_short']\r\n\t\t\t\t\t\t\tsubmit[2].value = data['gp_type'] \r\n\t\t\t\t\t\t\tsubmit[3].value = data['job_id'] \r\n\t\t\t\t\t\t\tsubmit[4].value = data['remark'] \r\n\t\t\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t\t\t}) \r\n\t\t\t\t\t}}/> \r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}} \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t}},\r\n\t\t\t{ label:'启用', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('pick-group/on', '启用', param, () => { this.fetch(this.model) })\r\n\t\t\t}},\r\n\t\t\t{ label:'禁用', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('pick-group/off', '禁用', param, () => { this.fetch(this.model) })\r\n\t\t\t}},\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('pick-group/del', '删除', param, () => { this.fetch(this.model) })\r\n\t\t\t}}\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='分拣管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading } \r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tlet param = { ...v}\r\n\t\t\t\t\t\t\tlet api ='pick-group/add' \r\n\t\t\t\t\t\t\tlet info = '添加'  \r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tparam = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\tapi = 'pick-group/edit' \r\n\t\t\t\t\t\t\t\tinfo = '编辑'\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t$http.submit(null, api, { param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success(`${info}成功`))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t\t\t\t}) \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-collection-record.js",["1760"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n\t\r\n\tforms = [\r\n\t\t{ label:'条码号',\t\tname:'spec_code',\t\ttype:'input' },\r\n\t\t{ label:'领取人',\t\tname:'receive_user',\ttype:'input' },\r\n\t\t{ label:'标本架编号',\tname:'sf_number',\t\ttype:'input' },\r\n\t\t{ label:'实验号',\t\tname:'experiment_num',\ttype:'input' }, \r\n\t\t{ label:'岗位',\t\t\tname:'project_name',\ttype:'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'科室',\t\t\tname:'team_name',\t\ttype:'select', data: [], nameStr:'name', idStr:'uuid' },\r\n\t\t{ label:'领取时间',\t\tname:'date',\t\t\ttype:'date-range', names:['start_time', 'end_time'] }, // 标本领取记录-系统默认时间轴\r\n\t\t{ label:'接收时间',\t\tname:'date1',\t\t\ttype:'date-range', names:['start_receive_time', 'end_receive_time'] } \r\n\t]\r\n\thandoverSelect = [\r\n\t\t{ name: \"未领取\", value: 0 },\r\n\t\t{ name: \"已领取\", value: 1 } \r\n\t] \r\n\tmodel = {start_time: coms.sysTime(1), end_time: coms.sysTime(2)}\r\n\tcomponentDidMount(){ \r\n\t\t// 岗位 \r\n\t\t$fn.dataSave('project-team-laboratoryselect-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[4].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.pull(null,'project-team/laboratoryselect', {dataName:null}).then(data=>{\r\n\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t$fn.dataSave('project-team-laboratoryselect-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\t// 科室 \r\n\t\t$fn.dataSave('project-team-select-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[5].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.pull(null,'project-team/select', {dataName:null}).then(data=>{\r\n\t\t\t\tthis.forms[5].data = data\r\n\t\t\t\t$fn.dataSave('project-team-select-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\tconsole.log(this.model)\r\n\t\tthis.fetch(this.model)\r\n\t} \r\n\t// paging \r\n\tfetch = param => $fn.fetch.call(this,'receive/logs', param)\r\n\tcols = [\r\n\t\t{ title: '标本条码号',\t\tfield: 'spec_code',\t\t\twidth:150 },\r\n\t\t{ title: '实验号',\t\t\tfield: 'lb_tpl',\t\t\twidth:150, sort: true},\r\n\t\t{ title: '标本架编号',\t\tfield: 'sf_number',\t\t\twidth:150 },\r\n\t\t{ title: '创建人',\t\t\tfield: 'founder',\t\t\twidth:150 },\r\n\t\t{ title: '创建时间',\t\tfield: 'created_at',\t\twidth:150 },\r\n\t\t{ title: '领取人',\t\t\tfield: 'receive_user',\t\twidth:150 },\r\n\t\t{ title: '领取时间',\t\tfield: 'receive_time',\t\twidth:150 },\r\n\t\t{ title: '接收时间',\t\tfield: 'sp_receive_time',\twidth:150 },\r\n\t\t{ title: '岗位',\t\t\tfield: 'job_id',\t\t\twidth:150 },\r\n\t\t{ title: '科室',\t\t\tfield: 'team_name',\t\t\twidth:150 }, \r\n\t\t{ title: '状态',\t\t\tfield: 'handover_type', \twidth:150, render:({rows})=>{ \r\n\t\t\treturn window.$fn.filterSelect(this.handoverSelect, rows.handover_type, 'name', 'value') \r\n\t\t}}\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='标本领取记录' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => { form.setFieldsValue({date:[coms.sysTime(1), coms.sysTime(2)]}) }}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-anomaly-manage.js",["1761"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '描述', name:'explanation', type: 'textarea', full:true, width:'100%'}\r\n\t\t]\r\n\t}\r\n\tstatusSelect = [\r\n\t\t{ name: \"待处理\", value: \"0\" },\r\n        { name: \"已处理\", value: \"1\" },\r\n        { name: \"已完成\", value: \"2\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'标本条码',\t\tname:'spec_code',\t\ttype:'input' },\r\n\t\t{ label:'项目代码',\t\tname:'kind_code',\t\ttype:'input' }, \r\n\t\t{ label:'状态',\t\t\tname:'status',\t\t\ttype:'select', data: this.statusSelect, nameStr:'name', idStr:'value' }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'sp-abnormal-spec/index', param)\r\n\tcols = [ \r\n\t\t{ title: '标本条码',\t\tfield: 'spec_code',\t\t\twidth:130 },\r\n\t\t{ title: '项目名称',\t\tfield: 'kind_name',\t\t\twidth:220 },\r\n\t\t{ title: '项目代码',\t\tfield: 'kind_code',\t\t\twidth:100 },\r\n\t\t{ title: '医院名称',\t\tfield: 'hosp_name',\t\t\twidth:260 },\r\n\t\t{ title: '病人姓名',\t\tfield: 'patient_name',\t\twidth:100 },\r\n\t\t{ title: '性别',\t\t\tfield: 'sex_name',\t\t\twidth:80 },\r\n\t\t{ title: '年龄',\t\t\tfield: 'age',\t\t\t\twidth:100 },\r\n\t\t{ title: '发起人',\t\t\tfield: 'create_user',\t\twidth:100 },\r\n\t\t{ title: '状态',\t\t\tfield: 'status',\t\t\twidth:100, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.statusSelect, rows.status, 'name', 'value') \r\n\t\t}},\r\n\t\t{ title: '异常时间',\t\tfield: 'abnormal_time',\t\twidth:160 },\r\n\t\t{ title: '异常原因',\t\tfield: 'reason',\t\t\twidth:240 },\r\n\t\t{ title: '异常说明',\t\tfield: 'explanation',\t\twidth:100 },\r\n\t\t{ title: '操作', \t\t\talign:'tc', \t\t\t\twidth:100, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t{rows.status === \"0\" ? <Button label='审核' ghost onClick={e => {\r\n\t\t\t\t\t\tthis.refs.modal.open() \r\n\t\t\t\t\t\tthis.rows = rows \r\n\t\t\t\t\t}}/> : \r\n\t\t\t\t\trows.status === \"1\" ? <Button label='编辑' ghost onClick={e => {\r\n\t\t\t\t\t\tthis.refs.modal.open() \r\n\t\t\t\t\t\tthis.rows = rows \r\n\t\t\t\t\t}}/> : ''}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}}\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='标本异常管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>  \r\n\t\t\t\t<Modal ref='modal' title='编辑' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\tconst api = this.rows.status === \"0\" ? 'sp-abnormal-spec/audit' : this.rows.status === \"1\" ? 'sp-abnormal-spec/complete' : ''\r\n\t\t\t\t\t\t\t$http.submit(null,api,{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-invalidation-records.js",["1762"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n\taudit_statusSelect = [\r\n\t\t{ name: \"已作废\", value: \"-3\" }\r\n\t]\r\n\tforms = [ \r\n\t\t{ label:'条码号',\t\tname:'spec_code',\t\ttype:'input' }, \r\n\t\t{ label:'医院名称',\t\tname:'hosp_id',\t\t\ttype:'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'操作人',\t\tname:'operator_id',\t\ttype:'select', data: [], nameStr:'name', idStr:'uuid' },\r\n\t\t{ label:'作废时间',\t\tname:'date',\t\t\ttype:'date-range', names:['start_at', 'end_at'] }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\t// 医院列表\r\n\t\t$fn.dataSave('bs-hospital-select-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[1].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.pull(null,'bs-hospital/select', {dataName:null}).then(data=>{\r\n\t\t\t\tthis.forms[1].data = data.items\r\n\t\t\t\t$fn.dataSave('bs-hospital-select-data', data.items)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\t// 操作人列表 \r\n\t\t$fn.dataSave('employee-select-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[2].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.pull(null,'bs-hospital/select', {dataName:null}).then(data=>{\r\n\t\t\t\tthis.forms[2].data = data.items\r\n\t\t\t\t$fn.dataSave('employee-select-data', data.items)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'specimen/invalidlists', param)\r\n\tcols = [\r\n\t\t{ title: '标本箱编号',\t\tfield: 'box_num',\t\t\twidth:90 },\r\n\t\t{ title: '标箱条码号',\t\tfield: 'box_code',\t\t\twidth:90 },\r\n\t\t{ title: '医院名称',\t\tfield: 'hosp_name',\t\t\twidth:150 },\r\n\t\t{ title: '条码号',\t\t\tfield: 'spec_code',\t\t\twidth:120 },\r\n\t\t{ title: '项目列表',\t\tfield: 'kind_str',\t\t\twidth:240 },\r\n\t\t{ title: '录入时间',\t\tfield: 'created_at',\t\twidth:140 },\r\n\t\t{ title: '作废时间',\t\tfield: 'operator_at',\t\twidth:140 },\r\n\t\t{ title: '操作员',\t\t\tfield: 'operator_name',\t\twidth:120 },\r\n\t\t{ title: '项目状态',\t\tfield: 'audit_status',\t\twidth:150, render:({rows})=>{ \r\n\t\t\treturn window.$fn.filterSelect(this.audit_statusSelect, rows.audit_status, 'name', 'value') \r\n\t\t}} \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='标本作废记录' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-log.js",["1763"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\trows: {}\r\n\t} \r\n\t\r\n\tforms = [\r\n\t\t{ label:'标本条码',\t\t\tname:'spec_code',\t\ttype:'input' },\r\n\t\t{ label:'操作人', \t\t\tname:'operator_name', \ttype:'input' },\r\n\t\t{ label:'操作时间', \t\tname:'date',\t\t\ttype:'date-range',\t\tnames:['created_time_start_date', 'created_time_end_date'] },\r\n\t\t{ label:'类型', \t\t\tname:'dtype',\t\t\ttype: 'select',  \t\tdata: [], nameStr:'name', idStr:'value' }, \r\n\t\t{ label:'描述', \t\t\tname:'title',\t\t\ttype: 'textarea', \t\tfull:true, width:'100%' }\r\n\t] \r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\t$fn.dataSave('slog-select-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n\t\t\t\tthis.forms[3].data = local\r\n\t\t\t}else{\r\n\t\t\t  \t$http.submit(this,'slog/select').then(data=>{\r\n\t\t\t\t\tthis.forms[3].data = data\r\n\t\t\t\t\t$fn.dataSave('slog-select-data', data)\r\n\t\t\t  \t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'slog/index', param)\r\n\tcols = [ \r\n\t\t{ title: 'Id', \t\t\tfield: 'id', \t\t\t\twidth:70 },\r\n\t\t{ title: '模块', \t\tfield: 'dtype_str', \t\twidth:230 },\r\n\t\t{ title: '操作人', \t\tfield: 'operator_name',\t\twidth:130 },\r\n\t\t{ title: '操作时间', \tfield: 'created_time', \t\twidth:150 },\r\n\t\t{ title: '描述', \t\tfield: 'title', \t\t\twidth: 500 } \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='标本日志' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t\t<div className=\"br4 r4px\" style={{boxShadow: '0 0 3px #8fcfec'}}>\r\n\t\t\t\t\t<div className=\"tc h22\" style={{background: '#f5fcff', borderBottom: '1px solid #e5f5fd'}}>详细信息</div>\r\n\t\t\t\t\t<div className=\"lh20 pl10 pr10 oxys\" style={{height: '60px', borderBottom: '1px solid #e5f5fd'}}>{ this.state.selectedKeys.details }</div>\r\n\t\t\t\t\t<div className=\"tc h22\" style={{background: '#f5fcff', borderBottom: '1px solid #e5f5fd'}}>修改前数据</div>\r\n\t\t\t\t\t<div className=\"lh20 pl10 pr10 oxys\" style={{height: '60px', borderBottom: '1px solid #e5f5fd'}}>{ this.state.selectedKeys.before_details }</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\basic-data-entry\\tp\\doubleentry.js",["1764"],"import React from 'react' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst PatientDetails = $async(()=>import('./patient-details')) \r\n// // ===================================================================== 缓存 \r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {}, \r\n\t\tselectedRow: {}, \r\n\t\tsexSelect: [], \r\n\t}   \r\n\tstatusSelect = [\r\n\t\t{ value: \"99\", label: \"全部\" },\r\n\t\t{ label: \"审核未通过\", value: -1 },\r\n\t\t{ label: \"待完善\", value: 0 },\r\n\t\t{ label: \"待审核\", value: 1 },\r\n\t\t{ label: \"审核通过\", value: 2 }\r\n\t] \r\n\tmodel = {} \r\n\tforms = [\r\n\t\t{ label:'状态',\t\t\tname:'status',\t\t\ttype:'select', data:this.statusSelect, nameStr:'label', idStr:'value' },\r\n\t\t{ label:'医院',\t\t\tname:'hospital_id',\t\ttype:'select', data:[], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'条码号',\t\tname:'spec_code',\t\ttype:'input' },\r\n\t\t{ label:'病人姓名',\t\tname:'patient_name',\ttype:'input' },\r\n\t\t{ label:'日期',\t\t\tname:'date', \t\t\ttype:'date-range', names:['start_date','end_date'] }, \r\n\t]\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        this.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t\t$fn.dataSave('dis-item-45700-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){  \r\n\t\t\tthis.setState({sexSelect: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:45700}, loading:false}).then(data=>{\r\n\t\t\t\tthis.setState({sexSelect: data})\r\n\t\t\t\t$fn.dataSave('dis-item-45700-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t\tthis.fetch()\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'spec-case-info/index', param)\r\n\tcols = [ \r\n\t\t{ title: '申请单条码', \t\tfield: 'spec_code', \t\twidth: 130,\t\tsort: true },\r\n\t\t{ title: '受检人姓名', \t\tfield: 'patient_name', \t\twidth: 110 },\r\n\t\t{ title: '性别', \t\t\tfield: 'sex', \t\t\t\twidth: 50, render: ({rows})  => {\r\n\t\t\treturn window.$fn.filterSelect(this.state.sexSelect, rows.sex, 'name', 'value') \r\n\t\t} }, \r\n\t\t{ title: '年龄', \t\t\tfield: 'age', \t\t\t\twidth: 75 },\r\n\t\t{ title: '受检人电话', \t\tfield: 'patient_phone',\t\twidth: 100 },\r\n\t\t{ title: '身份证号', \t\tfield: 'card_no', \t\t\twidth: 150 },\r\n\t\t{ title: '送检单位', \t\tfield: 'hosp_name', \t\twidth: 220 },\r\n\t\t{ title: '送检科室', \t\tfield: 'department_name', \twidth: 100 }, \r\n\t\t{ title: '送检医生', \t\tfield: 'doctor', \t\t\twidth: 100 }, \r\n\t\t{ title: '医生电话', \t\tfield: 'doctor_phone', \t\twidth: 100 }, \r\n\t\t{ title: '采集时间', \t\tfield: 'coll_time', \t\twidth: 160 }, \r\n\t  \t{ title: '审核状态', \t\tfield: 'status', \t\t\twidth: 80, render: ({rows})  => {\r\n\t\t\treturn window.$fn.filterSelect(this.statusSelect, rows.status, 'label', 'value') \r\n\t\t}}\r\n\t] \r\n\r\n\tButtonGroup = () => {\r\n\t\treturn [   \r\n\t\t\t{ label:'返回', ghost:true, onClick:()=> $fn.back(this) } \r\n\t\t]\r\n\t} \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='双录入' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms }   \r\n\t\t\t\t\tonChange\t= { (v,press)=> $fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<div className='fx xplr ex'>\r\n\t\t\t\t\t<Table \r\n\t\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\t\tloading \t\t= { pullLoading } \r\n\t\t\t\t\t\tonRow\t\t\t= { (rows, index) => { \r\n\t\t\t\t\t\t\tthis.setState({ selectedRow: rows })   \r\n\t\t\t\t\t\t\t$http.submit(null,'spec-case-info/infoDoubleEntry', { param:{spec_code: rows.spec_code}, loadingText: '数据读取中...'}).then(data=>{\r\n\t\t\t\t\t\t\t\tif ($fn.hasArray(data)) { \r\n\t\t\t\t\t\t\t\t\tthis.PatientDetailsRef1.doubleEntryInfo(data[0]) \r\n\t\t\t\t\t\t\t\t\tthis.PatientDetailsRef2.doubleEntryInfo(data.length > 1 ? data[1] : {}) \r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.PatientDetailsRef1.doubleEntryInfo({}) \r\n\t\t\t\t\t\t\t\t\tthis.PatientDetailsRef2.doubleEntryInfo({}) \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}).catch(data => {\r\n\t\t\t\t\t\t\t\tthis.PatientDetailsRef1.doubleEntryInfo({}) \r\n\t\t\t\t\t\t\t\tthis.PatientDetailsRef2.doubleEntryInfo({}) \r\n\t\t\t\t\t\t\t})  \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) } \r\n\t\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='fv r4px' style={{width: '450px', border: '1px solid #F2F2F2', marginLeft: '10px'}}>\r\n\t\t\t\t\t\t<div className='b p10'>第一次录入</div>\r\n\t\t\t\t\t\t<div className='ex oxys p10' style={{paddingTop: 0 }}>\r\n\t\t\t\t\t\t\t<div className='fxm mb10'>\r\n\t\t\t\t\t\t\t\t<Button label='以此为准' className='mr10' ghost onClick={() => this.PatientDetailsRef1.takeStandard(1)} /> \r\n\t\t\t\t\t\t\t\t<Button label='查看图片' className='mr10' ghost onClick={() => {}} /> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t<PatientDetails onRef={ref => this.PatientDetailsRef1 = ref} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='fv r4px' style={{width: '450px', border: '1px solid #F2F2F2', marginLeft: '10px'}}>\r\n\t\t\t\t\t\t<div className='b p10'>第二次录入</div>\r\n\t\t\t\t\t\t<div className='ex oxys p10' style={{paddingTop: 0 }}>\r\n\t\t\t\t\t\t\t<div className='fxm mb10'>\r\n\t\t\t\t\t\t\t\t<Button label='以此为准' className='mr10' ghost onClick={() => this.PatientDetailsRef2.takeStandard(2)} /> \r\n\t\t\t\t\t\t\t\t<Button label='查看图片' className='mr10' ghost onClick={() => {}} /> \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<PatientDetails onRef={ref => this.PatientDetailsRef2 = ref} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\basic-data-entry\\tp\\patient-details.js",["1765","1766"],"import React from 'react'\r\n// ===================================================================== common\r\n// import coms from '@/private/js/common.js'\r\n// ===================================================================== common\r\nimport Input from '@antd/form/input'\r\nimport { Tag } from 'antd' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== global antd\r\nconst Select = $async(()=>import('@antd/form/select'))  \r\n// const Checkbox = $async(()=>import('@antd/form/checkbox'))\r\nconst DatePicker = $async(()=>import('@antd/form/datePicker'))\r\n// ===================================================================== private template\r\n// const Page = $async(()=>import('#tp/page-container')) \r\n// ===================================================================== 缓存\r\n// const cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        forms: {\r\n            spec_code: '',\r\n            hosp_name: '',\r\n            patient_name: '',\r\n            sex: '45703',\r\n            age_first_val: '',\r\n            age_first_type: '30001',\r\n            age_second_val: '',\r\n            age_second_type: '30003',\r\n            department_name: '',\r\n            bed_no: '',  \r\n            outpatient: '',\r\n            doctor: '',\r\n            doctor_phone: '',\r\n            patient_phone: '',\r\n            real_name: '',\r\n            case_type: '',\r\n            spec_traits: '',\r\n            hosp_identification: '',\r\n            card_no: '',\r\n            coll_time: '', // 采样日期 + 时间\r\n            samp_date: '', // 采样日期\r\n            samp_time: '', // 采样时间\r\n            diagnosis_info: '',\r\n            remark: '',\r\n            tags: [],\r\n            status: '', // 审核状态\r\n            uuid: '', \r\n            empl_id: '',\r\n            logistics_user_id: '',\r\n            hosp_id: ''\r\n        },\r\n        sexSelect: [],\r\n        ageTypeSelect: [],\r\n        caseTypeSelect: [],\r\n        specTraitsSelect: [],\r\n        tagsSelect: [],\r\n        keys: 0,\r\n        noEditor: true, // 不能编辑 \r\n        isScan: false, // 扫码录入\r\n        infos: {}, // 当前数据的全部详情\r\n    }   \r\n    titleWidth = {width: '80px'}\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n        this.props.onRef(this)   \r\n        !$fn.isEmpty(this.props.noEditor) && this.setState({noEditor: this.props.noEditor})\r\n\t\t$fn.dataSave('dis-item-45700-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n                this.setState({sexSelect: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:45700}, loading:false}).then(data=>{\r\n                this.setState({sexSelect: data})\r\n\t\t\t\t$fn.dataSave('dis-item-45700-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n        }) \r\n        $fn.dataSave('dis-item-30000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n                this.setState({ageTypeSelect: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:30000}, loading:false}).then(data=>{\r\n                this.setState({ageTypeSelect: data})\r\n\t\t\t\t$fn.dataSave('dis-item-30000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n        }) \r\n        $fn.dataSave('dis-item-42000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n                this.setState({caseTypeSelect: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:42000}, loading:false}).then(data=>{\r\n                this.setState({caseTypeSelect: data})\r\n\t\t\t\t$fn.dataSave('dis-item-42000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n        }) \r\n        $fn.dataSave('dis-item-21000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n                this.setState({specTraitsSelect: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:21000}, loading:false}).then(data=>{\r\n                this.setState({specTraitsSelect: data})\r\n\t\t\t\t$fn.dataSave('dis-item-21000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n        }) \r\n        $fn.dataSave('dis-item-69700-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n                this.setState({tagsSelect: local}) \r\n            }else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:69700}, loading:false}).then(data=>{\r\n                this.setState({tagsSelect: data}) \r\n\t\t\t\t$fn.dataSave('dis-item-69700-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n        })\r\n    } \r\n    // 清空资料\r\n    formData = () => {\r\n        const { forms } = this.state\r\n        for (let name in forms) {\r\n            if ($fn.hasArray(forms[name])) {\r\n                forms[name] = []\r\n            } else {\r\n                forms[name] = ''\r\n            } \r\n        }  \r\n        this.setState({forms: forms, keys: this.state.keys + 1, infos: {}})\r\n    }\r\n\tonChanges = (v) => {    \r\n\t\tconst {forms} = this.state  \r\n\t\tlet d = Object.assign(forms, v)  \r\n\t\tthis.setState({forms: d})  \r\n    }\r\n    tagsChange(tag, checked) { \r\n        const { forms } = this.state;\r\n        const nextSelectedTags = checked ? [...forms.tags, tag] : forms.tags.filter(t => t !== tag);\r\n        forms['tags'] = nextSelectedTags\r\n        this.setState({ forms: forms }); \r\n    }\r\n    // 基础资料录入-获取详情\r\n    getInfos = (rows) => { \r\n        const { forms } = this.state\r\n        console.log(this.state.keys)\r\n        $http.submit(null,'spec-case-info/info', {param: { uuid: rows.uuid }, loadingText: '数据读取中...'}).then(data=>{\r\n            for (let name in forms) { \r\n                forms[name] = data[name] ? data[name] : '' \r\n            }\r\n            forms['samp_date'] = !forms['samp_date'] && forms['coll_time'] && forms['coll_time'].substr(0,10); // 采样日期赋值\r\n            this.setState({forms: forms, keys: this.state.keys + 1, noEditor: true})\r\n            this.props.setStatus(data.status) \r\n        }).catch(res => { \r\n            message.then(f => f.default.error('数据读取失败'))\r\n            for (let name in forms) {\r\n                if ($fn.hasArray(forms[name])) {\r\n                    forms[name] = []\r\n                } else {\r\n                    forms[name] = ''\r\n                } \r\n            } \r\n            this.props.setStatus()\r\n            this.setState({forms: forms, keys: this.state.keys + 1, noEditor: true})\r\n        })\r\n    }\r\n    // 基础资料录入-保存、审核、以此为准 时参数处理\r\n    setParams = () => {\r\n        const { forms } = this.state\r\n        forms['coll_time'] = forms.samp_date ? (forms.samp_time ? `${forms.samp_date} ${forms.samp_time}` : forms.samp_date) : ''\r\n        forms['tags'] = forms.tags.length ? forms.tags : ''\r\n        this.setState({forms: forms})\r\n        return forms\r\n    } \r\n    // 基础资料录入-保存\r\n    saves = () => { \r\n        const param = this.setParams()\r\n        $http.submit(null,'spec-case-info/keep', {param: { entry_type: \"main\", ...param }}).then(data=>{\r\n            message.then(f => f.default.success('保存成功')) \r\n            this.props.nextSpec(param)\r\n        })  \r\n    }\r\n    // 基础资料录入-审核\r\n    audits = () => { \r\n        const param = this.setParams()\r\n        $http.submit(null,'spec-case-info/pass', {param: { entry_type: \"main\", ...param }}).then(data=>{\r\n\t\t\tmessage.then(f => f.default.success('审核通过')) \r\n        })   \r\n    }\r\n    // 基础资料录入-可否编辑\r\n    edits = () => {\r\n        const { forms, keys } = this.state\r\n        const param = {\r\n            spec_code: forms.spec_code,\r\n            uuid: forms.uuid\r\n        }\r\n        $http.submit(null,'spec-case-info/checkEditEnabled', {param: param}).then(data=>{\r\n            if (String(data.editEnabled) === \"1\") {\r\n                message.then(f => f.default.success('可以编辑'))  \r\n                this.props.setVisible({isSave: false, isAudit: String(forms.status) ==='1' || String(forms.status) ==='2' ? false : true, isEditor: true}) \r\n                this.setState({noEditor: false})\r\n                this.batchEditor()\r\n            } else { \r\n                message.then(f => f.default.error('请前往双录入页面进行修改'))  \r\n                this.props.setVisible({isSave: true, isAudit: true, isEditor: false}) \r\n            }\r\n        })   \r\n    }\r\n    // 基础资料录入-批量编辑\r\n    batchEditor = () => {   \r\n        if (this.props.batchEditFlag) {\r\n            this.PatientNameRef.getRef().focus() \r\n        } \r\n    } \r\n    // 双录入-获取详情\r\n    doubleEntryInfo = (data) => {\r\n        const { forms } = this.state\r\n        if ($fn.hasObject(data)) {\r\n            for (let name in forms) { \r\n                forms[name] = data[name] ? data[name] : '' \r\n            }\r\n            forms['samp_date'] = !forms['samp_date'] && forms['coll_time'] && forms['coll_time'].substr(0,10); // 采样日期赋值\r\n            this.setState({forms: forms, noEditor: false, keys: this.state.keys + 1})\r\n        } else {\r\n            for (let name in forms) {\r\n                if ($fn.hasArray(forms[name])) {\r\n                    forms[name] = []\r\n                } else {\r\n                    forms[name] = ''\r\n                } \r\n            }  \r\n            this.setState({forms: forms, noEditor: false, keys: this.state.keys + 1})\r\n        } \r\n    }\r\n    // 双录入-以此为准\r\n    takeStandard = (type) => { \r\n        const param = this.setParams()\r\n        let entry_type = type === 1 ? 'double_left' : 'double_right';\r\n        // status = 1 记录表无此状态，手动设置，1：待审核\r\n        $http.submit(null,'spec-case-info/pass', { param:{entry_type: entry_type, status: 1, ...param}}).then(data=>{\r\n            message.then(f => f.default.success('操作成功'))\r\n        })\r\n    }\r\n    // 快捷录入-可否编辑\r\n    quickentryEdits = (rows) => {\r\n        const { forms } = this.state\r\n        const param = {\r\n            spec_code: rows.spec_code || '',\r\n            uuid: rows.uuid || ''\r\n        }\r\n        this.setState({isScan: false})\r\n        $http.submit(null,'spec-case-info/checkEditEnabled', {param: param}).then(data=>{\r\n            if (String(data.editEnabled) === \"1\") {  \r\n                this.quickentryGetInfos(rows)\r\n            } else { \r\n                for (let name in forms) {\r\n                    if ($fn.hasArray(forms[name])) {\r\n                        forms[name] = []\r\n                    } else {\r\n                        forms[name] = ''\r\n                    } \r\n                }  \r\n                this.setState({forms: forms, keys: this.state.keys + 1, infos: {}})\r\n                message.then(f => f.default.error('请前往双录入页面进行修改'))   \r\n            }\r\n        })   \r\n    }\r\n    // 快捷录入-获取详情\r\n    quickentryGetInfos = (rows) => {\r\n        const { forms } = this.state\r\n        console.log(this.state.keys)\r\n        $http.submit(null,'spec-case-info/info', {param: { spec_code: rows.spec_code }, loadingText: '数据读取中...'}).then(data=>{\r\n            for (let name in forms) { \r\n                forms[name] = data[name] ? data[name] : '' \r\n            }\r\n            forms['samp_date'] = !forms['samp_date'] && forms['coll_time'] && forms['coll_time'].substr(0,10); // 采样日期赋值\r\n            this.setState({forms: forms, keys: this.state.keys + 1, infos: data}) \r\n            this.PatientNameRef.getRef().focus() \r\n        }).catch(res => { \r\n            message.then(f => f.default.error('数据读取失败'))\r\n            this.formData()\r\n        })\r\n    } \r\n     // 快捷录入-扫码录入-清空信息\r\n     handleScanInput() { \r\n        // this.disabled = false;\r\n        this.formData() \r\n        this.setState({isScan: true}, () => {\r\n            this.specCodeRef.getRef().focus()  \r\n        }) \r\n    }\r\n    // 快捷录入-仅保存\r\n    quickentrySaves = () => {\r\n        const { infos, isScan } = this.state\r\n        const param = this.setParams() \r\n        let entry_type = isScan ? 'fast_scan' : 'fast'\r\n        if (!param.patient_name || !param.spec_code) { return message.then(f => f.default.error('条码号和姓名必填'))}\r\n        const newParam = { \r\n            entry_type: entry_type,\r\n            uuid: infos.pic_uuid,\r\n            status: infos.status || '0',\r\n            check_time: infos.check_time || ''\r\n        }\r\n        if (infos.pic_uuid === '' || infos.pic_status === '43703') {  \r\n            $http.submit(null,'spec-case-info/keep', {param: {...param, ...newParam }}).then(data=>{\r\n                message.then(f => f.default.success('保存成功')) \r\n                if (isScan) {\r\n                    this.handleScanInput() \r\n                } \r\n            })   \r\n        } else { // 仅保存需要对于未审核图片的自动审核\r\n            const paramImg = { \r\n                uuid: infos.pic_uuid,\r\n                spec_code: infos.spec_code,\r\n                status: '43703'\r\n            }\r\n            $http.submit(null,'app-upload-pic/audit', {param: paramImg}).then(data=>{\r\n                $http.submit(null,'spec-case-info/keep', {param: {...param, ...newParam }}).then(data=>{\r\n                    message.then(f => f.default.success('保存成功')) \r\n                    if (isScan) { \r\n                        this.handleScanInput() \r\n                    } else { \r\n                        this.props.getpage()\r\n                    }\r\n                }) \r\n            })  \r\n        } \r\n    }\r\n    // 快捷录入-下一个\r\n    nextSpec = () => {\r\n        const { forms } = this.state\r\n        if (!forms.spec_code) { return message.then(f => f.default.error('当前条码号不能为空'))}\r\n        const param = {\r\n          spec_code: forms.spec_code\r\n        } \r\n        $http.submit(null,'spec-case-info/nextSpecCodeInfo', {param: param}).then(data=>{\r\n            message.then(f => f.default.success('操作成功'))  \r\n            this.props.changeImgUrl(data.img_url)\r\n            for (let name in forms) { \r\n                forms[name] = data[name] ? data[name] : '' \r\n            }\r\n            forms['samp_date'] = !forms['samp_date'] && forms['coll_time'] && forms['coll_time'].substr(0,10); // 采样日期赋值\r\n            this.setState({forms: forms, infos: data, keys: this.state.keys + 1})\r\n            this.PatientNameRef.getRef().focus()\r\n        }) \r\n    }\r\n    // 快捷录入-保存并审核\r\n    newSaveAndAudit = () => {\r\n        const { infos, isScan } = this.state\r\n        const param = this.setParams()  \r\n        const newParam = { \r\n            entry_type: 'fast',\r\n            uuid: infos.pic_uuid,\r\n            status: infos.status || '1',\r\n            check_time: infos.check_time || ''\r\n        }\r\n        $http.submit(null,'spec-case-info/pass', {param: {...param, ...newParam }}).then(data=>{\r\n            message.then(f => f.default.success('操作成功')) \r\n            if (isScan) {\r\n                this.handleScanInput() \r\n            } else {\r\n                this.props.getpage()\r\n            }\r\n        }) \r\n    }\r\n    // 快捷录入-保存并审核 - 需要对于未审核图片的自动审核\r\n    saveAndAudit = () => {\r\n        const { infos, forms } = this.state\r\n        if (!forms.patient_name || !forms.spec_code) { return message.then(f => f.default.error('条码号和姓名必填'))}\r\n        if (infos.pic_uuid === '' || infos.pic_status === '43703') {   \r\n            this.newSaveAndAudit()\r\n        } else { // 需要对于未审核图片的自动审核\r\n            const paramImg = { \r\n                uuid: infos.pic_uuid,\r\n                spec_code: infos.spec_code,\r\n                status: '43703'\r\n            } \r\n            $http.submit(null,'app-upload-pic/audit', {param: paramImg}).then(data=>{\r\n                this.newSaveAndAudit()\r\n            })  \r\n        }\r\n    }\r\n    // 快捷录入-扫码录入\r\n    handleSpecEnter = () => { \r\n        const { forms, isScan } = this.state\r\n        $http.submit(null,'spec-case-info/info', {param: { spec_code: forms.spec_code }}).then(data=>{\r\n            for (let name in forms) { \r\n                forms[name] = data[name] ? data[name] : '' \r\n            }\r\n            forms['samp_date'] = !forms['samp_date'] && forms['coll_time'] && forms['coll_time'].substr(0,10); // 采样日期赋值\r\n            this.setState({forms: forms, infos: data, keys: this.state.keys + 1})\r\n            this.PatientNameRef.getRef().focus()\r\n            isScan && this.props.changeImgUrl(data.img_url)\r\n        }) \r\n    }\r\n\trender(){\r\n\t\tconst { keys, forms, sexSelect, ageTypeSelect, caseTypeSelect, specTraitsSelect, tagsSelect, noEditor, isScan } = this.state\r\n\t\treturn (\r\n\t\t\t<React.Fragment key={keys}> \r\n                <div className='fxm mb10'>\r\n                    <span style={{...this.titleWidth}}>条形码：</span> \r\n                    <Input disabled={!isScan} className='ex' ref={ref => this.specCodeRef = ref} name='spec_code' value={forms.spec_code} onPressEnter={() => this.handleSpecEnter()} onChange={(v) => this.onChanges(v) } />\r\n                </div> \r\n                <div className='fxm mb10'>\r\n                    <span style={{...this.titleWidth}}>送检医院：</span> \r\n                    <Input disabled className='ex' name='hosp_name' value={forms.hosp_name} onChange={(v) => this.onChanges(v) } />\r\n                </div>  \r\n                <div className='fxm mb10'> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth}}>姓名：</span> \r\n                        <Input disabled={noEditor} className='ex' ref={ref => this.PatientNameRef = ref} name='patient_name' value={forms.patient_name} onChange={(v) => this.onChanges(v) } />\r\n                    </div> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth, marginLeft: '10px'}}>性别：</span>\r\n\t\t\t\t\t\t<Select disabled={noEditor} className='ex' name='sex' data={sexSelect} p='请选择' nameStr='name' idStr='value' value={forms.sex} onChanged={(v) => this.onChanges(v)} />\r\n                    </div>  \r\n                </div> \r\n                <div className='fxm mb10'> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth}}>年龄一：</span> \r\n                        <Input disabled={noEditor} className='ex' name='age_first_val' value={forms.age_first_val} onChange={(v) => this.onChanges(v) } />\r\n                    </div> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth, marginLeft: '10px'}}>年龄类型一：</span>\r\n\t\t\t\t\t\t<Select disabled={noEditor} className='ex' name='age_first_type' data={ageTypeSelect} p='请选择' nameStr='name' idStr='value' value={forms.age_first_type} onChanged={(v) => this.onChanges(v)} />\r\n                    </div>  \r\n                </div>  \r\n                <div className='fxm mb10'> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth}}>年龄二：</span> \r\n                        <Input disabled={noEditor} className='ex' name='age_second_val' value={forms.age_second_val} onChange={(v) => this.onChanges(v) } />\r\n                    </div> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth, marginLeft: '10px'}}>年龄类型二：</span>\r\n\t\t\t\t\t\t<Select disabled={noEditor} className='ex' name='age_second_type' data={ageTypeSelect} p='请选择' nameStr='name' idStr='value' value={forms.age_second_type} onChanged={(v) => this.onChanges(v)} />\r\n                    </div>  \r\n                </div>   \r\n                <div className='fxm mb10'> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth}}>送检科室：</span> \r\n                        <Input disabled={noEditor} className='ex' name='department_name' value={forms.department_name} onChange={(v) => this.onChanges(v) } />\r\n                    </div> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth, marginLeft: '10px'}}>床号：</span>\r\n                        <Input disabled={noEditor} className='ex' name='bed_no' value={forms.bed_no} onChange={(v) => this.onChanges(v) } />\r\n                    </div>  \r\n                </div>  \r\n                <div className='fxm mb10'> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth}}>门诊/住院号：</span> \r\n                        <Input disabled={noEditor} className='ex' name='outpatient' value={forms.outpatient} onChange={(v) => this.onChanges(v) } />\r\n                    </div> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth, marginLeft: '10px'}}>送检医生：</span>\r\n                        <Input disabled={noEditor} className='ex' name='doctor' value={forms.doctor} onChange={(v) => this.onChanges(v) } />\r\n                    </div>  \r\n                </div>  \r\n                <div className='fxm mb10'> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth}}>医生电话：</span> \r\n                        <Input disabled={noEditor} className='ex' name='doctor_phone' value={forms.doctor_phone} onChange={(v) => this.onChanges(v) } />\r\n                    </div> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth, marginLeft: '10px'}}>受检人电话：</span>\r\n                        <Input disabled={noEditor} className='ex' name='patient_phone' value={forms.patient_phone} onChange={(v) => this.onChanges(v) } />\r\n                    </div>  \r\n                </div> \r\n                <div className='fxm mb10'> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth}}>物流人员：</span> \r\n                        <Input disabled className='ex' name='real_name' value={forms.real_name} onChange={(v) => this.onChanges(v) } />\r\n                    </div> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth, marginLeft: '10px'}}>受检人类型：</span>\r\n\t\t\t\t\t\t<Select disabled={noEditor} className='ex' name='case_type' data={caseTypeSelect} p='请选择' nameStr='name' idStr='value' value={forms.case_type} onChanged={(v) => this.onChanges(v)} />\r\n                    </div>  \r\n                </div>  \r\n                <div className='fxm mb10'> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth}}>标本性状：</span> \r\n\t\t\t\t\t\t<Select disabled={noEditor} className='ex' name='spec_traits' data={specTraitsSelect} p='请选择' nameStr='name' idStr='value' value={forms.spec_traits} onChanged={(v) => this.onChanges(v)} />\r\n                    </div>  \r\n                </div>  \r\n                <div className='fxm mb10'>\r\n                    <span style={{...this.titleWidth}}>医院标识：</span> \r\n                    <Input disabled={noEditor} className='ex' name='hosp_identification' value={forms.hosp_identification} onChange={(v) => this.onChanges(v) } />\r\n                </div> \r\n                <div className='fxm mb10'>\r\n                    <span style={{...this.titleWidth}}>身份证号：</span> \r\n                    <Input disabled={noEditor} className='ex' name='card_no' value={forms.card_no} onChange={(v) => this.onChanges(v) } />\r\n                </div>  \r\n                <div className='fxm mb10'> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth}}>采样日期：</span> \r\n                        <DatePicker disabled={noEditor} className='ex' name='samp_date' value={forms.samp_date} format={1} showTime={false} after={true} onChange={(v) => this.onChanges(v) }  />\r\n                    </div> \r\n                    <div className='fxm' style={{width: '50%'}}>\r\n                        <span style={{...this.titleWidth, marginLeft: '10px'}}>采样时间：</span>\r\n                        <Input disabled={noEditor} className='ex' name='samp_time' value={forms.samp_time} onChange={(v) => this.onChanges(v) } />\r\n                    </div>  \r\n                </div>   \r\n                <div className='fxm mb10 full_w'>\r\n                    <span style={{...this.titleWidth}}>临床诊断：</span> \r\n                    <Input disabled={noEditor} mode='textarea' full={true} width='100%' name='diagnosis_info' value={forms.diagnosis_info} onChange={(v) => this.onChanges(v) } />\r\n                </div>  \r\n                <div className='fxm mb10'>\r\n                    <span style={{...this.titleWidth}}>识别标签：</span> \r\n                    <div className='ex' disabled={noEditor}>   \r\n                        {tagsSelect.map((v, i) => \r\n\t\t\t\t\t\t\t(<Tag.CheckableTag\r\n                                style={{border: '1px solid #D7D9D9'}}\r\n                                key={i} \r\n                                checked={forms.tags.indexOf(v.value) > -1}\r\n                                onChange={checked => this.tagsChange(v.value, checked)}\r\n                            >\r\n                                {v.name}\r\n                            </Tag.CheckableTag>)\r\n\t\t\t\t\t\t)} \r\n                    </div> \r\n                </div>  \r\n                <div className='fxm mb10 full_w'>\r\n                    <span style={{...this.titleWidth}}>备注：</span> \r\n                    <Input disabled={noEditor} mode='textarea' full={true} width='100%' name='remark' value={forms.remark} onChange={(v) => this.onChanges(v) } />\r\n                </div> \r\n             \r\n            </React.Fragment>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\basic-data-entry\\tp\\quickentry-table-datas.js",["1767"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        sexOptions: []\r\n\t} \r\n\tmodel = {}\r\n\tcomponentDidMount(){  \r\n        this.props.onRef(this)   \r\n        $fn.getDisItem({ // 性别\r\n            code: 45700,\r\n            callback: (data) => { \r\n                this.setState({sexOptions: data})\r\n            }\r\n        })\r\n\t\tthis.fetch()\r\n\t} \r\n\tfetch = param => $fn.fetch.call(this,'specimen/fastEntryCaseInfo', param) \r\n\tcols = [ \r\n\t\t{ title: '条码号',\t\tfield: 'spec_code',     width:120 },\r\n\t\t{ title: '姓名',\t\tfield: 'patient_name',\twidth:150 }, \r\n\t\t{ title: '性别',\t\tfield: 'sex',\t\t    width:150, render: ({rows}) => {\r\n            return $fn.filterSelect(this.state.sexOptions, rows.sex, 'name', 'value')\r\n        } }, \r\n\t\t{ title: '送检医院',\tfield: 'hosp_name',\t\twidth:150 }, \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Table\r\n                className\t\t= 'h'\r\n                cols\t\t\t= { this.cols }\r\n                data \t\t\t= { data }\r\n                loading \t\t= { pullLoading }\r\n                onRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n                pag\t\t\t\t= { pag }\r\n                onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n            /> \r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\project-list\\tp\\batch-code.js",["1768"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\n// import coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button')) \r\n// ===================================================================== private component \r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[], \r\n        selectedKeys:[],\r\n        keys: 0\r\n\t}  \r\n\tcomponentDidMount(){ \r\n        this.props.onRef(this)  \r\n    }   \r\n\t// fetch = param => $fn.fetch.call(this,'', param)\r\n\tcols = [ \r\n        { title: '条码号',\t\t    field: 'spec_code',\t\t\twidth:120 },\r\n        { title: '医院',\t\t    field: 'hosp_name',\t\t\twidth:120 },\r\n        { title: '姓名',\t\t    field: 'patient_name',\t\twidth:120 },\r\n        { title: '性别',\t\t    field: 'sex_name',\t\t\twidth:120 },\r\n        { title: '科室',\t\t    field: 'department_name',\twidth:120 },\r\n        { title: '操作',\t\t    width:60,                   render: ({rows}) => {\r\n            return String(rows.show_btn) === '1' ? <Button onClick={() => this.delRows(rows)}  ghost type='primary'>删除</Button> : ''\r\n        }, align: 'tc'} \r\n    ] \r\n    delRows = (rows) => {  \r\n        let d = this.state.data.filter(item => item.uuid !== rows.uuid);\r\n        this.setState({data: d})\r\n        this.props.changeBatchCode(d)\r\n    }\r\n    getPage = (data) => {\r\n        console.log(data)\r\n        this.setState({data: data, keys: this.state.keys + 1})\r\n    }\r\n\trender(){\r\n\t\tconst { data, pullLoading, keys } = this.state\r\n\t\treturn (\r\n\t\t\t<Table\r\n                key={keys}\r\n                className\t\t= 'xplr'\r\n                cols\t\t\t= { this.cols }\r\n                data \t\t\t= { data }\r\n                loading \t\t= { pullLoading }\r\n                onRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n                onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n            /> \r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\basic-data-entry\\tp\\quickentry.js",["1769","1770"],"import React from 'react' \r\n// ===================================================================== antd\r\nimport { Image } from 'antd' \r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// const Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table')) \r\nconst PatientDetails = $async(()=>import('./patient-details')) \r\nconst TableDatas = $async(()=>import('./quickentry-table-datas')) \r\n// // ===================================================================== 缓存 \r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {}, \r\n\t\tpullLoading: false,\r\n\t\tselectedRow: {}, \r\n\t\tisScan: false, // 是否扫码录入\r\n\t\timg_url: '' // 图片地址\r\n\t}    \r\n\tstatusOption = [\r\n        { value: \"\", label: \"全部\" },\r\n        { value: 0, label: \"待录入\" },\r\n        { value: 1, label: \"待审核\" }\r\n    ]\r\n\tmodel = {}  \r\n\tforms = [\r\n\t\t{ label:'条码号',\t\tname:'spec_code',\t\ttype:'input' },\r\n\t\t{ label:'医院',\t\t\tname:'hosp_id',\t\t\ttype:'select', data:[], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'接收时间',\t\tname:'date', \t\t\ttype:'date-range', names:['start_at','end_at'] }, \r\n\t\t{ label:'状态',\t\t\tname:'status',\t\t\ttype:'select', data:this.statusOption, nameStr:'label', idStr:'value' },\r\n\t]\r\n\tcols = [\r\n\t\t{ title: '条码号', \t\tfield: 'spec_code', \t\twidth: 120 },\r\n\t\t{ title: '送检医院', \tfield: 'hosp_name', \t\twidth: 110 },\r\n\t\t{ title: '接收时间', \tfield: 'check_time', \t\twidth: 150 }\r\n\t]\r\n\tfetch = param => $fn.fetch.call(this,'app-upload-pic/index', {...param, entry_type: 'left'})\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        this.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t\tthis.fetch()\r\n\t}  \r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'返回',  onClick:()=>{ $fn.back(this) } },\r\n\t\t\t{ label:'扫码录入 F1', code:'F1', ghost:true, onClick:()=> this.PatientDetailsRef.handleScanInput() },\r\n\t\t\t{ label:'仅保存 F2', code:'F2', ghost:true, onClick:()=> this.PatientDetailsRef.quickentrySaves() },\r\n\t\t\t{ label:'保存并审核 F3', code:'F3', ghost:true, onClick:()=> this.PatientDetailsRef.saveAndAudit() },\r\n\t\t\t{ label:'下一个 F4', code:'F4', ghost:true, onClick:()=> this.PatientDetailsRef.nextSpec() },\r\n\t\t]   \r\n\t} \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, img_url } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='快捷录入' ButtonGroup={this.ButtonGroup()}> \r\n\t\t\t\t<div className='ex xplr fx p10'> \r\n\t\t\t\t\t<div className='ex fv' style={{width: 0}}>\r\n\t\t\t\t\t\t<div className='ex mb10 r4px fv oh' style={{border: '1px solid #F2F2F2'}}>\r\n\t\t\t\t\t\t\t<div className='b p10' style={{borderBottom: '1px solid #F2F2F2'}}>图片预览</div>\r\n\t\t\t\t\t\t\t<div className='fxmc' style={{height: '400px'}}>\r\n\t\t\t\t\t\t\t\t<Image className='quickentry-img' src={img_url} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='r4px fv ex oh' style={{ border: '1px solid #F2F2F2'}}>\r\n\t\t\t\t\t\t\t<SearchForm\r\n\t\t\t\t\t\t\t\tdata\t\t= { this.forms }   \r\n\t\t\t\t\t\t\t\tonChange\t= { (v,press)=> $fn.onChange.call(this,v,press) } \r\n\t\t\t\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className='fx ex' style={{padding: '0 4px 4px 4px', height: 0}}>\r\n\t\t\t\t\t\t\t\t<div className='ex bor1'>\r\n\t\t\t\t\t\t\t\t\t<Table \r\n\t\t\t\t\t\t\t\t\t\tclassName       = 'h'\r\n\t\t\t\t\t\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\t\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\t\t\t\t\t\tloading \t\t= { pullLoading } \r\n\t\t\t\t\t\t\t\t\t\tonRow\t\t\t= { (rows, index) => { \r\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ selectedRow: rows, img_url: rows.img_url})  \r\n\t\t\t\t\t\t\t\t\t\t\tthis.PatientDetailsRef.quickentryEdits(rows) \r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\t\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) } \r\n\t\t\t\t\t\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='ex bor1 ml10'>\r\n\t\t\t\t\t\t\t\t\t<TableDatas onRef={ref => this.TableDatasRef = ref} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='fv r4px' style={{width: '450px', border: '1px solid #F2F2F2', marginLeft: '10px'}}>\r\n\t\t\t\t\t\t<div className='b p10'>信息修改</div>\r\n\t\t\t\t\t\t<div className='ex oxys p10' style={{paddingTop: 0 }}>\r\n\t\t\t\t\t\t\t<PatientDetails \r\n\t\t\t\t\t\t\t\tonRef={ref => this.PatientDetailsRef = ref} \r\n\t\t\t\t\t\t\t\tnoEditor={false} \r\n\t\t\t\t\t\t\t\tisScan={this.state.isScan} \r\n\t\t\t\t\t\t\t\tchangeImgUrl={(url) => {\r\n\t\t\t\t\t\t\t\t\tthis.setState({img_url: url})\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tgetpage={() => {\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)  \r\n\t\t\t\t\t\t\t\t\tthis.TableDatasRef.fetch()\r\n\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\project-list\\tp\\info-project.js",["1771","1772","1773"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport { Image } from 'antd'  \r\n// ===================================================================== common\r\nimport Input from '@antd/form/input'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global antd\r\nconst Select = $async(()=>import('@antd/form/select')) \r\n// const Input = $async(()=>import('@antd/form/input'))\r\nconst Checkbox = $async(()=>import('@antd/form/checkbox'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst ProjectDetails = $async(()=>import('./project-details'))\r\nconst BatchCode = $async(()=>import('./batch-code'))\r\nconst Title = $async(()=>import('#tp/title'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata: {},  \r\n\t\tforms: {\r\n\t\t\tenabled: '',\r\n\t\t\tbox_number: '',\r\n\t\t\thosp_name: '',\r\n\t\t\tadditional_kind: '',\r\n\t\t\tis_review: '',\r\n\t\t\tis_batch: '',\r\n\t\t\tquick_entry_flag: '',\r\n\t\t\tmemory_project_flag: '',\r\n\t\t\tspec_code: '',\r\n\t\t\tuuid: '',\r\n\t\t\timage: ''\r\n\t\t}, \r\n\t\tboxSelect: [],\r\n\t\tprojectOption: [], \r\n\t\tspeceDataInfo: {}, // 生成条码的信息\r\n\t\tspeceDataList: [], // 生成条码的列表\r\n\t\tkeys: 0\r\n\t} \r\n\tisAudit = $fn.query('isAudit') || false // 是否录入项目/审核项目\r\n\tview_pic = $fn.query('view_pic') || 0 // 是否显示有图\r\n\tcomponentDidMount(){  \r\n\t\t// 标本箱号\r\n\t\t$fn.dataSave('box-select-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tconsole.log(local)\r\n\t\t\t  this.setState({boxSelect: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'box/select', {dataName:null, param: {limit: 500, status: 83}}).then(data=>{ \r\n\t\t\t\tthis.setState({boxSelect: data.items})\r\n\t\t\t\t$fn.dataSave('box-select-data', data.items)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t}) \r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ \r\n\t\t\t\tcache: d.specimenkindSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) { \r\n\t\t\t\t\t\tthis.setState({projectOption: data})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'specimen-kind/selectkind').then(data => {\r\n\t\t\t\t\t\t\tthis.setState({projectOption: data})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})  \r\n\t}\r\n\tstatusOption = [\r\n\t\t{ value: \"0\", label: \"待审核\" },\r\n\t\t{ value: \"-2\", label: \"待录入\" }\r\n\t] \r\n\tmodal = {}  \r\n\tonChanges = (v) => {   \r\n\t\t// console.log(v) \r\n\t\tconst {forms} = this.state  \r\n\t\tlet d = Object.assign(forms, v)  \r\n\t\tthis.setState({forms: d}, () => {\r\n\t\t\tif (Object.keys(v)[0] === 'project_id') {\r\n\t\t\t\tthis.addProject(v.project_id)\r\n\t\t\t} \r\n\t\t})  \r\n\t}\r\n\t// 选择项目下拉列表样式\r\n\tprojectSelectRender = (menu) => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div>项目名称</div>\r\n\t\t\t\t{menu}\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\tButtonGroup = () => { \r\n\t\treturn (\r\n\t\t\t<div>  \r\n\t\t\t\t<Button label='返回' ghost className='ml5' onClick={()=> $fn.back(this) }/> \r\n\t\t\t\t<Button label='保存' ghost className='mlr5' onClick={()=> this.saveSpec() } /> \r\n\t\t\t\t<Button label='审核' ghost className='mlr5' onClick={()=> this.auditSpec() }/> \r\n\t\t\t\t<Button label='退回保存' ghost className='mlr5' onClick={()=> this.saveBack() }/> \r\n\t\t\t</div>\r\n\t\t)\r\n\t} \r\n\t// 查询\r\n\tqueryspecimen = () => {\r\n\t\tconst { forms, keys } = this.state \r\n\t\tconst param = { \r\n\t\t\tspec_code: forms.spec_code,\r\n\t\t\tadditional_kind: forms.additional_kind ? 1 : 0,\r\n\t\t\taudit: this.isAudit ? 1 : ''\r\n\t\t}\r\n\t\t$http.submit(null, 'specimen/getspeccodeInfo', { param }).then(data => {\r\n\t\t\t// message.then(f => f.default.success('查询成功')) \r\n\t\t\tforms['spec_code'] = data.spec_code\r\n\t\t\tforms['is_review'] = String(data.is_review) === \"1\" ? true : false\r\n\t\t\tforms['additional_kind'] = String(data.additional_kind) === \"1\" ? true : false\r\n\t\t\tforms['hosp_name'] = data.hosp_name\r\n\t\t\tforms['project_special_request'] = data.project_special_request\r\n\t\t\tforms['image'] = data.image\r\n\t\t\tforms['project_id'] = ''\r\n\t\t\tforms['uuid'] = data.uuid\r\n\t\t\tforms['remark'] = data.remark  \r\n\t\t\tthis.setState({forms: forms, keys: keys + 1})\r\n\t\t\t// 更新表格-获取项目明细\r\n\t\t\tlet d = {\r\n\t\t\t\tspec_id: data.uuid,\r\n\t\t\t\tspec_code: data.spec_code\r\n\t\t\t}\r\n\t\t\tthis.ProjectDetailsRef.getPage(d) \r\n\t\t})\r\n\t}\r\n\t// 下一个\r\n\tnextSpec = () => {\r\n\t\tconst { forms, keys } = this.state\r\n\t\tconst param = {\r\n\t\t\tenabled: forms.enabled ? forms.enabled : this.isAudit ? 0 : -2,\r\n\t\t\tbox_number: forms.box_number || '',\r\n\t\t\tspec_code: forms.spec_code,\r\n\t\t\tview_pic: this.view_pic, // 是否仅显示有图片的项目\r\n\t\t}\r\n\t\t$http.submit(null, 'specimen/getnextspeccodeinfo', { param }).then(data => { \r\n\t\t\t// message.then(f => f.default.success('查询成功'))  \r\n\t\t\tforms['spec_code'] = data.spec_code\r\n\t\t\tforms['is_review'] = String(data.is_review) === \"1\" ? true : false\r\n\t\t\tforms['additional_kind'] = String(data.additional_kind) === \"1\" ? true : false\r\n\t\t\tforms['hosp_name'] = data.hosp_name\r\n\t\t\tforms['project_special_request'] = data.project_special_request\r\n\t\t\tforms['image'] = data.image\r\n\t\t\tforms['project_id'] = ''\r\n\t\t\tforms['uuid'] = data.uuid\r\n\t\t\tforms['remark'] = data.remark   \r\n\t\t\tthis.setState({forms: forms, keys: keys + 1})\r\n\t\t\t// 更新表格-获取项目明细\r\n\t\t\tlet d = {\r\n\t\t\t\tspec_id: data.uuid,\r\n\t\t\t\tspec_code: data.spec_code\r\n\t\t\t}\r\n\t\t\tthis.ProjectDetailsRef.getPage(d)\r\n\t\t})\r\n\t} \r\n\t// 选择项目时-传递的参数\r\n\taddProject = (value) => {\r\n\t\tconst { forms, speceDataInfo } = this.state\r\n\t\tif (forms.uuid) { // 单个查询 \r\n\t\t\tconst param = { \r\n\t\t\t  kind_ids: [value],\r\n\t\t\t  spec_id: forms.uuid,\r\n\t\t\t  spec_code: forms.spec_code\r\n\t\t\t}; \r\n\t\t\tthis.addProjectInterface(param) \r\n\t\t} else if (forms.start_code && forms.end_code) { // 批量生成 - 这里判断不完整，要判断生成后 \r\n\t\t\tconst param = { \r\n\t\t\t  kind_ids: [value],\r\n\t\t\t  spec_id: speceDataInfo.uuid,\r\n\t\t\t  spec_code: speceDataInfo.spec_code\r\n\t\t\t};\r\n\t\t\tthis.addProjectInterface(param) \r\n\t\t} else { \r\n\t\t\tmessage.then(f => f.default.success('请输入条码信息'))  \r\n\t\t} \r\n\t}\r\n\t// 选择项目时-调用的接口\r\n\taddProjectInterface = (param) => {\r\n\t\tconst { forms, keys } = this.state\r\n\t\t$http.submit(null, 'specimen-kind/batchadd', { param }).then(data => {\r\n\t\t\tmessage.then(f => f.default.success('操作成功')) \r\n\t\t\tforms['project_id'] = '' // 选择项目后清空选项\r\n\t\t\tthis.setState({forms: forms, keys: keys + 1})  \r\n\t\t\tconst d = {\r\n\t\t\t\tspec_id: param.spec_id,\r\n\t\t\t\tspec_code: param.spec_code\r\n\t\t\t};\r\n\t\t\tthis.ProjectDetailsRef.getPage(d) // 更新表格-获取项目明细\r\n\t\t}) \r\n\t}\r\n\t// 生成\r\n\tgenerateSpec = () => {\r\n\t\tconst { forms } = this.state\r\n\t\tconst param = {\r\n\t\t\tstart_code: forms.start_code,\r\n        \tend_code: forms.end_code\r\n\t\t}\r\n\t\t$http.submit(null, 'specimen/checkenter', { param }).then(data => { \r\n\t\t\tif (Object.keys(data.info).length > 0) { \r\n\t\t\t\tthis.BatchCodeRef.getPage(data.res) \r\n\t\t\t\tthis.setState({speceDataInfo: data.info, speceDataList: data.res})\r\n\t\t\t\tconst d = {\r\n\t\t\t\t\tspec_id: data.info.uuid,\r\n\t\t\t\t\tspec_code: data.info.spec_code\r\n\t\t\t\t} \r\n\t\t\t\tthis.ProjectDetailsRef.getPage(d)\r\n\t\t\t} else { }\r\n\t\t}) \r\n\t}\r\n\t// 保存\r\n\tsaveSpec = () => {  \r\n\t\tconst { forms, speceDataInfo, speceDataList, keys } = this.state\r\n\t\tif (forms.is_batch) { // 批量保存  \r\n\t\t\tconst param = {\r\n\t\t\t\tspec_id: speceDataInfo.uuid,\r\n\t\t\t\tis_review: forms.is_review ? \"1\" : \"0\",\r\n\t\t\t\tadditional_kind: forms.additional_kind ? \"1\" : \"0\",\r\n\t\t\t\tremark: forms.remark,\r\n\t\t\t\tto_codes: speceDataList.map(i => i.spec_code)\r\n\t\t\t}; \r\n\t\t\t$http.submit(null, 'specimen-kind/savekind', { param }).then(data => {\r\n\t\t\t\tmessage.then(f => f.default.success('保存成功'))\r\n\t\t\t\t// 更新表格-获取项目明细\r\n\t\t\t\tlet d = {\r\n\t\t\t\t\tspec_id: param.spec_id,\r\n\t\t\t\t\tspec_code: speceDataInfo.spec_code\r\n\t\t\t\t}\r\n\t\t\t\tthis.ProjectDetailsRef.getPage(d) \r\n\t\t\t}) \r\n\t\t} else { // 单个保存 \r\n\t\t\tconst param = {\r\n\t\t\t  spec_id: forms.uuid,\r\n\t\t\t  is_review: forms.is_review ? \"1\" : \"0\",\r\n\t\t\t  additional_kind: forms.additional_kind ? \"1\" : \"0\",\r\n\t\t\t  remark: forms.remark\r\n\t\t\t};\r\n\t\t\tthis.saveSpecInterface(param)\r\n\t\t} \r\n\t}\r\n\t// 单个保存-接口\r\n\tsaveSpecInterface = (param) => {\r\n\t\tconst { forms, keys } = this.state\r\n\t\t$http.submit(null, 'specimen-kind/savekind', { param }).then(data => {\r\n\t\t\tmessage.then(f => f.default.success('保存成功')) \r\n\t\t\t// 是否快捷录入\r\n\t\t\tif (forms.quick_entry_flag) {    \r\n\t\t\t\tforms['spec_code'] = ''\r\n\t\t\t\tforms['is_review'] = false\r\n\t\t\t\tforms['additional_kind'] = false\r\n\t\t\t\tforms['hosp_name'] = ''\r\n\t\t\t\tforms['project_special_request'] = ''\r\n\t\t\t\tforms['image'] = ''\r\n\t\t\t\tforms['project_id'] = ''\r\n\t\t\t\tforms['uuid'] = ''\r\n\t\t\t\tforms['remark'] = ''  \r\n\t\t\t\tthis.setState({forms: forms, keys: keys + 1})   \r\n\t\t\t\tthis.SpeceRef.getRef().focus()\r\n\t\t\t\tthis.ProjectDetailsRef.getPage() \r\n\t\t\t} else {   \r\n\t\t\t\t// 更新表格-获取项目明细\r\n\t\t\t\tlet d = {\r\n\t\t\t\t\tspec_id: param.spec_id,\r\n\t\t\t\t\tspec_code: forms.spec_code\r\n\t\t\t\t}\r\n\t\t\t\tthis.ProjectDetailsRef.getPage(d) \r\n\t\t\t}  \r\n\t\t})\r\n\t}\r\n\t// 审核\r\n\tauditSpec = () => {\r\n\t\tconst { forms, speceDataInfo } = this.state \r\n\t  \tconst param = {\r\n\t\t\tspec_id: forms.is_batch ? speceDataInfo.uuid : forms.uuid,\r\n\t\t\tspec_code: forms.is_batch ? speceDataInfo.spec_code : forms.spec_code,\r\n\t\t\tis_review: forms.is_review ? \"1\" : \"0\",\r\n\t\t\tadditional_kind: forms.additional_kind ? \"1\" : \"0\",\r\n\t\t\tremark: forms.remark,\r\n\t\t\tstatus: \"1\"\r\n\t\t} \r\n\t\t$http.submit(null, 'specimen/audit', { param }).then(data => {\r\n\t\t\tmessage.then(f => f.default.success('审核成功')) \r\n\t\t\tthis.nextSpec()\r\n\t\t})\r\n\t}\r\n\t// 退回保存\r\n\tsaveBack = () => {\r\n\t\tconst { forms, speceDataInfo, speceDataList } = this.state\r\n\t\tlet param = {}\r\n\t\tif (forms.is_batch) {\r\n\t\t  param = {\r\n\t\t\tspec_id: speceDataInfo.uuid,\r\n\t\t\tto_codes: speceDataList.map(i => i.spec_code)\r\n\t\t  }\r\n\t\t} else {\r\n\t\t  param = {\r\n\t\t\tspec_id: forms.uuid,\r\n\t\t\tto_codes: []\r\n\t\t  }\r\n\t\t}\r\n\t\t$http.submit(null, 'specimen-kind/backwaitstatus', { param }).then(data => {\r\n\t\t\tmessage.then(f => f.default.success('退回保存成功')) \r\n\t\t\tif (forms.is_batch) {\r\n\t\t\t\tconst d = {\r\n\t\t\t\t\tspec_id: speceDataInfo.uuid,\r\n\t\t\t\t\tspec_code: speceDataInfo.spec_code\r\n\t\t\t\t};\r\n\t\t\t\tthis.ProjectDetailsRef.getPage(d) \r\n\t\t\t  } else { \r\n\t\t\t\tlet d = {\r\n\t\t\t\t\tspec_id: forms.uuid,\r\n\t\t\t\t\tspec_code: forms.spec_code\r\n\t\t\t\t} \r\n\t\t\t\tthis.queryspecimen()\r\n\t\t\t  }\r\n\t\t})\r\n\t}\r\n\trender(){\r\n\t\tconst { forms, projectOption, keys, speceDataList } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title={this.isAudit ? '审核项目' : '按条码录入项目'} noBtGroup={true} ButtonGroup={this.ButtonGroup()}> \r\n\t\t\t\t<div className='ex' style={{display: 'block', overflow: 'auto'}} >\r\n\t\t\t\t\t<div className='fxw pt10 pr10 pl10' label='下一个查询条件'>\r\n\t\t\t\t\t\t<div className='mr10 fxm'> \r\n\t\t\t\t\t\t状态：<Select name='enabled' data={this.statusOption} p='请选择状态' nameStr='label' idStr='value' value={forms.enabled} onChanged={(v) => this.onChanges(v)} width={150} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='mr10 fxm'> \r\n\t\t\t\t\t\t标本箱号：<Select name='box_number' data={this.state.boxSelect} p='请选择标本箱号' nameStr='box_code' idStr='name' value={forms.box_number} onChanged={(v) => this.onChanges(v)} width={150} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Button label='下一个 —>' ghost className='mr10' onClick={()=> this.nextSpec() }/> \r\n\t\t\t\t\t</div> \r\n\t\t\t\t\t<div key={keys} className='p10 fx'>\r\n\t\t\t\t\t\t<div className='ex pr10'>\r\n\t\t\t\t\t\t\t<div className='fxm mb10'>\r\n\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>医院编号/名称：</span> <Input disabled className='ex' name='hosp_name' value={forms.hosp_name} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t<div className='fxw'> \r\n\t\t\t\t\t\t\t\t<div className='mb10 fxm' style={{width: '30%'}}>\r\n\t\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>加做项目：</span> <Checkbox name='additional_kind' value={forms.additional_kind} onChange={(v) => this.onChanges(v) } /> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='mb10 fxm' style={{width: '30%'}}>\r\n\t\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>是否复查：</span> <Checkbox name='is_review' value={forms.is_review} onChange={(v) => this.onChanges(v) } /> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t!this.isAudit ? ( \r\n\t\t\t\t\t\t\t\t\t\t<div className='mb10 fxm' style={{width: '30%'}} label='本地操作项，选择批量，显示开始、结束条码号'>\r\n\t\t\t\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>是否批量：</span> <Checkbox name='is_batch' value={forms.is_batch} onChange={(v) => this.onChanges(v) } /> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : ''\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<div className='mb10 fxm' style={{width: '30%'}} label='本地操作项，保存后，清空条码号，光标移动到条码号框内'>\r\n\t\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>是否快捷录入：</span> <Checkbox name='quick_entry_flag' value={forms.quick_entry_flag} onChange={(v) => this.onChanges(v) } /> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='mb10 fxm' style={{width: '30%'}} label='本地操作项'>\r\n\t\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>是否记忆项目：</span> <Checkbox name='memory_project_flag' value={forms.memory_project_flag} onChange={(v) => this.onChanges(v) } /> \r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\tforms.is_batch ? (<div className='fxw'> \r\n\t\t\t\t\t\t\t\t\t<div className='ex mb10 fxm' >\r\n\t\t\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>开始条码号：</span> <Input className='ex' name='start_code' value={forms.start_code} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='ex mb10 fxm ml10' >\r\n\t\t\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>结束条码号：</span> <Input className='ex' name='end_code' value={forms.end_code} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Button label='生成' ghost className='ml10' onClick={()=> this.generateSpec() }/> \r\n\t\t\t\t\t\t\t\t</div>)  : \r\n\t\t\t\t\t\t\t\t(<div className='fxm mb10'>\r\n\t\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>条码号：</span> <Input ref={ref => this.SpeceRef = ref} className='ex' name='spec_code' value={forms.spec_code} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t\t\t\t<Button label='查询' ghost className='ml10' onClick={()=> this.queryspecimen() }/> \r\n\t\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t<div className='fxm mb10'>\r\n\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>选择项目：</span> \r\n\t\t\t\t\t\t\t\t<Select className='ex' name='project_id' data={projectOption} dropdownRender={(menu) => this.projectSelectRender(menu)} p='请输入项目名称关键字搜索' nameStr='name' idStr='value' value={forms.project_id} onChanged={(v) => this.onChanges(v)} />\r\n\t\t\t\t\t\t\t</div>   \r\n\t\t\t\t\t\t\t<div className='fxm mb10 full_w'>\r\n\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>备注：</span> <Input mode='textarea' name='remark' value={forms.remark} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t<div className='fxm full_w'>\r\n\t\t\t\t\t\t\t\t<span style={{width: '96px'}}>医院特殊要求：</span> <Input mode='textarea' disabled name='project_special_request' value={forms.project_special_request} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='ex' style={{border: '1px solid #d9d9d9', borderRadius: '4px', height: '368px', overflow: 'auto' }}>\r\n\t\t\t\t\t\t\t<Image src={forms.image} className='bor1' />\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tforms.is_batch ? (<React.Fragment>\r\n\t\t\t\t\t\t\t<Title title='批量条码' style={{border: 'none',height: '24px'}}></Title>\r\n\t\t\t\t\t\t\t<div style={{height: '250px'}} label='批量录入时显示'>\r\n\t\t\t\t\t\t\t\t<BatchCode onRef={ref => this.BatchCodeRef = ref} changeBatchCode={(v) => {this.setState({speceDataList: v})}} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</React.Fragment>) : ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Title title='项目明细' style={{border: 'none',lineHeight: '24px'}}></Title>\r\n\t\t\t\t\t<div style={{height: '250px'}}>\r\n\t\t\t\t\t\t<ProjectDetails onRef={ref => this.ProjectDetailsRef = ref} isBatch={forms.is_batch} speceDataList={speceDataList} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\project-list\\tp\\invalid-project.js",["1774"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button')) \r\n// ===================================================================== private component \r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[], \r\n        selectedKeys:[],\r\n        params: {}\r\n\t}\r\n\taudit_statusSelect = [\r\n\t\t{ name: \"已作废\", value: \"-3\" }\r\n\t]\r\n\tforms = []\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n        this.props.onRef(this)  \r\n    }   \r\n\tfetch = param => $fn.fetch.call(this,'specimen-kind/index', param)\r\n\tcols = [\r\n\t\t{ title: '项目代码',\t\tfield: 'kind_code',\t\t\twidth:120 },\r\n        { title: '项目名称',\t\tfield: 'kind_name',\t\t\twidth:320 }, \r\n        { title: '项目状态',\t\tfield: 'enabled',\t\t\twidth:120,  render: ({rows}) => {\r\n            const select = [\r\n                { label: \"已审核\", value: \"1\" },\r\n                { label: \"待审核\", value: \"0\" },\r\n                { label: \"待保存\", value: \"-2\" }\r\n            ]\r\n\t\t\treturn window.$fn.filterSelect(select, rows.enabled, 'label', 'value') \r\n        }}, \r\n        { title: '操作',\t\t    field: 'enabled', \t\t    width:60,  render: ({rows}) => {\r\n            return <Button onClick={() => this.delRows(rows)}  ghost type='primary'>删除</Button>\r\n        }, align: 'tc'}\r\n    ] \r\n    delRows = (param) => { \r\n        coms.interfaceConfirm('specimen-kind/end', '删除', param, () => {\r\n            this.fetch(this.state.params)\r\n            this.props.onchanged()\r\n        })\r\n    }\r\n    changeList = (rows) => {\r\n        const param = {spec_id: rows.uuid, spec_code: rows.spec_code}\r\n        this.setState({params: param})\r\n        this.fetch(param) \r\n    }\r\n\trender(){\r\n\t\tconst { data, pullLoading } = this.state\r\n\t\treturn (\r\n\t\t\t<Table\r\n                className\t\t= 'xplr'\r\n                cols\t\t\t= { this.cols }\r\n                data \t\t\t= { data }\r\n                loading \t\t= { pullLoading }\r\n                onRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n                onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n            /> \r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\project-list\\tp\\project-details.js",["1775"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button')) \r\nconst Select = $async(()=>import('@antd/form/select')) \r\nconst message = import('@antd/message')\r\n// ===================================================================== private component \r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[], \r\n        selectedKeys:[],\r\n        params: {},\r\n        spec_typeOption: [], \r\n        param: {}\r\n\t}\r\n    audit_statusSelect = []\r\n    enabledSelect = [\r\n        { label: \"已审核\", value: \"1\" },\r\n        { label: \"待审核\", value: \"0\" },\r\n        { label: \"待保存\", value: \"-2\" }\r\n    ] \r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n        this.props.onRef(this)  \r\n\t\t$fn.dataSave('dis-item-2000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n            this.setState({spec_typeOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:2000}}).then(data=>{\r\n                this.setState({spec_typeOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-2000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n    }   \r\n\tfetch = param => $fn.fetch.call(this,'specimen-kind/index', param)\r\n\tcols = [ \r\n\t\t{ title: '项目代码',\t\tfield: 'kind_code',\t\t\twidth:120 },\r\n\t\t{ title: '项目名称',\t\tfield: 'kind_name',\t\t\twidth:200 },\r\n\t\t{ title: '项目属性',\t\tfield: 'kind_type_name',\twidth:120 },\r\n\t\t{ title: '项目类别',\t\tfield: 'category_name',\t    width:120 },\r\n\t\t{ title: '子项目',\t\t    field: 'child_kind_name',\twidth:240 },\r\n\t\t{ title: '岗位',\t\t    field: 'project_name',\t\twidth:120 },\r\n\t\t{ title: '项目状态',\t\tfield: 'enabled',\t\t\twidth:120,      render: ({rows}) => {\r\n            return window.$fn.filterSelect(this.enabledSelect, rows.enabled, 'label', 'value') \r\n        } },\r\n        { title: '标本类型',\t\tfield: 'spec_type',\t\t\twidth:160,      render: ({rows, index}) => { \r\n            return <Select name='spec_type' data={this.state.spec_typeOption} p='请选择标本类型' nameStr='name' idStr='value' value={rows.spec_type}  onChanged={(v, data) => this.onChanges(v, data, rows, index)} width={150} />\r\n        } },\r\n        { title: '操作',\t\t    field: 'enabled', \t\t    width:110,  render: ({rows}) => {\r\n            return String(rows.enabled) === '1' ? '' : <Button onClick={() => this.delRows(rows)}  ghost type='primary'>删除</Button> \r\n        }, align: 'tc'} \r\n    ] \r\n\tonChanges = (v, dt, rows, index) => {    \r\n        console.log(v, dt, index)\r\n\t\tconst { data } = this.state \r\n\t\tdata[index][Object.keys(v)[0]] = $fn.hasObject(dt) ? dt.value : ''\r\n        this.setState({data: data})   \r\n        if (Object.keys(v)[0] === 'spec_type') {\r\n            const param = {\r\n                spec_type: dt.value,\r\n                uuid: rows.uuid\r\n            } \r\n            $http.submit(null, 'specimen-kind/savespectype', { param }).then(data => {\r\n                message.then(f => f.default.success('操作成功')) \r\n            })\r\n        }  \r\n\t}\r\n    delRows = (rows) => { \r\n        console.log(this.props)\r\n        const { isBatch, speceDataList } = this.props\r\n        const param = {\r\n            kind_id: rows.uuid,\r\n            spec_id: [rows.spec_id],\r\n            to_spec_ids: isBatch ? speceDataList.map(i => i.uuid) : []\r\n        }\r\n        coms.interfaceConfirm('specimen-kind/del', '删除', param, () => {\r\n            message.then(f => f.default.success('删除成功')) \r\n            this.getPage(this.state.param) \r\n            // let d = this.state.data.filter(item => item.uuid !== param.kind_id);\r\n            // this.setState({data: d})\r\n        }) \r\n    }\r\n    getPage = (param) => { \r\n        this.setState({param: param})\r\n        if (param) {\r\n            this.fetch(param)  \r\n        } else {\r\n            this.setState({data: []})\r\n        }\r\n    } \r\n\trender(){\r\n\t\tconst { data, pullLoading } = this.state\r\n\t\treturn (\r\n\t\t\t<Table\r\n                className\t\t= 'xplr'\r\n                cols\t\t\t= { this.cols }\r\n                data \t\t\t= { data }\r\n                loading \t\t= { pullLoading }\r\n                onRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n                onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n            /> \r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\workbench\\set.js",["1776","1777","1778"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\nconst Box = $async(()=>import('#tp/box/box'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/content/content-aside'))\r\n// ===================================================================== template\r\nconst Image = $async(()=>import('@tp/image'))\r\n// ===================================================================== image\r\n\r\nconst LiComponent = ({ title, context }) => (\r\n\t<li className='mt15 f12 fxm'>\r\n\t\t<div className='r2px mr10' style={{width:'4px',height:'4px',background:'#999'}}></div>\r\n\t\t<span className='g9'>{title}</span>\r\n\t\t<b>{context}</b>\r\n\t</li>\r\n)\r\nconst HeaderComponent = ({ title, context }) => (\r\n\t<div className='fxm mt20'>\r\n\t\t<div className='r5px' style={{width:'10px',height:'10px',background:'#dbeefa'}}></div>\r\n\t\t<div className='r5px bcm' style={{width:'10px',height:'10px'}}></div>\r\n\t\t<h3 className='f14 ml10'>{title}</h3>\r\n\t\t<p className='ml5 f12' style={{color:'red'}}>修改</p>\r\n\t</div>\r\n)\r\nconst MainComponent = ({ title, context }) => (\r\n\t<div className=' bbor1 mt20 ml20 ex' style={{height:'80px'}}>\r\n\t\t<h4 className='rbor1 g9'>{title}</h4>\r\n\t\t<p className='mt20'>{context}</p>\r\n\t</div>\r\n)\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:{}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\t$http.submit(this,'employee/currentuser', { loadingText:'数据加载中...' }).then(data=>{\r\n\t\t\tthis.setState({ data })\r\n\t\t})\r\n\t}\r\n\trender(){\r\n\t\tconst { data } = this.state\r\n\t\treturn (\r\n\t\t\t<Page className='fxj'>\r\n\t\t\t\t<Box className='p30' style={{width:'300px'}}>\r\n\t\t\t\t\t<div className='fxc mt40'>\r\n\t\t\t\t\t\t<Image width={80} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h2 className='f16 tc mt20'>{data.real_name}</h2>\r\n\t\t\t\t\t<ul className='mt20'>\r\n\t\t\t\t\t\t<LiComponent title='部门：'  context={data.dept}/>\r\n\t\t\t\t\t\t<LiComponent title='岗位：'  context={data.pgroup}/>\r\n\t\t\t\t\t\t<LiComponent title='员工编号：'  context={data.empl_name}/>\r\n\t\t\t\t\t\t<LiComponent title='手机号码：'  context={data.phone}/>\r\n\t\t\t\t\t\t<LiComponent title='英文名：'  context={data.en_name}/>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box className='p30 ml5 ex'>\r\n\t\t\t\t\t<HeaderComponent title='个人信息'/>\r\n\t\t\t\t\t<div className='fxm'>\r\n\t\t\t\t\t\t<MainComponent title='员工姓名'  context={data.real_name}/>\r\n\t\t\t\t\t\t<MainComponent title='员工邮箱'  context={data.email}/>\r\n\t\t\t\t\t\t<MainComponent title='员工详情'  context={data.empl_name}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<HeaderComponent title='登录密码'/>\r\n\t\t\t\t\t<MainComponent title='登录密码'  context='******* ' />\r\n\t\t\t\t\t<HeaderComponent title='个人签名'/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\common\\store\\storage.js",["1779"],"/* ====================================== 本地存储  ====================================== */\r\nexport default ( Storage ) => {\r\n\tconst isObject = d => {\r\n\t\tconst str = {}.toString.call(d)\r\n\t\treturn str === '[object Object]' || str === '[object Array]'\r\n\t} \r\n\treturn {\r\n\t\t// 存储值\r\n\t\tset(key,value){\r\n\t\t\tif(isObject(value)){\r\n\t\t\t\tvalue = JSON.stringify(value)\r\n\t\t\t}\r\n\t\t\tStorage.setItem(key,value);\r\n\t\t},\r\n\t\t// 获取值\r\n\t\tget(key){\r\n\t\t\tconst value = Storage.getItem(key)\r\n\t\t\tif(value === null || value === undefined || value === ''){\r\n\t\t\t\treturn false\r\n\t\t\t}else{\r\n\t\t\t\ttry{\r\n\t\t\t\t\treturn JSON.parse(value)\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\treturn value\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 移出值\r\n\t\tremove(key){\r\n\t\t\tif( typeof key === 'string'){\r\n\t\t\t\tif(key.indexOf(',') > -1){\r\n\t\t\t\t\tconst keys = key.split(',')\r\n\t\t\t\t\tkeys.forEach( v => {\r\n\t\t\t\t\t\tStorage.removeItem(v)\r\n\t\t\t\t\t})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tStorage.removeItem(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","F:\\jia-git\\react-norson-lis\\src\\common\\store\\indexdb.js",["1780"],"/**\r\n * indexdb 离线存储 \r\n * \r\n */\r\n// ======================================================================================= 创建表\r\nconst dbName = 'db'\r\nconst dbNameVersion = 1\r\nconst DB = ()=> {\r\n\tlet req = window.indexedDB.open(dbName, dbNameVersion);\r\n\treturn new Promise((resolve, reject) => {\r\n\t\treq.onsuccess = (e:any) => {\r\n\t\t\tlet db = e.target.result;\r\n\t\t\tlet transaction = db.transaction(dbName,'readwrite'); \r\n\t\t\tlet store=transaction.objectStore(dbName);\r\n\t\t\tresolve(store);\r\n\t\t\treq = null;\r\n\t\t}\r\n\t\treq.onerror = (e:any) => {\r\n\t\t\tconsole.log(dbName + '数据库使用失败：' + e.srcElement.error.message);\r\n\t\t\treject(e.message);\r\n\t\t}\r\n\t\treq.onupgradeneeded = (e:any) => {\r\n\t\t\tlet db = e.target.result;\r\n\t\t\tif(!db.objectStoreNames.contains(dbName)){\r\n\t\t\t    db.createObjectStore(dbName);\r\n\t\t\t}\r\n\t\t\tconsole.log(dbName + ' 表创建成功');\r\n\t\t}\r\n    })\r\n}\r\n// ======================================================================================= service\r\nexport default {\r\n\t// ====================================== 保存数据，\r\n\t// 如果不存在则添加，如果存在则覆盖，\r\n\t// 即可添加字符串，也可添加对象\r\n\tset(key, data){\r\n\t\tDB().then( (store:any) => {\r\n\t\t\tlet req = store.get(key);\r\n\t\t\treq.onsuccess = (e) => {\r\n\t\t\t\tstore.put(data, key);\r\n\t\t\t}\r\n\t\t\treq.onerror = (e) => {\r\n\t\t\t\tconsole.log('存储数据到 indexdb 失败');\r\n\t\t\t}\r\n\t\t})\r\n\t},\r\n\t// ====================================== 获取数据\r\n\tget(key){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tDB().then( store => {\r\n\t\t\t\tlet req = store.get(key);\r\n\t\t\t\treq.onsuccess = (e) => {\r\n\t\t\t\t\tresolve(e.target.result);\r\n\t\t\t\t}\r\n\t\t\t\treq.onerror = (e) => {\r\n\t\t\t\t\tconsole.log('获取 indexdb 数据失败');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\t},\r\n\t// ====================================== 删除数据\r\n\tremove(key){\r\n\t\tDB().then( store => {\r\n\t\t\tlet req = store.delete(key)\r\n\t\t\treq.onsuccess = (e) => {\r\n\t\t\t\tconsole.log('删除 indexdb 数据成功');\r\n\t\t\t}\r\n\t\t\treq.onerror = (e) => {\r\n\t\t\t\tconsole.log('删除 indexdb 数据失败');\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\tclear(){\r\n\t\twindow.indexedDB.deleteDatabase(dbName)\r\n\t}\r\n}\r\n","F:\\jia-git\\react-norson-lis\\src\\views\\workbench\\main.js",["1781"],"import React from 'react'\r\n// ===================================================================== private template\r\nconst Menu = window.$async(()=>import('#frame/menu'))\r\n// ===================================================================== 目录\r\nlet data = [\r\n\t{ title: '首页', path:'workbench/index', component:'workbench/index', root: 'workbench', to: 'workbench/index'},\r\n\t{ title: '消息', path:'workbench/info', component:'workbench/info' },\r\n\t{ title: '设置', path:'workbench/set', component:'workbench/set' },\r\n]\r\n// ===================================================================== component\r\nexport default () => <Menu data={data} />","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-shelf-manage.js",["1782"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label:'容器名称',\t\t\tname:'sf_name',\t\t\trequired:true },\r\n\t\t\t{ label:'拼音简称', \t\tname:'pinyin_short' }, \r\n\t\t\t{ label:'容器类型', \t\tname:'shelf_type',\t\ttype: 'select', data: [], required:true },\r\n\t\t\t{ label:'所属分拣组', \t\tname:'pick_id',\t\t\ttype: 'select', data: [], required:true, nameStr:'gp_name', idStr:'uuid' }, \r\n\t\t\t{ label:'容量', \t\t\tname:'total_capacity',\trequired:true },\r\n\t\t\t{ label:'备注', \t\t\tname:'remark',\t\t\ttype: 'textarea', full:true, width:'100%' }\r\n\t\t]\r\n\t}\r\n\t\r\n\tforms = [ \r\n\t\t{ label:'状态',\t\t\tname:'enabled',\t\t\ttype:'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'标本架名称',\tname:'sf_name',\t\t\ttype:'input' },  \r\n\t\t{ label:'所属分拣组',\tname:'gp_name',\t\t\ttype:'input' },  \r\n\t\t{ label:'科室',\t\t\tname:'project_name',\ttype:'input' },  \r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\t$fn.dataSave('dis-item-46100-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[0].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(this,'dis-item/item', { param: {dis_code: 46100}}).then(data=>{\r\n\t\t\t\tthis.forms[0].data = data\r\n\t\t\t\t$fn.dataSave('dis-item-46100-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.dataSave('dis-item-20-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n\t\t\t  const { submit } = this.state\r\n\t\t\t  submit[2].data = local\r\n\t\t\t  this.setState({submit})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(this,'dis-item/item', { param: {dis_code: 20}}).then(data=>{\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t  \tsubmit[2].data = data\r\n\t\t\t  \tthis.setState({submit})\r\n\t\t\t\t$fn.dataSave('dis-item-20-data', data)\r\n\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t$fn.dataSave('pick-group-select-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t  \tsubmit[3].data = local\r\n\t\t\t  \tthis.setState({submit})\r\n\t\t\t}else{\r\n\t\t\t  $http.pull(null,'pick-group/select', {dataName:null}).then(data=>{ \r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[3].data = data.items\r\n\t\t\t\tthis.setState({submit})\r\n\t\t\t\t$fn.dataSave('pick-group-select-data', data.items)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t}) \r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'shelf/index', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '标本架编号',\t\tfield: 'sf_number',\t\t\twidth:120 },  \r\n\t\t{ title: '标本架名称',\t\tfield: 'sf_name',\t\t\twidth:120 },  \r\n\t\t{ title: '标本架代码',\t\tfield: 'sf_code',\t\t\twidth:120 },  \r\n\t\t{ title: '容器类型',\t\tfield: 'shelf_type_name',\twidth:120 },  \r\n\t\t{ title: '所属分拣组',\t\tfield: 'gp_name',\t\t\twidth:120 },  \r\n\t\t{ title: '容量',\t\t\tfield: 'total_capacity',\twidth:120 },  \r\n\t\t{ title: '科室',\t\t\tfield: 'project_name',\t\twidth:120 },  \r\n\t\t{ title: '备注',\t\t\tfield: 'remark',\t\t\twidth:120 },  \r\n\t\t{ title: '状态',\t\t\tfield: 'enabled_name',\t\twidth:120 },  \r\n\t\t{ title: '操作', align:'tc', width:100, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={()=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tthis.rows = rows\r\n\t\t\t\t\t\tthis.isEdit = true\r\n\t\t\t\t\t\t$http.submit(this, 'shelf/info', { param: {uuid: rows.uuid}} ).then(data => {\r\n\t\t\t\t\t\t\tsubmit[0].value = data['sf_name']\r\n\t\t\t\t\t\t\tsubmit[1].value = data['pinyin_short']\r\n\t\t\t\t\t\t\tsubmit[2].value = data['shelf_type'] \r\n\t\t\t\t\t\t\tsubmit[3].value = data['pick_id'] \r\n\t\t\t\t\t\t\tsubmit[4].value = data['total_capacity'] \r\n\t\t\t\t\t\t\tsubmit[5].value = data['remark'] \r\n\t\t\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t\t\t}) \r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'新增 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t}},\r\n\t\t\t{ label:'启用', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('shelf/on', '启用', param, () => { this.fetch(this.model) })\r\n\t\t\t}},\r\n\t\t\t{ label:'禁用', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('shelf/del', '禁用', param, () => { this.fetch(this.model) })\r\n\t\t\t}},\r\n\t\t\t{ label:'退回', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('shelf/off', '退回', param, () => { this.fetch(this.model) })\r\n\t\t\t}},\r\n\t\t\t{ label:'领用', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {shelf_id: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('shelf/use', '领用', param, () => { this.fetch(this.model) })\r\n\t\t\t}},\r\n\t\t\t{ label:'批量打印', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\t// const param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\t// coms.interfaceConfirm('pick-group/del', '删除', param, () => { this.fetch(this.model) })\r\n\t\t\t}}\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='标本架管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tlet param = { ...v}\r\n\t\t\t\t\t\t\tlet api ='shelf/add' \r\n\t\t\t\t\t\t\tlet info = '添加'  \r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tparam = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\tapi = 'shelf/edit' \r\n\t\t\t\t\t\t\t\tinfo = '编辑'\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t$http.submit(null, api, { param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success(`${info}成功`))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t\t\t\t}) \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\workbench\\info.js",["1783","1784","1785","1786"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst Tabs = $async(()=>import('#tp/tabs'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\ttaps:[],\r\n\t\tselectedKeys:[]\r\n\t}\r\n\t\r\n\tforms = [\r\n\t\t{ label:'关键字',\tname:'title',\ttype:'input' },\r\n\t\t{ label: '消息重要级别',\tname: '',\t\ttype: 'select',\t\tdata: [],\tnameStr:'title'},\r\n\t\t{ label: '状态',\tname: '',\t\ttype: 'select',\t\tdata: [],\tnameStr:'title'},\r\n\t\t{ label: '消息类型',\tname: '',\t\ttype: 'select',\t\tdata: [],\tnameStr:'title'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('device').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[0].data = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'device/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tdata.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n\t\t\t\t\tthis.forms[0].data = data\r\n\t\t\t\t\t$fn.dataSave('device', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\ttabs = [\r\n\t\t{ title:'结果录入', status:45001 },\r\n\t\t{ title:'已提交', status:45002 },\r\n\t\t{ title:'已审核', status:45003 }\r\n\t]\r\n\t// paging\r\n\t// fetch = param => $http.paging(this,'device/index',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\tfetch = param => $fn.fetch.call(this,'msg-system/index', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '重要级别', \t\tfield: 'level', \twidth:145, \talign:'tc' },\r\n\t\t{ title: '公告名称', \tfield: 'uuid', \t\twidth:150, \talign:'tc' },\r\n\t\t{ title: '发布者', \tfield: 'id', \t\twidth:130, \talign:'tc' },\r\n\t\t{ title: '日期', \tfield: 'level', \t\t\twidth:100, \talign:'tc' },\r\n\t\t\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t\r\n\t\t\t\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tdata={ this.tabs }\r\n\t\t\t\t\tonTabs = { (data, index) => {\r\n\t\t\t\t\t\tif(['1','2','3'].includes(index)){\r\n\t\t\t\t\t\t\tthis.setState({ forms: this.form1})\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.setState({ forms: this.form0})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange={(v, press, { name, data }) => {\r\n\t\t\t\t\t\t$fn.onChange.call(this, v, press, () => {\r\n\t\t\t\t\t\t\tif (name && name === 'device_id') {\r\n\t\t\t\t\t\t\t\treturn { device_name: data.device_name }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tonAdd\t\t= { ()=> $fn.push(this,'/laboratory/laboratory-manage/equipment-list/add') }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/*\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\t\tselectedKeys\t= {[  ]}\r\n\t\t\t\t\t\tdisabledKeys\t= {[ ]}\r\n\t\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t\tsort\r\n\t\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t*/}\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\workbench\\index.js",["1787","1788","1789"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport { SearchOutlined } from '@ant-design/icons'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/content/content-aside'))\r\nconst Box = $async(()=>import('#tp/box/box'))\r\nconst BoxScroll = $async(()=>import('#tp/box/box-scroll'))\r\nconst Image = $async(()=>import('@tp/image'))\r\nconst DatePicker = $async(()=>import('@antd/form/datePicker'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== template\r\nconst More = ({onClick}) => <span className='c0 cp hover-tu' onClick={onClick}>查看更多</span>\r\n\r\nconst Tot = ({ title, name }) => (\r\n\t<div>\r\n\t\t<p className='f24 tc'>{name}</p>\r\n\t\t<div className='mt10 fxm'><div className='r5px mr5' style={{width:'10px',height:'10px',background:'#dbeefa'}}></div>{title}</div>\r\n\t</div>\r\n)\r\nconst List = ({title,data}) => (\r\n\t<div className='fl ml35 mt10 tc fxmc' style={{width:'80px',height:'80px'}}>\r\n\t\t<dl>\r\n\t\t\t<dt className='f18'>{data}</dt>\r\n\t\t\t<dd className='mt5  g9 f12'>{title}</dd>\r\n\t\t</dl>\r\n\t</div>\r\n)\r\nconst News = ({title,data}) =>(\r\n\t<ul  className='bcf plr10'>\r\n\t\t<li className='fxm bbor1 ptb10' style={{width:'300px'}}>\r\n\t\t\t<div className='bor1 r6px plr5' style={{background:'#ddf7f6',color:'#81d8cc'}}>通知</div>\r\n\t\t\t<a className='mlr10' style={{textOverflow:'ellipsis',whiteSpace:'nowrap',width:'200px',overflow:'hidden'}}>工专路一号店路路路工专路一号店号一号店</a>\r\n\t\t\t<p>11/5</p>\r\n\t\t</li>\r\n\t</ul>\r\n)\r\nconst Notice = ({title,data}) =>(\r\n\t<div className='bcf plr10 pb10'>\r\n\t\t<div className='fxm pt10'>\r\n\t\t\t<p style={{width:'10px',height:'10px'}} className='r5px bcm'></p>\r\n\t\t\t<p className='ml10'>1235459</p>\r\n\t\t</div>\r\n\t\t<p className='g9 ml20'>系统公告工商所地上</p>\r\n\t</div>\r\n)\r\nconst Head = ({title,data}) =>(\r\n\t<ul  className='bcf plr10'>\r\n\t\t<li className='fxmj bbor1 ptb10'>\r\n\t\t\t<a>部门负责人</a>\r\n\t\t\t<p>37</p>\r\n\t\t</li>\r\n\t</ul>\r\n)\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tdataa:[],\r\n\t}\r\n\t\r\n\tforms = [\r\n\t\t{ label:'操作时间',\tname:'date', type:'date-range',\tnames:['buy_date_start_date','buy_date_end_date'], value:['2020-12-10 12:12:50', '2020-12-11'] },\r\n\t]\r\n\t\r\n\tcomponentDidMount(){\r\n\t\t$http.submit(this,'index/statistics', { loadingText:'数据加载中...' }).then(data=>{\r\n\t\t\tthis.setState({ data })\r\n\t\t})\r\n\t\t$http.submit(this,'index/total', { loadingText:'数据加载中...' }).then(data=>{\r\n\t\t\tthis.setState({dataa:data})\r\n\t\t})\r\n\t}\r\n\tonDatePickerChange = v => {\r\n\t\t\r\n\t}\r\n\trender(){\r\n\t\tconst {data,dataa}= this.state\r\n\t\treturn (\r\n\t\t\t<Page className='fx'>\r\n\t\t\t\t<div className='ex rel'>\r\n\t\t\t\t\t<div className='abs_full oys scrollbar'>\r\n\t\t\t\t\t\t{/*  */}\r\n\t\t\t\t\t\t<Box className='fxm p10'>\r\n\t\t\t\t\t\t\t<Image wrap round size={40} className='bor1'/>\r\n\t\t\t\t\t\t\t<hgroup className='ml10 ex'>\r\n\t\t\t\t\t\t\t\t<h3 className='f16 b'>您好！测试，祝您开心每一天！</h3>\r\n\t\t\t\t\t\t\t\t<h6><span className='c0'>职位：</span><span className='g9'>! 公司-部门公司</span></h6>\r\n\t\t\t\t\t\t\t</hgroup>\r\n\t\t\t\t\t\t\t<dl className='fx'>\r\n\t\t\t\t\t\t\t\t<dd className='mr15'><span className='g9'>上次访问时间:</span> 2020-10-12 14:41:28</dd>\r\n\t\t\t\t\t\t\t\t<dd><span className='g9'>本次登录时间:</span> 2020-10-12 14:41:28</dd>\r\n\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t{/* 总计 */}\r\n\t\t\t\t\t\t<BoxScroll className='mt5' title='总计'>\r\n\t\t\t\t\t\t</BoxScroll>\r\n\t\t\t\t\t\t<Box className='fxmj p30'>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdata.map((v,i)=> <Tot key={i} title={v.title} name={v.data} />)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* 按时间统计 */}\r\n\t\t\t\t\t\t<BoxScroll className='mt5' title='按时间统计' titleChildren={\r\n\t\t\t\t\t\t\t<div className='fxm'>\r\n\t\t\t\t\t\t\t\t<div className='g6 mr10'>操作时间</div>\r\n\t\t\t\t\t\t\t\t<DatePicker width={350} range onChange={this.onDatePickerChange} showTime bordered={false}/>\r\n\t\t\t\t\t\t\t\t<Button label='查询' icon={<SearchOutlined />} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t</BoxScroll>\r\n\t\t\t\t\t\t<Box className='clearfix p30'>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdataa.map((v,i)=> <List key={i} title={v.title} data={v.data} />)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<BoxScroll className='mt5' title='图形展示'>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</BoxScroll>\r\n\t\t\t\t\t\t<BoxScroll className='mt5' title='数据展示'>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</BoxScroll>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='ml5' style={{width:300}}>\r\n\t\t\t\t\t<BoxScroll title='消息通知' titleChildren={<More onClick={(()=>$fn.push(this,'/laboratory/workbench/info'))}/>}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</BoxScroll>\r\n\t\t\t\t\t<News className='ml5' style={{width:300}} />\r\n\t\t\t\t\t<News className='ml5' style={{width:300}} />\r\n\t\t\t\t\t<News className='ml5' style={{width:300}} />\r\n\t\t\t\t\t<News className='ml5' style={{width:300}} />\r\n\t\t\t\t\t<BoxScroll className='mt5' title='系统公告' titleChildren={<More onClick={(()=>$fn.push(this,'/laboratory/workbench/info'))}/>}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</BoxScroll>\r\n\t\t\t\t\t<Notice />\r\n\t\t\t\t\t<Notice />\r\n\t\t\t\t\t<Notice />\r\n\t\t\t\t\t<BoxScroll className='mt5' title='部门负责人'>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</BoxScroll>\r\n\t\t\t\t\t<Head />\r\n\t\t\t\t\t<Head />\r\n\t\t\t\t\t<Head />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\systemManagement\\router.js",["1790"],"/* ====================================== 模块子路由配置  ====================================== */\r\nimport React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n// ===================================================================== 异步加载\r\nimport Import from '@com/bundle'\r\n// ===================================================================== 路由配置\r\nimport Workbench from '@views/workbench/main'\r\nimport systemManage from '@views/systemManagement/system-manage'\r\n// ===================================================================== 同步路由\r\nexport default () => (\r\n\t<Switch>\r\n\t\t<Route \tpath='/systemManagement/workbench' \t\t\tcomponent={ Workbench }  />\r\n\t\t<Route \tpath='/systemManagement/system-manage' \t\tcomponent={ systemManage }  />\r\n\t\t{/* 重定向 */}\r\n\t\t<Route path='/systemManagement' children={<Redirect to='/systemManagement/workbench/index' />}  />\r\n\t\t{/* 404 */}\r\n\t\t<Route component={ Import('404') } />\r\n\t</Switch>\r\n)","F:\\jia-git\\react-norson-lis\\src\\views\\systemManagement\\system-manage\\index.js",["1791"],"import React from 'react'\r\n// ===================================================================== private template\r\n// import Menu from '#frame/menu'\r\nconst Menu = window.$async(()=>import('#frame/menu'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{\r\n\t\ttitle: '流程管理',\r\n\t\troot: 'system-manage',\r\n\t\tto: 'system-manage/process-list',\r\n\t\tchildren: [\r\n\t\t\t{ title: '流程列表',\t\tpath:'system-manage/process-list',\t\t\tcomponent:'administrators/system-settings/process/process-list'},\r\n\t\t\t{ title: '节点列表',\t\tpath:'system-manage/node-list',\t\t\t\tcomponent:'administrators/system-settings/process/node-list'},\r\n\t\t\t{\r\n\t\t\t\ttitle: '流程授权列表',\r\n\t\t\t\tpath:'system-manage/process-authorization',\r\n\t\t\t\tcomponent:'administrators/system-settings/process/process-authorization',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{ title: '关联权限库', path: 'associated', component:'administrators/system-settings/authority/associated', cache:true }\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: '组织管理',\r\n\t\tchildren: [\r\n\t\t\t{ title: '公司管理',\t\tpath:'system-manage/company',\t\t\tcomponent:'administrators/system-settings/organization/company'},\r\n\t\t\t{ title: '部门管理',\t\tpath:'system-manage/department',\t\tcomponent:'administrators/system-settings/organization/department'},\r\n\t\t\t{ title: '科室管理',\t\tpath:'system-manage/office',\t\t\tcomponent:'administrators/system-settings/organization/office'},\r\n\t\t\t{ title: '岗位管理',\t\tpath:'system-manage/post',\t\t\tcomponent:'administrators/system-settings/organization/post'},\r\n\t\t\t{\r\n\t\t\t\ttitle: '员工管理',\r\n\t\t\t\tpath:'system-manage/staff',\r\n\t\t\t\tcomponent:'administrators/system-settings/organization/staff',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{ title: '关联权限库', path: 'associated', component:'administrators/system-settings/authority/associated', cache:true }\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: '权限管理',\r\n\t\tchildren: [\r\n\t\t\t{ title: '权限库',\t\t\tpath:'system-manage/permission',\tcomponent:'administrators/system-settings/authority/permission'},\r\n\t\t\t{\r\n\t\t\t\ttitle: '分组列表',\r\n\t\t\t\tpath:'system-manage/group',\r\n\t\t\t\tcomponent:'administrators/system-settings/authority/group',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{ title: '关联权限库', path: 'associated', component:'administrators/system-settings/authority/associated', cache:true }\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: '职位列表',\r\n\t\t\t\tpath:'system-manage/position',\r\n\t\t\t\tcomponent:'administrators/system-settings/authority/position',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{ title: '关联权限库', path: 'associated', component:'administrators/system-settings/authority/associated', cache:true }\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: '角色列表',\r\n\t\t\t\tpath:'system-manage/role',\r\n\t\t\t\tcomponent:'administrators/system-settings/authority/role',\r\n\t\t\t\tchild: [\r\n\t\t\t\t\t{ title: '关联权限库', path: 'associated', component:'administrators/system-settings/authority/associated', cache:true }\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{ title: '菜单列表',\t\tpath:'system-manage/menu',\t\t\tcomponent:'administrators/system-settings/authority/menu'},\r\n\t\t\t{ title: '系统配置',\t\tpath:'system-manage/system-config',\tcomponent:'administrators/system-settings/authority/system-config'},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: '字典维护',\r\n\t\tchildren: [\r\n\t\t\t{ title: '字典分类',\t\tpath:'system-manage/dictionary-classify',\t\t\tcomponent:'administrators/system-settings/dictionary/dictionary-classify'},\r\n\t\t\t{ title: '数据字典',\t\tpath:'system-manage/dictionary-data',\t\t\t\tcomponent:'administrators/system-settings/dictionary/dictionary-data'},\r\n\t\t]\r\n\t},\r\n\t{ \r\n\t\ttitle: '消息列表',\r\n\t\tchildren: [\r\n\t\t\t{ title: '系统公告',\tpath: 'system-manage/system-notice',\t  \r\n\t\t\t\tcomponent:'systemManagement/system-manage/MessageList/system-notice',  },\r\n\t\t]\r\n\t},\r\n]\r\n// ===================================================================== component\r\nexport default () => <Menu data={data} />","F:\\jia-git\\react-norson-lis\\src\\views\\systemManagement\\main.js",["1792"],"import React from 'react'\r\n// ===================================================================== private template\r\nimport Router from './router'\r\nconst Frame = window.$async(()=>import('#frame/frame'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{ title: '工作台', path:'workbench'},\r\n\t{ title: '系统管理', path:'system-manage/process-list'},\r\n]\r\n\r\n// ===================================================================== component\r\nexport default () => <Frame title='系统管理' data={data} Router={Router} />","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\report-termination-record.js",["1793"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n\t\r\n\tforms = [\r\n\t\t{ label:'标本条码',\t    name:'spec_code',\t\ttype:'input' }, \r\n        { label:'终止时间',\t\tname:'date',\t\t\ttype:'date-range', names:['start_date', 'end_date'] } \r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'sp-info-modify/abortList', param)\r\n\tcols = [\r\n        { type: 'checkbox' },\r\n\t\t{ title: '标本条码',\t\tfield: 'spec_code',\t\t\twidth:130 },\r\n\t\t{ title: '姓名',\t\t    field: 'patient_name',\t\twidth:150 },\r\n\t\t{ title: '医院',\t\t\tfield: 'hosp_name',\t        width:220 },\r\n\t\t{ title: '终止时间',\t\tfield: 'created_at',\t\twidth:160 } \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n            { label:'批准报告单', disabled: !$fn.hasArray(this.state.selectedKeys), onClick:()=> {\r\n                const param = {uuid: this.state.selectedKeys.map(i => i.uuid)} \r\n \t\t\t\tcoms.interfaceConfirm('sp-info-modify/approve', '批准报告单', param, () => { this.fetch(this.model) })\r\n            } },\r\n            { label:'预览并批准报告单', disabled: !$fn.hasArray(this.state.selectedKeys), onClick:()=> {} } \r\n        ]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='报告单终止记录' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\statistics\\index.js",["1794","1795"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react' \r\n// ===================================================================== antd\r\nimport { Tabs } from 'antd' \r\nconst { TabPane } = Tabs\r\n// ===================================================================== global declare\r\nconst { $async } = window\r\n// ===================================================================== private component\r\nconst AddsubtractTab = $async(()=>import('@views/service/service-page/statistics/tp/addsubtract-tab'))\r\nconst HospitalTab = $async(()=>import('@views/service/service-page/statistics/tp/hospital-tab'))\r\nconst TestItemTab = $async(()=>import('@views/service/service-page/statistics/tp/testitem-tab'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[], \r\n\t\trows: {},\r\n\t\tdefaultActiveKey: 'addsubtractRef'\r\n\t}  \r\n\tmodel = {}\r\n\tcomponentDidMount(){   \r\n\t}  \r\n\tonChange = (v) => { \r\n\t\tthis.setState({defaultActiveKey: v}) \r\n\t}  \r\n\trender(){  \r\n\t\tconst { defaultActiveKey, rows } = this.state\r\n\t\treturn ( \r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Tabs defaultActiveKey={defaultActiveKey} onChange={e => this.onChange(e)} className='h tab-custom'>\r\n\t\t\t\t\t<TabPane tab=\"加减做项目\" key=\"addsubtractRef\"> \r\n\t\t\t\t\t\t<AddsubtractTab onRef={ref => this.addsubtractRef = ref} />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"医院\" key=\"hospRef\">\r\n\t\t\t\t\t\t<HospitalTab onRef={ref => this.hospRef = ref} />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"检测项\" key=\"testItemRef\">\r\n\t\t\t\t\t\t<TestItemTab onRef={ref => this.testItemRef = ref} />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</Tabs>  \r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\infochange.js",["1796"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $fn, $async, $http } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst InfochangeForm = $async(()=>import('@views/administrators/specimen-manage/tp/infochange-form'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        infos: {},\r\n\t\tsubmit: [\r\n\t\t\t{ label:'异常原因类型', \tname:'abnormal_type',\ttype: 'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t\t{ label:'原因', \t\t\tname:'reason',\t\t\ttype: 'textarea', full:true, width:'100%'}\r\n\t\t]\r\n    } \r\n    isEdit = false\r\n    statusOptions = [\r\n        { label: \"待处理\", value: \"0\" },\r\n        { label: \"已处理\", value: \"1\" },\r\n        { label: \"已完成\", value: \"2\" }\r\n    ]\r\n\ttypeOptions = [\r\n        { label: \"修改病人资料\", value: \"1\" },\r\n        { label: \"修改医院信息\", value: \"2\" },\r\n        { label: \"其他类型\", value: \"3\" }\r\n      ]\r\n    optypeSelect = [\r\n        { label: '加做', value: '1' },\r\n        { label: '减做', value: '2' }\r\n    ]\r\n\tforms = [\r\n\t\t{ label:'标本条码',\t    name:'spec_code',\t\ttype:'input' }, \r\n        { label:'状态',\t\t    name:'status',\t\t    type:'select', data:this.statusOptions, nameStr:'label', idStr:'value' },\r\n        { label:'类型',\t\t    name:'type',\t\t    type:'select', data:this.typeOptions, nameStr:'label', idStr:'value' },\r\n        { label:'创建时间',\t\tname:'date',\t\t\ttype:'date-range', names:['start_date', 'end_date'] },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        // 异常原因类型\r\n        $fn.getDisItem({\r\n            code: 62050,\r\n            callback: (data) => {\r\n                const { submit } = this.state\r\n                submit[0].data = data\r\n                this.setState({submit})\r\n            }\r\n        })\r\n\t\tthis.fetch()\r\n\t} \r\n    ImgsDom (imgs) { \r\n        return (\r\n            $fn.hasArray(imgs) && <Button label='查看图片' ghost className='mlr5' onClick={()=> {} } /> \r\n        )\r\n    }\r\n    updateData (row) {\r\n        if (row.type === \"1\" && row.status === \"0\") {\r\n            return <Button label='修改资料' ghost className='mlr5' onClick={()=> {}} />\r\n        } else {\r\n            return ''\r\n        }\r\n    } \r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'sp-info-modify/index', param)\r\n\tcols = [\r\n        { type: \"checkbox\" }, \r\n        { title: '条码号',\t\t    field: 'spec_code',\t\t\twidth:120 },\r\n        { title: '类型',\t\t    field: 'type',\t\t\t    width:100, render: ({rows}) => {\r\n            return window.$fn.filterSelect(this.typeOptions, rows.type, 'label', 'value') \r\n        } },\r\n        { title: '姓名',\t\t    field: 'patient_name',\t\twidth:80 },\r\n        { title: '医院',\t\t    field: 'hosp_name',\t\t\twidth:150 },\r\n        { title: '内容',\t\t    field: 'content',\t\t\twidth:200 },\r\n        { title: '创建时间',\t\tfield: 'created_at',\t\twidth:150 },\r\n        { title: '状态',\t\t    field: 'status',\t\t\twidth:80, render: ({rows}) => {\r\n            return window.$fn.filterSelect(this.statusOptions, rows.status, 'label', 'value') \r\n        } }, \r\n        { title: '操作',\t        width:230, render: ({rows}) => {\r\n            let d = ''\r\n            switch (rows.status) {\r\n                case \"0\":\r\n                    d = <React.Fragment>\r\n                        <Button label='编辑' ghost className='mlr5' onClick={()=> {\r\n                            this.refs.modal.open() \r\n                            this.isEdit = true\r\n                            $http.submit(null, 'sp-info-modify/info', { param: {uuid: rows.uuid}} ).then(data => { \r\n                                this.setState({infos: data})\r\n                            }) \r\n                        } } /> \r\n                        <Button label='审核' ghost className='mlr5' onClick={()=> { \r\n                            const param = {uuid: rows.uuid}\r\n                            coms.interfaceConfirm('sp-info-modify/audit', '审核', param, () => { this.fetch(this.model) })\r\n                        } } /> \r\n                        {this.ImgsDom(rows.imgs)}\r\n                        {this.updateData(rows)}\r\n                    </React.Fragment>\r\n                    break;\r\n                case \"1\":\r\n                    d = <React.Fragment>\r\n                        <Button label='完成' ghost className='mlr5' onClick={()=> {\r\n                            const param = {uuid: rows.uuid}\r\n                            coms.interfaceConfirm('sp-info-modify/complete', '完成', param, () => { this.fetch(this.model) })\r\n                        } } /> \r\n                        <Button label='审核报告单' ghost className='mlr5' onClick={()=> {\r\n                            const param = { spec_code: rows.spec_code }\r\n                            coms.interfaceConfirm('sp-info-modify/upAudit', '审核报告单', param, () => { this.fetch(this.model) })\r\n                        } } /> \r\n                        {this.ImgsDom(rows.imgs)}\r\n                        {this.updateData(rows)}\r\n                    </React.Fragment>\r\n                    break;\r\n                case \"2\":\r\n                    d = <React.Fragment> \r\n                        <Button label='批准报告单' ghost className='mlr5' onClick={()=> {\r\n                            const param = { spec_code: rows.spec_code }\r\n                            coms.interfaceConfirm('sp-info-modify/assocApprove', '批准报告单', param, () => { this.fetch(this.model) })\r\n                        } } /> \r\n                        {this.ImgsDom(rows.imgs)}\r\n                        {this.updateData(rows)}\r\n                    </React.Fragment>\r\n                    break;\r\n                default:\r\n                    break;\r\n            }   \r\n            return d\r\n        } } \r\n    ]\r\n\tButtonGroup = () => {\r\n\t\treturn [ \r\n            { label:'添加 F2', code:'F2', onClick:()=> {\r\n                this.refs.modal.open()\r\n                this.setState({infos: {}})\r\n                this.isEdit = false \r\n            } },\r\n            { label:'导出', ghost: true, onClick:()=> {\r\n                let param = {\r\n                    spec_code: this.model.spec_code,\r\n                    status: this.model.status,\r\n                    type: this.model.type\r\n                }\r\n                coms.exportExcel({\r\n                    api: 'sp-info-modify/export',\r\n                    param: {param: param}\r\n                }) \r\n            }},\r\n            { label:'报告单终止', ghost: true, disabled: !$fn.hasArray(this.state.selectedKeys), onClick:()=> this.refs.modal1.open()}\r\n        ]\r\n    }\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='信息修改' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} onOk={() => { \r\n                    this.addsubtractRef.submits()\r\n                }}>\r\n                    <InfochangeForm onRef={ref => this.addsubtractRef = ref} rows={this.state.infos} type={this.isEdit} close={() => {\r\n                        this.refs.modal.close()\r\n\t\t                this.fetch(this.model)\r\n                    }} />\r\n\t\t\t\t</Modal>\r\n                <Modal ref='modal1' title='报告单终止' width={648} noFooter>\r\n                    <SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {  \r\n                            let param = {...v, uuid: this.state.selectedKeys.map(i => i.uuid)}\r\n                            $http.submit(null, 'sp-info-modify/abort', { param: param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal1.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t\t\t\t}) \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\customer-feedback.js",["1797"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $fn, $async, $http } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table')) \r\nconst AccessrecordForm = $async(()=>import('@views/administrators/specimen-manage/tp/accessrecord-form'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        infos: {}\r\n    } \r\n    isEdit = false \r\n    typeOptions =[\r\n        { label: \"样本信息和结果沟通\", value: 1 },\r\n        { label: \"样本危急值通知\", value: 2 },\r\n        { label: \"咨询通知\", value: 3 },\r\n        { label: \"其他\", value: 4 }\r\n    ]\r\n    statusOptions = [\r\n        { label: \"待处理\", value: \"0\" },\r\n        { label: \"已处理\", value: \"1\" },\r\n        { label: \"已完成\", value: \"2\" }\r\n    ]\r\n    lookbackOptions = [\r\n        { label: \"是\", value: 1 },\r\n        { label: \"否\", value: 2 },\r\n        { label: \"不需要\", value: 3 }\r\n    ]\r\n\tforms = [\r\n\t\t{ label:'标本条码',\t    name:'spec_code',\t\ttype:'input' }, \r\n        { label:'沟通类型',\t\tname:'type',\t\t    type:'select', data:this.typeOptions, nameStr:'label', idStr:'value' },\r\n        { label:'状态',\t\t    name:'status',\t\t    type:'select', data:this.statusOptions, nameStr:'label', idStr:'value' },\r\n        { label:'时间',\t\t    name:'date',\t\t\ttype:'date-range', names:['start_date', 'end_date'] }\r\n\t]\r\n\tmodel = {type: '', status: ''}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch(this.model)\r\n\t}  \r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'sp-customer-log/index', param)\r\n\tcols = [ \r\n\t\t{ title: '条码号',\t\t    field: 'spec_code',\t\t\twidth:110 },\r\n\t\t{ title: '自然项目',\t\tfield: 'kind_name',\t\t\twidth:160 },\r\n\t\t{ title: '沟通类型',\t\tfield: 'type',\t\t\t    width:120, render: ({rows}) => {\r\n            return window.$fn.filterSelect(this.typeOptions, rows.type, 'label', 'value') \r\n        } },\r\n\t\t{ title: '岗位',    \t\tfield: 'project_name',\t    width:90 },\r\n\t\t{ title: '反馈人',\t\t    field: 'contact_user',\t\twidth:90 },\r\n\t\t{ title: '反馈日期',\t\tfield: 'contact_at',\t\twidth:140 },\r\n\t\t{ title: '反馈原因',\t\tfield: 'contact_reason',\twidth:200 },\r\n\t\t{ title: '送检医院',\t\tfield: 'inspec_unit',\t\twidth:200 },\r\n\t\t{ title: '反馈电话',\t\tfield: 'phone',     \t\twidth:100 },\r\n\t\t{ title: '送检科室',\t\tfield: 'depart_name',\t\twidth:100 },\r\n\t\t{ title: '反馈内容',\t\tfield: 'inspec_content',    width:200 },\r\n\t\t{ title: '回顾',\t\t    field: 'look_back',         width:60, render: ({rows}) => {\r\n            return window.$fn.filterSelect(this.lookbackOptions, rows.type, 'label', 'value') \r\n        } },\r\n        { title: '状态',\t\t    field: 'status',            width:60, render: ({rows}) => {\r\n            return window.$fn.filterSelect(this.statusOptions, rows.type, 'label', 'value') \r\n        } },  \r\n        { title: '操作',\t        width:120, render: ({rows}) => {\r\n            let d = ''\r\n            switch (rows.status) {\r\n                case \"0\":\r\n                    d = <React.Fragment>\r\n                        <Button label='编辑' ghost className='mlr5' onClick={()=> {\r\n                            this.refs.modal.open() \r\n                            this.isEdit = true\r\n                            $http.submit(null, 'sp-customer-log/info', { param: {uuid: rows.uuid}} ).then(data => { \r\n                                this.setState({infos: data})\r\n                            }) \r\n                        } } /> \r\n                        <Button label='审核' ghost className='mlr5' onClick={()=> {\r\n                            const param = {uuid: rows.uuid}\r\n                            coms.interfaceConfirm('sp-customer-log/audit', '审核', param, () => { this.fetch(this.model) })\r\n                        } } />  \r\n                    </React.Fragment>\r\n                    break;\r\n                case \"1\":\r\n                    d =  <Button label='完成' ghost className='mlr5' onClick={()=> {\r\n                            const param = {uuid: rows.uuid}\r\n                            coms.interfaceConfirm('sp-customer-log/complete', '完成', param, () => { this.fetch(this.model) })\r\n                        } } />   \r\n                    break;\r\n                default:\r\n                    break;\r\n            }   \r\n            return d\r\n        } } \r\n    ]\r\n\tButtonGroup = () => {\r\n\t\treturn [ \r\n            { label:'添加 F2', code:'F2', onClick:()=> {\r\n                this.refs.modal.open()\r\n                this.setState({infos: {}})\r\n                this.isEdit = false \r\n            } } \r\n        ]\r\n    }\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='客户反馈' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} onOk={() => { \r\n                    this.addsubtractRef.submits()\r\n                }}>\r\n                    <AccessrecordForm onRef={ref => this.addsubtractRef = ref} rows={this.state.infos} type={this.isEdit} close={() => {\r\n                        this.refs.modal.close()\r\n\t\t                this.fetch(this.model)\r\n                    }} />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\statistics\\tp\\hospital-tab.js",["1798"],"import React from 'react'  \r\n// ===================================================================== global declare\r\nconst { $fn, $async, $http } = window  \r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t} \r\n\tforms = [\r\n        { label:'医院',\t\t    \tname:'hosp_id',\t\t\ttype:'select', data:[], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'医院编号',\t        name:'hosp_code',\t\ttype:'input' }, \r\n        { label:'创建时间',\t\t\tname:'date',\t\t\ttype:'date-range', names:['start_date', 'end_date'] }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tthis.setState({data: data})\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        this.forms[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'st-cs-hosp/index', param)\r\n\tcols = [ \r\n\t\t{ title: '医院名称',\t\tfield: 'hosp_name',\t\t\twidth:120 },\r\n\t\t{ title: '医院编号',\t\tfield: 'hosp_code',\t\t\twidth:120 },\r\n\t\t{ title: '标本数量',\t\tfield: 'spec_num',\t\t\twidth:120 },\r\n\t\t{ title: '时间',\t\t\tfield: 'st_time',\t\t\twidth:120 },\r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n            <div className='wh fv r5px bcf f12'> \r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>  \r\n            </div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\index.js",["1799"],"import React from 'react'\r\n// ===================================================================== private template\r\nconst Menu = window.$async(()=>import('#frame/menu'))\r\n// ===================================================================== 目录\r\nconst data = [ \r\n\t{\r\n\t\ttitle: '报告单管理',\r\n\t\tpath: 'service-page/report-manage',\r\n\t\tcomponent: 'laboratory/laboratory-manage/report/report-manage',\r\n\t\troot: 'service-page', \r\n\t\tto: 'service-page/report-manage',\r\n\t\tchild:[ \r\n\t\t\t{ title: '查看报告单', path: 'info', component:'laboratory/laboratory-manage/report/view-report', cache:true },  // 已完成\r\n\t\t]\r\n\t}, \r\n\t{ title: '报告单终止记录',\t\t\tpath: 'service-page/report-termination-record',\t\t\t\tcomponent: 'service/service-page/report-termination-record' }, // 已完成 2020-12-23\r\n    { title: '标本查询', \t\t\t\tpath: 'service-page/specimens-query',\t\t\t\t\t\tcomponent: 'administrators/specimen-manage/specimens-query'  }, // 已完成\r\n\t{ title: '统计', \t\t\t\t\tpath: 'service-page/statistics',\t\t\t\t\t\t\tcomponent: 'service/service-page/statistics/index'  }, // 薛玉梅 | 2020-12-23 14:31:33 | desc: 已完成页面 \r\n\t{ title: '加减项', \t\t\t\t\tpath: 'service-page/addsubtract',\t\t\t\t\t\t\tcomponent: 'service/service-page/addsubtract'  }, // 薛玉梅 | 2020-12-23 17:09:49 | desc: 已完成页面 \r\n\t{ title: '客户反馈', \t\t\t\tpath: 'service-page/customer-feedback',\t\t\t\t\t\tcomponent: 'service/service-page/customer-feedback'  }, // 薛玉梅 | 2020-12-23 18:04:07 | desc: 已完成页面\r\n\t{ title: '信息修改', \t\t\t\tpath: 'service-page/infochange',\t\t\t\t\t\t\tcomponent: 'service/service-page/infochange'  },  // 薛玉梅 | 2020-12-25 14:27:09 | desc: 已完成页面 \r\n]\r\n// ===================================================================== component\r\nexport default () => <Menu data={data} />","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\statistics\\tp\\testitem-tab.js",["1800"],"import React from 'react'  \r\n// ===================================================================== global declare\r\nconst { $fn, $async, $http } = window  \r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t} \r\n\tforms = [\r\n        { label:'项目名称',\t\t    name:'kind_name',\t\ttype:'select', data:[], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'项目代码',\t        name:'kind_code',\t\ttype:'input' }, \r\n        { label:'创建时间',\t\t\tname:'date',\t\t\ttype:'date-range', names:['start_date', 'end_date'] }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.kindinfoSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tthis.setState({data: data})\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        this.forms[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'kind-info/select').then(data => {\r\n                            this.forms[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'st-cs-kind/index', param)\r\n\tcols = [ \r\n\t\t{ title: '项目名称',\t\tfield: 'kind_name',\t\t\twidth:120 },\r\n\t\t{ title: '项目代码',\t\tfield: 'kind_code',\t\t\twidth:120 },\r\n\t\t{ title: '项目数量',\t\tfield: 'kind_num',\t\t\twidth:120 },\r\n\t\t{ title: '统计时间',\t\tfield: 'st_time',\t\t\twidth:120 },\r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n            <div className='wh fv r5px bcf f12'> \r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>  \r\n            </div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\statistics\\tp\\addsubtract-tab.js",["1801"],"import React from 'react'  \r\n// ===================================================================== global declare\r\nconst { $fn, $async, $http } = window  \r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n    optypeSelect = [\r\n        { label: '加做', value: '1' },\r\n        { label: '减做', value: '2' }\r\n    ]\r\n\tforms = [\r\n        { label:'项目名称',\t\t    name:'kind_name',\t\ttype:'select', data:[], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'条码号',\t        name:'spec_code',\t\ttype:'input' }, \r\n        { label:'是否加做项目',\t\tname:'op_type',\t\t    type:'select', data:this.optypeSelect, nameStr:'label', idStr:'value' },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        cacheApi.then(f => {\r\n\t\t\t$fn.getCache({ // 项目名称\r\n\t\t\t\tcache: f.default.dictionarySelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[0].data = data \r\n                    } else {\r\n                        $http.submit(null, 'dictionary/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[0].data = data \r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}) \r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'sp-additional/index', param)\r\n\tcols = [ \r\n\t\t{ title: '项目名称',\t\tfield: 'kind_name',\t\t\twidth:120 },\r\n\t\t{ title: '条码号',\t\t    field: 'spec_code',\t\t\twidth:120 },\r\n\t\t{ title: '操作人',\t\t    field: 'op_name',\t\t\twidth:120 },\r\n\t\t{ title: '操作时间',\t\tfield: 'op_time',\t\t\twidth:120 },\r\n\t\t{ title: '备注',\t\t    field: 'op_reason',\t\t\twidth:120 },\r\n\t\t{ title: '是否加做',\t\tfield: 'op_type',\t\t\twidth:120, render: ({rows}) => { \r\n            return window.$fn.filterSelect(this.optypeSelect, rows.op_type, 'label', 'value') \r\n        }} \r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n            <div className='wh fv r5px bcf f12'> \r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>  \r\n            </div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\private\\js\\common.js",["1802"],"const confirm = import('@antd/confirm')\r\nconst message = import('@antd/message')\r\nconst { $fn } = window\r\n\r\nexport default { \r\n    // ======================================================================== 薛玉梅\r\n    /**\r\n\t * 弹框提示调用接口的方法\r\n\t * @param {api} 接口\r\n\t * @param {info} 文字提示\r\n\t * @param {param} 接口参数\r\n\t * @param {callback} 回调\r\n\t **/ \r\n\tinterfaceConfirm (api, info, param, callback) {\r\n\t\tif (info) {\r\n\t\t\tconfirm.then(f=>{\r\n\t\t\t\tf.default({\r\n\t\t\t\t\tmsg:`是否确认${info}？`,\r\n\t\t\t\t\tonOk: close => {   \r\n\t\t\t\t\t\twindow.$http.submit(null, api, { param: param }).then(data => {\r\n\t\t\t\t\t\t\tmessage.then(f=>f.default.success(`${info}成功`))\r\n\t\t\t\t\t\t\tcallback()\r\n\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}) \r\n\t\t} else {\r\n\t\t\twindow.$http.submit(null, api, { param: param }).then(data => {\r\n\t\t\t\tmessage.then(f=>f.default.success(`${info}成功`))\r\n\t\t\t\tcallback() \r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t * 系统设置的时间轴节点\r\n\t * @param {separate} 默认时间节点-(时)\r\n\t * @param {type} 1：开始 | 2：结束\r\n\t **/  \r\n\tsysTime(type, separate) {  \r\n\t\tlet user = $fn.getUser()\r\n\t\tlet s1 = '9' \r\n\t\tif($fn.hasObject(user)){\r\n\t\t\ts1 = separate ? separate : user.timeline_node ? user.timeline_node : \"9\";\r\n\t\t} else {\r\n\t\t\ts1 = separate ? separate : \"9\";\r\n\t\t}\r\n\t\tlet s2 = parseInt(s1) > 9 ? `${s1}:00:00` : `0${s1}:00:00`\r\n\t\tlet current = new Date();\r\n\t\tif (current.getHours() < Number(s1)) {\r\n\t\t\t// 1-开始；2-结束\r\n\t\t\tif (type === 1) {\r\n\t\t\t\tcurrent.setTime(current.getTime() - 24 * 60 * 60 * 1000);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 1-开始；2-结束\r\n\t\t\tif (type === 2) {\r\n\t\t\t\tcurrent.setTime(current.getTime() + 24 * 60 * 60 * 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst y = current.getFullYear();\r\n\t\tconst m = current.getMonth() + 1 > 9 ? current.getMonth() + 1 : `0${current.getMonth() + 1}`;\r\n\t\tconst d = current.getDate() > 9 ? current.getDate() : `0${current.getDate()}`;\r\n\t\tconst hh = current.getHours() > 9 ? current.getHours() : `0${current.getHours()}`;\r\n\t\tconst mm = current.getMinutes() > 9 ? current.getMinutes() : `0${current.getMinutes()}`;\r\n\t\tconst ss = current.getSeconds() > 9 ? current.getSeconds() : `0${current.getSeconds()}`;\r\n\t\tlet v1 = \"\";\r\n\t\tif (s2) {\r\n\t\t\tv1 = `${y}-${m}-${d} ${s2}`;\r\n\t\t} else {\r\n\t\t\tv1 = `${y}-${m}-${d} ${hh}:${mm}:${ss}`;\r\n\t\t}\r\n\t\treturn v1;\r\n\t},\r\n\t/**\r\n\t * 时间间隔天数和时分秒\r\n\t * @param {ds} 提前天数,默认 1\r\n\t * @param {timeStr} 时分秒，默认当前时分秒\r\n\t **/   \r\n\tintervalTime (ds, timeStr) { \r\n\t\tconst newdate = new Date()\r\n\t\tlet current = newdate \r\n\t\tif (ds) {\r\n\t\t\tcurrent = new Date(newdate.getTime() - ds * 24 * 60 * 60 * 1000);\r\n\t\t}\r\n\t\tconst y = current.getFullYear();\r\n\t\tconst m = current.getMonth() + 1 > 9 ? current.getMonth() + 1 : `0${current.getMonth() + 1}`;\r\n\t\tconst d = current.getDate() > 9 ? current.getDate() : `0${current.getDate()}`;\r\n\t\tconst hh = current.getHours() > 9 ? current.getHours() : `0${current.getHours()}`;\r\n\t\tconst mm = current.getMinutes() > 9 ? current.getMinutes() : `0${current.getMinutes()}`;\r\n\t\tconst ss = current.getSeconds() > 9 ? current.getSeconds() : `0${current.getSeconds()}`;\r\n\t\tlet d1 = timeStr ? `${y}-${m}-${d} ${timeStr}` : `${y}-${m}-${d} ${hh}:${mm}:${ss}`\r\n\t\treturn d1\r\n\t},\r\n\t/**\r\n\t * 图片拼接域名\r\n\t * @param {val} 图片后缀\r\n\t **/  \r\n\timg_domain_url (val) {\r\n\t\tif (val) { \r\n\t\t\tlet user = $fn.local('user')\r\n\t\t\tif (user && Object.keys(user).length > 0 && user.img_domain) {\r\n\t\t\t  \treturn user.img_domain + val\r\n\t\t\t} else {\r\n\t\t\t\treturn val\r\n\t\t\t} \r\n\t\t} else {\r\n\t\t\treturn ''\r\n\t\t} \r\n\t},\r\n\t/**\r\n\t * 导出\r\n\t * 赵兴英\r\n\t * 2020-11-02 \r\n\t **/\r\n\texportExcel({api, apiType, param, cb}) {\r\n\t\twindow.$http[apiType || 'pull'](null, api, param).then(data => {\r\n\t\t\twindow.location.href = data.url;\r\n\t\t\tcb&&cb()\r\n\t\t})\r\n\t}, \r\n\t/**\r\n\t * 转换0 1\r\n\t * 薛玉梅\r\n\t * 2020-12-1 \r\n\t **/ \r\n    switchFlag(flag) { \r\n\t\treturn flag ? 1 : 0\r\n\t  },\r\n\tflagSwitch(flag) { \r\n\t\treturn String(flag) === \"1\" ? true : false\r\n\t}\r\n}\r\n","F:\\jia-git\\react-norson-lis\\src\\global\\template\\content.js",[],"F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\message.js",["1803"],"/* ====================================== toast  ====================================== */\r\nimport { message } from 'antd'\r\n// ===================================================================== Select\r\nmessage.config({ top: '40%', duration:0.5 })\r\nexport default {\r\n\tsuccess(msg){\r\n\t\tmessage.success(msg)\r\n\t},\r\n\terror(msg){\r\n\t\tmessage.error(msg)\r\n\t},\r\n\tinfo(msg){\r\n\t\tmessage.info(msg)\r\n\t},\r\n\twarning(msg){\r\n\t\tmessage.warning(msg)\r\n\t},\r\n\twarn(msg){\r\n\t\tmessage.warn(msg)\r\n\t},\r\n\tloading(msg){\r\n\t\tmessage.loading(msg)\r\n\t},\r\n}","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\button.js",["1804"],"/* ====================================== button  ====================================== */\r\nimport React from 'react'\r\nimport { Button } from 'antd'\r\n// ===================================================================== 按钮集合\r\nexport default ({ type, title, noStop, size, icon, children, label, shape, width, minWidth, boxClassName, className, onClick, loading, htmlType, disabled, style, ghost, round, full })=>{\r\n\tlet height = {}\r\n\tlet radius = round ? {borderRadius:'100px'} : {borderRadius: '3px'}\r\n\tif(size === 'x'){\r\n\t\theight = { height:'44px', fontSize:'16px'}\r\n\t}else if( size === 'small'){\r\n\t\theight = { height:'30px', fontSize:'13px'}\r\n\t}\r\n\t\r\n\tconst MyButton = ( ) => (\r\n\t\t<Button\r\n\t\t\tclassName\t= {`${className||''} ${full?'ex':''}`} \r\n\t\t\tstyle\t\t= {{ width, minWidth, ...height, ...radius,  ...style }} \r\n\t\t\tsize\t\t= { size || 'small' } \r\n\t\t\ttype\t\t= { type || 'primary' } \r\n\t\t\tloading\t\t= { loading } \r\n\t\t\tdisabled\t= { disabled } \r\n\t\t\tonClick\t\t= { e=>{\r\n\t\t\t\t!noStop && e.stopPropagation()\r\n\t\t\t\tonClick && onClick()\r\n\t\t\t} }\r\n\t\t\thtmlType \t= { htmlType }\r\n\t\t\tghost \t\t= { ghost }\r\n\t\t\ticon \t\t= { icon }\r\n\t\t\ttitle\t\t= { title }\r\n\t\t\tshape\t\t= { shape}\r\n\t\t>\r\n\t\t\t{label||children}\r\n\t\t</Button>\r\n\t)\r\n\t\r\n\treturn (\r\n\t\tfull ? <div className={`fxmc ${boxClassName||''}`}><MyButton/></div> : <MyButton />\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\global\\template\\image.js",["1805"],"/* ====================================== toast  ====================================== */\r\nimport React from 'react'\r\n// ===================================================================== image\r\nimport DefImage from './svg/def-img'\r\n// ===================================================================== \r\nexport default ({ src, width, height, style, className, onClick, alt, round, size, wrap }) => {\r\n\tconst _width = size ? size : width\r\n\tconst _height = size ? size : height\r\n\tconst wrapStyle = {width:_width,height:_height,...style}\r\n\tconst _alt = alt || ''\r\n\tlet img = <img draggable={false} onClick={onClick} className={`w ${className||''} ${round?'r100px':''}`} style={wrapStyle} src={src} alt={_alt}/>\r\n\tif(wrap){\r\n\t\timg = (\r\n\t\t\t<div className={`${className||''} ${round?'r100px':''}`} style={wrapStyle} onClick={onClick}>\r\n\t\t\t\t<img draggable={false} className={` ${size?'wh':'w'} ${round?'r100px':''}`}  src={src} alt={_alt}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\treturn src ? img : <DefImage size={size||width} />\r\n}","F:\\jia-git\\react-norson-lis\\src\\global\\template\\text.js",["1806"],"import React from 'react'\r\n// ===================================================================== 添加内部样式\r\nexport default ({ value, color }) => (\r\n\t<>\r\n\t\t{\r\n\t\t\twindow.$fn.isValid(value) ? value : <span className='g9' style={{color}}>--</span>\r\n\t\t}\r\n\t</>\r\n)\r\n","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\select.js",[],"F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\checkbox.js",[],"F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\datePicker.js",["1807"],"/* ====================================== toast  ====================================== */\r\nimport React from 'react'\r\n// ===================================================================== DatePicker\r\nimport { DatePicker } from 'antd'\r\nimport $time from '@utils/moment'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nmoment.locale('zh-cn')\r\n// ===================================================================== declare\r\nconst { $fn } = window\r\n// ===================================================================== DatePicker\r\nexport default class extends React.Component{\r\n\tstate = {}\r\n\t\r\n\tonChange = value => {\r\n\t\tconst { onChange, name, range, format } = this.props\r\n\t\tconst formatType = format === 1 ? 'ymd' : 'full'\r\n\t\t\r\n\t\tconst $format = value => $time.format(value, { t: formatType }) \t// 将时间格式化为字符串\r\n\t\t\r\n\t\tthis.setState({ value },()=>{\r\n\t\t\tlet param = null\r\n\t\t\tif(range){\r\n\t\t\t\tif($fn.isArray(value)){\r\n\t\t\t\t\tlet start = $format(value[0])\r\n\t\t\t\t\tlet end = $format(value[1])\r\n\t\t\t\t\tparam = $fn.isArray(name) ? { [name[0]]:start, [name[1]]: end } : { start, end }\r\n\t\t\t\t}else{\r\n\t\t\t\t\tparam = $fn.isArray(name) ? { [name[0]]:null, [name[1]]: null } : { start:null, end:null }\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tlet time = $format(value)\r\n\t\t\t\tparam = name ? { [name]: time } : time\r\n\t\t\t}\r\n\t\t\tif(onChange){\r\n\t\t\t\t\r\n\t\t\t\tonChange(param)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\tsetValue = value =>  this.setState({ value: value})\r\n\t\r\n\tclear = () => this.setState({ value: '' })\r\n\t\r\n\tdisabledBefore = current =>{\r\n\t\tif(this.props.before){\r\n\t\t\treturn current && (current < Date.now() - 8.64e7)\r\n\t\t}else{\r\n\t\t\treturn null\r\n\t\t}\r\n\t}\r\n\tdisabledAfter = current =>{\r\n\t\tif(this.props.after){\r\n\t\t\treturn current && (current > Date.now())\r\n\t\t}else{\r\n\t\t\treturn null\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\tconst { width, size, showTime, className, range, p, disabled, format, value, bordered, before, after } = this.props\r\n\t\tconst formatType = format === 1 ? 'YYYY-MM-DD' : 'YYYY-MM-DD HH:mm:ss'\r\n\t\tlet _value = this.state.value === undefined ? value : this.state.value\r\n\t\tif($fn.isArray(_value) && range){ \r\n\t\t\t_value = [_value[0] === null ? null : moment(_value[0], formatType), _value[1] === null ? null : moment(_value[1], formatType)]\r\n\t\t}else{\r\n\t\t\t_value = _value ? moment(_value, formatType) : null\r\n\t\t}\r\n\t\t\r\n\t\tconst Picker = range ? DatePicker.RangePicker : DatePicker\r\n\t\treturn (\r\n\t\t\t<Picker\r\n\t\t\t\tvalue\t\t= { _value } \r\n\t\t\t\tsize\t\t= { size || 'small' } \r\n\t\t\t\tformat  \t= { formatType }\r\n\t\t\t\tonChange\t= { this.onChange }\r\n\t\t\t\tshowTime\t= { showTime }\r\n\t\t\t\tstyle\t\t= {{ width }} \r\n\t\t\t\tclassName \t= {`${className?className:''} ${bordered===false ? 'input-bordered':''}`}\r\n\t\t\t\tplaceholder = { p } \r\n\t\t\t\tdisabledDate = { (before ? this.disabledBefore : (after ? this.disabledAfter : null)) }\r\n\t\t\t\tdisabled \t= { disabled }\r\n\t\t\t\tbordered\t= { bordered }\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\input.js",["1808"],"/* ====================================== toast  ====================================== */\r\nimport React from 'react'\r\nimport { Input } from 'antd'\r\n// ===================================================================== Select\r\n\r\nexport default class extends React.Component {\r\n\tstate = { }\r\n\r\n\tonChange = e => {\r\n\t\tconst { onChange, name } = this.props\r\n\t\tthis.setState({ value: e.target.value},()=>{\r\n\t\t\tconst { value } = this.state\r\n\t\t\tconst _value = value.trim()\r\n\t\t\tonChange && onChange( name ? {[name]:_value} : _value, _value, name)\r\n\t\t})\r\n\t}\r\n\t\r\n\tonSearch = v => {\r\n\t\tconst { onChange, name } = this.props\r\n\t\tonChange && onChange( name ? {[name]:this.state.value} : this.state.value, this.state.value, name)\r\n\t}\r\n\t\r\n\tsetValue = value => this.setState({ value })\r\n\tgetValue = () => this.state.value\r\n\t\r\n\tclear = () => this.setValue('')\r\n\t\r\n\tgetRef = () => this.refs.inputRef.input\r\n\t\r\n\trender(){\r\n\t\tconst  { p, type, width, size, clear, style, isCenter, readOnly, className, mode, disabled, prefix, suffix, iconRender, bordered, value, rows, onPressEnter, maxLength } = this.props\r\n\t\tlet _value = this.state.value === undefined ? value : this.state.value\r\n\t\tlet centerStyle = isCenter ? {textAlign:'center'} : null\r\n\t\tconst borderedValue = bordered === false ? false : true\r\n\t\tlet MyInput = mode === 'password' ? Input.Password : Input\r\n\t\tconst props = mode === 'password' ? { iconRender : iconRender } : {}\r\n\t\tlet borderClass = bordered===false ? 'input-bordered':''\r\n\t\tif(mode === 'textarea'){\r\n\t\t\tMyInput = Input.TextArea\r\n\t\t\tborderClass = 'textarea-bordered'\r\n\t\t}\r\n\t\t_value = _value ? _value.trim() : _value\r\n\t\treturn (\r\n\t\t\t<MyInput\r\n\t\t\t\tref \t\t\t= 'inputRef'\r\n\t\t\t\tclassName\t\t= { `${className?className:''} ${borderClass||''}` }\r\n\t\t\t\tallowClear \t\t= { clear === false ? false : true } \r\n\t\t\t\ttype\t\t\t= { type } \r\n\t\t\t\tsize\t\t\t= { size || 'small' } \r\n\t\t\t\tonChange\t\t= { this.onChange }\r\n\t\t\t\tvalue\t\t \t= { _value }\r\n\t\t\t\tstyle\t\t\t= {{width,...centerStyle,...style}}\r\n\t\t\t\tplaceholder\t\t= { p } \r\n\t\t\t\treadOnly\t\t= { readOnly }\r\n\t\t\t\tdisabled\t\t= { disabled }\r\n\t\t\t\tprefix\t\t\t= { prefix }\r\n\t\t\t\tsuffix\t\t\t= { suffix }\r\n\t\t\t\tbordered\t\t= { borderedValue }\r\n\t\t\t\trows\t\t\t= { rows || 4 }\r\n\t\t\t\tonPressEnter    = { onPressEnter }\r\n\t\t\t\tmaxLength       = { maxLength || ''}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\private\\component\\search-form.js",["1809","1810"],"import React from 'react'\r\n\r\n// import Select from '@antd/form/select'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window\r\n// ===================================================================== global antd\r\nconst Form = $async(()=>import('@antd/form/form'))\r\nconst Item = $async(()=>import('@antd/form/item'))\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Select = $async(()=>import('@antd/form/select'))\r\nconst DatePicker = $async(()=>import('@antd/form/datePicker'))\r\nconst Checkbox = $async(()=>import('@antd/form/checkbox'))\r\n// =====================================================================\r\nconst bordered = false\r\n\r\nconst SearchForm = ({ children, data, onChange, loading, onSubmit, onAdd, onReset, onRefesh, className, init, submitText }) => {\r\n\tconst [ form, setForm ] = React.useState()\r\n\t\r\n\t// 重置\r\n\tconst _onReset = React.useCallback( () => {\r\n\t\tif(form){\r\n\t\t\tform.resetFields()\r\n\t\t\tonReset && onReset()\r\n\t\t}\r\n\t},[form, onReset])\r\n\t// 刷新\r\n\tconst _onRefesh = React.useCallback( () => {\r\n\t\t$fn.refreshRouter()\r\n\t\tonRefesh && onRefesh()\r\n\t},[ onRefesh ])\r\n\t\r\n\tReact.useEffect(()=>{\r\n\t\t// 快捷键\r\n\t\twindow.onkeydown = e => {\r\n\t\t\tconst code = e.code\r\n\t\t\tif(code === 'F9'){\r\n\t\t\t\t_onRefesh()\r\n\t\t\t\te.preventDefault()\r\n\t\t\t}else if(code === 'F6'){\r\n\t\t\t\t_onReset()\r\n\t\t\t\te.preventDefault()\r\n\t\t\t}else if( code === 'F4'){\r\n\t\t\t\tonSubmit && onSubmit()\r\n\t\t\t\te.preventDefault()\r\n\t\t\t}else if( code === 'F2'){\r\n\t\t\t\tonAdd && onAdd()\r\n\t\t\t\te.preventDefault()\r\n\t\t\t}\r\n\t\t}\r\n\t},[ onSubmit, onAdd, form, _onRefesh, _onReset])\r\n\t\r\n\tconst _init = React.useCallback( v => {\r\n\t\tsetForm(v)\r\n\t\tif(form){\r\n\t\t\tinit && init(form)\r\n\t\t}\r\n\t},[form])\r\n\t\r\n\treturn (\r\n\t\t<div className={`xplr ${className||'pt10 pb10'}`}>\r\n\t\t\t<Form layout='horizontal' onSubmit={onSubmit} init={_init} className='fxw search-form small-form'>\r\n\t\t\t\t<div className='ex fxw'>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata.map((v,i)=>{\r\n\t\t\t\t\t\t\tconst { type, value, label, data, name, names, format, readOnly } = v\r\n\t\t\t\t\t\t\tconst width = v.width || 150\r\n\t\t\t\t\t\t\tconst mr = 20\r\n\t\t\t\t\t\t\tlet children = <Input disabled={loading} readOnly={readOnly} name={name} p={`请输入` + label} width={width} onChange={v=>onChange(v,true,{})} onPressEnter={onSubmit} bordered={bordered} value={value}/>\r\n\t\t\t\t\t\t\tif( type === 'select'){\r\n\t\t\t\t\t\t\t\tchildren = <Select disabled={loading} name={name} data={data} p={`请选择` + label} nameStr={v.nameStr} idStr={v.idStr}  value={value} onChanged={(n,press) => {\r\n\t\t\t\t\t\t\t\t\tconst arr = data.filter(m => m[v.idStr || 'value'] === n[name])\r\n\t\t\t\t\t\t\t\t\tlet row = {}\r\n\t\t\t\t\t\t\t\t\tif ($fn.hasArray(arr)) {\r\n\t\t\t\t\t\t\t\t\t\trow = arr[0]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange && onChange(n, press, { name, data: row })\r\n\t\t\t\t\t\t\t\t}} width={width} auto bordered={bordered}/> \r\n\t\t\t\t\t\t\t}else if(type === 'date-range'){\r\n\t\t\t\t\t\t\t\tchildren = <DatePicker disabled={loading} name={names} width={width * 2 + 30} range showTime value={value} format={format} onChange={v => onChange(v, false, {})} bordered={bordered}/>\r\n\t\t\t\t\t\t\t}else if(type === 'checkbox') {\r\n\t\t\t\t\t\t\t\t// 薛 | 2020-10-27 | 新增\r\n\t\t\t\t\t\t\t\tchildren = <Checkbox disabled={loading} name={name} value={value} onChange={v=>onChange(v,true,{name})} /> \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// 薛 | 2020-10-27 | 是否显示标签\r\n\t\t\t\t\t\t\treturn !v.noVisible ? <Item key={i} name={name} label={label} mr={mr}>{children}</Item> : null\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button loading={loading} htmlType='submit' label={submitText ? submitText : '搜索 F4'}/>\r\n\t\t\t\t\t{onReset && <Button loading={loading} label='重置 F6' className='ml10' ghost onClick={_onReset}/> }\r\n\t\t\t\t\t{onRefesh && <Button loading={loading} label='刷新 F9' className='ml10' ghost onClick={_onRefesh}/>}\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default class extends React.Component{\r\n\tcomponentWillUnmount(){\r\n\t\twindow.onkeydown = null\r\n\t}\r\n\trender(){\r\n\t\tconst { children, data, onChange, loading, onSubmit, onAdd, onReset, className, init, submitText } = this.props\r\n\t\treturn (\r\n\t\t\t<SearchForm\r\n\t\t\t\tdata\t\t= { data} \r\n\t\t\t\tonChange\t= { onChange } \r\n\t\t\t\tonSubmit\t= { onSubmit } \r\n\t\t\t\tonAdd\t\t= { onAdd } \r\n\t\t\t\tonReset\t\t= { onReset }\r\n\t\t\t\tloading\t\t= { loading }\r\n\t\t\t\tclassName\t= { className }\r\n\t\t\t\tinit\t\t= { init }\r\n\t\t\t\tsubmitText  = { submitText}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</SearchForm>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\private\\component\\table.js",["1811","1812"],"F:\\jia-git\\react-norson-lis\\src\\private\\template\\title.js",["1813"],"import React from 'react'\r\n// =====================================================================\r\nexport default ({ title, children, onSetHeader, noPadding, style }) => (\r\n\t<header className={`h40 bbor1 fxm ${noPadding?'':'xplr'}`} style={style}>\r\n\t\t<h2 className='b fxm ex'>\r\n\t\t\t<i className='bcm r10px mr5 rel' style={{width:4,height:12}}></i>\r\n\t\t\t<span>{title}</span>\r\n\t\t\t{\r\n\t\t\t\tonSetHeader && <span className='f12 c0 n' onClick={onSetHeader}>(设置表头)</span>\r\n\t\t\t}\r\n\t\t</h2>\r\n\t\t<div>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t</header>\r\n)","F:\\jia-git\\react-norson-lis\\src\\private\\template\\page-container.js",["1814"],"import React from 'react'\r\n// ===================================================================== global template\r\nconst { $async } = window\r\nconst Page = $async(()=>import('#tp/content/content-aside'))\r\nconst Container = $async(()=>import('#tp/box/container'))\r\n// =====================================================================\r\nexport default ({ children, title, titleChildren, ButtonGroup, nobc, noBtGroup, className }) => {\r\n\treturn (\r\n\t\t<Page>\r\n\t\t\t<Container title={title} ButtonGroup={ButtonGroup} titleChildren={titleChildren} nobc={nobc} noBtGroup={noBtGroup} className={className}>\r\n\t\t\t\t{children}\r\n\t\t\t</Container>\r\n\t\t</Page>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\private\\api\\cacheApi.js",["1815"],"/**\r\n * cache api.\r\n * author: 赵兴英\r\n * date: 2020-10-16\r\n */\r\nexport default {\r\n\t// 集团列表\r\n\tCorpGroupSelect: 'api/corp-group/select',\r\n\t// 公司列表\r\n\tCompanySelect: 'api/company/select',\r\n\t// 部门列表\r\n\tDEPTSelect: 'api/department/select',\r\n\t// 科室\r\n\tProjectTeamSelect: 'api/project-team/select',\r\n\tProjectTeamMenuSelect: 'api/project-team/selectMenu',\r\n\tgetOutsourcingDepartList: 'api/specimen/getOutsourcingDepartList', // 外包单位\r\n\t// 岗位\r\n\tjobAllselect: 'api/project-team/jobAllselect',\r\n\tlaboratoryselect: 'api/project-team/laboratoryselect',\r\n\t// 人员信息\r\n\temployeeSelect: 'api/employee/select', // 员工\r\n\tbssalesmanSelect: 'api/bs-salesman/select', // 业务员\r\n\tpathologySelect: 'api/employee/pathologySelect', // 病理人\r\n\t// 权限\r\n\tmenuSelect: 'api/menu/select', // 菜单列表\r\n\tpositionSelect: 'api/position/select', // 职位\r\n\troleSelect: 'api/role/select', // 角色\r\n\tgroupsSelect: 'api/groups/select', // 分组\r\n\t// 区域\r\n\tbsareaSelect: 'api/bs-area/select', // 业务区域\r\n\tspBoxAddress: 'api/sp-box-address/select', // 办事处地址\r\n\t// 医院\r\n\tBsHospitalSelect: 'api/bs-hospital/select',\r\n\t// 项目列表\r\n\tkindinfoSelect: 'api/kind-info/select',\r\n\tkindinfoTSelect: 'api/kind-info/tSselect',\r\n\tlabkindselect: 'api/specimen/labkindselect',\r\n\tspecimenkindSelect: 'api/specimen-kind/selectkind',\r\n\t// 自然项目 | 营销项目（关键字搜索）\r\n\tkindItemSelect: 'api/kd-market/select',\r\n\t// 单一项目\r\n\tsingleKindSelect: 'api/kind-info/kindSelect',\r\n\t// 组合项目 （关键字搜索）\r\n\tcombinKindSelect: 'api/kd-combin-project/select',\r\n\t// 设备列表\r\n\tdeviceNameSelect: 'api/device/selectName',\r\n\tdeviceSelect: 'api/device/select',\r\n\tdeviceResult4Select: 'api/result-unit-item/getDeviceResult4Select', // 设备结果\r\n\t// GPS设备\r\n\tgpsSelect: 'api/sp-gps-device/select',\r\n\t// 模板\r\n\treportTemplate: 'api/kd-report-from/select', // 报告单模板\r\n\texportTemplate: 'api/lis-outsourcing-company/getExportModel4Select', // 导出模板\r\n\tlisLabTemplate: 'api/lis-lab-tag/select', // 实验号模板\r\n\tqtCompTemplate: 'api/qt-comp-template/select', // 物价模板\r\n\tlisTagtemplate: 'api/lis-tag-template/select', // 项目标签模板\r\n\tlabelFormatType: 'api/settings/getLabelFormatType', // 模板处理方式\r\n\t// 物料\r\n\tmtApplyFormSelect: 'api/mt-apply-form/select', // 申请单\r\n\tmaterialSelect: 'api/material/select', // 物料列表\r\n\t// 所属分拣组\r\n\tSortGroupSelect: 'api/pick-group/select',\r\n\t// 字典分类\r\n\tdictionarySelect: 'api/dictionary/select',\r\n\t// 标本\r\n\tslogSelect: 'api/slog/select', // 日志类型\r\n\tprinterSelect: 'api/printer/select', // 打印机\r\n\t// TCT选项\r\n\tconftctSelect: 'api/conf-tct/selectSum',\r\n\t// 流程名称\r\n\tflProSelect: 'api/fl-process/select',\r\n\t// 节点名称\r\n\tflProNodeSelect: 'api/fl-process-node/select',\r\n\t// 被授权者\r\n\tflProAuthSelect: 'api/fl-process-auth/select',\r\n\t// 医生列表\r\n\tbsDocSelect:'api/bs-doctor/select',\r\n\t// 医院科室\r\n\tbsHospDepSelect: 'api/bs-depart/select',\r\n\t// 轮转规则\r\n\trotateConfSelect: 'api/rt-rotate-conf/select',\r\n\t// 药敏列表\r\n\tdrugSensSelect: 'api/drug-sensitivity/select',\r\n\t// 合并规则\r\n\tmergeGroupSelect: 'api/merge-group/select',\r\n\t// 物价项目\r\n\tqtItemSourceSelect: 'api/qt-item-source/select',\r\n\t// 药敏组合\r\n\tdrugGroupSelect: 'api/drug-group/selectList',\r\n\tresultTipsTempSelect: 'api/result-tips-temp/select', // 结果提示类型\r\n\tdrawMaterialsSelect: 'api/employee/drawMaterialsSelect', // 病理取材医生\r\n\trecordIdSelect: 'api/employee/recordIdSelect', // 病理记录人\r\n}\r\n\r\n","F:\\jia-git\\react-norson-lis\\src\\private\\template\\content\\content-aside.js",["1816"],"import React from 'react'\r\n// ===================================================================== global template\r\nconst Content = window.$async(()=>import('@tp/content'))\r\n// =====================================================================\r\nexport default ({ children, className }) => {\r\n\treturn (\r\n\t\t<Content>\r\n\t\t\t<section className={`wh ${className||''}`} style={{padding:10,minWidth:1100,minHeight:200}}>\r\n\t\t\t\t{children}\r\n\t\t\t</section>\r\n\t\t</Content>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\private\\template\\box\\box.js",["1817"],"import React from 'react'\r\n// ===================================================================== global template\r\nconst { $fn, $async } = window\r\nconst Title = $async(()=>import('#tp/title'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// =====================================================================\r\nexport default ({ children, className, title, ButtonGroup, style, titleChildren, onSetHeader }) => {\r\n\treturn (\r\n\t\t<div className={`bcf r5px ${className||''}`} style={style}>\r\n\t\t\t{\r\n\t\t\t\ttitle && (\r\n\t\t\t\t\t<Title title={title} onSetHeader={onSetHeader}>\r\n\t\t\t\t\t\t{/* 添加、删除按钮组 */}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$fn.hasArray(ButtonGroup) && ButtonGroup.map((v,i)=><Button className='ml10' key={i} label={v.label} disabled={v.disabled} loading={v.loading} ghost={v.ghost} onClick={v.onClick} />)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{ titleChildren }\r\n\t\t\t\t\t</Title>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\service\\service-page\\addsubtract.js",["1818"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $fn, $async, $http } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst AddsubtractForm = $async(()=>import('@views/administrators/specimen-manage/tp/addsubtract-form'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        infos: {}\r\n    } \r\n    isEdit = false\r\n    statusOptions = [\r\n        { label: \"待处理\", value: \"0\" },\r\n        { label: \"已处理\", value: \"1\" },\r\n        { label: \"已完成\", value: \"2\" }\r\n    ]\r\n\t\r\n    optypeSelect = [\r\n        { label: '加做', value: '1' },\r\n        { label: '减做', value: '2' }\r\n    ]\r\n\tforms = [\r\n\t\t{ label:'标本条码',\t    name:'spec_code',\t\ttype:'input' }, \r\n        { label:'状态',\t\t    name:'status',\t\t    type:'select', data:this.statusOptions, nameStr:'label', idStr:'value' },\r\n        { label:'终止时间',\t\tname:'date',\t\t\ttype:'date-range', names:['start_date', 'end_date'] }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch()\r\n\t} \r\n    ImgsDom (imgs) { \r\n        return (\r\n            window.$fn.hasArray(imgs) && <Button label='查看图片' ghost className='mlr5' onClick={()=> {} } /> \r\n        )\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'sp-additional-item/index', param)\r\n\tcols = [\r\n\t\t{ title: '条码号',\t\t    field: 'spec_code',\t\t\twidth:120 },\r\n\t\t{ title: '姓名',\t\t    field: 'patient_name',\t\twidth:90 },\r\n\t\t{ title: '性别',\t\t\tfield: 'sex_name',\t        width:50 },\r\n        { title: '项目名称',\t\tfield: 'kind_name',\t\t    width:150 },\r\n        { title: '时间',\t\t    field: 'op_time',\t\t    width:130 },\r\n        { title: '岗位',\t\t    field: 'project_name',\t\twidth:170 },\r\n        { title: '备注说明',\t\tfield: 'remark',\t\t    width:100 },\r\n        { title: '类型',\t\t    field: 'item_type',\t\t    width:70, render: ({rows}) => {\r\n            return window.$fn.filterSelect(this.optypeSelect, rows.item_type, 'label', 'value') \r\n        } },\r\n        { title: '状态',\t\t    field: 'status',\t\t    width:70, render: ({rows}) => {\r\n            return window.$fn.filterSelect(this.statusOptions, rows.status, 'label', 'value') \r\n        } },\r\n        { title: '操作',\t        width:185, render: ({rows}) => {\r\n            let d = ''\r\n            switch (rows.status) {\r\n                case \"0\":\r\n                    d = <React.Fragment>\r\n                        <Button label='编辑' ghost className='mlr5' onClick={()=> {\r\n                            this.refs.modal.open() \r\n                            this.isEdit = true\r\n                            $http.submit(null, 'sp-additional-item/info', { param: {uuid: rows.uuid}} ).then(data => { \r\n                                this.setState({infos: data})\r\n                            }) \r\n                        } } /> \r\n                        <Button label='审核' ghost className='mlr5' onClick={()=> {\r\n                            const param = {uuid: rows.uuid}\r\n                            coms.interfaceConfirm('sp-additional-item/audit', '审核', param, () => { this.fetch(this.model) })\r\n                        } } /> \r\n                        {this.ImgsDom(rows.imgs)}\r\n                    </React.Fragment>\r\n                    break;\r\n                case \"1\":\r\n                    d = <React.Fragment>\r\n                        <Button label='完成' ghost className='mlr5' onClick={()=> {\r\n                            const param = {uuid: rows.uuid}\r\n                            coms.interfaceConfirm('sp-additional-item/complete', '完成', param, () => { this.fetch(this.model) })\r\n                        } } /> \r\n                        {this.ImgsDom(rows.imgs)}\r\n                    </React.Fragment>\r\n                    break;\r\n                default:\r\n                    break;\r\n            }   \r\n            return d\r\n        } } \r\n    ]\r\n\tButtonGroup = () => {\r\n\t\treturn [ \r\n            { label:'添加 F2', code:'F2', onClick:()=> {\r\n                this.refs.modal.open()\r\n                this.setState({infos: {}})\r\n                this.isEdit = false \r\n            } } \r\n        ]\r\n    }\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='加减项' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} onOk={() => { \r\n                    this.addsubtractRef.submits()\r\n                }}>\r\n                    <AddsubtractForm onRef={ref => this.addsubtractRef = ref} rows={this.state.infos} type={this.isEdit} close={() => {\r\n                        this.refs.modal.close()\r\n\t\t                this.fetch(this.model)\r\n                    }} />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\private\\component\\submit-form.js",["1819","1820","1821","1822"],"import React from 'react'\r\n// ===================================================================== global antd\r\n\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window\r\n// ===================================================================== global antd\r\nconst Form = $async(()=>import('@antd/form/form'))\r\nconst Item = $async(()=>import('@antd/form/item'))\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Select = $async(()=>import('@antd/form/select'))\r\nconst DatePicker = $async(()=>import('@antd/form/datePicker'))\r\nconst Checkbox = $async(()=>import('@antd/form/checkbox'))\r\nconst Upload = $async(()=>import('@antd/upload'))\r\nconst Radio = $async(()=>import('@antd/form/radio'))\r\nconst Switch = $async(()=>import('@antd/form/switch'))\r\n// =====================================================================\r\nconst size = 'middle'\r\nconst bordered = false\r\nconst FormComponent = ({ data, onChange, width, form, mb, readOnly, disabled, noholder }) => (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\t$fn.hasArray(data) && data.map((v,i)=>{\r\n\t\t\t\t\tconst { type, value, label, data, name, format, oType, mode, visible } = v\r\n\t\t\t\t\tconst _disabled = disabled ? disabled : v.disabled\r\n\t\t\t\t\t// 薛玉梅 | 加 type={type}\r\n\t\t\t\t\tif (visible !== false) { // 赵 - 2020-11-09：visible===false则不显示\r\n\t\t\t\t\t\tlet children = <Input type={type} size={size} p={noholder ? '' : '请输入' + (v.placeholder || label)} width={v.width ? v.width : width} prefix={v.prefix} suffix={v.suffix} readOnly={readOnly} disabled={_disabled} bordered={bordered} onChange={n=>{\r\n\t\t\t\t\t\t\tonChange && onChange(n, true, { name })\r\n\t\t\t\t\t\t\tv.onChange && v.onChange(n, true, { name })\r\n\t\t\t\t\t\t}} maxLength={v.maxLength ? v.maxLength : ''} />\r\n\t\t\t\t\t\tif( type === 'select'){\r\n\t\t\t\t\t\t\tchildren = <Select size={size} data={data} p={`请选择` + (v.placeholder || label)} value={value} mode={mode} nameStr={v.nameStr} idStr={v.idStr} width={v.width ? v.width : width} auto onChanged={(n,press) => {\r\n\t\t\t\t\t\t\t\tconst arr = data.filter(m => m[v.idStr || 'value'] === n[name])\r\n\t\t\t\t\t\t\t\tlet row = {}\r\n\t\t\t\t\t\t\t\tif ($fn.hasArray(arr)) {\r\n\t\t\t\t\t\t\t\t\trow = arr[0]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tform.setFieldsValue({ [name]: n })\r\n\t\t\t\t\t\t\t\tonChange && onChange(n, press, { name, data: row })\r\n\t\t\t\t\t\t\t\tv.onChange && v.onChange(n, press, { name, data: row })\r\n\t\t\t\t\t\t\t}} bordered={bordered} disabled={_disabled}/> \r\n\t\t\t\t\t\t}else if(type === 'date-time'){\r\n\t\t\t\t\t\t\tchildren = <DatePicker size={size} width={width} value={value} showTime format={format} after={v.after} bordered={bordered} disabled={_disabled}/>\r\n\t\t\t\t\t\t}else if (type === 'date-range'){ // 杜  2020-12-08  添加日期可选开始和结束  ****************************************\r\n\t\t\t\t\t\t\tchildren = <DatePicker size = {size} width={width} value={value} range format={format} after={v.after} bordered={bordered} disabled={_disabled} onChange={\r\n\t\t\t\t\t\t\t\tn => onChange(n, false, {})} />\r\n\t\t\t\t\t\t}else if(type === 'textarea'){\r\n\t\t\t\t\t\t\tchildren = <Input size={size} p={noholder ? '' : '请输入' + label} width={v.width ? v.width : width} mode='textarea'  readOnly={readOnly} disabled={_disabled} bordered={bordered} onChange={n=> {\r\n\t\t\t\t\t\t\t\tonChange && onChange(n, true, { name })\r\n\t\t\t\t\t\t\t\tv.onChange && v.onChange(n, true, { name })\r\n\t\t\t\t\t\t\t} } />\r\n\t\t\t\t\t\t}else if(type === 'checkbox'){\r\n\t\t\t\t\t\t\tchildren = <Checkbox size={size} label={v.checkLabel} value={value} disabled={_disabled} onChange={n=> {\r\n\t\t\t\t\t\t\t\tonChange && onChange(n, true, { name })\r\n\t\t\t\t\t\t\t\tv.onChange && v.onChange(n, true, { name })\r\n\t\t\t\t\t\t\t} } />\r\n\t\t\t\t\t\t}else if(type === 'upload'){\r\n\t\t\t\t\t\t\tchildren = <Upload params={v.params} onChange={(path) => {\r\n\t\t\t\t\t\t\t\tonChange && onChange(path, true, { name })\r\n\t\t\t\t\t\t\t\tv.onChange && v.onChange(path, true, { name })\r\n\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t}else if(type === 'radio'){\r\n\t\t\t\t\t\t\tchildren = <Radio size={size} data={data} value={value} optionType={oType} onChange={ n => {\r\n\t\t\t\t\t\t\t\tonChange && onChange(n, true, { name })\r\n\t\t\t\t\t\t\t\tv.onChange && v.onChange(n, true, { name })\r\n\t\t\t\t\t\t\t} }/>\r\n\t\t\t\t\t\t}else if(type === 'switch'){\r\n\t\t\t\t\t\t\tchildren = <Switch bool={value} onChange={ n => {\r\n\t\t\t\t\t\t\t\tonChange && onChange(n, true, { name })\r\n\t\t\t\t\t\t\t\tv.onChange && v.onChange(n, true, { name })\r\n\t\t\t\t\t\t\t} } />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<React.Fragment key={i}>\r\n\t\t\t\t\t\t\t\t{ v.title && <h6 className='w xmlr h40 bbor1 mb10'>{v.title}</h6> }\r\n\t\t\t\t\t\t\t\t<Item className={label ? '' : 'no-label'} label={label || ' '} name={name} full={v.full} mb={mb} rules={[{ required: v.required }]}>\r\n\t\t\t\t\t\t\t\t\t{children}\r\n\t\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n\r\nconst SubmitForm = ({ children, data, onChange, onSubmit, onClose, init, btnSize, okText, modal, layout, display, width, className, scrollClassName, mb, readOnly, disabled, noholder }) => {\r\n\tconst [ form, setForm ] = React.useState()\r\n\tconst [key, setKey] = React.useState(0)\r\n\t\r\n\tconst _init = React.useCallback( v => {\r\n\t\tsetForm(v)\r\n\t\tdata.forEach(m=>{\r\n\t\t\tif($fn.isValid(m.value)){\r\n\t\t\t\tv.setFieldsValue({ [m.name] : m.value })\r\n\t\t\t}\r\n\t\t})\r\n\t\t// setTimeout(() => { setKey(key + 1) }, 100);\r\n\t\tinit && init(v)\r\n\t},[data, init, key])\r\n\t\r\n\treturn (\r\n\t\t<Form layout={layout} onSubmit={onSubmit} init={_init} className={`submit-form small-form fv ex ${className||''}`} key={key}>\r\n\t\t\t<div className='ex rel'>\r\n\t\t\t\t<div className={` ${scrollClassName||''} ${modal?'':'abs_full oys scrollbar'}`}>\r\n\t\t\t\t\t<div className={layout === 'horizontal' ? 'fxw' : ''}>\r\n\t\t\t\t\t\t<FormComponent data={data} form={form} width={width?width:(modal ? 180 : 190)} mb={mb} readOnly={readOnly} disabled={disabled} noholder={noholder} onChange={onChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{ !display && (\r\n\t\t\t\t<div className={`fxmc ${modal ? 'mt20' : ' tbor1 ptb10'}`}>\r\n\t\t\t\t\t<Button label='取消' ghost className='mr15' size={btnSize} width={btnSize === 'large' ? 120 : 90} onClick={onClose} />\r\n\t\t\t\t\t<Button label={okText || '确定 Enter'} htmlType='sbumit' size={btnSize} width={btnSize === 'large' ? 120 : 90} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n       \r\n    }\r\n\tenter = e => {\r\n\t\tconst code = e.code\r\n\t\tif(code === 'NumpadEnter'){\r\n\t\t\te.preventDefault()\r\n\t\t\tthis.form.submit()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\twindow.addEventListener('keydown',this.enter)\r\n\t}\r\n\tcomponentWillUnmount(){\r\n\t\twindow.removeEventListener('keydown',this.enter)\r\n\t}\r\n\t\r\n\trender(){\r\n\t\tconst { children, data, onChange, onClose, onSubmit, btnSize, okText, modal, layout, display, width, className, scrollClassName, mb, readOnly, disabled, noholder, init } = this.props\r\n\t\treturn (\r\n\t\t\t<SubmitForm\r\n\t\t\t\tclassName\t= { className }\r\n\t\t\t\tdata\t\t= { data } \r\n\t\t\t\tonChange\t= { onChange } \r\n\t\t\t\tonSubmit\t= { onSubmit } \r\n\t\t\t\tonClose\t\t= { () => {\r\n\t\t\t\t\tonClose && onClose() \r\n\t\t\t\t\tthis.form.resetFields() \r\n\t\t\t\t} } \r\n\t\t\t\tinit\t\t= { form => {\r\n\t\t\t\t\tthis.form = form\r\n\t\t\t\t\tinit && init(form)\r\n\t\t\t\t} }\r\n\t\t\t\tbtnSize\t\t= { btnSize || 'middel' }\r\n\t\t\t\tokText\t\t= { okText }\r\n\t\t\t\tmodal\t\t= { modal }\r\n\t\t\t\tlayout\t\t= { layout || 'horizontal'}\r\n\t\t\t\tdisplay\t\t= { display }\r\n\t\t\t\twidth\t\t= { width }\r\n\t\t\t\tmb\t\t\t= { mb || 20}\r\n\t\t\t\treadOnly\t= { readOnly }\r\n\t\t\t\tdisabled\t= { disabled }\r\n\t\t\t\tnoholder\t= { noholder }\r\n\t\t\t\tscrollClassName = { scrollClassName }\r\n\t\t\t> {children} </SubmitForm>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\modal.js",["1823"],"/* ====================================== toast  ====================================== */\r\nimport React from 'react'\r\nimport { Modal } from 'antd'\r\nimport Button from '@antd/button'\r\n// ===================================================================== 选择字典表数据\r\nexport default class extends React.Component {\r\n    state = {\r\n       \r\n    }\r\n\tenter = e => {\r\n\t\tconst code = e.code\r\n\t\tif(code === 'NumpadEnter'){\r\n\t\t\te.preventDefault()\r\n\t\t\tthis.onOk()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\twindow.addEventListener('keydown',this.enter)\r\n\t}\r\n\tcomponentWillUnmount(){\r\n\t\twindow.removeEventListener('keydown',this.enter)\r\n\t}\r\n    \r\n    onOk = () => {\r\n    \tconst { onOk } = this.props\r\n    \tonOk && onOk()\r\n    }\r\n    \r\n    onCancel = () => {\r\n    \tconst { onCancel} = this.props\r\n    \tthis.close()\r\n    \tonCancel && onCancel()\r\n    }\r\n    \r\n    open = () => this.setState({show:true})\r\n    close = () => this.setState({show:false})\r\n    \r\n    Footer = ({ okText, noText, loading }) => (\r\n    \t<footer className='fxmc'>\r\n\t\t\t<Button round loading={loading} onClick={this.onCancel} style={{width:'100px'}} size='large' ghost type='primary'>{noText||'取消'}</Button>\r\n\t\t\t<Button round loading={loading} onClick={this.onOk} style={{width:'100px', marginLeft:'25px'}} size='large' type='primary'>{okText || '确认 Enter'}</Button>\r\n    \t</footer>\r\n    )\r\n    \r\n    render(){\r\n    \tconst { title, children, width, noFooter, centered, onClose, bodyStyle, mask, closable, noTitle } = this.props\r\n\t\tconst visible = this.state.show === undefined ? this.props.show : this.state.show\r\n    \treturn (\r\n\t\t\t<Modal\r\n\t\t\t\ttitle\t\t\t= { noTitle ? '' : title || '提示' }\r\n\t\t\t\twidth\t\t\t= { width }\r\n\t\t\t\tvisible \t\t= { visible }\r\n\t\t\t\tonOk\t\t\t= { this.onOk }\r\n\t\t\t\tonCancel\t\t= { this.onCancel }\r\n\t\t\t\tmaskClosable \t= { false }\r\n\t\t\t\tcentered\t\t= { centered===undefined ? true : centered }\r\n\t\t\t\tfooter\t\t\t= { noFooter ? null : <this.Footer {...this.props} /> }\r\n\t\t\t\tdestroyOnClose \t= { true }\r\n\t\t\t\tafterClose \t\t= { onClose }\r\n\t\t\t\tbodyStyle \t\t= { bodyStyle }\r\n\t\t\t\tforceRender\t\t= { true }\r\n\t\t\t\tmask            = { String(mask) ? mask : true } // 显示蒙层\r\n\t\t\t\tclosable        = { String(closable) ? closable : true } // 显示关闭图标\r\n\t\t\t>\r\n\t\t\t\t{ children }\r\n\t\t\t</Modal>\r\n\t\t)\r\n    }\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\service\\router.js",["1824"],"/* ====================================== 模块子路由配置  ====================================== */\r\nimport React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n// ===================================================================== 异步加载\r\nimport Import from '@com/bundle'\r\n// ===================================================================== 路由配置\r\nimport Workbench from '@views/workbench/main'\r\nimport Service from '@views/service/service-page'\r\n// ===================================================================== 同步路由\r\nexport default () => (\r\n\t<Switch>\r\n\t\t<Route \tpath='/service/workbench' \t\t\tcomponent={ Workbench }  />\r\n\t\t<Route \tpath='/service/service-page' \t\tcomponent={ Service }  /> \r\n\t\t{/* 重定向 */}\r\n\t\t<Route path='/service' children={<Redirect to='/service/workbench/index' />}  />\r\n\t\t{/* 404 */}\r\n\t\t<Route component={ Import('404') } />\r\n\t</Switch>\r\n)","F:\\jia-git\\react-norson-lis\\src\\views\\service\\main.js",["1825"],"import React from 'react'\r\n// ===================================================================== private template\r\nimport Router from './router'\r\nconst Frame = window.$async(()=>import('#frame/frame'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{ title: '工作台', path:'workbench'},\r\n\t{ title: '客服系统', path:'service-page'},\r\n]\r\n\r\n// ===================================================================== component\r\nexport default () => <Frame title='客服系统' data={data} Router={Router} />","F:\\jia-git\\react-norson-lis\\src\\private\\frame\\menu.js",[],"F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\tp\\accessrecord-form.js",["1826"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'  \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd \r\nconst message = import('@antd/message') \r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstatusOptions = [\r\n        { label: \"是\", value: \"1\" },\r\n        { label: \"否\", value: \"2\" },\r\n        { label: \"不需要\", value: \"3\" }\r\n    ]\r\n    typeOptions = [\r\n        { label: \"样本信息和结果沟通\", value: \"1\" },\r\n        { label: \"样本危急值通知\", value: \"2\" },\r\n        { label: \"咨询通知\", value: \"3\" },\r\n        { label: \"其他\", value: \"4\" }\r\n    ]\r\n\tstate = {\r\n\t\tsubmit: [\r\n\t\t\t{ label:'标本条码',\t\t\tname:'spec_code',\t\trequired:true, disabled: true }, \r\n\t\t\t{ label:'送检单位', \t\tname:'inspec_unit_id',\ttype: 'select', data: [], nameStr:'name', idStr:'value', required:true },\r\n\t\t\t{ label:'自然项目',\t\t\tname:'kind_name',\t\ttype: 'textarea', full:true, width:'100%', disabled: true }, \r\n\t\t\t{ label:'送检科室', \t\tname:'depart_name', \trequired:true },\r\n\t\t\t{ label:'岗位', \t\t\tname:'major_group',\t\ttype: 'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t\t{ label:'回顾', \t\t\tname:'look_back',\t\ttype: 'select', data: this.statusOptions, nameStr:'label', idStr:'value' },\r\n\t\t\t{ label:'沟通类型', \t\tname:'type',\t\t\ttype: 'select', data: this.typeOptions, nameStr:'label', idStr:'value', required:true },\r\n\t\t\t{ label:'反馈人',\t\t\tname:'contact_user', \trequired:true }, \r\n\t\t\t{ label:'联系电话',\t\t\tname:'phone', \t\t\trequired:true }, \r\n            { label:'联系日期',\t\t\tname:'contact_at',\t\ttype:'date-time', required:true },\r\n\t\t\t{ label:'反馈内容', \t\tname:'inspec_content',\ttype: 'textarea', full:true, width:'100%'},\r\n\t\t\t{ label:'反馈原因', \t\tname:'contact_reason',\ttype: 'textarea', full:true, width:'100%'},\r\n\t\t]\r\n\t}  \r\n\tmodel = {} \r\n\tcomponentDidMount(){  \r\n\t\tthis.props.onRef(this)   \r\n\t\tconst { submit } = this.state\r\n\t\tcacheApi.then(f => { \r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) { \r\n\t\t\t\t\t\tsubmit[1].data = data\r\n\t\t\t\t\t\tthis.setState({submit: submit})\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            submit[1].data = data\r\n\t\t\t\t\t\t\tthis.setState({submit: submit}) \r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t}) \r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.laboratoryselect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) { \r\n\t\t\t\t\t\tsubmit[4].data = data\r\n\t\t\t\t\t\tthis.setState({submit: submit})\r\n\t\t\t\t\t} else {\r\n                        $http.submit(null, 'project-team/laboratoryselect').then(data => {\r\n                            submit[4].data = data\r\n\t\t\t\t\t\t\tthis.setState({submit: submit})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t}) \r\n\t\t}) \r\n\t\tthis.changeInfo(this.props)\r\n\t}   \r\n    componentWillReceiveProps(props) {  \r\n\t\tif (props.rows !== this.props.rows) {  \r\n\t\t\tthis.changeInfo(props)\r\n\t\t} \r\n    }\r\n\tchangeInfo = (props) => { \r\n\t\tconsole.log('客户反馈赋值') \r\n\t\tthis.clears()\r\n\t\tconst { submit } = this.state\r\n\t\tif (props.type){\r\n\t\t\tsubmit[0].value = props.rows.spec_code\r\n\t\t\tsubmit[1].value = props.rows.inspec_unit_id\r\n\t\t\tsubmit[2].value = props.rows.kind_name\r\n\t\t\tsubmit[3].value = props.rows.depart_name\r\n\t\t\tsubmit[4].value = props.rows.major_group\r\n\t\t\tsubmit[5].value = props.rows.look_back\r\n\t\t\tsubmit[6].value = props.rows.type\r\n\t\t\tsubmit[7].value = props.rows.contact_user\r\n\t\t\tsubmit[8].value = props.rows.phone\r\n\t\t\tsubmit[9].value = props.rows.contact_at\r\n\t\t\tsubmit[10].value = props.rows.inspec_content\r\n\t\t\tsubmit[11].value = props.rows.contact_reason\r\n\t\t\tthis.setState({ submit: submit })\r\n\t\t} else if (props.rows.spec_code) {\r\n\t\t\t$http.pull(this,'sp-customer-log/getInfoBySpec', {dataName:null, param: {spec_code: props.rows.spec_code}}).then(res=>{ \r\n\t\t\t\tconst data = res.spec_info \r\n\t\t\t\tsubmit[0].value = data.spec_code\r\n\t\t\t\tsubmit[4].value = data.major_group_id\r\n\t\t\t\tsubmit[1].value = data.inspec_unit_id // 送检单位id\r\n\t\t\t\tsubmit[3].value = data.depart_name\r\n\t\t\t\t// submit[].value = data.inspec_unit // 送检单位name\r\n\t\t\t\tsubmit[2].value = data.kind_name\r\n\t\t\t\tthis.setState({ submit: submit })\r\n\t\t\t}) \r\n\t\t} \r\n\t}\r\n\tsubmits = () => {\r\n\t\tconsole.log('客户反馈提交')\r\n\t\tthis.form.submit()\r\n\t}\r\n\tclears = () => {\r\n\t\tconsole.log('客户反馈清空') \r\n\t\t// this.form.resetFields(['inspec_unit_id', 'depart_name', 'major_group', 'look_back', 'type', 'contact_user', 'phone', 'contact_at', 'inspec_content', 'contact_reason'])\r\n\t\tconst { submit } = this.state \r\n\t\tsubmit.forEach(i => {\r\n\t\t\tif (this.props.type) {\r\n\t\t\t\ti.value = ''\r\n\t\t\t} else if (i.name === 'spec_code' || i.name === 'kind_name') { \r\n\t\t\t} else {i.value = ''}\r\n\t\t})\r\n\t\tthis.setState({ submit: submit}) \r\n\t}  \r\n\trender(){  \r\n\t\tconst { submit } = this.state\r\n\t\treturn ( \r\n\t\t\t<div> \r\n\t\t\t\t<SubmitForm \r\n\t\t\t\t\tmodal\r\n\t\t\t\t\tdata \t\t= { submit }\r\n\t\t\t\t\tdisplay \t= { true } \r\n\t\t\t\t\tonChange    = { (v,press,{name})=> {\r\n\t\t\t\t\t\tsubmit.forEach(i => {\r\n\t\t\t\t\t\t\tif (i.name === name) {\r\n\t\t\t\t\t\t\t\ti.value = v \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tonSubmit    = { v => { \r\n\t\t\t\t\t\tlet param = {...v}\r\n\t\t\t\t\t\tlet api ='sp-customer-log/add' \r\n\t\t\t\t\t\tlet info = '添加'  \r\n\t\t\t\t\t\tif (this.props.type) {\r\n\t\t\t\t\t\t\tparam = { ...v, uuid: this.props.rows.uuid, inspec_unit: window.$fn.filterSelect(this.state.submit[1].data, v.inspec_unit_id, 'name', 'value')}\r\n\t\t\t\t\t\t\tapi = 'sp-customer-log/edit' \r\n\t\t\t\t\t\t\tinfo = '编辑'\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\t$http.submit(null, api, { param: param, submitLoading:'infoLoading' }).then(data=>{\r\n\t\t\t\t\t\t\tmessage.then(f=>f.default.success(`${info}成功`))\r\n\t\t\t\t\t\t\tthis.clears() \r\n\t\t\t\t\t\t\tthis.props.close && this.props.close()\r\n\t\t\t\t\t\t}) \r\n\t\t\t\t\t}}\r\n\t\t\t\t\tinit    = { form => this.form = form }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\tp\\infochange-form.js",["1827"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'  \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd \r\nconst message = import('@antd/message') \r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\ttypeOptions = [\r\n        { label: \"修改病人资料\", value: \"1\" },\r\n        { label: \"修改医院信息\", value: \"2\" },\r\n        { label: \"其他类型\", value: \"3\" }\r\n      ]\r\n\tstate = {\r\n\t\tdata:[], \r\n\t\tsubmit: [\r\n\t\t\t{ label:'标本条码',\t\t\tname:'spec_code',\t\trequired:true, disabled: true }, \r\n\t\t\t{ label:'类型', \t\t\tname:'type',\t\t\ttype: 'select', data: this.typeOptions, nameStr:'label', idStr:'value' },\r\n\t\t\t{ label:'姓名',\t\t\t\tname:'patient_name', \trequired:true }, \r\n\t\t\t{ label:'医院', \t\t\tname:'hosp_id',\t\t\ttype: 'select', data: [], nameStr:'name', idStr:'value', required:true },\r\n\t\t\t{ label:'内容', \t\t\tname:'content',\t\t\ttype: 'textarea', full:true, width:'100%'},\r\n\t\t\t{ label:'备注', \t\t\tname:'remark',\t\t\ttype: 'textarea', full:true, width:'100%'},\r\n\t\t\t{ label:'图片', \t\t\tname:'img',\t\t\t\ttype: 'upload', params: {modular: 130}}\r\n\t\t]\r\n\t}  \r\n\tmodel = {}\r\n\tcomponentDidMount(){  \r\n\t\tthis.props.onRef(this)  \r\n\t\tconst { submit } = this.state\r\n\t\tcacheApi.then(f => { \r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) { \r\n\t\t\t\t\t\tsubmit[3].data = data\r\n\t\t\t\t\t\tthis.setState({submit: submit})\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            submit[3].data = data\r\n\t\t\t\t\t\t\tthis.setState({submit: submit}) \r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})  \r\n\t\t})\r\n\t\tthis.changeInfo(this.props)\r\n\t}   \r\n    componentWillReceiveProps(props) {  \r\n\t\tif (props.rows !== this.props.rows) {  \r\n\t\t\tthis.changeInfo(props)\r\n\t\t} \r\n    }\r\n\tchangeInfo = (props) => { \r\n\t\tconsole.log('信息修改赋值') \r\n\t\tthis.clears()\r\n\t\tconst { submit } = this.state \r\n\t\tif (props.type){\r\n\t\t\tsubmit[0].value = props.rows.spec_code || ''\r\n\t\t\tsubmit[1].value = props.rows.type || ''\r\n\t\t\tsubmit[2].value = props.rows.patient_name || ''\r\n\t\t\tsubmit[3].value = props.rows.hosp_id || ''\r\n\t\t\tsubmit[4].value = props.rows.content || ''\r\n\t\t\tsubmit[5].value = props.rows.remark || '' \r\n\t\t\tsubmit[6].value = props.rows.img || '' \r\n\t\t} else {\r\n\t\t\tsubmit[0].value = props.rows.spec_code\r\n\t\t\tsubmit[2].value = props.rows.patient_name\r\n\t\t\tsubmit[3].value = props.rows.hosp_id \r\n\t\t}\r\n\t\tthis.setState({ submit: submit })\r\n\t}\r\n\tsubmits = () => {\r\n\t\tconsole.log('信息修改提交')\r\n\t\tthis.form.submit()\r\n\t}\r\n\tclears = () => {\r\n\t\tconsole.log('信息修改清空')\r\n\t\t// this.form.resetFields(['type', 'patient_name', 'hosp_id', 'content', 'remark', 'img'])\r\n\t\tconst { submit } = this.state \r\n\t\tsubmit.forEach(i => {\r\n\t\t\tif (this.props.type) {\r\n\t\t\t\ti.value = ''\r\n\t\t\t} else if (i.name !== 'spec_code') {\r\n\t\t\t\ti.value = ''\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.setState({ submit: submit}) \r\n\t} \r\n\trender(){  \r\n\t\tconst { submit } = this.state\r\n\t\treturn ( \r\n\t\t\t<div> \r\n\t\t\t\t<SubmitForm \r\n\t\t\t\t\tmodal\r\n\t\t\t\t\tdata \t\t= { submit }\r\n\t\t\t\t\tdisplay \t= { true }\r\n\t\t\t\t\tonChange    = { (v,press,{name})=> {\r\n\t\t\t\t\t\tsubmit.forEach(i => {\r\n\t\t\t\t\t\t\tif (i.name === name) {\r\n\t\t\t\t\t\t\t\ti.value = v\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tonSubmit    = { v => { \r\n\t\t\t\t\t\tlet param = {...v}\r\n\t\t\t\t\t\tlet api ='sp-info-modify/add' \r\n\t\t\t\t\t\tlet info = '添加'  \r\n\t\t\t\t\t\tconsole.log(this.props.type)\r\n\t\t\t\t\t\tif (this.props.type) {\r\n\t\t\t\t\t\t\tparam = { ...v, uuid: this.props.rows.uuid}\r\n\t\t\t\t\t\t\tapi = 'sp-info-modify/edit' \r\n\t\t\t\t\t\t\tinfo = '编辑'\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\t$http.submit(null, api, { param: param, submitLoading:'infoLoading' }).then(data=>{\r\n\t\t\t\t\t\t\tmessage.then(f=>f.default.success(`${info}成功`))\r\n\t\t\t\t\t\t\tthis.clears() \r\n\t\t\t\t\t\t\tthis.props.close && this.props.close()\r\n\t\t\t\t\t\t}) \r\n\t\t\t\t\t}}\r\n\t\t\t\t\tinit    = { form => this.form = form }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\private\\frame\\frame.js",[],"F:\\jia-git\\react-norson-lis\\src\\private\\template\\box\\box-scroll.js",["1828","1829"],"import React from 'react'\r\n// ===================================================================== global template\r\nconst { $fn, $async } = window\r\nconst Box = $async(()=>import('#tp/box/box'))\r\n// =====================================================================\r\nexport default ({ children, scrollClassName, className, title, ButtonGroup, style, titleChildren, onSetHeader }) => {\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tclassName\t= {`fv ${className||''}`} \r\n\t\t\ttitle\t\t= {title}\r\n\t\t\tstyle\t\t= {style}\r\n\t\t\ttitleChildren = {titleChildren}\r\n\t\t>\r\n\t\t\t<div className='ex rel'>\r\n\t\t\t\t<div className={`abs_full xplr oys scrollbar ${scrollClassName||''}`}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Box>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\private\\template\\tabs.js",["1830","1831"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport { Tabs, Pane } from '@antd/tabs'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window\r\n// ===================================================================== global template\r\n// ===================================================================== component\r\nexport default ({ children, data, onTabs }) => {\r\n\tconst onChange = React.useCallback( index =>{\r\n\t\tconst _data = data[index]\r\n\t\tonTabs && onTabs(_data, index)\r\n\t},[ data, onTabs])\r\n\treturn (\r\n\t\t<div className='only-tabs'>\r\n\t\t\t<Tabs onChange={onChange}>\r\n\t\t\t\t{\r\n\t\t\t\t\t$fn.hasArray(data) && data.map((v,i)=><Pane tab={v.title} key={i}></Pane>)\r\n\t\t\t\t}\r\n\t\t\t</Tabs>\r\n\t\t</div>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\confirm.js",["1832"],"/* ====================================== toast  ====================================== */\r\nimport React from 'react'\r\nimport { Modal } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\n// ===================================================================== 选择字典表数据\r\nexport default ({ msg, okText, cancelText, onOk, onCancel  }) => {\r\n\treturn Modal.confirm({\r\n\t\ttitle: '提示',\r\n\t\ticon: <ExclamationCircleOutlined />,\r\n\t\tcontent: msg || '确认删除？',\r\n\t\tokText: okText || '确认',\r\n\t\tcancelText: cancelText || '取消',\r\n\t\tonOk: onOk,\r\n\t\tcentered: false,\r\n\t\tclassName: 'confirm',\r\n\t\tonCancel: close => {\r\n\t\t\tonCancel && onCancel()\r\n\t\t\tclose()\r\n\t\t}\r\n\t});\r\n}","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\upload.js",["1833","1834","1835"],"﻿/* ====================================== toast  ====================================== */\r\nimport React from 'react'\r\nimport { Upload, message, Button } from 'antd'\r\nimport { PlusOutlined, LoadingOutlined, UploadOutlined } from '@ant-design/icons'\r\nconst { $fn } = window\r\n// ===================================================================== function\r\n// ===================================================================== \r\n/**\r\n\t * 薛 2020-10-28 更新\r\n\t * @param {api} 上传地址\r\n\t * @param {params} 额外参数\r\n\t * @param {multiple} 是否上传多个\r\n\t **/\r\nexport default ({ className, title, children, fileType, mode, onChange, name, value, api, params, multiple, uploadType })=> {\r\n\tconst [ loading, setLoading ] = React.useState( false );\r\n\tconst [ img, setImg ] = React.useState();\r\n\t// 当选择图片时\r\n\tconst onSelect = React.useCallback(( { file, fileList } )=>{ \r\n\t    const status = file.status\r\n\t    if( status === 'uploading' ){\r\n\t    \tsetLoading(true)\r\n\t   \t\treturn;\r\n\t    }else if( status === 'done' ){\r\n\t    \tmessage.success(`${file.name} 文件上传成功!`)\r\n\t    \t// const imageUrl = file.response.data.path\r\n\t\t\tconst imageUrl = file.response.data \r\n\t\t\tif (!multiple) {\r\n\t\t\t\tlet path = ''\r\n\t\t\t\tif ($fn.hasArray(file.response.data)) {\r\n\t\t\t\t\tpath = file.response.data[0].img_path\r\n\t\t\t\t\tsetImg(path)\r\n\t\t\t\t}\r\n\t\t\t\tonChange && ( name ? onChange({[name]:path}) : onChange(path))\r\n\t\t\t} else {\r\n\t\t\t\tonChange && ( name ? onChange({[name]:imageUrl}) : onChange(imageUrl))\r\n\t\t\t}\r\n\t    \tsetLoading(false)\r\n\t    }else if( status === 'error' ){\r\n\t    \tmessage.error(`${file.name} 文件上传失败!`)\r\n\t    \tsetLoading(false)\r\n\t    }\r\n\t},[onChange,name])\r\n\t\r\n\tReact.useEffect(()=>{\r\n\t\tif(value) setImg(value)\r\n\t},[value])\r\n\t\r\n\t\r\n\tconst PlusComponent = () => <>\r\n\t\t{\r\n\t\t\tloading ? <LoadingOutlined className='f30' /> : <PlusOutlined className='f30'/>\r\n\t\t}\r\n\t</>\r\n\t\r\n\t// 上传图片之前验证\r\n\tconst beforeUpload = React.useCallback((file)=>{\r\n\t\tif(fileType === 'excel'){\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\t\tif (!isJpgOrPng) {\r\n\t\t\t\tmessage.error('只能上传 jpg/png 格式图片文件!');\r\n\t\t\t}\r\n\t\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\t\tif (!isLt2M) {\r\n\t\t\t\tmessage.error('图片必必须小于 2M!');\r\n\t\t\t}\r\n\t\t\treturn isJpgOrPng && isLt2M\r\n\t\t}\r\n\t\t\r\n\t},[fileType])\r\n\tlet listType = 'picture-card'\r\n\tif(mode === 'button' || mode === 'upBtn'){ listType='' }\r\n\r\n\tconst headers = {\r\n\t\tAuthorization: \"Bearer \" + window.$fn.getToken()\r\n\t}\r\n\tconst img_domain = $fn.local('user') ? $fn.local('user').img_domain : ''\r\n\treturn (\r\n\t\t<Upload\r\n\t\t\tname \t\t\t= 'Filedata'\r\n\t        listType\t\t= { listType }\r\n\t        showUploadList\t= { false }\r\n\t        beforeUpload\t= { beforeUpload }\r\n\t        onChange\t \t= { onSelect }\r\n\t\t\taction \t\t\t= { window.$config.api + (api || 'upload/img')}\r\n\t\t\tdata            = { params }\r\n\t\t\theaders         = { headers }\r\n\t\t\tmultiple        = { multiple ? multiple : false } \r\n\t\t>\r\n\t\t\t{\r\n\t\t\t\t!mode && (img ? <img src={img_domain + img} alt='avatar' style={{ maxWidth: '100%',display:'inline-block' }} /> : <PlusComponent/>)\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\tmode === 'button' && <>\r\n\t\t\t\t\t<Button>\r\n\t\t\t\t\t\t{ loading ? <LoadingOutlined className='f14' /> : <UploadOutlined /> }\r\n\t\t\t\t\t\t<span>{img?'上传成功':'上传'}</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<span></span>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\t{/* 薛玉梅 | 2020-12-29 09:50:57 | desc: 检测中心上传按钮样式 */}\r\n\t\t\t{\r\n\t\t\t\tmode === 'upBtn' && <>\r\n\t\t\t\t\t<Button type='primary' ghost size='small' style={{borderRadius: '3px'}}>\r\n\t\t\t\t\t\t{ loading ? <LoadingOutlined className='f14' /> : <UploadOutlined /> }\r\n\t\t\t\t\t\t<span>上传</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<span></span>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</Upload>\r\n\t)\r\n}\r\n","F:\\jia-git\\react-norson-lis\\src\\private\\template\\box\\container.js",["1836"],"import React from 'react'\r\n// ===================================================================== global template\r\nconst { $fn, $async } = window\r\nconst Title = $async(()=>import('#tp/title'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// =====================================================================\r\nexport default ({ children, title, titleChildren, ButtonGroup, nobc, noBtGroup, className }) => {\r\n\treturn (\r\n\t\t<div className={`wh fv r5px ${ nobc?'':'bcf'} ${className || ''}`}>\r\n\t\t\t{\r\n\t\t\t\ttitle && (\r\n\t\t\t\t\t<Title title={title}>\r\n\t\t\t\t\t\t{/* 添加、删除按钮组 */}\r\n\t\t\t\t\t\t{/* {\r\n\t\t\t\t\t\t\t$fn.hasArray(ButtonGroup) && ButtonGroup.map((v,i)=><Button className='ml10' key={i} label={v.label} disabled={v.disabled} loading={v.loading} ghost={v.ghost} onClick={v.onClick} />)\r\n\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t{noBtGroup ? ButtonGroup :  \r\n\t\t\t\t\t\t\t$fn.hasArray(ButtonGroup) && ButtonGroup.map((v,i)=><Button className='ml10' key={i} label={v.label} disabled={v.disabled} loading={v.loading} ghost={v.ghost} onClick={v.onClick} />)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Title>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\empty.js",["1837"],"/* ====================================== toast  ====================================== */\r\nimport React from 'react'\r\nimport { Empty } from 'antd'\r\n// ===================================================================== \r\nexport default ({ data, text, image, loading, className, simple }) => {\r\n\tconst _image = simple ? Empty.PRESENTED_IMAGE_SIMPLE : Empty.PRESENTED_IMAGE_DEFAULT\r\n\treturn (\r\n\t\tdata.length === 0 ? (\r\n\t\t\t<div className={`fxmc abs_full ${className||''}`}>\r\n\t\t\t\t<Empty image={_image} description={text} style={{margin:0, color:'#999', fontSize:'12px'}} />\r\n\t\t\t</div>\r\n\t\t) : null\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\pagination.js",["1838","1839"],"/* ====================================== toast  ====================================== */\r\nimport React from 'react'\r\nimport { Pagination } from 'antd'\r\nconst { $fn } = window\r\n// ===================================================================== Select\r\nexport default ({ pag, onChange, style, otherInfo })=>(\r\n\t<div className='fxj tbor1' style={{padding:'10px 0', ...style}}>\r\n\t\t<div className='g6 fxc'>\r\n\t\t\t<div>共 {pag.total} 条数据</div>\r\n\t\t\t{\r\n\t\t\t\totherInfo && <div className='ml20'>{otherInfo}</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t\r\n\t\t<Pagination\r\n\t\t\tsize\t\t\t\t= 'small'\r\n\t\t\tcurrent\t\t\t\t= { pag.current } \r\n\t\t\ttotal\t\t\t\t= { pag.total }\r\n\t\t\tpageSize\t\t\t= { pag.pageSize }\r\n\t\t\tonChange\t\t\t= { (current, pageSize) =>{ onChange && onChange(current, pageSize) } }\r\n\t\t\tshowQuickJumper\t\t= { true }\r\n\t\t\tshowSizeChanger \t= { true }\r\n\t\t\thideOnSinglePage\t= { pag.total <= pag.pageSize ? true : false }\r\n\t\t\tpageSizeOptions\t\t= {[ 10, 20, 50, 100, 150, 200, 500, 1000]}\r\n\t\t/>\r\n\t</div>\r\n)","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\loading.js",["1840"],"/* ====================================== toast  ====================================== */\r\nimport React from 'react'\r\nimport { Spin } from 'antd'\r\n// ===================================================================== function\r\n// ===================================================================== \r\nexport default ({ loading, size, tip })=>  loading ? (\r\n\t<div className='abs_full fxmc' style={{background:'rgba(255,255,255,.5)'}}>\r\n\t\t<Spin size={size || 'large'} tip={tip} />\r\n\t</div>\r\n) : null\r\n","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\item.js",["1841"],"import React from 'react'\r\nimport { Form } from 'antd'\r\n// ===================================================================== 按钮集合\r\nexport default ({ children, name, label, className, rules, mt, ml, mr, mb, full, width}) => (\r\n\t<Form.Item \r\n\t\tname\t= { name }\r\n\t\tlabel\t= { label } \r\n\t\trules\t= { rules }\r\n\t\tstyle\t= {{ width:full?'100%':(width||'auto'), marginBottom:mb || 0, marginTop: mt, marginLeft:ml, marginRight:mr }}\r\n\t\tclassName = {className}\r\n\t>\r\n\t\t{ children }\r\n\t</Form.Item>\r\n)","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\form.js",[],"F:\\jia-git\\react-norson-lis\\src\\global\\template\\svg\\def-img.js",["1842","1843"],"﻿import React from 'react'\r\nconst dSize = '50px'\r\nconst dColor = '#bfbfbf'\r\n// ===================================================================== public component\r\nexport default ({ size, color }) => (\r\n\t<svg viewBox='0 0 1024 1024' width={size||dSize} height={size||dSize} style={{background:'#fff',borderRadius:'100%'}}>\r\n\t\t<path  fill={color||dColor} d='M511.99999999999983 1023.9999999999999C229.24799999999982 1023.9999999999994-1.1368683772161603e-13 794.7519999999995 0 511.99999999999994S229.2480000000004-1.1368683772161603e-13 512.0000000000001 0s511.9999999999999 229.24800000000036 511.99999999999955 512.0000000000003-229.24800000000036 511.9999999999999-512.0000000000003 511.99999999999955z m6.252776074688882e-13-938.666667C276.352 85.33333299999993 85.33333300000004 276.3519999999998 85.33333299999998 511.9999999999997s191.01866699999982 426.6666670000001 426.66666699999973 426.66666700000025 426.6666670000001-191.01866699999982 426.66666700000025-426.66666699999973S747.6480000000004 85.3333330000001 512.0000000000002 85.33333300000004z m309.8879999999996 627.7973340000001a42.666667 42.666667 0 0 1-58.28266699999999-15.616000000000035l-21.33333299999998-36.94933400000002-258.64533300000005 149.3333339999998a42.666667 42.666667 0 0 1-58.28266699999999-15.616000000000035l-63.99999999999993-110.84800000000001-73.89866700000005 42.66666599999995a42.666667 42.666667 0 0 1-42.66666599999995-73.89866600000006l110.84800000000001-63.99999999999993a42.666667 42.666667 0 0 1 58.28266599999999 15.616000000000039l63.99999999999993 110.84800000000001 258.64533400000005-149.3333339999998a42.666667 42.666667 0 0 1 58.28266599999999 15.616000000000039l42.66666699999996 73.89866700000002a42.666667 42.666667 0 0 1-15.616000000000035 58.28266699999999zM362.66666699999996 512a149.333333 149.333333 0 1 1 1.7053025658242404e-13-298.66666699999996 149.333333 149.333333 0 0 1-1.7053025658242404e-13 298.66666699999996z'></path>\r\n\t</svg>\r\n)","F:\\jia-git\\react-norson-lis\\src\\common\\utils\\moment.js",["1844"],"import moment from 'moment'\r\n\nexport default {\r\n\tformat(time,option){\r\n\t\tlet opt = { s:'-', l:'en', t:'ymd', ...option }\r\n\t\t\r\n\t\tlet f = opt.l === 'zh' ? 'YYYY年MM月DD日' : `YYYY${opt.s}MM${opt.s}DD`\r\n\t\t\r\n\t\tlet str = f\r\n\t\t\r\n\t\tif(typeof time === 'number' || time instanceof Object){\r\n\t\t\tswitch(opt.t){\r\n\t\t\t\tcase 'full':\r\n\t\t\t\t\tstr = f + ' HH:mm:ss';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ymd':\r\n\t\t\t\t\tstr = f;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hms':\r\n\t\t\t\t\tstr = 'HH:mm:ss';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hm':\r\n\t\t\t\t\tstr = 'HH:mm';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn moment(time).format(str)\r\n\t\t}else{\r\n\t\t\treturn '--'\r\n\t\t}\r\n\t},\r\n\tformats(time,option){\r\n\t\tlet opt = { s:'-', l:'en', t:'full', ...option }\r\n\t\treturn {\r\n\t\t\tfull: this.format(time,{...opt,t:'full'}),\r\n\t\t\tymd: this.format(time,{...opt,t:'ymd'}),\r\n\t\t\thms: this.format(time,{...opt,t:'hms'}),\r\n\t\t\thm: this.format(time,{...opt,t:'hm'}),\r\n\t\t}\r\n\t},\r\n\tgetTime(time){\r\n\t\treturn time ? new Date(time).getTime() :  new Date().getTime()\r\n\t},\r\n\ttime(time,t){\r\n\t\tif(time){\r\n\t\t\treturn this.format(time,{t})\r\n\t\t}else{\r\n\t\t\treturn null\r\n\t\t}\r\n\t},\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\tp\\addsubtract-form.js",["1845"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'  \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd \r\nconst message = import('@antd/message') \r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\titem_typeOptions = [\r\n        { label: \"加做\", value: \"1\" },\r\n        { label: \"减做\", value: \"2\" }\r\n    ]\r\n\tstate = {\r\n\t\tkeys: 0,\r\n\t\tsubmit: [\r\n\t\t\t{ label:'标本条码',\t\t\tname:'spec_code',\t\trequired:true, }, \r\n\t\t\t{ label:'加减项类型', \t\tname:'item_type',\t\ttype: 'select', data: this.item_typeOptions, nameStr:'label', idStr:'value', required:true },\r\n\t\t\t{ label:'姓名',\t\t\t\tname:'patient_name',    required:true }, \r\n\t\t\t{ label:'性别', \t\t\tname:'sex',\t\t\t\ttype: 'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t\t{ label:'项目', \t\t\tname:'kind_id',\t\t\ttype: 'select', data: [], nameStr:'name', idStr:'value', required:true  },\r\n            { label:'时间',\t\t\t\tname:'op_time',\t\t\ttype: 'date-time' },\r\n\t\t\t{ label:'岗位', \t\t\tname:'project_name',\ttype: 'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t\t{ label:'备注说明', \t\tname:'remark',\t\t\ttype: 'textarea', full:true, width:'100%'},\r\n\t\t\t{ label:'图片', \t\t\tname:'img',\t\t\t\ttype: 'upload', params: {modular: 130}},\r\n\t\t]\r\n\t}  \r\n\tmodel = {}\r\n\tcomponentDidMount(){  \r\n\t\tthis.props.onRef(this)  \r\n\t\tconst { submit } = this.state\r\n\t\t$fn.dataSave('dis-item-45700-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n\t\t\t\tsubmit[3].data = local\r\n\t\t\t\tthis.setState({submit: submit})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:45700}, loading:false}).then(data=>{\r\n\t\t\t\tsubmit[3].data = data\r\n\t\t\t\tthis.setState({submit: submit})\r\n\t\t\t\t$fn.dataSave('dis-item-45700-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t})  \r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.kindinfoSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) { \r\n\t\t\t\t\t\tsubmit[4].data = data\r\n\t\t\t\t\t\tthis.setState({submit: submit})\r\n\t\t\t\t\t} else {\r\n                        $http.submit(null, 'kind-info/select').then(data => {\r\n                            submit[4].data = data\r\n\t\t\t\t\t\t\tthis.setState({submit: submit})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.laboratoryselect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) { \r\n\t\t\t\t\t\tsubmit[6].data = data\r\n\t\t\t\t\t\tthis.setState({submit: submit})\r\n\t\t\t\t\t} else {\r\n                        $http.submit(null, 'project-team/laboratoryselect').then(data => {\r\n                            submit[6].data = data\r\n\t\t\t\t\t\t\tthis.setState({submit: submit})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t\tthis.changeInfo(this.props) \r\n\t}   \r\n    componentWillReceiveProps(props) {  \r\n\t\tif (props.rows !== this.props.rows) {\r\n\t\t\tthis.changeInfo(props)\r\n\t\t} \r\n    }\r\n\tchangeInfo = (props) => {   \r\n\t\tconsole.log('加减项赋值') \r\n\t\tthis.clears()\r\n\t\tconst { submit } = this.state\r\n\t\tif (props.type){\r\n\t\t\tsubmit[0].value = props.rows.spec_code || ''\r\n\t\t\tsubmit[1].value = props.rows.item_type || ''\r\n\t\t\tsubmit[2].value = props.rows.patient_name || ''\r\n\t\t\tsubmit[3].value = props.rows.sex || ''\r\n\t\t\tsubmit[4].value = props.rows.kind_id || ''\r\n\t\t\tsubmit[5].value = props.rows.op_time || '' \r\n\t\t\tsubmit[6].value = props.rows.project_name || ''\r\n\t\t\tsubmit[7].value = props.rows.remark || '' \r\n\t\t\tsubmit[8].value = props.rows.img || ''\r\n\t\t} else {\r\n\t\t\tsubmit[0].value = props.rows.spec_code || '' \r\n\t\t\tsubmit[2].value = props.rows.patient_name || '' \r\n\t\t\tsubmit[3].value = props.rows.sex || ''  \r\n\t\t} \r\n\t\tthis.setState({ submit: submit }) \r\n\t}\r\n\tsubmits = () => {\r\n\t\tconsole.log('加减项提交') \r\n\t\tthis.form.submit()\r\n\t}\r\n\tclears = () => {\r\n\t\tconsole.log('加减项清空') \r\n\t\t// this.form.resetFields(['item_type', 'patient_name', 'sex', 'kind_id', 'op_time', 'project_name', 'remark', 'img'])\r\n\t\tconst { submit } = this.state \r\n\t\tsubmit.forEach(i => {\r\n\t\t\tif (this.props.type) {\r\n\t\t\t\ti.value = ''\r\n\t\t\t} else if (i.name !== 'spec_code') {\r\n\t\t\t\ti.value = ''\r\n\t\t\t} \r\n\t\t})\r\n\t\tthis.setState({ submit: submit}) \r\n\t} \r\n\trender(){  \r\n\t\tconst { submit } = this.state\r\n\t\treturn ( \r\n\t\t\t<div> \r\n\t\t\t\t<SubmitForm  \r\n\t\t\t\t\tmodal\r\n\t\t\t\t\tdata \t\t= { submit }\r\n\t\t\t\t\tonChange    = { (v,press,{name})=> {\r\n\t\t\t\t\t\tsubmit.forEach(i => {\r\n\t\t\t\t\t\t\tif (i.name === name) {\r\n\t\t\t\t\t\t\t\ti.value = v\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) \r\n\t\t\t\t\t} }\r\n\t\t\t\t\tonSubmit    = { v => {   \r\n\t\t\t\t\t\tlet param = {...v}\r\n\t\t\t\t\t\tlet api ='sp-additional-item/add' \r\n\t\t\t\t\t\tlet info = '添加'  \r\n\t\t\t\t\t\tconsole.log(this.props.type)\r\n\t\t\t\t\t\tif (this.props.type) {\r\n\t\t\t\t\t\t\tparam = { ...v, uuid: this.props.rows.uuid}\r\n\t\t\t\t\t\t\tapi = 'sp-additional-item/edit' \r\n\t\t\t\t\t\t\tinfo = '编辑'\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\t$http.submit(null, api, { param: param, submitLoading:'infoLoading' }).then(data=>{\r\n\t\t\t\t\t\t\tmessage.then(f=>f.default.success(`${info}成功`))\r\n\t\t\t\t\t\t\tthis.clears() \r\n\t\t\t\t\t\t\tthis.props.close && this.props.close()\r\n\t\t\t\t\t\t}) \r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdisplay \t= { true }\r\n\t\t\t\t\tinit    \t= { form => this.form = form }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\switch.js",[],"F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\form\\radio.js",["1846","1847"],"﻿/* ====================================== toast  ====================================== */\r\nimport React from 'react'\r\nimport { Radio, Form } from 'antd'\r\nconst $fn = window.$fn\r\n// ===================================================================== Radio\r\nexport default ({ data, nameStr, name, value, onChange, onClick, dicId, size, optionType }) => {\r\n\tlet nStr = nameStr || 'codeName'\r\n\tlet optType = optionType || 'button'\r\n\tconst [ xdata, setData ] = React.useState(data||[])\r\n\tReact.useEffect(()=>{\r\n\t\tif(dicId){\r\n\t\t\t$fn.getDic(dicId).then(data=>{\r\n\t\t\t\tsetData(data)\r\n\t\t\t})\r\n\t\t}\r\n\t},[ dicId ])\r\n\treturn (\r\n\t\t<Form.Item name={name}>\r\n\t\t\t<Radio.Group size={size} value={value} onChange={onChange?onChange:()=>{}} >\r\n\t\t\t\t{\r\n\t\t\t\t\toptType === 'button' && xdata.map((v, i) => <Radio.Button key={i} onClick={()=>{onClick&&onClick(i)}} value={v.id} style={{ marginRight: '20px', lineHeight: '30px' }}>{v[nStr]}</Radio.Button>)\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\toptType !== 'button' && xdata.map((v, i) => <Radio key={i} onClick={()=>{onClick&&onClick(i)}} value={v.id} style={{ marginRight: '20px', lineHeight: '30px' }}>{v[nStr]}</Radio>)\r\n\t\t\t\t}\r\n\t\t\t</Radio.Group>\r\n\t\t</Form.Item>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\index.js",["1848"],"import React from 'react'\r\n// ===================================================================== private template\r\nconst Menu = window.$async(()=>import('#frame/menu'))\r\n// ===================================================================== 目录\r\nlet data = [\r\n\t{ title: '系统登录日志', path:'system-settings/login-log',\tcomponent:'administrators/system-settings/logs/login-log', root: 'system-settings', to: 'system-settings/login-log'},\r\n\t{\r\n\t\ttitle: '基础设置',\r\n\t\tchildren: [\r\n\t\t\t{ title: '列表模式', path:'system-settings/basic',\tcomponent:'administrators/system-settings/basic-settings/list-mode'},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: '集团设置',\r\n\t\tchildren: [\r\n\t\t\t{ title: '集团设置',\t\tpath:'system-settings/group-settings',\t\tcomponent:'administrators/system-settings/group-settings/index'},\r\n\t\t\t{ title: '系统物价管理',\tpath:'system-settings/price-management',\tcomponent:'administrators/system-settings/group-settings/price-management'},\r\n\t\t\t{ title: '公司模板列表',\tpath:'system-settings/company-template',\tcomponent:'administrators/system-settings/group-settings/company-template'},\r\n\t\t\t{ title: '系统设置-源配置',\tpath:'system-settings/source-config',\t\tcomponent:'administrators/system-settings/group-settings/source-config'},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: '项目设置',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\ttitle: '检测项目',\r\n\t\t\t\tpath:'system-settings/project-settings',\r\n\t\t\t\tcomponent:'administrators/system-settings/project/index',\r\n\t\t\t\tchild:[\r\n\t\t\t\t\t{ title: '设置单一项目',\tpath: 'single',\t\t\t\tcomponent:'administrators/system-settings/project/single',\t\t\t\t\tcache:true },\r\n\t\t\t\t\t{ title: '新增从属项目',\tpath: 'subordinate',\t\tcomponent:'administrators/system-settings/project/subordinate',\t\t\t\tcache:true},\r\n\t\t\t\t\t{ title: '设定组合项目',\tpath: 'combination',\t\tcomponent:'administrators/system-settings/project/combination',\t\t\t\tcache:true },\r\n\t\t\t\t\t{ title: '设置营销项目',\tpath: 'marketing',\t\t\tcomponent:'administrators/system-settings/project/marketing',\t\t\t\tcache:true },\r\n\t\t\t\t\t{ title: '参考范围',\t\tpath: 'reference-range',\tcomponent:'administrators/system-settings/project/tp/reference-range-form',\tcache:true },\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\ttitle: '导出规则管理',\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\ttitle: '导出规则设置',\r\n\t\t\t\tpath: 'system-settings/export-rule',\r\n\t\t\t\tcomponent: 'administrators/system-settings/export-rule/index',\r\n\t\t\t\tchild:[\r\n\t\t\t\t\t{ title: '配置导出模板', path: 'template', component:'administrators/system-settings/export-rule/template', cache:true }\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{ title: '打印机管理',\tpath: 'system-settings/printer',\tcomponent: 'administrators/system-settings/printer/index' },\r\n\t{ title: '系统日志',\tpath: 'system-settings/system-log',\tcomponent: 'administrators/system-settings/logs/system-log' },\r\n]\r\n// ===================================================================== component\r\nexport default () => <Menu data={data} />","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\index.js",["1849"],"import React from 'react'\r\n// ===================================================================== private template\r\n// import Menu from '#frame/menu'\r\nconst Menu = window.$async(()=>import('#frame/menu'))\r\n// ===================================================================== 目录\r\nconst data = [     \r\n\t{ title: '录入条码', path:'lgistics-page/enter-barcode',\tcomponent:'lgistics/lgistics-page/enter-barcode/index', root: 'lgistics-page', to: 'lgistics-page/enter-barcode'}, // 已完成 \r\n\t{\r\n\t\ttitle: '标箱管理',\r\n\t\tchildren: [\r\n\t\t\t{ title: '物流办事处',\tpath: 'lgistics-page/teus/logistics-office',\tcomponent:'lgistics/lgistics-page/teus/logistics-office' }, // 已完成 2020-12-10 | 省市区联动未完成\r\n            { title: '标箱管理',\t\tpath: 'lgistics-page/teus/index',\t\t\t\tcomponent:'lgistics/lgistics-page/teus/index' },  // 已完成 2020-12-8 \r\n            { title: '标箱使用记录',\tpath: 'lgistics-page/teus/use-record',\t\t\tcomponent:'lgistics/lgistics-page/teus/use-record' },  // 已完成 2020-12-8 \r\n\t\t]\r\n\t}, \r\n\t{ \r\n\t\ttitle: '基本资料录入', path: 'lgistics-page/basic-data-entry/index',  component: 'administrators/specimen-manage/basic-data-entry/index',\r\n\t\tchild:[\r\n\t\t\t{ title: '双录入', path: 'doubleentry', component: 'administrators/specimen-manage/basic-data-entry/tp/doubleentry' }, \r\n\t\t\t{ title: '快捷录入', path: 'quickentry', component: 'administrators/specimen-manage/basic-data-entry/tp/quickentry' }, \r\n\t\t]\r\n\t},  \r\n\t{ \r\n\t\ttitle: '项目信息', path: 'lgistics-page/project-list/index',  component: 'administrators/specimen-manage/project-list/index',\r\n\t\tchild:[\r\n\t\t\t{ title: '录入项目/审核项目', path: 'info-project', component: 'administrators/specimen-manage/project-list/tp/info-project' }, \r\n\t\t]\r\n\t},   \r\n\t{ \r\n\t\ttitle: '待处理标本图片', path: 'lgistics-page/processed-image',  component: 'administrators/specimen-manage/processed-image',\r\n\t\tchild:[\r\n\t\t\t{ title: '图片上传', path: 'upload', component:'administrators/specimen-manage/processed-image-upload' }, \r\n\t\t\t{ title: '条码关联', path: 'relevance', component:'administrators/specimen-manage/processed-image-relevance' }, \r\n\t\t\t{ title: '图片审核', path: 'audit', component:'administrators/specimen-manage/processed-image-audit' }  \r\n\t\t]\r\n\t },\r\n\t{ title: '条码管理', \t\tpath: 'lgistics-page/generate-barcode',\t\t\tcomponent:'administrators/specimen-manage/generate-barcode' }, \r\n\t{ title: '条码生成记录',\tpath: 'lgistics-page/generate-barcode-record',\tcomponent:'lgistics/lgistics-page/generate-barcode-record' }, // 已完成 2020-12-7\r\n\t{ title: '我的标箱',\t\tpath: 'lgistics-page/my-teu',\t\t\t\t\tcomponent:'lgistics/lgistics-page/my-teu/index' }, // 已完成 2020-12-8 \r\n\t{ \r\n\t\ttitle: '标本箱转移',\t\tpath: 'lgistics-page/box-transfer',\t\t\t\tcomponent:'lgistics/lgistics-page/box-transfer/index', // 已完成 2020-12-10\r\n\t\tchild: [\r\n\t\t\t{ title: '整箱转箱', path: 'full-transfer', component: 'lgistics/lgistics-page/box-transfer/full-transfer' },  // 已完成 2020-12-15\r\n\t\t\t{ title: '部分转箱', path: 'part-transfer', component: 'lgistics/lgistics-page/box-transfer/part-transfer' }  // 已完成 2020-12-15\r\n\t\t]\r\n\t},\r\n\t{ title: '我的申请单',\t\tpath: 'lgistics-page/my-application',\t\t\tcomponent:'lgistics/lgistics-page/my-application/index',  // 已完成 2020-12-9\r\n\t\tchild: [\r\n\t\t\t{ title: '详细信息', path: 'detail', component: 'lgistics/lgistics-page/my-application/detail' },  // 已完成 2020-12-9\r\n\t\t]\r\n\t}, \r\n\t{ title: '报告单派送',\t\tpath: 'lgistics-page/reports-delivered',\t\tcomponent:'lgistics/lgistics-page/reports-delivered' },   // 已完成 2020-12-9 | 预览未完成\r\n\t{ title: '物流跟踪',\t\tpath: 'lgistics-page/logistics-tracking',\t\tcomponent:'lgistics/lgistics-page/logistics-tracking/index' }, // 已完成 2020-12-9 | 手动录入未完成\r\n\t{ \r\n\t\ttitle: '我的医院',\t\tpath: 'lgistics-page/my-hospital',\t\t\t\tcomponent:'lgistics/lgistics-page/my-hospital/index',  // 已完成 2020-12-9\r\n\t\tchild: [\r\n\t\t\t{ title: '查看报告', path: 'report', component: 'lgistics/lgistics-page/my-hospital/report' },  // 已完成 2020-12-9 | 预览未完成\r\n\t\t]\r\n\t}, \r\n\t{ title: '我的外包清单',\tpath: 'lgistics-page/my-outsourcing-list',\t\tcomponent:'lgistics/lgistics-page/my-outsourcing-list' }, // 已完成 2020-12-9\r\n]\r\n// ===================================================================== component\r\nexport default () => <Menu data={data} />","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\index.js",["1850"],"import React from 'react'\r\n// ===================================================================== private template\r\n// import Menu from '#frame/menu'\r\nconst Menu = window.$async(()=>import('#frame/menu'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{ \r\n\t\ttitle: '账单统计',\r\n\t\troot: 'finance-page',\r\n\t\tto: 'finance-page/control',\r\n\t\tchildren: [\r\n\t\t\t{ title: '收入成本汇总统计',path: 'finance-page/control',\t      component:'finance/finance-page/tp/control',  },\r\n\t\t\t{ title: '收入成本明细',    path: 'finance-page/cost-breakdown',  component: 'finance/finance-page/cost-breakdown' },\r\n\t\t\t{ title: '总外包清单管理',  path: 'finance-page/outsourcing-list',component: 'finance/finance-page/outsourcing-list' },\r\n\t\t\t{ title: '自然项目统计',  \tpath: 'finance-page/natural-projects',component: 'finance/finance-page/tp/natural-projects' },\r\n\t\t]\r\n\t},\r\n\t{ title: '账单明细',\t  path: 'finance-page/finance-list/bill-details',\t\tcomponent: 'finance/finance-page/finance-list/bill-details' },\r\n\t{ title: '财务待确认账单',path:'finance-page/finance-list/finance-confirm',\t\tcomponent: 'finance/finance-page/finance-list/finance-confirm' },\r\n\t{ title: '账单结算-明细', path:'finance-page/finance-list/settlement-details',\tcomponent: 'finance/finance-page/finance-list/settlement-details' },\r\n\t{ title: '账单结算-医院', path:'finance-page/finance-list/settlement-hospital',\tcomponent: 'finance/finance-page/finance-list/settlement-hospital' },\r\n\t{ title: '已结算账单查询',path:'finance-page/finance-list/bill-inquiry',\t\tcomponent: 'finance/finance-page/finance-list/bill-inquiry' },\r\n]\r\n// ===================================================================== component\r\nexport default () => <Menu data={data} />","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\index.js",["1851"],"import React from 'react'\r\n// ===================================================================== private template\r\n// import Menu from '#frame/menu'\r\nconst Menu = window.$async(()=>import('#frame/menu'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{ \r\n\t\ttitle: '血液室',\r\n\t\troot: 'testing-center', \r\n\t\tto: 'testing-center',\r\n\t\tcomponent: 'laboratory/testing-center',\r\n\t\tchildren: [\r\n\t\t\t// 44008  液基细胞病理岗\r\n\t\t\t// 44011  血培养岗\r\n\t\t\t// 44012  支原体岗\r\n\t\t\t{ title: '特殊染色岗44013', \tcomponent: 'laboratory/testing-center/result44013', path: 'testing-center/result44013/44013/64ee74bc-1247-e85b-f15c-22c8ba77c798/0' }, \r\n\t\t\t{ title: '常规生化岗44014', \tcomponent: 'laboratory/testing-center/result44014', path: 'testing-center/result44014/44014/a6890c25-3238-206f-38da-aa8b59657582/0' }, \r\n\t\t\t{ title: '细胞遗传岗44015', \tcomponent: 'laboratory/testing-center/result44015', path: 'testing-center/result44015/44015/9394162e-208f-b8e7-5c81-c18c1edaa749/0' }, \r\n\t\t\t{ title: '骨髓涂片岗44016', \tcomponent: 'laboratory/testing-center/result44016', path: 'testing-center/result44016/44016/548f7cf9-2d53-1762-5861-6da8345a4285/0' }, \r\n\t\t\t{ title: '血液杂项岗44017', \tcomponent: 'laboratory/testing-center/result44014', path: 'testing-center/result44017/44017/67a5fd1c-8aeb-2ac9-8ce4-53cb9804809d/0' }, \r\n\t\t\t{ title: '荧光原位杂交岗44018',\tcomponent: 'laboratory/testing-center/result44018', path: 'testing-center/result44018/44018/4c61ed22-06c6-92f4-b996-ab09af26fe30/0' }, \r\n\t\t\t{ title: '院感岗44019', \t\tcomponent: 'laboratory/testing-center/result44014', path: 'testing-center/result44019/44019/235a168d-9f16-3e1a-87b3-2eadf6325e56/0' }, \r\n\t\t\t// result44020  培养鉴定药敏岗\r\n\t\t\t{ title: '组织病理岗44021', \tcomponent: 'laboratory/testing-center/result44021', path: 'testing-center/result44021/44021/39c1b0fd-0515-7f73-3da7-d7ea7a6a0269/0' }, \r\n\t\t\t{ title: '免疫组化岗44022', \tcomponent: 'laboratory/testing-center/result44022', path: 'testing-center/result44022/44022/fd5ec2e5-5caa-1c44-2ee1-72bfd29849c3/0' }, \r\n\t\t\t{ title: '常规涂片岗44024', \tcomponent: 'laboratory/testing-center/result44014', path: 'testing-center/result44024/44024/7e8a74bb-b6fc-50cc-dfc0-d2ab25747552/0' }, \r\n\t\t\t{ title: 'T-SPOT岗44025', \t\tcomponent: 'laboratory/testing-center/result44014', path: 'testing-center/result44025/44025/529c051b-df10-e54a-5d32-59b8cec4b72c/0' }, \r\n\t\t\t{ title: 'HPV分型岗44027', \t\tcomponent: 'laboratory/testing-center/result44014', path: 'testing-center/result44027/44027/529c051b-df10-e54a-5d32-59b8cec4b72c/0' }, \r\n\t\t\t{ title: '过敏原岗44028', \t\tcomponent: 'laboratory/testing-center/result44014', path: 'testing-center/result44028/44028/302ff16a-7997-5c1b-4630-c132c13baafb/0' }, \r\n\t\t\t{ title: '细胞涂片岗44029', \tcomponent: 'laboratory/testing-center/result44029', path: 'testing-center/result44029/44029/f61d71d3-337c-0155-85a9-1c52964fee1f/0' }, \r\n\t\t\t{ title: '非妇科液基岗44030', \tcomponent: 'laboratory/testing-center/result44030', path: 'testing-center/result44030/44030/24bb0bcf-a7e0-9ee6-a6af-e9a8dffd6a5b/0' },\r\n\t\t\t{ title: 'CTC岗44031', \t\t\tcomponent: 'laboratory/testing-center/result44031', path: 'testing-center/result44031/44031/5ab013ad-385a-5f71-6d5c-eb2cf574f34b/0' },\r\n\t\t]\r\n\t}, \r\n\t// {\r\n\t// \ttitle: '生化室',\r\n\t// \tchildren: [\r\n\t// \t\t{ title: '常规生化岗', id:'44014', pid:'a6890c25-3238-206f-38da-aa8b59657582' },\r\n\t// \t\t{ title: '糖化岗', id:'44014', pid:'baeab0a5-0a02-870d-79d7-0f562ece48cf' },\r\n\t// \t]\r\n\t// },\r\n]\r\n// const { root } = window.$fn.getRoot()\r\n// const _root = data[0].root\r\n// data.forEach((v,i)=>{\r\n// \tconst d = v.children[0]\r\n// \tif(i === 0){\r\n// \t\tv.to = v.root + '/' + d.id + '/' + d.pid\r\n// \t}\r\n// \tv.children.forEach((m,k)=>{\r\n// \t\tconst { id, pid } = m\r\n// \t\tm.component = `laboratory/testing-center/result${id}`\r\n// \t\tm.path = _root + '/' + id + '/' + pid\r\n// \t\tm.url = root + _root\r\n// \t})\r\n// })\r\n// ===================================================================== component\r\nexport default () => <Menu data={data} />","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\index.js",["1852"],"F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\index.js",["1853"],"import React from 'react'\r\n// ===================================================================== private template\r\n// import Menu from '#frame/menu'\r\nconst Menu = window.$async(()=>import('#frame/menu'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{ \r\n\t\ttitle: '医院管理',\r\n\t\troot: 'businessList',\r\n\t\tto: 'businessList/My-hospital-clients',\r\n\t\tchildren: [\r\n\t\t\t{ \ttitle: '我的医院客户',path: 'businessList/My-hospital-clients', \t\t \r\n\t\t\t\tcomponent: 'business/businessList/My-hospital-clients'}, \t\t // 表格的查看和编辑未做\r\n\t\t\t{ \ttitle: '下级医院客户',\r\n\t\t\t\tpath: 'businessList/LowerLevel-hospital-clients',\r\n\t\t\t\tcomponent: 'business/businessList/LowerLevel-hospital-clients',\r\n\t\t\t\tchild:[\r\n\t\t\t\t\t{ title: '医院客户编辑', path: 'add', component:'business/businessList/child/my-hospital-child', cache:true }\r\n\t\t\t\t]}, // 表格的查看和编辑未做\r\n\t\t]\r\n\t},\r\n\t{ \r\n\t\ttitle: '合同管理',\r\n\t\tchildren: [\r\n\t\t\t{ title: '我的合同管理',path: 'businessList/My-contract-manage',\t     \r\n\t\t\t\tcomponent: 'business/businessList/My-contract-manage'},\t\t\t// 表格操作未做\r\n\t\t\t{ title: '下级合同管理',path: 'businessList/LowerLevel-contract-manage', \r\n\t\t\t\tcomponent: 'business/businessList/LowerLevel-contract-manage'},\t// 表格操作未做\r\n\t\t]\r\n\t},\r\n\t{ title: '我的下级业务员',\t  \tpath: 'businessList/My-lowerLevel-salesman',\t \r\n\t\tcomponent: 'business/businessList/My-lowerLevel-salesman'},\r\n\t{ \r\n\t\ttitle: '账单管理',\r\n\t\tchildren: [\r\n\t\t\t{ title: '我的财务账单',path: 'businessList/My-finance-bill',\t      \t \r\n\t\t\t\tcomponent: 'business/businessList/My-finance-bill'},\r\n\t\t\t{ title: '下级财务账单',path: 'businessList/LowerLevel-finance-bill',    \r\n\t\t\t\tcomponent: 'business/businessList/LowerLevel-finance-bill'},\r\n\t\t]\r\n\t},\r\n\t{ title: '待确认账单',\t\t\tpath:'businessList/bill-ToBeConfirmed',  \t\t \r\n\t\tcomponent: 'business/businessList/bill-ToBeConfirmed'},\r\n\t\r\n\t{ \r\n\t\ttitle: '业务管理',\r\n\t\tchildren: [\r\n\t\t\t{ title: '业务员管理',  path: 'businessList/salesman-manage',  \t\t\t \r\n\t\t\t\tcomponent: 'business/businessList/salesman-manage'}, // 已完成\r\n\t\t\t{ title: '业务区域',    path: 'businessList/salesman-region',  \t\t\t \r\n\t\t\t\tcomponent: 'business/businessList/salesman-region'},  // 已完成\r\n\t\t\t{ title: '修改项目价格',path: 'businessList/Modify-project-price',\t    \r\n\t\t\t\tcomponent: 'business/businessList/Modify-project-price'}, // 已完成\r\n\t\t]\r\n\t},\r\n\t{ \r\n\t\ttitle: '客户管理',\r\n\t\tchildren: [\r\n\t\t\t{ title: '医院客户',\tpath: 'businessList/hospital-clients',\t         \r\n\t\t\t\tcomponent: 'business/businessList/hospital-clients',\r\n\t\t\t\tchild:[\r\n\t\t\t\t\t{ title: '物价管理', path: 'clients', component:'business/businessList/child/price-control', cache:true },\r\n\t\t\t\t]},\r\n\t\t\t{ \ttitle: '合同管理',    \r\n\t\t\t\tpath: 'businessList/contract-manage',  \t\t\t \r\n\t\t\t\tcomponent: 'business/businessList/contract-manage',\r\n\t\t\t\tchild:[\r\n\t\t\t\t\t{ title: '合同签订记录', path: 'record', component:'business/businessList/child/contract-signing-record', cache:true },\r\n\t\t\t\t\t{ title: '合同签订记录', path: 'edit',\t component:'business/businessList/child/contract-signing-edit',   cache:true }\r\n\t\t\t\t]},\r\n\t\t]\r\n\t},\r\n]\r\n// ===================================================================== component\r\nexport default () => <Menu data={data} />","F:\\jia-git\\react-norson-lis\\src\\private\\frame\\router.js",["1854","1855"],"F:\\jia-git\\react-norson-lis\\src\\global\\plugin\\antd\\tabs.js",[],"F:\\jia-git\\react-norson-lis\\src\\views\\login.js",[],"F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\router.js",["1856"],"/* ====================================== 模块子路由配置  ====================================== */\r\nimport React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n// ===================================================================== 异步加载\r\nimport Import from '@com/bundle'\r\n// ===================================================================== 路由配置\r\nimport Workbench from '@views/workbench/main'\r\nimport Lgistics from '@views/lgistics/lgistics-page'\r\n// ===================================================================== 同步路由\r\nexport default () => (\r\n\t<Switch>\r\n\t\t<Route \tpath='/lgistics/workbench' \t\t\tcomponent={ Workbench }  />\r\n\t\t<Route \tpath='/lgistics/lgistics-page' \t\tcomponent={ Lgistics }  />\r\n\t\t{/* 重定向 */}\r\n\t\t<Route path='/lgistics' children={<Redirect to='/lgistics/workbench/index' />}  />\r\n\t\t{/* 404 */}\r\n\t\t<Route component={ Import('404') } />\r\n\t</Switch>\r\n)","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\main.js",["1857"],"import React from 'react'\r\n// ===================================================================== private template\r\nimport Router from './router'\r\nconst Frame = window.$async(()=>import('#frame/frame'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{ title: '工作台', path:'workbench'}, \r\n\t{ title: '物流系统', path:'lgistics-page'}, \r\n]\r\n\r\n// ===================================================================== component\r\nexport default () => <Frame title='物流系统' data={data} Router={Router} />","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\teus\\use-record.js",["1858","1859","1860","1861"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi') \r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}  \r\n\tforms = [ \r\n\t\t{ label:'标本箱号',\t\tname:'box_number',\t\ttype:'input' }, \r\n\t\t{ label:'使用时间',\t\tname:'date',\t\t\ttype:'date-range', names:['created_at_start_date', 'created_at_end_date'] } \r\n\t]  \r\n\tmodel = {}\r\n\tcomponentDidMount(){   \r\n\t\tthis.fetch(this.model)\r\n\t} \r\n\t// paging \r\n\tfetch = param => $fn.fetch.call(this,'boxlogs/index', param)\r\n\tcols = [\r\n\t\t{ title: '标箱编号',\t\tfield: 'box_number',\t\twidth:120 },\r\n\t\t{ title: '业务员名',\t\tfield: 'receiver_name',\t\twidth:120 },\r\n\t\t{ title: '使用内容',\t\tfield: 'content',\t\t\twidth:200 },\r\n\t\t{ title: '使用时间',\t\tfield: 'created_at',\t\twidth:150 }\r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='标箱使用记录' >\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\teus\\logistics-office.js",["1862"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button')) \r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label:'办事处名称',\t\tname:'contact_name',\t\ttype: 'input',\t\trequired:true },\r\n\t\t\t{ label:'联系电话', \t\tname:'contact_phone',\t\ttype: 'input' },\r\n\t\t\t{ label:'位置选择', \t\tname:'areaData',\t\t\ttype: 'select', data: [], nameStr:'name', idStr:'uuid' }, // 省市区联动\r\n\t\t\t{ label:'具体位置', \t\tname:'street',\t\t\t\ttype: 'input' },\r\n\t\t]\r\n\t} \r\n\tisEdit = false\r\n\tforms = [ \r\n\t\t{ label:'办事处名称',\t\tname:'contact_name',\ttype:'input' },  \r\n\t\t{ label:'联系电话',\t\t\tname:'contact_phone',\ttype:'input' },  \r\n\t\t{ label:'创建时间',\t\t\tname:'date',\t\t\ttype:'date-range', names:['created_at_start_date', 'created_at_end_date'] } \r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\tthis.fetch(this.model)\r\n\t} \r\n\tfetch = param => $fn.fetch.call(this,'sp-box-address/index', param) \r\n\tcols = [ \r\n\t\t{ type: 'checkbox' },\r\n\t\t{ title: '省', \t\tfield: 'province', \t\twidth:100 },\r\n\t\t{ title: '市', \t\tfield: 'city', \t\t\twidth:100 },\r\n\t\t{ title: '区', \t\tfield: 'area', \t\t\twidth:100 },\r\n\t\t{ title: '街道', \t\tfield: 'street', \t\t\twidth:120 },\r\n\t\t{ title: '办事处名称', \t\tfield: 'contact_name', \t\t\twidth:120 },\r\n\t\t{ title: '联系电话', \t\tfield: 'contact_phone', \t\t\twidth:100 },\r\n\t\t{ title: '状态', \t\tfield: 'enabled', \t\t\twidth:80, render: ({rows}) => {\r\n\t\t\tconst options =[\r\n\t\t\t\t{ label: \"启用\", value: \"1\" },\r\n\t\t\t\t{ label: \"禁用\", value: \"0\" }\r\n\t\t\t]\r\n\t\t\treturn $fn.filterSelect(options, rows.enabled, 'label', 'value')\r\n\t\t} },\r\n\t\t{ title: '创建时间', \t\tfield: 'created_at', \t\t\twidth:150 },\r\n\t\t{ title: '操作', \t\talign:'tc', \t\t\t\twidth:90, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5 fx'>\r\n\t\t\t\t\t<Button label='编辑' ghost className='mlr5' onClick={()=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tthis.rows = rows\r\n\t\t\t\t\t\tthis.isEdit = true\r\n\t\t\t\t\t\t$http.submit(null, 'sp-box-address/info', { param: {uuid: rows.uuid}} ).then(data => {\r\n\t\t\t\t\t\t\tsubmit[0].value = data['contact_name']\r\n\t\t\t\t\t\t\tsubmit[1].value = data['contact_phone']\r\n\t\t\t\t\t\t\tsubmit[2].value = data['areaData'] \r\n\t\t\t\t\t\t\tsubmit[3].value = data['street']  \r\n\t\t\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}/> \r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}} \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2',\tcode:'F2',   onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = '' \r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} }, \r\n\t\t\t{ label:'删除',  \tghost:true, disabled: this.state.selectedKeys.length <= 0,  onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(i => i.uuid)}\r\n \t\t\t\tcoms.interfaceConfirm('sp-box-address/delete', '删除', param, () => { this.fetch(this.model) })\r\n\t\t\t} },\r\n\t\t\t{ label:'启用',  \tghost:true, disabled: this.state.selectedKeys.length <= 0,  onClick:()=>{ \r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(i => i.uuid)}\r\n \t\t\t\tcoms.interfaceConfirm('sp-box-address/on', '启用', param, () => { this.fetch(this.model) })\r\n\t\t\t} },\r\n\t\t\t{ label:'禁用',  \tghost:true, disabled: this.state.selectedKeys.length <= 0,  onClick:()=>{ \r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(i => i.uuid)}\r\n \t\t\t\tcoms.interfaceConfirm('sp-box-address/off', '禁用', param, () => { this.fetch(this.model) })\r\n\t\t\t} },\r\n\t\t\t{ label:'文件导入', ghost:true,  onClick:()=>{ } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='物流办事处' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tonAdd\t\t= { ()=> $fn.push(this, $fn.getRoot().root + 'specimen-manage/processed-image/upload') }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => { \r\n\t\t\t\t\t\t\tlet param = { ...v}\r\n\t\t\t\t\t\t\tlet api ='sp-box-address/add' \r\n\t\t\t\t\t\t\tlet info = '添加'  \r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tparam = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\tapi = 'sp-box-address/edit' \r\n\t\t\t\t\t\t\t\tinfo = '编辑'\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t$http.submit(null, api, { param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success(`${info}成功`))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t\t\t\t}) \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\teus\\index.js",["1863"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi') \r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tisEdit = false\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tselectRows: {},\r\n\t\tbox_statusSelect: [], // 标箱状态\r\n\t\temployeeSelect: [], // 人员\r\n\t\tsubmit: [\r\n\t\t\t{ label:'标箱条码',\t\tname:'box_code', \t\tdisabled: false },\r\n\t\t\t{ label:'办事处地址', \tname:'address_id',\t\ttype: 'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t\t{ label:'gps设备', \t\tname:'gps_id',\t\t\ttype: 'select', data: [], nameStr:'name', idStr:'value', disabled: false },\r\n\t\t\t{ label:'容量',\t\t\tname:'spec_count' },\r\n\t\t\t// { label:'标箱状态', \tname:'box_status',\t\ttype: 'select', data: [], nameStr:'name', idStr:'value'}\r\n\t\t],\r\n\t\tsubmit1: [\r\n\t\t\t{ label:'办事处地址', \tname:'address_id',\t\ttype: 'select', data: [], nameStr:'name', idStr:'value' } \r\n\t\t],\r\n\t\tsubmit2: [\r\n\t\t\t{ label:'物流人员', \tname:'receiver_id',\t\ttype: 'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t\t{ label:'所属标箱',\t\tname:'box_number', \t\tdisabled: true },\r\n            { label:'领取时间',\t\tname:'use_time',\t\ttype:'date-time' },\r\n\t\t\t{ label:'备注', \t\tname:'content',\t\t\ttype: 'textarea', full:true, width:'100%' } \r\n\t\t]\r\n\t}  \r\n\ttypeSelect = [\r\n\t\t{ label: \"系统标箱\", value: \"1\" },\r\n\t\t{ label: \"虚拟标箱\", value: \"2\" }\r\n\t] \r\n\tboxStatusSelect = [\r\n\t\t{ label: \"待领取\", value: 81 },\r\n\t\t{ label: \"待使用\", value: 82 },\r\n\t\t{ label: \"待接收\", value: 83 },\r\n\t\t{ label: \"已接收\", value: 84 },\r\n\t\t{ label: \"已退回\", value: 85 }, \r\n\t\t{ label: \"废弃\", value: 87 }\r\n\t]\r\n\tforms = [ \r\n\t\t{ label:'标箱条码',\t\tname:'box_code',\t\ttype:'input' }, \r\n\t\t{ label:'创建时间',\t\tname:'date',\t\t\ttype:'date-range', names:['created_at_start_date', 'created_at_end_date'] },\r\n\t\t{ label:'标本箱状态',\tname:'box_status',\t\ttype:'select', data: this.boxStatusSelect, nameStr:'label', idStr:'value' },\r\n\t]  \r\n\tmodel = {}\r\n\tcomponentDidMount(){   \r\n\t\tconst { submit, submit1, submit2 } = this.state\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({ // gps设备\r\n\t\t\t\tcache: f.default.gpsSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        submit[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'sp-gps-device/select').then(data => {\r\n                            submit[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 办事处地址\r\n\t\t\t\tcache: f.default.spBoxAddress, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit[1].data = data\r\n\t\t\t\t\t\tsubmit1[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'sp-box-address/select').then(data => {\r\n                            submit[1].data = data\r\n\t\t\t\t\t\t\tsubmit1[0].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})   \r\n\t\t\t$fn.getCache({ // 员工\r\n\t\t\t\tcache: f.default.employeeSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit2[0].data = data \r\n\t\t\t\t\t\tthis.setState({employeeSelect: data})\r\n                    } else {\r\n                        $http.submit(null, 'employee/select').then(data => {\r\n                            submit2[0].data = data \r\n\t\t\t\t\t\t\tthis.setState({employeeSelect: data})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})   \r\n\t\t$fn.dataSave('dis-item-80-data').then(local => { // 标箱状态 \r\n\t\t\tif($fn.hasArray(local)){ \r\n\t\t\t\tthis.setState({box_statusSelect: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param: {dis_code: 80}}).then(data=>{\r\n\t\t\t\tthis.setState({box_statusSelect: data})\r\n\t\t\t\t$fn.dataSave('dis-item-80-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})  \r\n\t\tthis.fetch(this.model) \r\n\t} \r\n\t// paging \r\n\tfetch = param => $fn.fetch.call(this,'box/index', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '标箱条码',\t\tfield: 'box_code',\t\t\twidth:90 },\r\n\t\t{ title: '标箱编号',\t\tfield: 'box_number',\t\twidth:90 },\r\n\t\t{ title: 'gps设备',\t\t\tfield: 'gps_number',\t\twidth:90 },\r\n\t\t{ title: '办事处地址',\t\tfield: 'address',\t\t\twidth:200 },\r\n\t\t{ title: '容量',\t\t\tfield: 'total_count',\t\twidth:80 },\r\n\t\t{ title: '标本箱状态',\t\tfield: 'box_status_name',\twidth:80 },\r\n\t\t{ title: '创建时间',\t\tfield: 'created_at',\t\twidth:150 },\r\n\t\t{ title: '类型',\t\t\tfield: 'type',\t\t\t\twidth:80, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.typeSelect, rows.type, 'label', 'value') \r\n\t\t}}, \r\n\t\t{ title: '操作', \t\t\talign:'tc', \t\t\t\twidth:120, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e => {\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit, box_statusSelect } = this.state\r\n\t\t\t\t\t\tthis.rows = rows\r\n\t\t\t\t\t\tthis.isEdit = true\r\n\t\t\t\t\t\t$http.submit(this, 'box/info', { param: {uuid: rows.uuid}} ).then(data => {\r\n\t\t\t\t\t\t\tsubmit[0].value = data['box_code']\r\n\t\t\t\t\t\t\tsubmit[1].value = data['address_id']\r\n\t\t\t\t\t\t\tsubmit[2].value = data['gps_id'] \r\n\t\t\t\t\t\t\tsubmit[3].value = data['spec_count'] \r\n\t\t\t\t\t\t\tsubmit[4] = { label:'标箱状态', \tname:'box_status',\t\ttype: 'select', data: box_statusSelect, nameStr:'name', idStr:'value'}\r\n\t\t\t\t\t\t\tsubmit[4].value = data['box_status']  \r\n\t\t\t\t\t\t\tsubmit[0].disabled = true\r\n\t\t\t\t\t\t\tsubmit[2].disabled = true\r\n\t\t\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t\t\t}) \r\n\t\t\t\t\t}}/>  \r\n\t\t\t\t\t{String(rows.box_status) === \"85\" && <Button label='分配' ghost className='ml10' onClick={e => { \r\n\t\t\t\t\t\tthis.rows1 = rows \r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t}}/> }\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}}  \r\n\t]   \r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = '' \r\n\t\t\t\tdelete submit[4]\r\n\t\t\t\tsubmit[0].disabled = false\r\n\t\t\t\tsubmit[2].disabled = false\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t}},\r\n\t\t\t{ label:'禁用', ghost:true, disabled: this.state.selectedKeys <= 0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('box/delete', '禁用', param, () => { this.fetch(this.model) })\r\n\t\t\t}},\r\n\t\t\t{ label:'退回', ghost:true, disabled: this.state.selectedKeys <= 0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('box/return', '退回', param, () => { this.fetch(this.model) })\r\n\t\t\t}},\r\n\t\t\t{ label:'领取', ghost:true, disabled: !$fn.hasObject(this.state.selectRows), onClick:()=>{ \r\n\t\t\t\tthis.refs.modal2.open()\r\n\t\t\t\tconst { submit2, selectRows } = this.state\r\n\t\t\t\tsubmit2[0].value = ''\r\n\t\t\t\tsubmit2[1].value = selectRows.box_code\r\n\t\t\t\tsubmit2[2].value = coms.intervalTime(null, null) // 当前时间\r\n\t\t\t\tsubmit2[3].value = ''    \r\n\t\t\t\tthis.setState({ submit2 }) \r\n\t\t\t}},\r\n\t\t\t{ label:'文件导入', ghost:true, onClick:()=>{\r\n\t\t\t\t// const param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\t// coms.interfaceConfirm('pick-group/del', '领取', param, () => { this.fetch(this.model) })\r\n\t\t\t}}\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, submit1, submit2 } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='标本箱' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select, rows) => { \r\n\t\t\t\t\t\tthis.setState({ selectedKeys: select, selectRows: rows })\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tlet param = { ...v} \r\n\t\t\t\t\t\t\tlet api ='box/add' \r\n\t\t\t\t\t\t\tlet info = '添加'  \r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tparam = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\tapi = 'box/edit' \r\n\t\t\t\t\t\t\t\tinfo = '编辑'\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t$http.submit(null, api, { param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success(`${info}成功`))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t\t\t\t}) \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal> \r\n\t\t\t\t<Modal ref='modal1' title='分配' width={500} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit1 }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tlet param = { ...v, uuid: this.rows1.uuid} \r\n\t\t\t\t\t\t\t$http.submit(null, 'box/updateaddress', { param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('分配成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal1.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t\t\t\t})  \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal1.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal2' title='领取' width={500} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit2 }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tlet receiver = this.state.employeeSelect.filter(i => i.value === v.receiver_id)\r\n\t\t\t\t\t\t\tconst param = {\r\n\t\t\t\t\t\t\t\treceiver_id: v.receiver_id,\r\n\t\t\t\t\t\t\t\treceiver_name: $fn.hasArray(receiver) ? receiver[0].name : '',\r\n\t\t\t\t\t\t\t\tuse_time: v.use_time,\r\n\t\t\t\t\t\t\t\tcontent: v.content,\r\n\t\t\t\t\t\t\t\tbox_number: this.state.selectRows.uuid\r\n\t\t\t\t\t\t\t}  \r\n\t\t\t\t\t\t\t$http.submit(null, 'box/boxReceive', { param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('领取成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal2.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t\t\t\t})  \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal2.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\reports-delivered.js",["1864"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button')) \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form')) \r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi') \r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tisEdit = false\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[], \r\n\t\thospSelect: []\r\n\t}     \r\n\ttypeOptions = [\r\n        { label: \"正常\", value: \"91,92,94,95,96,99\" },\r\n        { label: \"终止\", value: \"93\" },\r\n        { label: \"迟发\", value: \"97\" },\r\n        { label: \"退单\", value: \"98\" }\r\n    ]\r\n\tforms = [ \r\n\t\t{ label:'姓名',\t\t\t\t\tname:'patient_name',\t\t\ttype:'input' }, \r\n\t\t{ label:'关联条码号',\t\t\tname:'spec_code',\t\t\t\ttype:'input' }, \r\n\t\t{ label:'医院',\t\t\t\t\tname:'hosp_id',\t\t\t\t\ttype:'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'种类',\t\t\t\t\tname:'status',\t\t\t\t\ttype:'select', data: this.typeOptions, nameStr:'label', idStr:'value' },\r\n\t\t{ label:'日期',\t\t\t\t\tname:'date',\t\t\t\t\ttype:'date-range', names:['start_date', 'end_date'] },\r\n\t]  \r\n\tmodel = {}\r\n\tcomponentDidMount(){    \r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tthis.setState({data: data})\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t\tthis.setState({hospSelect: data})\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[2].data = data\r\n\t\t\t\t\t\t\tthis.setState({hospSelect: data})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})  \r\n\t\tthis.fetch(this.model) \r\n\t} \r\n\t// paging \r\n\tfetch = param => $fn.fetch.call(this,'kd-report-spec/myreportspec', param)\r\n\tcols = [   \r\n\t\t{ type:\t'checkbox' },\r\n\t\t{ title: '条码号',\t\t\t\tfield: 'spec_code',\t\t\t\t\twidth:120, \t\t\tsort: true },\r\n\t\t{ title: '送检单位',\t\t\tfield: 'hosp_name',\t\t\t\t\twidth:220, \t\t\tsort: true },\r\n\t\t{ title: '送检科室',\t\t\tfield: 'department_name',\t\t\twidth:100, \t\t\tsort: true },\r\n\t\t{ title: '送检时间',\t\t\tfield: 'check_time',\t\t\t\twidth:150, \t\t\tsort: true },\r\n\t\t{ title: '病人姓名',\t\t\tfield: 'patient_name',\t\t\t\twidth:120 },\r\n\t\t{ title: '性别',\t\t\t\tfield: 'sex_name',\t\t\t\t\twidth:80 },\r\n\t\t{ title: '年龄',\t\t\t\tfield: 'newAge',\t\t\t\t\twidth:100 },\r\n\t\t{ title: '报告发布时间',\t\tfield: 'created_at',\t\t\t\twidth:150, \t\t\tsort: true },\r\n\t\t{ title: '状态',\t\t\t\tfield: 'status_name',\t\t\t\twidth:70, \t\t\tsort: true },\r\n\t\t{ title: '操作', \t\t\t\talign:'tc', \t\t\t\t\t\twidth:80, \t\t\trender:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='预览' ghost onClick={() => {}}/> \r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}}\r\n\t]   \r\n\tButtonGroup = () => {\r\n\t\treturn [  \r\n\t\t\t{ label:'批量接收', ghost:true, disabled:this.state.selectedKeys.length<=0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(i => i.uuid)}\r\n\t\t\t\tcoms.interfaceConfirm('kd-report-spec/uprec', '批量接收', param, () => { this.fetch() })\r\n\t\t\t} },\r\n\t\t\t{ label:'批量打印', ghost:true, disabled:this.state.selectedKeys.length<=0, onClick:()=>{} },\r\n\t\t] \r\n\t}  \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='报告单派送' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v, press)=> $fn.onChange.call(this,v,press)} \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => this.form = form }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select) => this.setState({ selectedKeys: select}) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-teu\\index.js",["1865"],"import React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== global template\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Tabs = $async(()=>import('#tp/tabs')) \r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[], \r\n\t\tstatus: 1,\r\n\t\tsubmit: [ \r\n\t\t\t{ label:'标箱条码', \tname:'box_code',\t\ttype: 'select', data: [], nameStr:'box_code', idStr:'box_code' },  \r\n            { label:'领取时间',\t\tname:'use_time',\t\ttype:'date-time' },\r\n\t\t\t{ label:'备注', \t\tname:'content',\t\t\ttype: 'textarea', full:true, width:'100%' } \r\n\t\t]\r\n\t}\r\n\ttabs = [\r\n\t\t{ title: '正在使用', status: 1 },\r\n\t\t{ title: '使用记录', status: 2 }, \r\n\t]\r\n\tmodel = {}  \r\n\tforms = [ \r\n\t\t{ label:'标箱编号',\t\tname:'box_number',\t\ttype:'input' }, \r\n\t\t{ label:'领取时间',\t\tname:'date',\t\t\ttype:'date-range', names:['start_date', 'end_date'] },\r\n\t\t{ label:'物流状态',\t\tname:'follow_status',\ttype:'select', data: this.boxStatusSelect, nameStr:'name', idStr:'value' },\r\n\t]   \r\n\tcols = [ \r\n\t\t{ title: '标箱条码', \tfield: 'box_code', \t\twidth: 120 }, \r\n\t\t{ title: '标箱编号', \tfield: 'box_number', \twidth: 120 }, \r\n\t\t{ title: '办事处地址', \tfield: 'address', \t\twidth: 200 }, \r\n\t\t{ title: '办事处名称', \tfield: 'contact_name', \twidth: 120 }, \r\n\t\t{ title: 'GPS设备', \tfield: 'gps_number', \twidth: 120 }, \r\n\t\t{ title: '标本数量', \tfield: 'spec_count', \twidth: 120 }, \r\n\t\t{ title: '标箱状态', \tfield: 'status', \t\twidth: 120, render: ({rows}) => {\r\n\t\t\tlet options = [\r\n\t\t\t\t{ label: \"标箱使用中\",\t\tvalue: \"1\" },\r\n\t\t\t\t{ label: \"标箱已被接收\",\tvalue: \"2\" }\r\n\t\t\t  ]\r\n\t\t\treturn window.$fn.filterSelect(options, rows.status, 'label', 'value') \r\n\t\t} }, \r\n\t\t{ title: '物流状态', \tfield: 'follow_status_name', \twidth: 120 }, \r\n\t\t{ title: '领取时间', \tfield: 'created_at', \t\t\twidth: 140 },  \r\n\t]\r\n\tcomponentDidMount(){ \r\n\t\tconst { submit } = this.state\r\n\t\t$fn.dataSave('dis-item-43400-data').then(local => { // 物流状态 \r\n\t\t\tif($fn.hasArray(local)){  \r\n\t\t\t\tthis.forms[2].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param: {dis_code: 43400}}).then(data=>{\r\n\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t$fn.dataSave('dis-item-43400-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})   \r\n\t\t// 标箱状态 \r\n\t\t$http.submit(null,'box/select', { param: {limit: 500}}).then(data=>{\r\n\t\t\tsubmit[0].data = data.items \r\n\t\t\tthis.setState({submit})\r\n\t\t})\r\n\t\tthis.fetch(this.model) \r\n\t} \r\n\tfetch = param => $fn.fetch.call(this,'boxlogs/myboxlists', {...param, status: this.state.status})\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page className='fv' style={{height: '100%'}}>\r\n\t\t\t\t<Tabs \r\n\t\t\t\t\tdata={ this.tabs }\r\n\t\t\t\t\tonTabs = { (data, index) => { \r\n\t\t\t\t\t\tthis.setState({status: data.status}, () => {\r\n\t\t\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 操作按钮 */} \r\n\t\t\t\t{ this.state.status === 1 && <div className='xplr mt10'>\r\n\t\t\t\t\t<Button ghost label='领取' onClick={() => {\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tsubmit[1].value = coms.intervalTime()   \r\n\t\t\t\t\t\tthis.setState({ submit }) \r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div> }\r\n\t\t\t\t{/* 搜索 */} \r\n\t\t\t\t<SearchForm \r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr ex'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select, rows) => this.setState({ selectedKeys: select })}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title='领取' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => { \r\n\t\t\t\t\t\t\t$http.submit(null, 'boxlogs/add', { param: {...v, box_number: ''} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('分领取成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t\t\t\t})  \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-outsourcing-list.js",["1866"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react' \r\n// ===================================================================== global declare\r\nimport coms from '@/private/js/common.js'\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form')) \r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tisEdit = false\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],  \r\n\t}     \r\n\toutsourStatusOption = [\r\n\t\t{ label: '全部', value: '' },\r\n\t\t{ label: '待派送', value: 1 }, \r\n\t\t{ label: '已送达', value: 3 }\r\n\t] \r\n\toutsourStatusOption1 = [\r\n\t\t{ label: '全部', value: '' },\r\n\t\t{ label: '待派送', value: 1 }, \r\n\t\t{ label: '派送中', value: 2 }, \r\n\t\t{ label: '已送达', value: 3 } \r\n\t] \r\n\tforms = [ \r\n\t\t{ label:'派送状态',\t\tname:'outsourcing_status',\t\ttype:'select', data: this.outsourStatusOption, nameStr:'label', idStr:'value'  }, \r\n\t\t{ label:'外送时间',\t\tname:'date',\t\t\t\t\ttype:'date-range', names:['start_date', 'end_date'] },\r\n\t\t{ label:'条码号',\t\tname:'spec_code',\t\t\t\ttype:'input' }\r\n\t]   \r\n\tmodel = {}\r\n\tcomponentDidMount(){    \r\n\t\tthis.fetch(this.model) \r\n\t}  \r\n\tfetch = param => $fn.fetch.call(this,'specimen/myOutsourcingList', param)\r\n\tcols = [   \r\n\t\t{ type: 'checkbox' },  \r\n\t\t{ title: '外送单位',\t\t\t\tfield: 'outsourcing_company',\t\t\twidth:150 },  \r\n\t\t{ title: '派送状态',\t\t\t\tfield: 'outsourcing_status',\t\t\twidth:90, render: ({rows}) => {\r\n\t\t\treturn $fn.filterSelect(this.outsourStatusOption1, rows.outsourcing_status, 'label', 'value')\r\n\t\t} },  \r\n\t\t{ title: '接收时间',\t\t\t\tfield: 'created_at',\t\t\t\t\twidth:150 },  \r\n\t\t{ title: '条码',\t\t\t\t\tfield: 'spec_code',\t\t\t\t\t\twidth:120 },  \r\n\t\t{ title: '姓名',\t\t\t\t\tfield: 'patient_name',\t\t\t\t\twidth:100 },  \r\n\t\t{ title: '性别',\t\t\t\t\tfield: 'sex_name',\t\t\t\t\t\twidth:60 },  \r\n\t\t{ title: '年龄',\t\t\t\t\tfield: 'age_first_val',\t\t\t\t\twidth:80 },  \r\n\t\t{ title: '自然项目',\t\t\t\tfield: 'parent_kind_name',\t\t\t\twidth:300 },  \r\n\t]    \r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'已送达',\tghost:true, \tdisabled: !$fn.hasArray(this.state.selectedKeys), \tonClick:()=> { \r\n\t\t\t\tconst arr = this.state.selectedKeys.map(i => i.spec_code) \r\n\t\t\t\tlet param = {\r\n\t\t\t\t\toutsourcing_status: 3,\r\n\t\t\t\t\tspec_code: arr \r\n\t\t\t\t} \r\n\t\t\t\t$http.submit(null, 'specimen/changeOutsourcingStatus', {param: param}).then(data => {\r\n\t\t\t\t\tmessage.then(f => f.default.success('操作成功'))  \r\n\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t}) \r\n\t\t\t}},\r\n\t\t\t{ label:'导出',\t\tghost:true, \tdisabled: !$fn.hasArray(this.state.data), \t\t\tonClick:()=> {\r\n\t\t\t\tcoms.exportExcel({\r\n\t\t\t\t\tapi: 'specimen/myOutsourcingList',\r\n\t\t\t\t\tparam: {param: {...this.model, export: '1'}}\r\n\t\t\t\t})\r\n\t\t\t}}\r\n\t\t] \r\n\t} \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='我的外包清单' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v, press)=> $fn.onChange.call(this, v, press)} \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => this.form = form }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select) => this.setState({ selectedKeys: select}) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-hospital\\report.js",["1867"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react' \r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button')) \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form')) \r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tisEdit = false\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],  \r\n\t}      \r\n\tforms = [ \r\n\t\t{ label:'条码号',\t\tname:'spec_code',\t\ttype:'input' }\r\n\t]   \r\n\tuuid = $fn.query('uuid') || '' // 地址栏参数uuid\r\n\tmodel = {}\r\n\tcomponentDidMount(){    \r\n\t\tthis.fetch(this.model) \r\n\t}  \r\n\tfetch = param => $fn.fetch.call(this,'kd-report-spec/lookReport', {...param, hosp_id: this.uuid})\r\n\tcols = [     \r\n\t\t{ title: '条码号',\t\t\t\tfield: 'spec_code',\t\t\twidth:120 }, \r\n\t\t{ title: '姓名',\t\t\t\tfield: 'name',\t\t\t\twidth:100 }, \r\n\t\t{ title: '性别',\t\t\t\tfield: 'sex_name',\t\t\twidth:80 }, \r\n\t\t{ title: '年龄',\t\t\t\tfield: 'age',\t\t\t\twidth:100 }, \r\n\t\t{ title: '医院名称',\t\t\tfield: 'hosp_name',\t\t\twidth:120 }, \r\n\t\t{ title: '报告发布时间',\t\tfield: 'report_at',\t\t\twidth:150 }, \r\n\t\t{ title: '状态',\t\t\t\tfield: 'status_name',\t\twidth:90 }, \r\n\t\t{ title: '操作', \t\t\t\talign:'tc', \t\t\t\twidth:70, \t\t\trender:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='预览' ghost onClick={() => {}}/> \r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}}\r\n\t]    \r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'返回', onClick:()=> $fn.back(this)}\r\n\t\t] \r\n\t} \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='查看报告' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v, press)=> $fn.onChange.call(this, v, press)} \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => this.form = form }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select) => this.setState({ selectedKeys: select}) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-hospital\\index.js",["1868"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button')) \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form')) \r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi') \r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tisEdit = false\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[], \r\n\t\thospSelect: [],\r\n\t\thosp_name: '', // 医院名称\r\n\t}     \r\n\ttypeOptions = [\r\n        { label: \"正常\", value: \"91,92,94,95,96,99\" },\r\n        { label: \"终止\", value: \"93\" },\r\n        { label: \"迟发\", value: \"97\" },\r\n        { label: \"退单\", value: \"98\" }\r\n    ]\r\n\tforms = [ \r\n\t\t{ label:'医院',\t\t\t\t\tname:'hosp_id',\t\t\t\t\ttype:'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'医院等级',\t\t\t\tname:'level',\t\t\t\t\ttype:'select', data: [], nameStr:'name', idStr:'value' },\r\n\t]  \r\n\tmodel = {}\r\n\tcomponentDidMount(){    \r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[0].data = data\r\n\t\t\t\t\t\tthis.setState({hospSelect: data})\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[0].data = data\r\n\t\t\t\t\t\t\tthis.setState({hospSelect: data})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})  \r\n\t\t$fn.dataSave('dis-item-39000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[1].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(this,'dis-item/item', { param: {dis_code: 39000}}).then(data=>{\r\n\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t$fn.dataSave('dis-item-39000-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch(this.model) \r\n\t}  \r\n\tfetch = param => $fn.fetch.call(this,'bs-hospital/myHosp', {...param, hosp_name: this.state.hosp_name })\r\n\tcols = [     \r\n\t\t{ title: '医院编号',\t\t\t\tfield: 'hosp_code',\t\t\t\twidth:120 },\r\n\t\t{ title: '医院名称',\t\t\t\tfield: 'hosp_name',\t\t\t\twidth:120, tdCss: 'wpn' },\r\n\t\t{ title: '医院地址',\t\t\t\tfield: 'address',\t\t\t\twidth:120, tdCss: 'wpn' },\r\n\t\t{ title: '所属区域',\t\t\t\tfield: 'region_name',\t\t\twidth:120, tdCss: 'wpn' },\r\n\t\t{ title: '医院等级',\t\t\t\tfield: 'level_name',\t\t\twidth:120 },\r\n\t\t{ title: '送检日期',\t\t\t\tfield: 'create_at',\t\t\t\twidth:120 },\r\n\t\t{ title: '操作', \t\t\t\talign:'tc', \t\t\t\t\t\twidth:80, \t\t\trender:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='查看报告' ghost onClick={() => { \r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + `lgistics-page/my-hospital/report?uuid=${rows.uuid}`)\r\n\t\t\t\t\t}}/> \r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}}\r\n\t]    \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='我的医院'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v, press, { name })=> {  \r\n\t\t\t\t\t\t$fn.onChange.call(this, v, press, () => { \r\n\t\t\t\t\t\t\tif (name && name === 'hosp_id') { \r\n\t\t\t\t\t\t\t\tlet hosp_name = this.state.hospSelect.filter(i => i.value === v.hosp_id)\r\n\t\t\t\t\t\t\t\tthis.setState({hosp_name: $fn.hasArray(hosp_name) ? hosp_name[0].name : ''}) \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms, () => {\r\n\t\t\t\t\t\tthis.setState({hosp_name: ''})\r\n\t\t\t\t\t}) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => this.form = form }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select) => this.setState({ selectedKeys: select}) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-application\\index.js",["1869","1870","1871","1872","1873","1874"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi') \r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tisEdit = false\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[], \r\n\t\thospSelect: [],\r\n\t\thosp_name: ''\r\n\t}    \r\n\tstatusSelect = [\r\n\t\t{ label: \"审核未通过\", value: -1 },\r\n\t\t{ label: \"待完善\", value: 0 },\r\n\t\t{ label: \"待审核\", value: 1 },\r\n\t\t{ label: \"审核通过\", value: 2 }\r\n\t]\r\n\tforms = [ \r\n\t\t{ label:'状态',\t\t\t\tname:'status',\t\t\ttype:'select', data: this.statusSelect, nameStr:'label', idStr:'value' },\r\n\t\t{ label:'医院',\t\t\t\tname:'hospital_id',\t\ttype:'select', data: [], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'条码号',\t\t\tname:'spec_code',\t\ttype:'input' }, \r\n\t\t{ label:'病人姓名',\t\t\tname:'patient_name',\ttype:'input' }, \r\n\t\t{ label:'日期',\t\t\t\tname:'date',\t\t\ttype:'date-range', names:['start_date', 'end_date'] },\r\n\t]  \r\n\tmodel = {}\r\n\tcomponentDidMount(){   \r\n\t\tconst { hospSelect } = this.state \r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tthis.setState({data: data})\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t\t\tthis.setState({hospSelect: data})\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[1].data = data\r\n\t\t\t\t\t\t\tthis.setState({hospSelect: data})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})  \r\n\t\tthis.fetch(this.model) \r\n\t} \r\n\t// paging \r\n\tfetch = param => $fn.fetch.call(this,'spec-case-info/logisticslists', {...param, hosp_name: this.state.hosp_name} )\r\n\tcols = [  \r\n\t\t{ title: '标本条码',\t\tfield: 'spec_code',\t\t\t\t\twidth:100 },\r\n\t\t{ title: '医院名称',\t\tfield: 'hosp_name',\t\t\t\t\twidth:120 },\r\n\t\t{ title: '送检科室',\t\tfield: 'department_name',\t\t\twidth:100 },\r\n\t\t{ title: '送检医生',\t\tfield: 'doctor',\t\t\t\t\twidth:100 },\r\n\t\t{ title: '病人姓名',\t\tfield: 'patient_name',\t\t\t\twidth:100 },\r\n\t\t{ title: '性别',\t\t\tfield: 'sex',\t\t\t\t\t\twidth:100, render: ({rows}) => {\r\n\t\t\tlet options = [\r\n\t\t\t\t{ label: \"男\", value: 45701 },\r\n\t\t\t\t{ label: \"女\", value: 45702 }\r\n\t\t\t]\r\n\t\t\treturn window.$fn.filterSelect(options, rows.sex, 'label', 'value') \r\n\t\t} },\r\n\t\t{ title: '年龄',\t\t\tfield: 'age_first_val',\t\t\t\twidth:120, render: ({rows}) => {\r\n\t\t\tconst v1 = rows.age_first_val ? `${rows.age_first_val}${rows.age_first_type_name}` : ''\r\n\t\t\tconst v2 = rows.age_second_val ? `${rows.age_second_val}${rows.age_second_type_name}` : ''\r\n\t\t\treturn v1 + v2\r\n\t\t} },\r\n\t\t{ title: '送检时间',\t\tfield: 'check_time',\t\t\t\twidth:140 },\r\n\t\t{ title: '状态',\t\t\tfield: 'status',\t\t\t\t\twidth:100, render: ({rows}) => { \r\n\t\t\treturn window.$fn.filterSelect(this.statusSelect, rows.status, 'label', 'value') \r\n\t\t}},\r\n\t\t{ title: '操作', \t\t\talign:'tc', \t\t\t\t\t\twidth:100, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='详细信息' ghost onClick={() => { \r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + `lgistics-page/my-application/detail?spec_code=${rows.spec_code}&uuid=${rows.uuid}`) \r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}}\r\n\t]    \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='基础信息'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v, press, { name })=> {\r\n\t\t\t\t\t\t// $fn.onChange.call(this,v,press)\r\n\t\t\t\t\t\tconsole.log(name)\r\n\t\t\t\t\t\t$fn.onChange.call(this, v, press, () => { \r\n\t\t\t\t\t\t\tif (name && name === 'hospital_id') { \r\n\t\t\t\t\t\t\t\tlet hosp_name = this.state.hospSelect.filter(i => i.value === v.hospital_id)\r\n\t\t\t\t\t\t\t\tthis.setState({hosp_name: $fn.hasArray(hosp_name) ? hosp_name[0].name : ''}) \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},true)\r\n\t\t\t\t\t} } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => this.form = form }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select) => this.setState({ selectedKeys: select}) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\my-application\\detail.js",["1875","1876","1877","1878","1879","1880"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport Input from '@antd/form/input'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi') \r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tisEdit = false\r\n\tstate = {\r\n\t\tinfoData: {}, \r\n\t\ttableData: []\r\n\t}     \r\n\tmodel = {}\r\n\tuuid = $fn.query('uuid') || '' // 地址栏参数uuid\r\n\tspec_code = $fn.query('spec_code') || '' // 地址栏参数spec_code\r\n\tcols = [\r\n\t\t{ title: '项目代码', \tfield: 'kind_code', \t\twidth: 120 }, \r\n\t\t{ title: '项目名称', \tfield: 'kind_name', \t\twidth: 120 }, \r\n\t\t{ title: '项目属性', \tfield: 'kind_type_name', \twidth: 120 }, \r\n\t]\r\n\tcomponentDidMount(){      \r\n\t\tif (this.uuid) {\r\n\t\t\tthis.getInfo(this.uuid) \r\n\t\t}\r\n\t\tif (this.spec_code) {\r\n\t\t\tthis.getTable(this.spec_code) \r\n\t\t} \r\n\t} \r\n\tgetInfo = (uuid) => {\r\n\t\t$http.submit(this,'spec-case-info/info', { param: {uuid: uuid}}).then(data=>{\r\n\t\t\tthis.setState({infoData: data}) \r\n\t\t})\r\n\t}\r\n\tgetTable = (spec_code) => {\r\n\t\t$http.submit(this,'specimen-kind/index', { param: {spec_code: spec_code}}).then(data=>{\r\n\t\t\tthis.setState({tableData: data}) \r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { tableData, infoData } = this.state\r\n\t\treturn (\r\n\t\t\t<Page className='p10'>\r\n                <div className='pb10'>\r\n\t\t\t\t    <Button label='返回' ghost onClick={()=> $fn.back(this) }/> \r\n                </div>\r\n\t\t\t\t<div className='fx'>\r\n\t\t\t\t\t<div className='ex'>\r\n\t\t\t\t\t\t<div className='b ptb5' style={{borderBottom: '1px solid #f2f2f2'}}>病患基本信息</div>\r\n\t\t\t\t\t\t<div className='fxw fx-ex3 ptb15'>  \r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>条码号</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.spec_code}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>姓名</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.patient_name}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>籍贯</span>\r\n\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>身份证号</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.card_no}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>性别</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.sex_name}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>病人电话</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.patient_phone}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>年龄</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.age_first_val}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>民族</span>\r\n\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>出生日期</span>\r\n\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>婚姻</span>\r\n\t\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='ex ml20'>\r\n\t\t\t\t\t\t<div className='b ptb5' style={{borderBottom: '1px solid #f2f2f2'}}>送检医院信息</div>\r\n\t\t\t\t\t\t<div className='fxw fx-ex3 ptb15'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>送检医院</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.hosp_name}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>患者类型</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.case_type_name}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>送检医生</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.doctor}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>医生电话</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.doctor_phone}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>住院/门诊号</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.outpatient}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>送检科室</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.department_name}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>床号</span>\r\n\t\t\t\t\t\t\t\t<span>{infoData.bed_no}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='b ptb5' style={{borderBottom: '1px solid #f2f2f2'}}>送检标本信息</div>\r\n\t\t\t\t<div className='fxw fx-ex3 ptb15'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>标本类型</span>\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>标本性状</span>\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>采集时间</span>\r\n\t\t\t\t\t\t<span>{infoData.coll_time}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='fxw fx-ex3 ptb15'> \r\n\t\t\t\t\t<div className='ex'>\r\n\t\t\t\t\t\t<p className='b'>临床诊断</p>\r\n\t\t\t\t\t\t<Input name='diagnosis_info' value={infoData.diagnosis_info} mode='textarea' disabled />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='ex ml20'>\r\n\t\t\t\t\t\t<p className='b'>备注</p>\r\n\t\t\t\t\t\t<Input name='remark' value={infoData.remark} mode='textarea' disabled />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<div className='b ptb5'>送检项目信息</div>\r\n\t\t\t\t<Table   \r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { tableData }  \r\n\t\t\t\t/>\r\n            </Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\logistics-tracking\\index.js",["1881"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react' \r\n// ===================================================================== global declare\r\nimport coms from '@/private/js/common.js'\r\nconst { $http, $fn, $async } = window  \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button')) \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form')) \r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tisEdit = false\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],  \r\n\t}    \r\n\tforms = [  \r\n\t\t{ label:'标本箱号',\t\tname:'box_number',\t\t\t\ttype:'input' },\r\n\t\t{ label:'运输方式',\t\tname:'ship_type',\t\t\t\ttype:'select', data: [], nameStr:'name', idStr:'value'  }, \r\n\t\t{ label:'日期',\t\t\tname:'date',\t\t\t\t\ttype:'date-range', names:['startTime', 'endTime'] },\r\n\t]   \r\n\tmodel = {}\r\n\tcomponentDidMount(){    \r\n\t\t$fn.dataSave('dis-item-43600-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[1].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:43600}, loading:false}).then(data=>{\r\n\t\t\t\tthis.forms[1].data = data \r\n\t\t\t\t$fn.dataSave('dis-item-43600-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t\tthis.fetch(this.model) \r\n\t}  \r\n\tfetch = param => $fn.fetch.call(this,'gps-follow/index', param)\r\n\tcols = [   \r\n\t\t{ type: 'checkbox' },   \r\n\t\t{ title: '标本箱号',\t\t\t\tfield: 'box_number',\t\t\twidth:150 },  \r\n\t\t{ title: '当前位置',\t\t\t\tfield: 'current_address',\t\twidth:320 },  \r\n\t\t{ title: '录入时间',\t\t\t\tfield: 'gps_time',\t\t\t\twidth:230 },  \r\n\t\t{ title: '运输人',\t\t\t\t\tfield: 'receiver_name',\t\t\twidth:100 },  \r\n\t\t{ title: '运输方式',\t\t\t\tfield: 'ship_type_name',\t\twidth:100 },  \r\n\t\t{ title: '状态',\t\t\t\t\tfield: 'follow_status_name',\twidth:100 },   \r\n\t\t{ title: '操作', \t\t\t\t\talign:'tc', \t\t\t\t\twidth:100, \t\t\trender:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='查看轨迹' ghost onClick={() => {}}/> \r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}}\r\n\t]    \r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'手动录入',\tghost:true, onClick:()=> {}},\r\n\t\t\t{ label:'删除',\t\tghost:true, disabled: !$fn.hasArray(this.state.selectedKeys), \tonClick:()=> {\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(i => i.uuid)}\r\n\t\t\t\tcoms.interfaceConfirm('gps-follow/delete', '删除', param, () => { this.fetch(this.model) })\r\n\t\t\t}},\r\n\t\t] \r\n\t} \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='物流跟踪' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v, press)=> $fn.onChange.call(this, v, press)} \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => this.form = form }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select) => this.setState({ selectedKeys: select}) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\generate-barcode-record.js",["1882"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi') \r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t} \r\n\tenabledSelect = [\r\n\t\t{ label: \"已使用\", value: \"1\" },\r\n\t\t{ label: \"未使用\", value: \"0\" },\r\n\t\t{ label: \"已删除\", value: \"-1\" } \r\n\t]\r\n\tenabledSelect1 = [\r\n\t\t{ label: \"已使用\", value: \"1\" },\r\n\t\t{ label: \"未使用\", value: \"0\" }\r\n\t ]\r\n\tforms = [\r\n\t\t{ label:'条码号',\t\tname:'id',\t\t\t\ttype:'input' },\r\n\t\t{ label:'操作人',\t\tname:'real_name',\t\ttype:'input' }, \r\n\t\t{ label:'医院名称',\t\tname:'hosp_id',\t\t\ttype:'select', data:[], nameStr:'name', idStr:'value' }, \r\n\t\t{ label:'使用状态',\t\tname:'enabled',\t\t\ttype:'select', data: this.enabledSelect1, nameStr:'label', idStr:'value' }, \r\n\t\t{ label:'生成时间',\t\tname:'date',\t\t\ttype:'date-range', names:['created_at_start_date', 'created_at_end_date'] } \r\n\t] \r\n\tmodel = {}\r\n\tcomponentDidMount(){  \r\n\t\tcacheApi.then(f => {\r\n\t\t\t// 医院\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[2].data = data \r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[2].data = data \r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t\tthis.fetch(this.model)\r\n\t} \r\n\t// paging \r\n\tfetch = param => $fn.fetch.call(this,'barcode/getBarcodeSpecList', param)\r\n\tcols = [\r\n\t\t{ title: '标本条码',\t\tfield: 'id',\t\t\t\twidth:120 },\r\n\t\t{ title: '操作人',\t\t\tfield: 'real_name',\t\t\twidth:120 },\r\n\t\t{ title: '医院名称',\t\tfield: 'hosp_name',\t\t\twidth:150 },\r\n\t\t{ title: '使用状态',\t\tfield: 'enabled',\t\t\twidth:100, render:({rows})=>{ \r\n\t\t\treturn window.$fn.filterSelect(this.enabledSelect, rows.enabled, 'label', 'value') \r\n\t\t}},\r\n\t\t{ title: '生成时间',\t\tfield: 'created_at',\t\twidth:150 } \r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='条码生成记录' >\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\enter-barcode\\index.js",["1883"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport Input from '@antd/form/input'\r\nimport { Tag } from 'antd'  \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button')) \r\nconst Checkbox = $async(()=>import('@antd/form/checkbox'))\r\nconst Select = $async(()=>import('@antd/form/select')) \r\nconst Image = $async(()=>import('@tp/image')) \r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst BarcodeInfo = $async(()=>import('./tp/barcode-info'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],  \r\n\t\tkey: 0, \r\n\t\tforms: {\r\n\t\t\tbox_code: '',\r\n\t\t\thospchecked: false, // 医院名称录入\r\n\t\t\thosp_code: '',\r\n\t\t\thospital_name: '',\r\n\t\t\tnew_hosp_code: '',\r\n\t\t\tchecked: '', // 批量录入\r\n\t\t\tcritical: false, // 加急\r\n\t\t\tstart_code: '',\r\n\t\t\tend_code: '',\r\n\t\t\tspec_num: '1',\r\n\t\t\ttag: [],\r\n\t\t\tspec_traits: '21002',\r\n\t\t\tremark: ''\r\n\t\t},\r\n\t\thopsOptions: [], // 医院\r\n\t\tdisItem21000: [], \r\n\t\tdisItem69700: [],  \r\n\t\tis_pic_s: '',\r\n\t\tkeys: 0\r\n\t} \r\n\tmodel = {}\r\n\tcols = [\r\n\t\t{ title: '条码信息',\t\tfield: 'spec_code',\t    width:120 },\r\n\t\t{ title: '操作',\t\t\tfield: 'spec_code',\t    width:120, render: ({rows, index}) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button label='查看' className='mr10' onClick={()=> {} }/>  \r\n\t\t\t\t\t<Button label='上传' className='mr10' onClick={()=> {} }/>  \r\n\t\t\t\t\t<Button label='删除' className='mr10' onClick={()=> this.deleteCode(rows, index) }/>  \r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\t// 删除条码\r\n\tdeleteCode(rows, index) {\r\n\t\t$http.pull(null,'specimen/cancelAddSpecimen',{dataName:null, param: {spec_code: rows.spec_code}}).then(rs=>{\r\n\t\t\tmessage.then(f => f.default.success('删除成功'))\r\n\t\t\tconst { data, keys } = this.state\r\n\t\t\tdata.splice(index, 1)\r\n\t\t\tthis.setState({data: data, keys: keys + 1})\r\n\t\t}) \r\n\t}\r\n\tcomponentDidMount(){  \r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'hosp_spec', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.setState({hopsOptions: data}) \r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(d => {\r\n\t\t\t\t\t\t\tthis.setState({hopsOptions: data})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t\t$fn.dataSave('dis-item-21000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n\t\t\t  this.setState({disItem21000: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:21000}, loading:false}).then(data=>{\r\n\t\t\t  this.setState({disItem21000: local})\r\n\t\t\t  $fn.dataSave('dis-item-21000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.dataSave('dis-item-69700-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n\t\t\t  this.setState({disItem69700: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:69700}, loading:false}).then(data=>{\r\n\t\t\t  this.setState({disItem69700: local})\r\n\t\t\t  $fn.dataSave('dis-item-69700-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t})  \r\n\t} \r\n\tButtonGroup = () => { \r\n\t\treturn (\r\n\t\t\t<div>  \r\n\t\t\t\t<Button label='返回' ghost className='ml5' onClick={()=> $fn.back(this) }/>  \r\n\t\t\t</div>\r\n\t\t)\r\n\t}  \r\n\tonChanges = (v) => {   \r\n\t\tlet keyName = Object.keys(v)[0]\r\n\t\tconst {forms} = this.state  \r\n\t\tlet d = Object.assign(forms, v)  \r\n\t\tif (keyName === 'checked') { // 批量录入\r\n\t\t\td.end_code = ''\r\n\t\t} else if (keyName === 'hospchecked') { // 医院名称录入\r\n\t\t\td.new_hosp_code = ''\r\n\t\t\td.hosp_code = ''\r\n\t\t\td.hospital_name = '' \r\n\t\t} else if (keyName === 'new_hosp_code') { // 医院名称切换\r\n\t\t\td.hosp_code = v.new_hosp_code\r\n\t\t} else if (keyName === 'hosp_code') {\r\n\t\t\td.hospital_name = ''\r\n\t\t}\r\n\t\tthis.setState({forms: d})\r\n\t}\r\n    tagsChange(v, checked) { \r\n        const { forms } = this.state;\r\n        const nextSelectedTags = checked ? [...forms.tag, v] : forms.tag.filter(t => t !== v);\r\n        forms['tag'] = nextSelectedTags\r\n        this.setState({ forms: forms }); \r\n\t}\r\n\tinintForms = (v) => {\r\n\t\tlet param = {\r\n\t\t\tstart_code: v.start_code || '',  \r\n\t\t\tend_code: v.end_code || '',\r\n\t\t\tspec_traits: v.spec_traits || '',\r\n\t\t\thosp_code: v.hosp_code || '',\r\n\t\t\tbox_code: v.box_code || '',\r\n\t\t\tspec_num: v.spec_num || '',\r\n\t\t\ttag: v.tag || [],\r\n\t\t\tcritical: (v.critical ? 1 : 0) || 0,\r\n\t\t\tchecked: (v.checked ? 1 : 0) || 0,\r\n\t\t\tremark: v.remark || ''\r\n\t\t} \r\n\t\treturn param\r\n\t} \r\n\tsubmits = () => {\r\n\t\tconst { forms } = this.state  \r\n\t\tif (forms.checked) { // 判断是否批量 \r\n\t\t\tlet startNum1 = forms.start_code.substr(0, 2);\r\n            let endNum1 = \tforms.end_code.substr(0, 2);\r\n            let startNum2 = forms.start_code.substr(0, 12);\r\n\t\t\tlet endNum2 = \tforms.end_code.substr(0, 12);\r\n\t\t\tif (!forms.start_code || !forms.end_code) { return message.then(f => f.default.error('请输入开始条码或结束条码')) } \r\n\t\t\tif (startNum1 !== endNum1) { return message.then(f => f.default.error('请输入同一个分公司的开始条码和结束条码')) } \r\n\t\t\tif (Number(endNum2) - Number(startNum2) > 0) { // 限制录入100条 (100 - 1)\r\n\t\t\t\t// 物流系统-录入条码 开始和结束条码超100条码去掉此验证 add by woshibiggou\r\n\t\t\t\t// if (Number(endNum2) - Number(startNum2) <= 99) {\r\n\t\t\t\t\tthis.submitsInfo();\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \tthis.$message.error(\"一次性最多可录入100个条码\");\r\n\t\t\t\t// }\r\n\t\t\t} else {\r\n\t\t\t\tmessage.then(f => f.default.error('结束条码必须大于开始条码')) \r\n\t\t\t} \r\n\t\t} else {  \r\n\t\t\tthis.submitsInfo();\r\n\t\t} \r\n\t}\r\n\t// 提交\r\n\tsubmitsInfo = () => {\r\n\t\tconst { forms, keys } = this.state\r\n\t\tlet param = this.inintForms(forms)  \r\n\t\t$http.submit(null, 'specimen/add', {param: param}).then(data => {\r\n\t\t\tforms.start_code = ''   \r\n\t\t\tthis.BarcodeInfoRef.fetch()\r\n\t\t\tthis.setState({forms: forms, data: data, keys: keys + 1}, () => {\r\n\t\t\t\tthis.start_codeRef.getRef().focus() \r\n\t\t\t}) \r\n\t\t\tmessage.then(f=>f.default.success('操作成功'))\r\n\t\t})  \r\n\t}\r\n\tPressEnterForm = (v) => { \r\n\t\tconst { forms } = this.state\r\n\t\t$http.submit(null, 'bs-hospital/gethospname', { param: {hosp_code: forms.hosp_code} }).then(data => {\r\n\t\t\tforms.hospital_name = data.hosp_name || ''\r\n\t\t\tthis.setState({forms})\r\n\t\t}).catch(data => {\r\n\t\t\tforms.hospital_name = ''\r\n\t\t\tthis.setState({forms}) \r\n\t\t})\r\n\t}  \r\n\t// 选择全部 \r\n\trender(){ \r\n\t\tconst { forms, keys } = this.state\r\n\t\treturn (\r\n\t\t<Page title='录入条码信息' noBtGroup={true} ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t<div className='fx p10'>\r\n\t\t\t\t<div className='fxw' style={{flex: 3}} key={keys}>\r\n\t\t\t\t\t<div className='pr10 mb10 fxm half' > \r\n\t\t\t\t\t\t<span style={{width: '86px'}}>标箱条码：</span> <Input className='ex' name='box_code' value={forms.box_code} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='pr10 mb10 fxm half' > \r\n\t\t\t\t\t\t<span style={{width: '86px'}}>医院名称录入：</span> <Checkbox name='hospchecked' value={forms.hospchecked} onChange={(v) => this.onChanges(v) } /> \r\n\t\t\t\t\t</div>    \r\n\t\t\t\t\t{forms.hospchecked ? \r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<div className='pr10 mb10 fxm half' > \r\n\t\t\t\t\t\t\t<span style={{width: '86px'}}>医院名称：</span> \r\n\t\t\t\t\t\t\t<div className='ex' style={{width: 0}}>\r\n\t\t\t\t\t\t\t\t<Select name='new_hosp_code' data={this.state.hopsOptions} p='请选择医院名称' value={forms.new_hosp_code} onChanged={(v) => this.onChanges(v)} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='pr10 mb10 fxm half' > \r\n\t\t\t\t\t\t\t<span style={{width: '86px'}}>医院条码：</span> <Input disabled className='ex' name='hosp_code' value={forms.hosp_code} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t: <React.Fragment>\r\n\t\t\t\t\t\t<div className='pr10 mb10 fxm half' > \r\n\t\t\t\t\t\t\t<span style={{width: '86px'}}>医院条码：</span> <Input className='ex' name='hosp_code' value={forms.hosp_code} onPressEnter={() => this.PressEnterForm('hosp_code')} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='pr10 mb10 fxm half' > \r\n\t\t\t\t\t\t\t<span style={{width: '86px'}}>医院名称：</span> <Input disabled className='ex' name='hospital_name' value={forms.hospital_name} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t</React.Fragment>}\r\n\t\t\t\t\t<div className='pr10 mb10 fxm' style={{width: '30%'}}> \r\n\t\t\t\t\t\t<span style={{width: '86px'}}>批量录入:</span> <Checkbox name='checked' value={forms.checked} onChange={(v) => this.onChanges(v) } /> \r\n\t\t\t\t\t</div>  \r\n\t\t\t\t\t<div className='pr10 mb10 fxm' style={{width: '20%'}}> \r\n\t\t\t\t\t\t<span style={{width: '60px'}}>加急:</span> <Checkbox name='critical' value={forms.critical} onChange={(v) => this.onChanges(v) } /> \r\n\t\t\t\t\t</div>   \r\n\t\t\t\t\t<div className='pr10 mb10 fxm half'> \r\n\t\t\t\t\t\t<span style={{width: '86px'}}>{forms.checked ? '开始条码号：' : '条码号：'}</span> <Input className='ex' maxLength={12} ref={ref => this.start_codeRef = ref}  name='start_code' value={forms.start_code} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t</div> \r\n\t\t\t\t\t{forms.checked && \r\n\t\t\t\t\t\t<div className='pr10 mb10 fxm half' > \r\n\t\t\t\t\t\t\t<span style={{width: '86px'}}>结束条码号：</span> <Input className='ex' maxLength={12} name='end_code' value={forms.end_code} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t}\r\n\t\t\t\t\t<div className='pr10 mb10 fxm half' > \r\n\t\t\t\t\t\t<span style={{width: '86px'}}>标本数量：</span> <Input className='ex' name='spec_num' value={forms.spec_num} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='pr10 mb10 fxm half' > \r\n\t\t\t\t\t\t<span style={{width: '86px'}}>标本性状：</span> \r\n\t\t\t\t\t\t<div className='ex' style={{width: 0}}>\r\n\t\t\t\t\t\t\t<Select name='spec_traits' data={this.state.disItem21000} p='请选择标本性状' value={forms.spec_traits} onChanged={(v) => this.onChanges(v)} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>  \r\n\t\t\t\t\t<div className='pr10 mb10 fxm w'> \r\n\t\t\t\t\t\t<span style={{width: '86px'}}>识别标签：</span>  \r\n\t\t\t\t\t\t<div className='ex'>   \r\n\t\t\t\t\t\t\t{this.state.disItem69700.map((v, i) => \r\n\t\t\t\t\t\t\t\t(<Tag.CheckableTag\r\n\t\t\t\t\t\t\t\t\tstyle={{border: '1px solid #D7D9D9'}}\r\n\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\tchecked={forms.tag.indexOf(v.value) > -1}\r\n\t\t\t\t\t\t\t\t\tonChange={checked => this.tagsChange(v.value, checked)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{v.name}\r\n\t\t\t\t\t\t\t\t</Tag.CheckableTag>)\r\n\t\t\t\t\t\t\t)} \r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t</div> \t\r\n\t\t\t\t\t<div className='pr10 mb10 fxm w'> \r\n\t\t\t\t\t\t<span style={{width: '86px'}}>备注：</span> \r\n\t\t\t\t\t\t<div className='ex'>\r\n\t\t\t\t\t\t\t<Input style={{width: '100%'}} mode='textarea' name='remark' value={forms.remark} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> \r\n\t\t\t\t\t<div className='w tc'>\r\n\t\t\t\t\t\t<Button label='确定' style={{padding: '0 18px'}} onClick={()=> this.submits() }/>  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>  \r\n\t\t\t\t<div className='bor1' style={{width: '350px'}}>\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tkey={keys}\r\n\t\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\t\tdata \t\t\t= { this.state.data }\r\n\t\t\t\t\t\tloading \t\t= { this.state.pullLoading }\r\n\t\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='bor1 ml10 tc' style={{flex: 2}}>\r\n\t\t\t\t\t<Image style={{margin: '0 2px 0 6px'}} src={ this.state.is_pic_s } height='12px' width='16px'/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='ex'>\r\n\t\t\t\t<BarcodeInfo onRef={ref => this.BarcodeInfoRef = ref} />\r\n\t\t\t</div> \r\n\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\box-transfer\\part-transfer.js",["1884","1885"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react' \r\n// ===================================================================== global declare \r\nimport ScanImage from '@img/saoma.svg'\r\nconst { $http, $fn, $async } = window  \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))  \r\nconst message = import('@antd/message')\r\nconst Checkbox = $async(()=>import('@antd/form/checkbox')) \r\n// ===================================================================== global antd\r\nconst Input = $async(()=>import('@antd/form/input'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component \r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== img\r\nconst Image = $async(()=>import('@tp/image'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tisEdit = false\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[], \r\n\t\tforms: {\r\n\t\t\tbox_code: '',\r\n\t\t\tnewInput: '',\r\n\t\t\tstart_code: '',\r\n\t\t\tend_code: '',\r\n\t\t\tspec_code: ''\r\n\t\t},\r\n\t\tisBatch: false\r\n\t}      \r\n\tfetch = param => $fn.fetch.call(this,'box/specCodeInfo', param)\r\n\tcomponentDidMount(){     \r\n\t}  \r\n\tcols = [       \r\n\t\t{ title: '条码号',\t\t\t\tfield: 'spec_code',\t\t\twidth:120 },   \r\n\t\t{ title: '送检单位',\t\t\tfield: 'hosp_name',\t\t\twidth:120 },   \r\n\t\t{ title: '送检地址',\t\t\tfield: 'address',\t\t\twidth:120 },   \r\n\t\t{ title: '状态',\t\t\t\tfield: 'spec_status',\t\twidth:120 , render: ({rows}) => {\r\n\t\t\tlet options = [\r\n              { label: \"待分发\", value: 0 },\r\n              { label: \"不可分发\", value: -1 },\r\n              { label: \"已分发\", value: 1 }\r\n\t\t\t]\r\n\t\t\treturn window.$fn.filterSelect(options, rows.spec_status, 'label', 'value') \r\n\t\t}} \r\n\t]    \r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'返回',\tghost:true, onClick:()=> $fn.back(this)} \r\n\t\t] \r\n\t} \r\n\tonChanges = (v, name) => { \r\n\t\tconst {forms} = this.state\r\n\t\tforms[name] = v\r\n\t\tthis.setState({forms: forms})  \r\n\t}  \r\n\tconfirms = () => {\r\n\t\tconst { forms, isBatch } = this.state\r\n\t\tconst param = { \r\n\t\t\tbox_code: forms.box_code,\r\n\t\t\tstart_code: isBatch ? forms.start_code : forms.spec_code,\r\n\t\t\tend_code: isBatch ? forms.end_code : ''\r\n\t\t} \r\n\t\t$http.submit(null, 'box/partmove', {param: param}).then(data => {\r\n\t\t\tmessage.then(f => f.default.success('操作成功')) \r\n\t\t\tthis.fetch({box_code: forms.box_code})\r\n\t\t}) \r\n\t}\r\n\tchangeBatch = (val) => { \r\n\t\tthis.setState({isBatch: val})\r\n\t}\r\n\trender(){ \r\n\t\tconst { forms, data, pullLoading, pag, keys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='部分转移' ButtonGroup={this.ButtonGroup()}> \r\n\t\t\t\t<div className='fx p10'>\r\n\t\t\t\t\t<div className='fxw' style={{alignItems: 'center'}}>\r\n\t\t\t\t\t\t<div className='mr10'>\r\n\t\t\t\t\t\t\t标本箱条码：\r\n\t\t\t\t\t\t\t<Input p='请扫描或输入条码号' maxLength={6} width={160} value={forms.box_code} style={{borderRadius: '4px'}} className='mlr5' onChange={(v) => this.onChanges(v, 'box_code')} />\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t<div><Image className='mr15 dkm' src={ ScanImage } height='20px' width='20px'/></div>\r\n\t\t\t\t\t\t<Checkbox indeter={false} value={this.state.isBatch} onChange={ (e) => this.changeBatch(e)} label='批量转移' />\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.isBatch ? (<React.Fragment>\r\n\t\t\t\t\t\t\t<div className='mr10'>\r\n\t\t\t\t\t\t\t\t开始标本号：\r\n\t\t\t\t\t\t\t\t<Input p='请扫描或输入条码号' maxLength={14} width={160} value={forms.start_code} style={{borderRadius: '4px'}} className='mlr5' onChange={(v) => this.onChanges(v, 'start_code')} />\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t<div><Image className='mr15 dkm' src={ ScanImage } height='20px' width='20px'/></div>\r\n\t\t\t\t\t\t\t<div className='mr10'>\r\n\t\t\t\t\t\t\t\t结束标本号：\r\n\t\t\t\t\t\t\t\t<Input p='请扫描或输入条码号' maxLength={14} width={160} value={forms.end_code} style={{borderRadius: '4px'}} className='mlr5' onChange={(v) => this.onChanges(v, 'end_code')} />\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t<div><Image className='mr15 dkm' src={ ScanImage } height='20px' width='20px'/></div>\r\n\t\t\t\t\t\t\t</React.Fragment>) : (<React.Fragment> \r\n\t\t\t\t\t\t\t\t<div className='mr10'>\r\n\t\t\t\t\t\t\t\t\t标本条码：\r\n\t\t\t\t\t\t\t\t\t<Input p='请扫描或输入条码号' maxLength={14} width={160} value={forms.spec_code} style={{borderRadius: '4px'}} className='mlr5' onChange={(v) => this.onChanges(v, 'spec_code')} />\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t<div><Image className='mr15 dkm' src={ ScanImage } height='20px' width='20px'/></div>\r\n\t\t\t\t\t\t\t</React.Fragment>)\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button label='确认' ghost className='mr10' onClick={() => this.confirms()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select) => this.setState({ selectedKeys: select}) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\box-transfer\\index.js",["1886"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== image\r\nimport FCL from '@img/FCL.png'\r\nimport Part from '@img/Part.png'\r\n// ===================================================================== global declare\r\nconst { $async } = window\r\n// ===================================================================== antd\r\n// const Button = $async(()=>import('@antd/button'))\r\n// const Checkbox = $async(()=>import('@antd/form/checkbox')) \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\n// const SearchForm = $async(()=>import('#cpt/search-form'))\r\n// ===================================================================== 缓存\r\n// const cacheApi = import('@/private/api/cacheApi')\r\n\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],  \r\n\t\tkey: 0, \r\n\t} \r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t}  \r\n\t// 选择全部 \r\n\trender(){ \r\n\t\t\treturn (\r\n\t\t\t<Page title='标本箱转移'>\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p className='f28 b' style={{marginTop: '83px', marginBottom: '22px'}}>选择转箱模式</p>\r\n\t\t\t\t\t\t<div className='f14' style={{color: '#2cd1d2', width: '365px', margin: '0 auto'}}>请在标本箱转移菜单下选择标本箱转移模式。整箱转移时只需要扫描旧标本箱条码与新标本箱条码即可。</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='fxmj' style={{width: '480px', margin: '65px auto', color: '#ffffff'}}>\r\n\t\t\t\t\t\t<div className='r10px tc' style={{height: '200px', width: '200px', background: 'linear-gradient(#dff8f8, #2cd1d2)'}} onClick={() => {\r\n\t\t\t\t\t\t\twindow.$fn.push(this, window.$fn.getRoot().root + 'lgistics-page/box-transfer/full-transfer')\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<img className='dk' style={{marginTop: '50px'}} src={FCL} alt=\"整箱转移\" />\r\n\t\t\t\t\t\t\t<p className='lh40'>整箱转箱</p>  \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='r10px tc' style={{height: '200px', width: '200px', background: 'linear-gradient(#dff8f8, #2cd1d2)'}} onClick={() => {\r\n\t\t\t\t\t\t\twindow.$fn.push(this, window.$fn.getRoot().root + 'lgistics-page/box-transfer/part-transfer')\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<img className='dk' style={{marginTop: '50px'}} src={Part} alt=\"部分转移\" />\r\n\t\t\t\t\t\t\t<p className='lh40'>部分转箱</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n            </Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\box-transfer\\full-transfer.js",["1887","1888"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react' \r\n// ===================================================================== global declare \r\nimport ScanImage from '@img/saoma.svg'\r\nconst { $http, $fn, $async } = window  \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))  \r\nconst message = import('@antd/message')\r\n// ===================================================================== global antd\r\nconst Input = $async(()=>import('@antd/form/input'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component \r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== img\r\nconst Image = $async(()=>import('@tp/image'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{ \r\n\tisEdit = false\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[], \r\n\t\tforms: {\r\n\t\t\toldInput: '',\r\n\t\t\tnewInput: ''\r\n\t\t}\r\n\t}      \r\n\tcomponentDidMount(){}  \r\n\tcols = [       \r\n\t\t{ title: '条码号',\t\t\t\tfield: 'spec_code',\t\t\twidth:120 },   \r\n\t\t{ title: '送检单位',\t\t\tfield: 'hosp_name',\t\t\twidth:120 },   \r\n\t\t{ title: '送检地址',\t\t\tfield: 'address',\t\t\twidth:120 },   \r\n\t\t{ title: '状态',\t\t\t\tfield: 'spec_status',\t\twidth:120 , render: ({rows}) => {\r\n\t\t\tlet options = [\r\n              { label: \"待分发\", value: 0 },\r\n              { label: \"不可分发\", value: -1 },\r\n              { label: \"已分发\", value: 1 }\r\n\t\t\t]\r\n\t\t\treturn window.$fn.filterSelect(options, rows.spec_status, 'label', 'value') \r\n\t\t}} \r\n\t]    \r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'返回',\tghost:true, onClick:()=> $fn.back(this)} \r\n\t\t] \r\n\t} \r\n\tonChanges = (v, name) => { \r\n\t\tconst {forms} = this.state\r\n\t\tforms[name] = v\r\n\t\tthis.setState({forms: forms})  \r\n\t} \r\n    handleInputBlur = (name) => { \r\n\t\tconst { forms } = this.state\r\n\t\tif (forms[name] && forms[name].length === 6) {\r\n\t\t\tconst param = {box_code: forms[name]}\r\n\t\t\t$http.pull(null, 'box/specCodeInfo', {param: param}).then(data => {\r\n\t\t\t\tthis.setState({data: data.items})\r\n\t\t\t\tmessage.then(f => f.default.success('操作成功')) \r\n\t\t\t}).catch(err => {\r\n\t\t\t\tthis.setState({data: []})\r\n\t\t\t})  \r\n\t\t} else {\r\n\t\t\tmessage.then(f=>f.default.success('条码格式错误'))\r\n\t\t}  \r\n\t}\r\n\tconfirmInfo = () => {\r\n\t\tconst param = {\r\n\t\t\told_box_code: this.state.forms.oldInput,\r\n\t\t\tnew_box_code: this.state.forms.newInput, \r\n\t\t} \r\n\t\t $http.submit(null, 'box/allMove', {param: param}).then(data => {\r\n\t\t\tmessage.then(f => f.default.success('操作成功')) \r\n\t\t}) \r\n\t}\r\n\trender(){ \r\n\t\tconst { forms, data, pullLoading, pag, keys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='整箱转移' ButtonGroup={this.ButtonGroup()}> \r\n\t\t\t\t<div className='fx p10'>\r\n\t\t\t\t\t<div className='fxw'>\r\n\t\t\t\t\t\t<div className='mb5 mr10'>\r\n\t\t\t\t\t\t\t原标本箱条码：\r\n\t\t\t\t\t\t\t<Input p='请扫描或输入条码号' maxLength={6} width={160} value={forms.oldInput} style={{borderRadius: '4px'}} className='mlr5' onChange={(v) => this.onChanges(v, 'oldInput')} onPressEnter={() => this.handleInputBlur('oldInput')} />\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t<div><Image className='mr15 dkm' src={ ScanImage } height='20px' width='20px'/></div>\r\n\t\t\t\t\t\t<div className='mb5 mr10'>\r\n\t\t\t\t\t\t\t新标本箱条码：\r\n\t\t\t\t\t\t\t<Input p='请扫描或输入条码号' maxLength={6} width={160} value={forms.newInput} style={{borderRadius: '4px'}} onChange={(v) => this.onChanges(v, 'newInput')} className='mlr5' onPressEnter={() => this.handleInputBlur('newInput')} />\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t<div><Image className='mr15 dkm' src={ ScanImage } height='20px' width='20px'/></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button label='确认' ghost className='mr10' onClick={() => this.confirmInfo()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select) => this.setState({ selectedKeys: select}) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\lgistics\\lgistics-page\\enter-barcode\\tp\\barcode-info.js",["1889"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react' \r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window \r\n// ===================================================================== antd\r\n// const Button = $async(()=>import('@antd/button')) \r\n// ===================================================================== private component \r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[], \r\n        selectedKeys:[],\r\n        keys: 0\r\n\t} \r\n\tforms = [ \r\n\t\t{ label:'操作时间',\t\tname:'date',    type:'date-range',      names:['start_at', 'end_at'] } \r\n    ] \r\n    model = {start_at: coms.sysTime(1), end_at: coms.sysTime(2)}  \r\n\tcomponentDidMount(){ \r\n        this.props.onRef(this)  \r\n        this.fetch(this.model)\r\n    }   \r\n\tfetch = param => $fn.fetch.call(this,'specimen/employeeEntryStatistics', param)\r\n\tcols = [ \r\n        { title: '医院名称',\t\tfield: 'hosp_name',\t    width:120 },\r\n        { title: '条码数量',\t\tfield: 'count',\t\t\twidth:120 },\r\n        { title: '操作人',\t\t    field: 'real_name',\t\twidth:120 }\r\n    ]   \r\n\trender(){\r\n\t\tconst { data, pullLoading, keys } = this.state\r\n\t\treturn (\r\n            <div className='pt20 h fv'>\r\n                {/* 搜索 */}\r\n                <SearchForm \r\n                    data\t\t= { this.forms } \r\n                    onChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n                    onSubmit\t= { $fn.onSubmit.bind(this) } \r\n                    onReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n                    loading\t\t= { pullLoading }\r\n                    init        = { form => {\r\n                        this.form = form \r\n\t\t\t\t\t\tform.setFieldsValue({date:[coms.sysTime(1), coms.sysTime(2)]})\r\n\t\t\t\t\t}}\r\n                />\r\n                <Table\r\n                    key={keys}\r\n                    // className\t\t= 'xplr'\r\n                    cols\t\t\t= { this.cols }\r\n                    data \t\t\t= { data }\r\n                    loading \t\t= { pullLoading }\r\n                    onRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n                    onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                />\r\n            </div> \r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\upload-report.js",["1890","1891","1892"],"/* 薛玉梅 | 2020-12-29 15:14:46 | desc: 检测中心上传报告单组件 */ \r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nimport coms from '@/private/js/common.js'\r\nimport ReportClose from '@img/rp-close.png' \r\nimport ReportImg from '@img/report.png' \r\nconst { $async } = window\r\n// ===================================================================== antd\r\nconst Upload = $async(() => import('@antd/upload'))  \r\n\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n    <h3 className='fxm h30'><i className='r100px mr5' style={{ width: 5, height: 5, background: '#333' }}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n)\r\n// ===================================================================== component\r\nexport default class extends React.Component {\r\n    state = {\r\n        imgs: ''\r\n    }\r\n    uploads = (v) => { \r\n        console.log(v)\r\n        this.setState({imgs: v})   \r\n        this.handleChange(v)\r\n    } \r\n    deleteImg = () => { \r\n        this.setState({imgs: ''}) \r\n        this.handleChange()\r\n    } \r\n    opendImg = () => {\r\n        window.open(coms.img_domain_url(this.state.imgs))\r\n    }\r\n\tcomponentWillReceiveProps ({value}) {\r\n        if (value !== this.state.imgs) {\r\n            this.setState({imgs: typeof(value) === 'string'} ? value : '') \r\n        }\r\n    } \r\n    handleChange = (v) => { \r\n        this.props.handleChange && this.props.handleChange({[this.props.name]: v}, this.props.name) \r\n    } \r\n    render() {\r\n        const { imgs } = this.state\r\n        const { title } = this.props\r\n        return (\r\n            <>\r\n                <Title title={title ? title : '报告单'} titleChildren={\r\n                    <Upload mode='upBtn' multiple={false} api='upload/img' params={{ modular: 126, type: 2 }} onChange={(val) => this.uploads(val)} />\r\n                } />\r\n                <div className='fxw' style={{ minHeight: '100px', width: '100%' }}> \r\n                    { imgs && \r\n                        <div className='bor1 upload-img-box' style={{position: 'relative', width: '100px', height: '100px', marginRight: '6px', marginBottom: '6px', textAlign: 'center' }}>\r\n                            <div>\r\n                                <img className='db cp' style={{margin: '0 0 0 auto', height: '20px' }} src={ReportClose} onClick={() => this.deleteImg()} />\r\n                            </div>\r\n                            <img style={{width: '37px', height: '43px', display: 'inline', marginTop: '10px'}} src={ReportImg} onClick={() => this.opendImg()} /> \r\n                        </div> \r\n                    } \r\n                </div>   \r\n            </>\r\n        )\r\n    }\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\spec-abnormal.js",["1893","1894"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Radio = $async(()=>import('@antd/form/radio'))\r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\nconst Title = $async(()=>import('#tp/title')) \r\n \r\n// ===================================================================== component \r\nexport default class extends React.Component{ \r\n\tstate = { \r\n\t\tforms: {\r\n            rongxue: \"\",\r\n            zhixue: \"\",\r\n            handan: \"\",\r\n            other: \"\"\r\n        },\r\n        specAbnormalFlag: false\r\n    } \r\n    abnormalOpt = [\r\n\t\t{codeName: '+', \tid: '0'}, {codeName: '++', \tid: '1'}, {codeName: '+++', \tid: '2'}, {codeName: '++++', \tid: '3'}, {codeName: '+/-',\tid: '4'} \r\n\t] \r\n\tcomponentDidMount () {\r\n\t\tthis.props.onRef(this)\r\n\t}\r\n\tsubmits = () => {\r\n        console.log('保存')\r\n        console.log(this.state.forms)\r\n    } \r\n\t// 是否显示标本异常\r\n\tspecAbnormal = () => { \r\n\t\tthis.setState({specAbnormalFlag: !this.state.specAbnormalFlag})\r\n\t}\r\n\tonChangeForms = (value, name ) => { \r\n        const { forms } = this.state\r\n        forms[name] = value\r\n        this.setState({forms})   \r\n\t}\r\n\trender () {\r\n\t\tconst { rows, selectedKeys } = this.props\r\n\t\tconst { specAbnormalFlag, forms } = this.state\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n                <div className='plr10 fxm'> \r\n\t\t\t\t\t<Button disabled={!$fn.hasObject(rows)} ghost label={`是否${specAbnormalFlag ? '隐藏' : '显示'}标本异常`} title='请选择一条列表数据' onClick={() => this.specAbnormal()} />\r\n                    <div style={{color: '#000',fontSize: '12px',padding: '0 20px'}}>\r\n                        当前选中 <span style={{color: '#37a6da',fontSize: '16px'}}>{selectedKeys.length}</span> 条数据\r\n                    </div>\r\n\t\t\t\t</div> \r\n\t\t\t\t<div className='oh fv spec-abnormal' style={{height: specAbnormalFlag ? '220px' : '0'}}>\r\n\t\t\t\t\t<Title title='标本异常' style={{border: 'none'}} children = {\r\n\t\t\t\t\t\t<div className='fxm' >\r\n\t\t\t\t\t\t\t<Button label='保存' className='ml10' onClick={() => this.submits()} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t} />\r\n\t\t\t\t\t<div className='bor1 ex oxys' style={{margin: '0 10px'}}>\r\n\t\t\t\t\t\t<div className='fxm plr10 mb10 radio-style'>\r\n\t\t\t\t\t\t\t<span className='mr10'>溶血：</span>\r\n\t\t\t\t\t\t\t<Radio optionType='default' onChange={e => this.onChangeForms(e.target.value, 'rongxue')} data={this.abnormalOpt} value={forms.rongxue} />\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t<div className='fxm plr10 mb10 radio-style'>\r\n\t\t\t\t\t\t\t<span className='mr10'>脂血：</span>\r\n\t\t\t\t\t\t\t<Radio optionType='default' onChange={e => this.onChangeForms(e.target.value, 'zhixue')} data={this.abnormalOpt} value={forms.zhixue} />\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t<div className='fxm plr10 mb10 radio-style'>\r\n\t\t\t\t\t\t\t<span className='mr10'>黄疸：</span>\r\n\t\t\t\t\t\t\t<Radio optionType='default' onChange={e => this.onChangeForms(e.target.value, 'handan')} data={this.abnormalOpt} value={forms.handan} />\r\n\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t<div className='fxm plr10 mb10 radio-style'>\r\n\t\t\t\t\t\t\t<span className='mr10'>其他：</span>\r\n\t\t\t\t\t\t\t<Input name='other' width={360} value={forms.other} onChange={(v, data, name) => this.onChangeForms(data, name) } /> \r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n            </React.Fragment>\r\n\t\t) \r\n\t}  \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\upload-img.js",["1895","1896"],"/* 薛玉梅 | 2020-12-29 14:15:11 | desc: 检测中心上传图片组件 */\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nimport coms from '@/private/js/common.js'\r\nimport { ArrowLeftOutlined, ArrowRightOutlined, ZoomInOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport Modal from '@antd/modal'\r\nconst { $async, $fn } = window\r\n\r\n// ===================================================================== antd\r\nconst Upload = $async(() => import('@antd/upload')) \r\nconst message = import('@antd/message')\r\nconst PImg = $async(()=>import('@cpt/p-img'))\r\n\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n    <h3 className='fxm h30'><i className='r100px mr5' style={{ width: 5, height: 5, background: '#333' }}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n)\r\n// ===================================================================== component\r\nexport default class extends React.Component {\r\n    state = {\r\n        data: [],\r\n        imgModel: false,\r\n        zoomImg: ''\r\n    }\r\n    uploads = (v) => { \r\n        const _data = $fn.hasArray(v) ? v.map(i => i.img_path) : [];\r\n        const d = [..._data, ...this.state.data];\r\n        this.setState({data: d}) \r\n        this.handleChange(d)\r\n    }\r\n    sortImg = (value, index, number) => {\r\n        const { data } = this.state\r\n        if (index === 0 && number === -1) { \r\n            message.then(f=>f.default.error('已经是第一个了'))\r\n        } else if (index === data.length - 1 && number === 1) {\r\n            message.then(f=>f.default.error('已经是最后一个了')) \r\n        } else {\r\n            let d = data.filter(i => i !== value)\r\n            d.splice(index + number, 0, value); \r\n            this.setState({data: d}) \r\n            this.handleChange(d)\r\n        }\r\n    }\r\n    zoomImg = (item) => {\r\n        this.setState({zoomImg: item, imgModel: true}) \r\n        this.refs.modal.open()\r\n    }\r\n    deleteImg = (value, index) => {\r\n        const { data } = this.state\r\n        data.splice(index, 1) \r\n        this.setState({data: data})\r\n        this.handleChange(data)\r\n    } \r\n    handleChange = (v) => { \r\n        this.props.handleChange && this.props.handleChange({[this.props.name]: v}, this.props.name) \r\n    } \r\n\tcomponentWillReceiveProps ({value}) { \r\n        if (value !== this.state.data) {\r\n            this.setState({data: $fn.hasArray(value) ? value : []})\r\n        }\r\n    } \r\n    componentDidMount () {\r\n        const { value } = this.props \r\n        this.setState({data: $fn.hasArray(value) ? value : []})\r\n    }\r\n    render() {\r\n        const { data } = this.state\r\n        const { title } = this.props\r\n        return (\r\n            <>\r\n                <Title title={title ? title : '图形'} titleChildren={\r\n                    <Upload mode='upBtn' multiple={true} api='upload/img' params={{ modular: 126 }} onChange={(val) => this.uploads(val)} />\r\n                } />\r\n                <div className='fxw' style={{ minHeight: '100px', width: '100%' }}>\r\n                    {data && data.map((j, i) => {\r\n                        return (\r\n                        <div key={i} className='bor1 upload-img-box' style={{position: 'relative', width: '100px', height: '100px', marginRight: '6px', marginBottom: '6px' }}>\r\n                            <img style={{width: '100%', height: '100%',objectFit: 'contain'}} src={coms.img_domain_url(j)} />\r\n                            <div className='upload-img-operation' style={{ position: 'absolute', zIndex: 50, bottom: '0', width: '100%', height: '30px', lineHeight: '30px', background: 'rgba(0,0,0,0.6)', textAlign: 'center', color: '#ffffff'}}>\r\n                                <ArrowLeftOutlined style={{fontSize: '14px', marginRight: '10px'}} onClick={() => this.sortImg(j,i,-1)} />\r\n                                <ArrowRightOutlined style={{fontSize: '14px', marginRight: '10px'}} onClick={() => this.sortImg(j,i,1)}  />\r\n                                <ZoomInOutlined style={{fontSize: '14px', marginRight: '10px'}} onClick={() => this.zoomImg(j)} />\r\n                                <DeleteOutlined style={{fontSize: '14px'}} onClick={() => this.deleteImg(j,i)} />\r\n                            </div>\r\n                        </div> \r\n                        )\r\n                    })} \r\n                </div>  \r\n                {/* 查看图片 */}  \r\n                <Modal ref='modal' noTitle={true} width={0} noFooter mask={false} closable={false}>\r\n                    <div className='view-image full'>\r\n\t\t\t\t\t\t<PImg src={this.state.zoomImg} onClose={() => {\r\n                            this.setState({imgModel: false})\r\n                            this.refs.modal.close()\r\n                        }} /> \r\n\t\t\t\t\t</div>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\set-result.js",["1897"],"import React from 'react' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== antd\r\nconst DatePicker = $async(()=>import('@antd/form/datePicker'))\r\nconst Select = $async(()=>import('@antd/form/select')) \r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template \r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== component \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\tpullLoading: false,\r\n\t\tselectedKeys: {}, \r\n        params: {},\r\n        model: {},\r\n        deviceNameOptions: [],\r\n        keys: 0\r\n    } \r\n    cols = [ \r\n        { title: '实验号', \t\t\t    field: 'lab_tag', \t\t                width:80 },\r\n        { title: '结果时间', \t\t\tfield: 'msg_send_at', \t\t            width:150 },\r\n        { title: '设备编号', \t\t\tfield: 'device_uid', \t\t            width:100 },\r\n        { title: '设备名称', \t\t\tfield: 'device_name', \t\t            width:100 },\r\n        { title: '项目', \t\t\t    field: 'kind_name', \t\t            width:120 },\r\n        { title: '值', \t\t\t        field: 'value', \t\t                width:120 },\r\n        { title: '值1', \t\t\t    field: 'value1', \t\t                width:120 },\r\n    ]\r\n\tcomponentDidMount(){  \r\n        this.props.onRef && this.props.onRef(this)   \r\n        cacheApi.then(f => {\r\n            const d = f.default \r\n            $fn.getCache({ // 设备名称\r\n                cache: d.deviceResult4Select, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.setState({deviceNameOptions: data})  \r\n                    } else {\r\n                        $http.submit(null, 'result-unit-item/getDeviceResult4Select').then(data => {\r\n                            this.setState({deviceNameOptions: data})  \r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }  \r\n    changeFetch = (params) => {\r\n        this.setState({params: params}, () => this.fetch()) \r\n    }\r\n    fetch = param => $fn.fetch.call(this,'result-unit-item/getDeviceResultList', {...param, ...this.state.params, ...this.state.model})\r\n\tonChanges (v, name) {     \r\n        const { model } = this.state \r\n        model[name] = v[name]\r\n        this.setState({model}) \r\n    }\r\n    onChangesTime = (v) => { \r\n        console.log(v)\r\n        const { model } = this.state \r\n        model.start_at = v.start\r\n        model.end_at = v.end\r\n        this.setState({date: [v.start, v.end], model: model})\r\n        console.log(this.state.model)\r\n    }\r\n    submits = (callback) => {\r\n        if (!$fn.hasArray(this.state.data)) { return message.then(f => f.default.error('暂无数据'))}\r\n        let forms = {\r\n            uuid: this.props.infos.uuid,\r\n            result_suggestion_content: this.props.infos.result_suggestion_content,\r\n            spec_abnormal: \"\",\r\n            content: \"\",\r\n            dilution_multiple: this.props.infos.dilution_multiple,\r\n            result: this.state.selectedKeys.value,\r\n            spec_type: this.props.infos.spec_type\r\n        };\r\n        let param = {\r\n        forms: JSON.stringify([forms]) \r\n        }; \r\n        $http.submit(null, 'result-unit-item/updateall', { param: param, onSuccess: () => {\r\n            message.then(f=>f.default.success('操作成功'))\r\n            callback && callback() \r\n        } }) \r\n    }\r\n\trender () {\r\n\t\tconst { data, pullLoading, pag, model, keys } = this.state \r\n\t\treturn (\r\n            <>\r\n            <div className='fxj pb10'>\r\n                <div key={keys}>\r\n                    设备名称：<Select style={{marginRight: '20px'}} name='device_name' width={150} bordered={true} data={this.state.deviceNameOptions} nameStr='device_name' idStr='device_name' value={model.spec_type}  onChanged={(v, data, name) => this.onChanges(v, name)} />\r\n                    结果时间：<DatePicker name='date' names={['start_at','end_at']} width={380} range showTime value={this.state.date} onChange={v => this.onChangesTime(v, false, {})} />\r\n                </div>\r\n                <div> \r\n                    <Button className='mr10' label='搜索' ghost={true} onClick={() => this.fetch()}  />\r\n                    <Button label='重置' ghost={true} onClick={() => {\r\n                        this.setState({model: {}, date: [null,null], keys: keys + 1}, () => {\r\n                            this.fetch()\r\n                        })\r\n                    }} />\r\n                </div>\r\n            </div>\r\n\t\t\t<Table\r\n                cols\t\t\t= { this.cols }\r\n                data \t\t\t= { data }\r\n                loading \t\t= { pullLoading }\r\n                onRow\t\t\t= { (select) => { \r\n                    this.setState({ selectedKeys: select })\r\n                }}\r\n                pag\t\t\t\t= { pag }\r\n                onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                onSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n            /> \r\n            </>\r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\result-44016-2.js",["1898"],"import React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $async, $http, $fn } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst Input = $async(()=>import('@antd/form/input')) \r\n// ===================================================================== component\r\nconst UploadImg = $async(()=>import('./upload-img'))\r\nconst UploadReport = $async(()=>import('./upload-report'))\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n\t<h3 className='fxm h30'><i className='r100px mr5' style={{width:5,height:5,background:'#333'}}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n)  \r\n// ===================================================================== component \r\nexport default class extends React.Component{ \r\n\tstate = { \r\n\t\tforms: {}, // 要提交的数据\r\n\t\tinfos: {} // 详情\r\n\t}  \r\n\tcomponentDidMount () { \r\n\t\tthis.props.onRef(this) \r\n\t\tconst {infos} = this.props  \r\n\t\tif ($fn.hasObject(infos)) {\r\n\t\t\tthis.setState({infos: infos})\r\n\t\t\tthis.setForms(infos.content)\r\n\t\t} else { \r\n\t\t\tthis.setForms()\r\n\t\t}\r\n\t} \r\n\tcomponentWillReceiveProps ({infos}) { \r\n\t\tthis.setState({infos: infos})\r\n\t\tthis.setForms(infos.content)\r\n\t}\r\n\tsetForms = (v) => { \r\n\t\tconst { forms } = this.state\r\n\t\tif ($fn.hasObject(v)) { \r\n\t\t\tforms.bone_marrow_features = v.bone_marrow_features || ''\r\n\t\t\tforms.blood_characteristics = v.blood_characteristics || ''\r\n\t\t\tforms.morphological_opinion = v.morphological_opinion || '' \r\n\t\t\tforms.imgs = v.imgs || []\r\n\t\t\tforms.report_form_imgs = v.report_form_imgs || ''\r\n\t\t\tthis.setState({forms: forms})\r\n\t\t} else {\r\n\t\t\tforms.bone_marrow_features = ''\r\n\t\t\tforms.blood_characteristics = ''\r\n\t\t\tforms.morphological_opinion = '' \r\n\t\t\tforms.imgs = []\r\n\t\t\tforms.report_form_imgs = ''\r\n\t\t\tthis.setState({forms: forms})\r\n\t\t}\r\n\t} \r\n\tchangeInput = (v, name) => ts.changeInput.call(this, v, name)\r\n\tsubmits = () => {\r\n\t\tconst { infos, forms } = this.state\r\n\t\tif (!$fn.hasObject(infos)) { return message.then(f => f.default.error('请选择一条列表数据')) }\r\n\t\tlet content = ts.setNullParameter(forms);\r\n\t\tlet params = {\r\n\t\t\tuuid: infos.uuid,\r\n\t\t\tcontent: content,\r\n\t\t\tdmodel: ts.getPath().id\r\n\t\t};\r\n\t\t$http.submit(null,'result-unit-item/update', { param: params, successText: '操作成功'})\r\n\t}\r\n\trender () {\r\n\t\tconst { className, is_coll_pic, is_upload_report_form } = this.props\r\n\t\tconst { forms } = this.state\r\n\t\treturn (\r\n\t\t\t<div className={`${className} xplr`}> \r\n\t\t\t\t{ is_coll_pic === '1' && <UploadImg title='镜下涂片' handleChange={(v) => { console.log(v) }} value={forms.imgs} /> } \r\n\t\t\t\t{ is_upload_report_form === '1' && <UploadReport handleChange={(v) => { console.log(v) }} value={forms.report_form_imgs} />}\r\n\t\t\t \t<Title title='骨髓特征' />\r\n\t\t\t\t<Input mode='textarea' name='bone_marrow_features' size='middle' bordered={false} value={forms.bone_marrow_features} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t \t<Title title='血片特征' />\r\n\t\t\t\t<Input mode='textarea' name='blood_characteristics' size='middle' bordered={false} value={forms.blood_characteristics} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t \t<Title title='形态学意见' />\r\n\t\t\t\t<Input mode='textarea' name='morphological_opinion' size='middle' bordered={false} value={forms.morphological_opinion} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p> \r\n\t\t\t</div>\r\n\t\t) \r\n\t}  \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\result-44016-1.js",["1899","1900","1901","1902","1903"],"import React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $async, $fn, $http } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst Input = $async(()=>import('@antd/form/input')) \r\n// ===================================================================== component  \r\nconst Table = $async(()=>import('#cpt/table'))  \r\n// ===================================================================== component \r\nexport default class extends React.Component{ \r\n\tstate = { \r\n\t\tdata: [],  \r\n\t\tbone_marrow_slice: 0,\r\n\t\tblood: 0,\r\n\t\tinfos: {}, // 详情\r\n\t} \r\n\tcols = [ \r\n\t\t{ title: '细胞明细', \tfield: 'name', \t\t\t\t\twidth: 120 },  \r\n\t\t{ title: '骨髓片', \t\tfield: 'bone_marrow_slice', \twidth: 120, render: ({rows}) => { \r\n\t\t\treturn (<> <Input width={110} value={rows.bone_marrow_slice} style={{borderRadius: '4px'}} onChange={(e) => this.onChanges({rowsId: rows.id, value: e, field: 'bone_marrow_slice'}) } /> { rows.id !== 22 && <span>%</span>} </>) \r\n\t\t} },  \r\n\t\t{ title: '血片', \t\tfield: 'blood', \t\t\t\twidth: 120, render: ({rows}) => {\r\n\t\t\treturn (<> <Input width={110} value={rows.blood} style={{borderRadius: '4px'}} onChange={(e) => this.onChanges({rowsId: rows.id, value: e, field: 'blood'}) } /> { rows.id !== 22 && <span>%</span>} </>) \r\n\t\t} },  \r\n\t]\r\n\tsetTableData() {\r\n\t\tlet d = [\r\n\t\t  { name: \"原始血细胞\", bone_marrow_slice: \"\", blood: \"\", id: 0 },\r\n\t\t  { name: \"原始粒细胞\", bone_marrow_slice: \"\", blood: \"\", id: 1 },\r\n\t\t  { name: \"早幼粒细胞\", bone_marrow_slice: \"\", blood: \"\", id: 2 },\r\n\t\t  { name: \"中性粒细胞中幼\", bone_marrow_slice: \"\", blood: \"\", id: 3 },\r\n\t\t  { name: \"中性粒细胞晚幼\", bone_marrow_slice: \"\", blood: \"\", id: 4 },\r\n\t\t  { name: \"中性粒细胞杆状核\", bone_marrow_slice: \"\", blood: \"\", id: 5 },\r\n\t\t  { name: \"中性粒细胞分叶核\", bone_marrow_slice: \"\", blood: \"\", id: 6 },\r\n\t\t  { name: \"嗜酸性粒细胞中幼\", bone_marrow_slice: \"\", blood: \"\", id: 7 },\r\n\t\t  { name: \"嗜酸性粒细胞晚幼\", bone_marrow_slice: \"\", blood: \"\", id: 8 },\r\n\t\t  { name: \"嗜酸性粒细胞杆状核\", bone_marrow_slice: \"\", blood: \"\", id: 9 },\r\n\t\t  {\r\n\t\t\tname: \"嗜酸性粒细胞分叶核\",\r\n\t\t\tbone_marrow_slice: \"\",\r\n\t\t\tblood: \"\",\r\n\t\t\tid: 10\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tname: \"嗜碱性粒细胞中幼\",\r\n\t\t\tbone_marrow_slice: \"\",\r\n\t\t\tblood: \"\",\r\n\t\t\tid: 11\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tname: \"嗜碱性粒细胞晚幼\",\r\n\t\t\tbone_marrow_slice: \"\",\r\n\t\t\tblood: \"\",\r\n\t\t\tid: 12\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tname: \"嗜碱性粒细胞杆状核\",\r\n\t\t\tbone_marrow_slice: \"\",\r\n\t\t\tblood: \"\",\r\n\t\t\tid: 13\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tname: \"嗜碱性粒细胞分叶核\",\r\n\t\t\tbone_marrow_slice: \"\",\r\n\t\t\tblood: \"\",\r\n\t\t\tid: 14\r\n\t\t  },\r\n\t\t  { name: \"原始红细胞\", bone_marrow_slice: \"\", blood: \"\", id: 15 },\r\n\t\t  { name: \"早幼红细胞\", bone_marrow_slice: \"\", blood: \"\", id: 16 },\r\n\t\t  { name: \"中幼红细胞\", bone_marrow_slice: \"\", blood: \"\", id: 17 },\r\n\t\t  { name: \"晚幼红细胞\", bone_marrow_slice: \"\", blood: \"\", id: 18 },\r\n\t\t  { name: \"早巨红细胞\", bone_marrow_slice: \"\", blood: \"\", id: 19 },\r\n\t\t  { name: \"中巨红细胞\", bone_marrow_slice: \"\", blood: \"\", id: 20 },\r\n\t\t  { name: \"晚巨红细胞\", bone_marrow_slice: \"\", blood: \"\", id: 21 },\r\n\t\t  { name: \"粒：幼红比值\", bone_marrow_slice: \"\", blood: \"\", id: 22 },\r\n\t\t  { name: \"原始淋巴细胞\", bone_marrow_slice: \"\", blood: \"\", id: 23 },\r\n\t\t  { name: \"幼稚淋巴细胞\", bone_marrow_slice: \"\", blood: \"\", id: 24 },\r\n\t\t  { name: \"淋巴细胞\", bone_marrow_slice: \"\", blood: \"\", id: 25 },\r\n\t\t  { name: \"异常淋巴细胞\", bone_marrow_slice: \"\", blood: \"\", id: 26 },\r\n\t\t  { name: \"原始单核细胞\", bone_marrow_slice: \"\", blood: \"\", id: 27 },\r\n\t\t  { name: \"幼稚单核细胞\", bone_marrow_slice: \"\", blood: \"\", id: 28 },\r\n\t\t  { name: \"单核细胞\", bone_marrow_slice: \"\", blood: \"\", id: 29 },\r\n\t\t  { name: \"原始浆细胞\", bone_marrow_slice: \"\", blood: \"\", id: 30 },\r\n\t\t  { name: \"幼稚浆细胞\", bone_marrow_slice: \"\", blood: \"\", id: 31 },\r\n\t\t  { name: \"浆细胞\", bone_marrow_slice: \"\", blood: \"\", id: 32 },\r\n\t\t  { name: \"原始巨核细胞\", bone_marrow_slice: \"\", blood: \"\", id: 33 },\r\n\t\t  { name: \"幼稚型巨核细胞\", bone_marrow_slice: \"\", blood: \"\", id: 34 },\r\n\t\t  { name: \"颗粒型巨核细胞\", bone_marrow_slice: \"\", blood: \"\", id: 35 },\r\n\t\t  { name: \"产板型巨核细胞\", bone_marrow_slice: \"\", blood: \"\", id: 36 },\r\n\t\t  { name: \"裸核型巨核细胞\", bone_marrow_slice: \"\", blood: \"\", id: 37 },\r\n\t\t  { name: \"网状细胞\", bone_marrow_slice: \"\", blood: \"\", id: 38 },\r\n\t\t  { name: \"内皮细胞\", bone_marrow_slice: \"\", blood: \"\", id: 39 },\r\n\t\t  { name: \"组织细胞\", bone_marrow_slice: \"\", blood: \"\", id: 40 },\r\n\t\t  { name: \"分类不明细胞\", bone_marrow_slice: \"\", blood: \"\", id: 41 },\r\n\t\t  { name: \"其他异常细胞\", bone_marrow_slice: \"\", blood: \"\", id: 42 }\r\n\t\t];\r\n\t\treturn d;\r\n\t}\r\n\tcomponentDidMount () { \r\n\t\tthis.props.onRef(this) \r\n\t\tconst {infos} = this.props  \r\n\t\tif ($fn.hasObject(infos)) {\r\n\t\t\tthis.setState({infos: infos})\r\n\t\t\tthis.setForms(infos.content)\r\n\t\t} else { \r\n\t\t\tthis.setForms()\r\n\t\t}\r\n\t}\r\n\tcomponentWillReceiveProps ({infos}) { \r\n\t\tthis.setState({infos: infos})\r\n\t\tthis.setForms(infos.content)\r\n\t}\r\n\tsetForms = (v) => {   \r\n\t\tif ($fn.hasObject(v)) {\r\n\t\t\tconst data = $fn.hasArray(v.clinicaldiagnosis_table) ? v.clinicaldiagnosis_table : this.setTableData()\r\n\t\t\tthis.setState({data: data}, () => {\r\n\t\t\t\tthis.setNum('bone_marrow_slice')\r\n\t\t\t\tthis.setNum('blood')\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({data: this.setTableData()}, () => {\r\n\t\t\t\tthis.setNum('bone_marrow_slice')\r\n\t\t\t\tthis.setNum('blood')\r\n\t\t\t})\r\n\t\t} \r\n\t}\r\n\tonChanges = ({ rowsId, value, field }) => { \r\n\t\tconst { data } = this.state\r\n\t\tdata.forEach(i => {\r\n\t\t\tif (rowsId === i.id) {\r\n\t\t\t  i[field] = value \r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.setState({data}) \r\n\t\tthis.setNum(field)\r\n\t}\r\n\tsetColor = (value) => {\r\n\t\tif (value === 100) {\r\n\t\t\treturn \"rgba(0, 174, 75, 1)\";\r\n\t\t} else {\r\n\t\t\treturn \"rgba(255, 78, 0, 1)\";\r\n\t\t}\r\n\t}\r\n\tsetNum = (field) => {\r\n\t\tconst { data } = this.state\r\n\t\tlet d = 0;\r\n\t\tdata.forEach(j => {\r\n\t\t\tif (j[field] && Number(j.id) !== 22) {\r\n\t\t\t\td = this.floatAdd(d, parseFloat(j[field]))\r\n\t\t\t}\r\n\t\t})  \r\n\t\tthis.setState({[field]: d})\r\n\t} \r\n\t\r\n    floatAdd(a, b) {\r\n\t\tlet c, d, e;\r\n\t\tif (undefined == a || null == a || \"\" == a || isNaN(a)) {\r\n\t\t  a = 0;\r\n\t\t}\r\n\t\tif (undefined == b || null == b || \"\" == b || isNaN(b)) {\r\n\t\t  b = 0;\r\n\t\t}\r\n\t\ttry {\r\n\t\t  c = a.toString().split(\".\")[1].length;\r\n\t\t} catch (f) {\r\n\t\t  c = 0;\r\n\t\t}\r\n\t\ttry {\r\n\t\t  d = b.toString().split(\".\")[1].length;\r\n\t\t} catch (f) {\r\n\t\t  d = 0;\r\n\t\t}\r\n\t\te = Math.pow(10, Math.max(c, d));\r\n\t\treturn (this.floatMul(a, e) + this.floatMul(b, e)) / e;\r\n\t}\r\n\tfloatMul(a, b) {\r\n\t\tlet c = 0,\r\n\t\t  d = a.toString(),\r\n\t\t  e = b.toString();\r\n\t\ttry {\r\n\t\t  c += d.split(\".\")[1].length;\r\n\t\t} catch (f) {}\r\n\t\ttry {\r\n\t\t  c += e.split(\".\")[1].length;\r\n\t\t} catch (f) {}\r\n\t\treturn (\r\n\t\t  (Number(d.replace(\".\", \"\")) * Number(e.replace(\".\", \"\"))) /\r\n\t\t  Math.pow(10, c)\r\n\t\t);\r\n\t} \r\n\tsubmits = () => { \r\n\t\tconst { infos, data } = this.state\r\n\t\tif (!$fn.hasObject(infos)) { return message.then(f => f.default.error('请选择一条列表数据')) }\r\n\t\tlet d = data.map(i => {\r\n            return {\r\n              name: i.name,\r\n              bone_marrow_slice: i.bone_marrow_slice,\r\n              blood: i.blood,\r\n              id: i.id\r\n            };\r\n        });\r\n\t\tlet param = {\r\n\t\t\tuuid: infos.uuid,\r\n\t\t\tcontent: { clinicaldiagnosis_table: d },\r\n\t\t\tdmodel: ts.getPath().id\r\n\t\t}; \r\n\t\t$http.submit(null,'result-unit-item/update', { param: param, successText: '操作成功'})\r\n\t}\r\n\trender () {\r\n\t\tconst { className } = this.props\r\n\t\tconst { data, bone_marrow_slice, blood } = this.state\r\n\t\treturn (\r\n\t\t\t<div className={`${className} xplr p10`}> \r\n\t\t\t\t <Table \r\n\t\t\t\t \tclassName       = 'h pb30'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }  \r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='fx tc' style={{position: 'absolute', bottom: 0, left: 0, height: '40px', lineHeight: '40px', width: '100%', borderTop: '1px solid #EEEEEE', padding: '0 10px'}}>\r\n\t\t\t\t\t<div className='ex'>统计</div>\r\n\t\t\t\t\t<div className='ex' style={{color: this.setColor(bone_marrow_slice)}}>{bone_marrow_slice}</div>\r\n\t\t\t\t\t<div className='ex' style={{color: this.setColor(blood)}}>{blood}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t) \r\n\t}  \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\resulting-operation-log.js",["1904"],"import React from 'react' \r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== component \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\tpullLoading: false,\r\n\t\tselectedKeys: [],\r\n\t\trows: {},  \r\n\t\tuuid: ''\r\n    } \r\n    cols = [\r\n        { title: '标本条码', \t\t\tfield: 'spec_code', \t\t            width:120 },\r\n        { title: '建议与解释', \t\t\tfield: 'result_suggestion_content', \twidth:150 },\r\n        { title: '结果', \t\t\t    field: 'result', \t\t                width:120 },\r\n        { title: '报告结果', \t\t\tfield: 'result1', \t\t                width:80 },\r\n        { title: '稀释倍数', \t\t\tfield: 'dilution_multiple', \t\t    width:80 },\r\n        { title: '单位', \t\t\t    field: 'unit_val_name', \t\t        width:80 },\r\n        { title: '标本类型', \t\t\tfield: 'spec_type_name', \t\t        width:80 },\r\n        { title: '项目名称', \t\t\tfield: 'kind_name', \t\t            width:150 },\r\n        { title: '操作人', \t\t\t    field: 'operator_name', \t\t        width:80 },\r\n        { title: '操作时间', \t\t\tfield: 'operator_at', \t\t            width:150 },\r\n    ]\r\n\tcomponentDidMount(){  \r\n\t\tthis.props.onRef && this.props.onRef(this)   \r\n    }  \r\n    changeFetch = (uuid) => {\r\n        this.setState({uuid: uuid}, () => this.fetch()) \r\n    }\r\n\tfetch = param => $fn.fetch.call(this,'ts-report-card/resultlog', {...param, uuid: this.state.uuid})\r\n\trender () {\r\n\t\tconst { data, pullLoading, pag } = this.state \r\n\t\treturn (\r\n\t\t\t<Table\r\n                className\t\t= 'xplr'\r\n                cols\t\t\t= { this.cols }\r\n                data \t\t\t= { data }\r\n                loading \t\t= { pullLoading }\r\n                onRow\t\t\t= { (select, rows) => { \r\n                    this.setState({ selectedKeys: select })\r\n                }}\r\n                pag\t\t\t\t= { pag }\r\n                onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                onSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n            /> \r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\reference-range.js",["1905","1906","1907","1908","1909"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Radio = $async(()=>import('@antd/form/radio'))\r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\nconst Title = $async(()=>import('#tp/title')) \r\n \r\n// ===================================================================== component \r\nexport default class extends React.Component{ \r\n\tstate = { \r\n\t\tforms: {}\r\n    }  \r\n\tcomponentDidMount () {\r\n\t\tthis.props.onRef(this)\r\n\t}    \r\n\tchangeSymbol(val) {\r\n\t\tlet d = [\r\n\t\t\t{ t1: \">\", \tt2: \"<\" },\r\n\t\t\t{ t1: \"≥\", \tt2: \"≤\" },\r\n\t\t\t{ t1: \">=\", t2: \"<=\"}, \r\n\t\t\t{ t1: \"<\", \tt2: \">\" },\r\n\t\t\t{ t1: \"≤\", \tt2: \"≥\" },\r\n\t\t\t{ t1: \"<=\", t2: \">=\" }\r\n\t\t];\r\n\t\tlet s = d.filter(i => i.t1 === val);\r\n\t\tif (s && s.length > 0) {\r\n\t\t\treturn s[0].t2;\r\n\t\t} else { // 如果不需要转换就直接显示原来的符号 \r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\tconst { rows, className, isVisible } = this.props \r\n\t\tlet woman \t= $fn.hasObject(rows) ? rows.reference_range.filter(i => i.sex === \"45702\") : [];\r\n\t\tlet man \t= $fn.hasObject(rows) ? rows.reference_range.filter(i => i.sex === \"45701\") : [];\r\n\t\tlet other \t= $fn.hasObject(rows) ? rows.reference_range.filter(i => !i.sex || i.sex === '45703') : [];\r\n\t\tlet data = [\r\n\t\t\t{ name: '男', data: man },\r\n\t\t\t{ name: '女', data: woman },\r\n\t\t\t{ name: '其他', data: other }\r\n\t\t]\r\n\t\treturn (\r\n\t\t\t<React.Fragment> \r\n\t\t\t\t<div className={'oh fv ' + className} style={{height: isVisible ? '200px' : '0'}}>\r\n\t\t\t\t\t<Title title='参考范围' style={{border: 'none'}} />\r\n\t\t\t\t\t<div className='bor1 ex oxys' style={{margin: '0 10px'}}>  \r\n\t\t\t\t\t\t{data.map((j,k)=> { \r\n\t\t\t\t\t\t\treturn ($fn.hasArray(j.data) && <div className='fx' key={k} style={{borderBottom: j.name !== '其他' ? '1px solid #E8EAEC' : '', padding: '6px 0'}}>\r\n\t\t\t\t\t\t\t\t<div style={{ width: '60px', padding:'6px 16px' }}>{j.name}</div>\t\r\n\t\t\t\t\t\t\t\t{j.data.map((v,i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<div key={i} style={{padding:'6px 16px'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{v.age_min_val +   \t\tthis.changeSymbol(v.age_min_type_name) + \t\t' 年龄值 ' + \t\tv.age_max_type_name + \t\tv.age_max_val} </p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{v.reference_min_val + \tthis.changeSymbol(v.reference_min_type_name) + \t' 年龄值 ' + \t\tv.reference_max_type_name + v.reference_max_val} </p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{v.crisis_min_val + \t\tthis.changeSymbol(v.crisis_min_type_name) + \t' 危机值范围 ' + \tv.crisis_max_type_name + \tv.crisis_max_val} </p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})} \t\r\n\t\t\t\t\t\t\t</div>) \r\n\t\t\t\t\t\t})} \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n            </React.Fragment>\r\n\t\t) \r\n\t}  \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\person-detail.js",["1910","1911","1912"],"import React from 'react'\r\n// ===================================================================== antd\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n// ===================================================================== private template\r\nconst Box = $async(()=>import('#tp/box/box'))\r\n// ===================================================================== template\r\nconst submit = [\r\n\t{ label:'标本条码', \tname:'spec_code' },\r\n\t{ label:'实验号', \t\tname:'experiment_num'},\r\n\t{ label:'姓名', \t\tname:'patient_name'},\r\n\t{ label:'年龄', \t\tname:'newAges'},\r\n\t{ label:'性别', \t\tname:'sex_name'},\r\n\t{ label:'送检科室', \tname:'department_name'},\r\n\t{ label:'床号', \t\tname:'bed_no'},\r\n\t{ label:'送检医生', \tname:'doctor'},\r\n\t{ label:'受检人电话', \tname:'patient_phone'},\r\n\t{ label:'采集日期', \tname:'coll_time'},\r\n\t{ label:'送检单位', \tname:'hosp_name'},\r\n\t{ label:'单位标识', \tname:'hosp_identification'},\r\n\t{ label:'标本性状', \tname:'spec_traits_name'},\r\n\t{ label:'备注', \t\tname:'remark', type:'textarea', rows:2},\r\n]\r\n// ===================================================================== component\r\nexport default ({infos}) => {   \r\n\tconst [ data, setData ] = React.useState(submit)  \r\n\tconst [ keys, setKeys ] = React.useState(0)  \r\n\tReact.useEffect(()=>{ \r\n\t\tif ($fn.hasObject(infos)) {\r\n\t\t\tdata[0].value = infos.case_info.spec_code || ''\r\n\t\t\tdata[1].value = infos.case_info.experiment_num || ''\r\n\t\t\tdata[2].value = infos.case_info.patient_name || ''\r\n\t\t\tdata[3].value = infos.case_info.newAges || ''\r\n\t\t\tdata[4].value = infos.case_info.sex_name || ''\r\n\t\t\tdata[5].value = infos.case_info.department_name || ''\r\n\t\t\tdata[6].value = infos.case_info.bed_no || ''\r\n\t\t\tdata[7].value = infos.case_info.doctor || ''\r\n\t\t\tdata[8].value = infos.case_info.patient_phone || ''\r\n\t\t\tdata[9].value = infos.case_info.coll_time || ''\r\n\t\t\tdata[10].value = infos.case_info.hosp_name || ''\r\n\t\t\tdata[11].value = infos.case_info.hosp_identification || ''\r\n\t\t\tdata[12].value = infos.case_info.spec_traits_name || ''\r\n\t\t\tdata[13].value = infos.case_info.remark || '' \r\n\t\t\tsetData(data) \r\n\t\t\tsetKeys(keys + 1)\r\n\t\t}\r\n\t},[ infos ]) \r\n\treturn (\r\n\t\t<Box className='mlr10 fv' title='人员详情' style={{width:250}}>\r\n\t\t\t<SubmitForm\r\n\t\t\t\tkey         = {keys}\r\n\t\t\t\tclassName \t= 'person-form'\r\n\t\t\t\tscrollClassName\t= 'pt10'\r\n\t\t\t\tdata \t\t= { data }\r\n\t\t\t\twidth \t\t= { 150 }\r\n\t\t\t\tmb\t\t\t= { 10 }\r\n\t\t\t\treadOnly\r\n\t\t\t\tdisabled\r\n\t\t\t\tdisplay\r\n\t\t\t\tnoholder\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\project-list.js",["1913","1914"],"import React from 'react'\r\n// ===================================================================== component\r\nimport SpecAbnormal from './spec-abnormal'; // 标本异常\r\nimport ReferenceRange from './reference-range'; // 参考范围\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Box = $async(()=>import('#tp/box/box'))\r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== component \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\tpullLoading: false,\r\n\t\tselectedKeys: [],\r\n\t\trows: {}, \r\n\t\tmodel: {\r\n\t\t\tresult_model: '',\r\n\t\t\tproject_id: '',\r\n\t\t\tstatus: '45001',\r\n\t\t\tid: '',\r\n\t\t}, \r\n\t\treferenceRangeFlag: false,\r\n\t\tinfos: {}, // 详情\r\n\t\t\r\n\t} \r\n\tcomponentDidMount(){  \r\n\t\tthis.props.onRef && this.props.onRef(this)  \r\n\t\tconst { model } = this.state\r\n\t\tmodel.result_model = ts.getPath().id\r\n\t\tmodel.project_id = ts.getPath().project_id\r\n\t\tmodel.id = ts.getPath().id\r\n\t\tthis.setState({model}, () => this.fetch())\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'ts-report-card/index', {...this.state.model, ...param})\r\n\tchangeFetch = ({param, pag}) => {  \r\n\t\tthis.setState({model: {...this.state.model, ...param}}, () => {\r\n\t\t\tthis.fetch({...param, page: pag ? this.state.pag.current : 1})\r\n\t\t})\r\n\t} \r\n\t// 参考范围\r\n\tchangeReferenceRange = (rows) => {\r\n\t\tconst {referenceRangeFlag } = this.state\r\n\t\tthis.setState({referenceRangeFlag: !referenceRangeFlag })\r\n\t}\r\n\t// 详情\r\n\tgetInfo = (rows) => {\r\n\t\tif (rows) {\r\n\t\t\tconst param = {\r\n\t\t\t\tuuid: rows.uuid,\r\n\t\t\t\tresult_model: ts.getPath().id,\r\n\t\t\t\tstatus: this.state.model.status\r\n\t\t\t}\r\n\t\t\twindow.$http.submit(null,'ts-report-card/info', { param: param, loading:false, dataName: 'infos'}).then(data=>{\r\n\t\t\t\tthis.setState({infos: data}) \r\n\t\t\t\tthis.props.getInfo(data)\r\n\t\t\t}).catch(res => {\r\n\t\t\t\tthis.setState({infos: rows}) \r\n\t\t\t\tthis.props.getInfo(rows)\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.props.getInfo()\r\n\t\t}\r\n\t\t\r\n\t} \r\n\trender () {\r\n\t\tconst { data, pullLoading, pag, selectedKeys, rows } = this.state\r\n\t\tconst { cols } = this.props\r\n\t\treturn (\r\n\t\t\t<Box \r\n\t\t\t\tclassName\t= 'ex fv' \r\n\t\t\t\ttitle\t\t= '项目列表'\r\n\t\t\t\tstyle       = {{paddingBottom: '10px'}}\r\n\t\t\t\ttitleChildren = {\r\n\t\t\t\t\t<div className='fx b'>\r\n\t\t\t\t\t\t<div><span>资料待审核</span></div>\r\n\t\t\t\t\t\t<div className='ml15'><span>已转外包</span></div>\r\n\t\t\t\t\t\t<div className='mlr15'><span>敏感词</span></div>\r\n\t\t\t\t\t\t<div><span>阳性</span></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\tonSetHeader = {()=>{}}\r\n\t\t\t>\r\n\t\t\t\t<div className='h10'></div>\r\n\t\t\t\t<div className='ex fv'> \r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\t\tcols\t\t\t= { cols }\r\n\t\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\t\tonRow\t\t\t= { (select, rows) => { \r\n\t\t\t\t\t\t\tif ($fn.hasObject(rows)) {\r\n\t\t\t\t\t\t\t\tif (rows.forms.result.type !== 'number') {\r\n\t\t\t\t\t\t\t\t\tthis.setState({ selectedKeys: select, rows: rows, referenceRangeFlag: false })\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.setState({ selectedKeys: select, rows: rows})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.getInfo(rows)\r\n\t\t\t\t\t\t\t\tthis.props.getSelectedKeys(select)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.setState({ selectedKeys: select, rows: {}, referenceRangeFlag: false })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t\t/> \r\n\t\t\t\t</div> \r\n\t\t\t\t<ReferenceRange onRef={ref => this.referenceRangeRef = ref} isVisible={this.state.referenceRangeFlag} rows={rows} className='mb10' />\r\n\t\t\t\t<SpecAbnormal onRef={ref => this.specAbnormalRef = ref} rows={rows} selectedKeys={selectedKeys} />\r\n\t\t\t</Box>\r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition.js",["1915","1916","1917"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Input = $async(()=>import('@antd/form/input'))\r\n// ===================================================================== component\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst BoxScroll = $async(()=>import('#tp/box/box-scroll'))\r\n// ===================================================================== component\r\nconst Title = ({ title }) => (\r\n\t<h3 className='fxm h40'><i className='r100px mr5' style={{width:5,height:5,background:'#333'}}></i><span>{title}</span></h3>\r\n)\r\n// ===================================================================== component\r\nexport default ({ data, cols }) => {\r\n\treturn (\r\n\t\t<BoxScroll \r\n\t\t\tclassName\t= 'fv' \r\n\t\t\ttitle\t\t= '图形与解释'\r\n\t\t\tstyle\t\t= {{width:350}}\r\n\t\t\ttitleChildren = {\r\n\t\t\t\t<div className='fxm' >\r\n\t\t\t\t\t<Button label='取消' ghost />\r\n\t\t\t\t\t<Button label='保存' className='ml10' />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Title title='结果2' />\r\n\t\t\t<Input size='middle' bordered={false} />\r\n\t\t\t<Title title='建议与解释（手动）' />\r\n\t\t\t<Input size='middle' mode='textarea' bordered={false} />\r\n\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t<Title title='临床建议' />\r\n\t\t\t<Input size='middle' mode='textarea' bordered={false} />\r\n\t\t</BoxScroll>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44030.js",["1918"],"import React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $async, $fn, $http } = window\r\n// ===================================================================== antd\r\nconst Input = $async(()=>import('@antd/form/input')) \r\nconst message = import('@antd/message') \r\n// ===================================================================== component\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst BoxScroll = $async(()=>import('#tp/box/box-scroll'))\r\nconst UploadImg = $async(()=>import('./upload-img'))\r\nconst UploadReport = $async(()=>import('./upload-report'))\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n\t<h3 className='fxm h30'><i className='r100px mr5' style={{width:5,height:5,background:'#333'}}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n) \r\n// ===================================================================== component  \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tforms: {}, // 要提交的数据\r\n\t\tinfos: {}, // 详情 \r\n\t\tkeys: 0 \r\n\t} \r\n\tcomponentDidMount () {\r\n\t\tthis.setForms() \r\n\t}\r\n\tcomponentWillReceiveProps ({infos}) { \r\n\t\tthis.setState({infos: infos})\r\n\t\tthis.setForms(infos.content)\r\n\t}\r\n\tsetForms = (v) => { \r\n\t\tconst { forms } = this.state\r\n\t\tif ($fn.hasObject(v)) {  \r\n\t\t\tthis.setState({forms: v})\r\n\t\t} else {\r\n\t\t\tforms.clinical_diagnosis = '' \r\n\t\t\tforms.naked_eye = '' \r\n\t\t\tforms.pathology = '' \r\n\t\t\tforms.pathological_diagnosis = '' \r\n\t\t\tforms.imgs = '' \r\n\t\t\tforms.report_form_imgs = '' \r\n\t\t\tforms.send_material = '' \r\n\t\t\tforms.visit_doctor_id = '' \r\n\t\t\tforms.return_visit_doctor_id = '' \r\n\t\t\tthis.setState({forms: forms})  \r\n\t\t}\r\n\t}  \r\n\tchangeInput = (v, name) => ts.changeInput.call(this, v, name) \r\n\tsubmits = () => {\r\n\t\tconst { infos, forms } = this.state\r\n\t\tif (!$fn.hasObject(infos)) { return message.then(f => f.default.error('请选择一条列表数据')) }\r\n\t\tlet content = ts.setNullParameter(forms);\r\n\t\tconst _content = $fn.getObjectParam('content',content)\r\n\t\tlet param = {\r\n\t\t  uuid: infos.uuid,\r\n\t\t ..._content,\r\n\t\t  dmodel: ts.getPath().id,\r\n\t\t  project_id: ts.getPath().project_id,\r\n\t\t  status: this.props.status,\r\n\t\t};\r\n\t\t$http.submit(null,'result-unit-item/update', { param: param, successText: '操作成功'})\r\n\t}   \r\n\trender () {\r\n\t\tconst { forms, infos, keys } = this.state  \r\n\t\tconst { width } = this.props\r\n\t\treturn (\r\n\t\t\t<BoxScroll \r\n\t\t\t\tclassName\t= 'fv' \r\n\t\t\t\ttitle\t\t= '实验结果'\r\n\t\t\t\tstyle\t\t= {{width: width ? width : 350}}\r\n\t\t\t\ttitleChildren = {\r\n\t\t\t\t\t<div className='fxm' > \r\n\t\t\t\t\t\t<Button label='保存' ghost className='ml10' onClick={() => this.submits()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} \r\n\t\t\t>   \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_coll_pic === '1' \t\t\t&& <UploadImg name='imgs' value={forms.imgs} handleChange={(v, name) => this.changeInput(v, name)} /> } \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_upload_report_form === '1' \t&& <UploadReport name='report_form_imgs' value={forms.report_form_imgs} handleChange={(v, name) => this.changeInput(v, name)}/> } \r\n\t\t\t\t<div className='fx'>\r\n\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t<Title title='送检材料' />\r\n\t\t\t\t\t\t<Input name='send_material' size='middle' bordered={false} value={forms.send_material} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<Title title='临床诊断' />\r\n\t\t\t\t\t\t<Input name='clinical_diagnosis' size='middle' bordered={false} value={forms.clinical_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<Title title='肉眼所见' />\r\n\t\t\t\t\t\t<Input name='naked_eye' size='middle' bordered={false} value={forms.naked_eye} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t    <div className='fx'>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='初诊医生' /> \r\n\t\t\t\t\t\t\t\t<div className='b'>{forms.ts_audit_name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='复诊医生' /> \r\n\t\t\t\t\t\t\t\t<div className='b'>{forms.ts_approve_name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{width: '50%', marginLeft: '20px'}}>\r\n\t\t\t\t\t\t<Title title='病理所见' />\r\n\t\t\t\t\t\t<Input name='pathology' size='middle' mode='textarea' bordered={false} value={forms.pathology} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t\t<Title title='病理诊断' />\r\n\t\t\t\t\t\t<Input name='pathological_diagnosis' key={keys} size='middle' mode='textarea' bordered={false} value={forms.pathological_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t</BoxScroll>\r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44031.js",["1919"],"import React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\nimport { Checkbox } from 'antd';\r\n// ===================================================================== global declare\r\nconst { $async, $fn, $http } = window\r\n// ===================================================================== antd\r\nconst Input = $async(()=>import('@antd/form/input')) \r\nconst message = import('@antd/message') \r\n// ===================================================================== component\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst BoxScroll = $async(()=>import('#tp/box/box-scroll'))\r\nconst UploadImg = $async(()=>import('./upload-img'))\r\nconst UploadReport = $async(()=>import('./upload-report'))\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n\t<h3 className='fxm h30'><i className='r100px mr5' style={{width:5,height:5,background:'#333'}}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n) \r\n// ===================================================================== component  \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tforms: {}, // 要提交的数据\r\n\t\tinfos: {}, // 详情 \r\n\t\tkeys: 0 \r\n\t} \r\n\tchecksOpt = [\r\n\t\t{ label: '辅助诊断', value: '1' },\r\n\t\t{ label: '术后复发转移高风险预测', value: '2' },  \r\n\t\t{ label: '疗效评价或肿瘤发展监控', value: '3' },\r\n\t]\t\r\n\tcomponentDidMount () {\r\n\t\tthis.setForms() \r\n\t}\r\n\tcomponentWillReceiveProps ({infos}) { \r\n\t\tthis.setState({infos: infos})\r\n\t\tthis.setForms(infos.content)\r\n\t}\r\n\tsetForms = (v) => { \r\n\t\tconst { forms } = this.state\r\n\t\tif ($fn.hasObject(v)) {   \r\n\t\t\tthis.setState({forms: v})\r\n\t\t} else {  \r\n\t\t\tforms.imgs = []\r\n\t\t\tforms.report_form_imgs = ''\r\n\t\t\tforms.purpose_inspec = []  \r\n\t\t\tforms.ctc_total = '' \r\n\t\t\tforms.ctc_single = '' \r\n\t\t\tforms.ctc_double = '' \r\n\t\t\tforms.ctc_microemboli = '' \r\n\t\t\tforms.ctc_microemboli_cell = '' \r\n\t\t\tforms.cep8_3 = '' \r\n\t\t\tforms.cep8_4 = '' \r\n\t\t\tforms.cep8_multi = '' \r\n\t\t\tforms.cep7_3 = '' \r\n\t\t\tforms.cep7_4 = '' \r\n\t\t\tforms.cep7_multi = '' \r\n\t\t\tforms.cep17_3 = '' \r\n\t\t\tforms.cep17_4 = '' \r\n\t\t\tforms.cep17_multi = '' \r\n\t\t\tforms.result = '' \r\n\t\t\tthis.setState({forms: forms})  \r\n\t\t}\r\n\t}  \r\n\tchangeInput = (v, name) => ts.changeInput.call(this, v, name) \r\n\tsubmits = () => {\r\n\t\tconst { infos, forms } = this.state\r\n\t\tconsole.log(forms)\r\n\t\tif (!$fn.hasObject(infos)) { return message.then(f => f.default.error('请选择一条列表数据')) }\r\n\t\tlet content = ts.setNullParameter(forms); \r\n\t\tlet param = {\r\n\t\t  uuid: infos.uuid,\r\n\t\t ...content,\r\n\t\t  dmodel: ts.getPath().id,\r\n\t\t  project_id: ts.getPath().project_id,\r\n\t\t  status: this.props.status,\r\n\t\t};\r\n\t\t$http.submit(null,'result-unit-item/update', { param: param, successText: '操作成功'})\r\n\t}   \r\n\tchangeCheck = (v,name) => {\r\n\t\tconst { forms } = this.state\r\n\t\tforms[name] = v\r\n\t\tthis.setState({forms})\r\n\t}\r\n\trender () {\r\n\t\tconst { forms, infos, keys } = this.state  \r\n\t\tconst { width } = this.props\r\n\t\treturn (\r\n\t\t\t<BoxScroll \r\n\t\t\t\tclassName\t= 'fv' \r\n\t\t\t\ttitle\t\t= '实验结果'\r\n\t\t\t\tstyle\t\t= {{width: width ? width : 350}}\r\n\t\t\t\ttitleChildren = {\r\n\t\t\t\t\t<div className='fxm' > \r\n\t\t\t\t\t\t<Button label='保存' ghost className='ml10' onClick={() => this.submits()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} \r\n\t\t\t>   \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_coll_pic === '1' \t\t\t&& <UploadImg name='imgs' value={forms.imgs} handleChange={(v, name) => this.changeInput(v, name)} /> } \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_upload_report_form === '1' \t&& <UploadReport name='report_form_imgs' value={forms.report_form_imgs} handleChange={(v, name) => this.changeInput(v, name)}/> } \r\n\t\t\t\t<Title title='送检目的（必选）' />\r\n\t\t\t\t<Checkbox.Group value={forms.purpose_inspec} options={this.checksOpt} onChange={(v) => this.changeCheck(v,'purpose_inspec')} />\r\n\t\t\t\t<Title title='检测数据（①=②+③）' />\r\n\t\t\t\t<div className='fxm mb10'>\r\n\t\t\t\t\t<span className=\"fz16 mr10\">①</span><span>共检查到单个CTC</span>\r\n\t\t\t\t\t<Input className='mlr10' style={{width: '70px'}} name='ctc_total' value={forms.ctc_total} onChange={(v, data, name) => this.changeInput(v, name) } />个\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='fxm mb10'>\r\n\t\t\t\t\t<span className=\"fz16 mr10\">②</span><span>单染色体异常</span>\r\n\t\t\t\t\t<Input className='mlr10' style={{width: '70px'}} name='ctc_single' value={forms.ctc_single} onChange={(v, data, name) => this.changeInput(v, name) } />个\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='fxm mb10'>\r\n\t\t\t\t\t<span className=\"fz16 mr10\">③</span><span>双染色体异常</span>\r\n\t\t\t\t\t<Input className='mlr10' style={{width: '70px'}} name='ctc_double' value={forms.ctc_double} onChange={(v, data, name) => this.changeInput(v, name) } />个\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='fxm mb10'>\r\n\t\t\t\t\t<span className=\"fz16 mr10\">④</span><span>微栓子</span>\r\n\t\t\t\t\t<Input className='mlr10' style={{width: '70px'}} name='ctc_microemboli' value={forms.ctc_microemboli} onChange={(v, data, name) => this.changeInput(v, name) } />簇，共\r\n\t\t\t\t\t<Input className='mlr10' style={{width: '70px'}} name='ctc_microemboli_cell' value={forms.ctc_microemboli_cell} onChange={(v, data, name) => this.changeInput(v, name) } />个细胞\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='fxw xm mb10'>\r\n\t\t\t\t\t<span >探针A：</span>\r\n\t\t\t\t\t三体<Input style={{width: '70px', margin: '0 6px'}} name='cep8_3' value={forms.cep8_3} onChange={(v, data, name) => this.changeInput(v, name) } />个；\r\n\t\t\t\t\t四体<Input style={{width: '70px', margin: '0 6px'}} name='cep8_4' value={forms.cep8_4} onChange={(v, data, name) => this.changeInput(v, name) } />个；\r\n\t\t\t\t\t多体<Input style={{width: '70px', margin: '0 6px'}} name='cep8_multi' value={forms.cep8_multi} onChange={(v, data, name) => this.changeInput(v, name) } />个。\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='fxw xm mb10'>\r\n\t\t\t\t\t<span >探针B：</span>\r\n\t\t\t\t\t三体<Input style={{width: '70px', margin: '0 6px'}} name='cep7_3' value={forms.cep7_3} onChange={(v, data, name) => this.changeInput(v, name) } />个；\r\n\t\t\t\t\t四体<Input style={{width: '70px', margin: '0 6px'}} name='cep7_4' value={forms.cep7_4} onChange={(v, data, name) => this.changeInput(v, name) } />个；\r\n\t\t\t\t\t多体<Input style={{width: '70px', margin: '0 6px'}} name='cep7_multi' value={forms.cep7_multi} onChange={(v, data, name) => this.changeInput(v, name) } />个。\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='fxw xm mb10'>\r\n\t\t\t\t\t<span >探针A+B：</span>\r\n\t\t\t\t\t三体<Input style={{width: '70px', margin: '0 6px'}} name='cep17_3' value={forms.cep17_3} onChange={(v, data, name) => this.changeInput(v, name) } />个；\r\n\t\t\t\t\t四体<Input style={{width: '70px', margin: '0 6px'}} name='cep17_4' value={forms.cep17_4} onChange={(v, data, name) => this.changeInput(v, name) } />个；\r\n\t\t\t\t\t多体<Input style={{width: '70px', margin: '0 6px'}} name='cep17_multi' value={forms.cep17_multi} onChange={(v, data, name) => this.changeInput(v, name) } />个。\r\n\t\t\t\t</div> \r\n\t\t\t\t<Title title='检测结果（必填）' />\r\n\t\t\t\t<Input name='result' key={keys} size='middle' mode='textarea' bordered={false} value={forms.result} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t</BoxScroll>\r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44029.js",["1920"],"import React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $async, $fn, $http } = window\r\n// ===================================================================== antd\r\nconst Input = $async(()=>import('@antd/form/input')) \r\nconst message = import('@antd/message') \r\n// ===================================================================== component\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst BoxScroll = $async(()=>import('#tp/box/box-scroll'))\r\nconst UploadImg = $async(()=>import('./upload-img'))\r\nconst UploadReport = $async(()=>import('./upload-report'))\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n\t<h3 className='fxm h30'><i className='r100px mr5' style={{width:5,height:5,background:'#333'}}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n) \r\n// ===================================================================== component  \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tforms: {}, // 要提交的数据\r\n\t\tinfos: {}, // 详情 \r\n\t\tkeys: 0 \r\n\t} \r\n\tcomponentDidMount () {\r\n\t\tthis.setForms() \r\n\t}\r\n\tcomponentWillReceiveProps ({infos}) { \r\n\t\tthis.setState({infos: infos})\r\n\t\tthis.setForms(infos.content)\r\n\t}\r\n\tsetForms = (v) => { \r\n\t\tconst { forms } = this.state\r\n\t\tif ($fn.hasObject(v)) {  \r\n\t\t\tthis.setState({forms: v})\r\n\t\t} else {\r\n\t\t\tforms.clinical_diagnosis = '' \r\n\t\t\tforms.naked_eye = '' \r\n\t\t\tforms.pathology = '' \r\n\t\t\tforms.pathological_diagnosis = '未见上皮内病变或恶性病变（NILM）。' \r\n\t\t\tforms.imgs = '' \r\n\t\t\tforms.report_form_imgs = '' \r\n\t\t\tforms.send_material = '' \r\n\t\t\tforms.visit_doctor_id = '' \r\n\t\t\tforms.return_visit_doctor_id = ''  \r\n\t\t\tthis.setState({forms: forms})  \r\n\t\t}\r\n\t}  \r\n\tchangeInput = (v, name) => ts.changeInput.call(this, v, name) \r\n\tsubmits = () => {\r\n\t\tconst { infos, forms } = this.state\r\n\t\tif (!$fn.hasObject(infos)) { return message.then(f => f.default.error('请选择一条列表数据')) }\r\n\t\tlet content = ts.setNullParameter(forms);\r\n\t\tconst _content = $fn.getObjectParam('content',content)\r\n\t\tlet param = {\r\n\t\t  uuid: infos.uuid,\r\n\t\t ..._content,\r\n\t\t  dmodel: ts.getPath().id,\r\n\t\t  project_id: ts.getPath().project_id,\r\n\t\t  status: this.props.status,\r\n\t\t};\r\n\t\t$http.submit(null,'result-unit-item/update', { param: param, successText: '操作成功'})\r\n\t}   \r\n\trender () {\r\n\t\tconst { forms, infos, keys } = this.state  \r\n\t\tconst { width } = this.props\r\n\t\treturn (\r\n\t\t\t<BoxScroll \r\n\t\t\t\tclassName\t= 'fv' \r\n\t\t\t\ttitle\t\t= '实验结果'\r\n\t\t\t\tstyle\t\t= {{width: width ? width : 350}}\r\n\t\t\t\ttitleChildren = {\r\n\t\t\t\t\t<div className='fxm' >\r\n\t\t\t\t\t\t<Button label='下发设置' ghost className='ml10' />\r\n\t\t\t\t\t\t<Button label='下发' ghost className='ml10' />\r\n\t\t\t\t\t\t<Button label='保存' ghost className='ml10' onClick={() => this.submits()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} \r\n\t\t\t>   \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_coll_pic === '1' \t\t\t&& <UploadImg name='imgs' value={forms.imgs} handleChange={(v, name) => this.changeInput(v, name)} /> } \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_upload_report_form === '1' \t&& <UploadReport name='report_form_imgs' value={forms.report_form_imgs} handleChange={(v, name) => this.changeInput(v, name)}/> } \r\n\t\t\t\t<div className='fx'>\r\n\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t<Title title='送检材料' />\r\n\t\t\t\t\t\t<Input name='send_material' size='middle' bordered={false} value={forms.send_material} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<Title title='临床诊断' />\r\n\t\t\t\t\t\t<Input name='clinical_diagnosis' size='middle' bordered={false} value={forms.clinical_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<Title title='肉眼所见' />\r\n\t\t\t\t\t\t<Input name='naked_eye' size='middle' bordered={false} value={forms.naked_eye} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t    <div className='fx'>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='初诊医生' /> \r\n\t\t\t\t\t\t\t\t<div className='b'>{forms.ts_audit_name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='复诊医生' /> \r\n\t\t\t\t\t\t\t\t<div className='b'>{forms.ts_approve_name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{width: '50%', marginLeft: '20px'}}>\r\n\t\t\t\t\t\t<Title title='病理所见' />\r\n\t\t\t\t\t\t<Input name='pathology' size='middle' mode='textarea' bordered={false} value={forms.pathology} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t\t<Title title='病理诊断' />\r\n\t\t\t\t\t\t<Input name='pathological_diagnosis' key={keys} size='middle' mode='textarea' bordered={false} value={forms.pathological_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t</BoxScroll>\r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44022.js",["1921"],"import React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $async, $fn, $http } = window\r\n// ===================================================================== antd\r\nconst Input = $async(()=>import('@antd/form/input')) \r\nconst message = import('@antd/message') \r\nconst Checkbox = $async(()=>import('@antd/form/checkbox'))\r\n// ===================================================================== component\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst BoxScroll = $async(()=>import('#tp/box/box-scroll'))\r\nconst UploadImg = $async(()=>import('./upload-img'))\r\nconst UploadReport = $async(()=>import('./upload-report'))\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n\t<h3 className='fxm h30'><i className='r100px mr5' style={{width:5,height:5,background:'#333'}}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n) \r\n// ===================================================================== component  \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tforms: {}, // 要提交的数据\r\n\t\tinfos: {}, // 详情\r\n\t\timmuneOption: [],\r\n\t\tkeys: 0,\r\n\t\tcodeSelect: [], // 选中\r\n\t\tcodeChecked: false, // 全选状态\r\n\t} \r\n\tcomponentDidMount () {\r\n\t\tthis.setForms()\r\n\t\t$fn.dataSave('dis-item-67000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n\t\t\t  this.setState({immuneOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(this,'dis-item/item', { param: {dis_code: 67000}}).then(data=>{ \r\n\t\t\t\tthis.setState({immuneOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-67000-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcomponentWillReceiveProps ({infos}) { \r\n\t\tthis.setState({infos: infos})\r\n\t\tthis.setForms(infos.content)\r\n\t}\r\n\tsetForms = (v) => { \r\n\t\tconst { forms } = this.state\r\n\t\tif ($fn.hasObject(v)) {  \r\n\t\t\tthis.setState({forms: v})\r\n\t\t} else {\r\n\t\t\tforms.clinical_diagnosis = ''\r\n\t\t\tforms.naked_eye = ''\r\n\t\t\tforms.pathology = ''\r\n\t\t\tforms.pathological_diagnosis = ''\r\n\t\t\tforms.ts_approve_id = ''\r\n\t\t\tforms.fees = '80' // 固定物价\r\n\t\t\tforms.item_num = '1'\r\n\t\t\tforms.imgs = []\r\n\t\t\tforms.qt_item_table = []\r\n\t\t\tforms.report_form_imgs = ''\r\n\t\t\tforms.total_price = ''\r\n\t\t\tforms.visit_doctor_id = ''\r\n\t\t\tforms.return_visit_doctor_id = ''\r\n\t\t\tforms.wax_block_number = ''\r\n\t\t\tthis.setState({forms: forms}, () => this.setTotalPrice())\r\n\t\t}\r\n\t}  \r\n\tchangeInput = (v, name) => ts.changeInput.call(this, v, name, () => {\r\n\t\tif (name === 'item_num') { this.setTotalPrice() }\r\n\t})\r\n\t// 计算总价\r\n\tsetTotalPrice = () => {\r\n\t\tconst { forms } = this.state\r\n\t\tconst total_price = (forms.item_num * forms.fees).toFixed(2);\r\n\t\tforms.total_price = !isNaN(total_price) ? total_price : '' \r\n\t\tthis.setState({forms}) \r\n\t}\r\n\tsubmits = () => {\r\n\t\tconst { infos, forms } = this.state\r\n\t\tif (!$fn.hasObject(infos)) { return message.then(f => f.default.error('请选择一条列表数据')) }\r\n\t\tif (forms.item_num <= 0) { return message.then(f => f.default.error('项数必须大于0')) } \r\n\t\tlet content = ts.setNullParameter(forms);\r\n\t\tconst _content = $fn.getObjectParam('content',content)\r\n\t\tlet param = {\r\n\t\t  uuid: infos.uuid,\r\n\t\t ..._content,\r\n\t\t  dmodel: ts.getPath().id,\r\n\t\t  project_id: ts.getPath().project_id,\r\n\t\t  status: this.props.status,\r\n\t\t};\r\n\t\t$http.submit(null,'result-unit-item/update', { param: param, successText: '操作成功'})\r\n\t}  \r\n\t// 复选\r\n\tchangeSelect = (v, row) => {\r\n\t\tlet { immuneOption, keys } = this.state\r\n\t\timmuneOption.forEach(i => {\r\n\t\t\tif (row.value === i.value) {\r\n\t\t\t\ti.checked = v\r\n\t\t\t}\r\n\t\t})\r\n\t\tconst codeSelect = immuneOption.filter(i => i.checked)\r\n\t\tthis.setState({immuneOption: immuneOption, codeSelect: codeSelect, codeChecked: codeSelect.length === immuneOption.length ? true : false, keys: keys + 1})  \r\n\t}\r\n\t// 全选\r\n\tallSelect () {  \r\n\t\tlet { immuneOption, codeChecked, keys } = this.state\r\n\t\timmuneOption.forEach(i => {\r\n\t\t\ti.checked = !this.state.codeChecked\r\n\t\t})\r\n\t\tconst codeSelect = immuneOption.filter(i => i.checked)\r\n\t\tthis.setState({immuneOption: immuneOption, codeSelect: codeSelect, codeChecked: !codeChecked, keys: keys + 1})  \r\n\t}\r\n\trender () {\r\n\t\tconst { forms, infos, keys, immuneOption } = this.state  \r\n\t\tconst { width } = this.props\r\n\t\treturn (\r\n\t\t\t<BoxScroll \r\n\t\t\t\tclassName\t= 'fv' \r\n\t\t\t\ttitle\t\t= '实验结果'\r\n\t\t\t\tstyle\t\t= {{width: width ? width : 350}}\r\n\t\t\t\ttitleChildren = {\r\n\t\t\t\t\t<div className='fxm' >\r\n\t\t\t\t\t\t<Button label='下发设置' ghost className='ml10' />\r\n\t\t\t\t\t\t<Button label='下发' ghost className='ml10' />\r\n\t\t\t\t\t\t<Button label='保存' ghost className='ml10' onClick={() => this.submits()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} \r\n\t\t\t>   \r\n\t\t\t\t<div className='fx'>\r\n\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t{ $fn.hasObject(infos) && infos.is_coll_pic === '1' \t\t\t&& <UploadImg name='imgs' value={forms.imgs} handleChange={(v, name) => this.changeInput(v, name)} /> } \r\n\t\t\t\t\t\t<Title title='临床诊断' />\r\n\t\t\t\t\t\t<Input name='clinical_diagnosis' size='middle' bordered={false} value={forms.clinical_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<Title title='原蜡块号' />\r\n\t\t\t\t\t\t<Input name='wax_block_number' size='middle' bordered={false} value={forms.wax_block_number} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<Title title='肉眼所见' />\r\n\t\t\t\t\t\t<Input name='naked_eye' size='middle' mode='textarea' bordered={false} value={forms.naked_eye} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{width: '50%', marginLeft: '20px'}}>\r\n\t\t\t\t\t\t{ $fn.hasObject(infos) && infos.is_upload_report_form === '1' \t&& <UploadReport name='report_form_imgs' value={forms.report_form_imgs} handleChange={(v, name) => this.changeInput(v, name)}/> } \r\n\t\t\t\t\t\t<Title title='病理所见' />\r\n\t\t\t\t\t\t<Input name='pathology' size='middle' mode='textarea' bordered={false} value={forms.pathology} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t\t<Title title='病理诊断' titleChildren={\r\n\t\t\t\t\t\t\t<Button label='选择' ghost className='ml10' onClick={() => this.refs.modal.open()} />\r\n\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t<Input name='pathological_diagnosis' key={keys} size='middle' mode='textarea' bordered={false} value={forms.pathological_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t\t<div className='fx'>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='初诊医生' /> \r\n\t\t\t\t\t\t\t\t<div className='b'>{forms.ts_audit_name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='复诊医生' /> \r\n\t\t\t\t\t\t\t\t<div className='b'>{forms.ts_approve_name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t\t<div> \r\n\t\t\t\t\t<Title title='收费' />\r\n\t\t\t\t\t<div className='fxm'>\r\n\t\t\t\t\t\t<Input className='mr20' name='fees' width={120} disabled size='middle' bordered={false} value={forms.fees} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t项数： <Input className='mr20' name='item_num' width={120} size='middle' bordered={false} value={forms.item_num} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t总价： <Input name='total_price' width={120} disabled size='middle' bordered={false} value={forms.total_price} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t\t<Modal ref='modal' title='免疫组化抗体' width={800} onOk={() => {\r\n\t\t\t\t\tconst { forms } = this.state\r\n\t\t\t\t\tlet d = \"\";\r\n\t\t\t\t\tthis.state.codeSelect.forEach(i => {\r\n\t\t\t\t\t\td = d ? d + \", \" + i.name : i.name;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tforms.pathological_diagnosis = forms.pathological_diagnosis + \"\\n\" + d \r\n\t\t\t\t\timmuneOption.forEach(i => { i.checked = false })\r\n\t\t\t\t\tthis.setState({forms: forms, codeSelect: [], immuneOption: immuneOption, keys: keys + 1})\r\n\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t}}> \r\n\t\t\t\t\t<div className='fx pb10 mb10' key={keys} style={{borderBottom: '1px solid #F2F2F2'}}>\r\n\t\t\t\t\t\t<div className='ex'>\r\n\t\t\t\t\t\t\t<Checkbox disabled={!$fn.hasArray(immuneOption)} value={this.state.codeChecked} onChange={ (e) => this.allSelect()} label='全选' />\r\n\t\t\t\t\t\t\t<span>选择 {this.state.codeSelect.length} 条</span>\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='fxw' key={keys + 1}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$fn.hasArray(immuneOption) && \r\n\t\t\t\t\t\t\timmuneOption.map((item, index) => {\r\n\t\t\t\t\t\t\t\treturn <div key={index} style={{width: '120px'}}>\r\n\t\t\t\t\t\t\t\t\t<Checkbox value={item.checked} onChange={ (e) => this.changeSelect(e, item) } label='' />\r\n\t\t\t\t\t\t\t\t\t<span>{item.name}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div> \r\n\t\t\t\t</Modal>\r\n\t\t\t</BoxScroll>\r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44021.js",["1922","1923","1924","1925","1926"],"import React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $async, $fn, $http } = window\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== antd\r\nconst Select = $async(()=>import('@antd/form/select'))  \r\nconst Input = $async(()=>import('@antd/form/input')) \r\nconst message = import('@antd/message') \r\nconst Checkbox = $async(()=>import('@antd/form/checkbox'))\r\nconst DatePicker = $async(()=>import('@antd/form/datePicker'))\r\n// ===================================================================== component\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst Table = $async(()=>import('#cpt/table')) \r\nconst BoxScroll = $async(()=>import('#tp/box/box-scroll'))\r\nconst UploadImg = $async(()=>import('./upload-img'))\r\nconst UploadReport = $async(()=>import('./upload-report'))\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n\t<h3 className='fxm h30'><i className='r100px mr5' style={{width:5,height:5,background:'#333'}}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n) \r\n// ===================================================================== component  \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tforms: {}, // 要提交的数据\r\n\t\tinfos: {}, // 详情\r\n\t\timmuneOption: [],\r\n\t\tfixedOption: [],\r\n\t\tkeys: 0,\r\n\t\tmaterialsDocOption: [],\r\n\t\trecordIdOption: [],\r\n\t\tcodeSelect: [], // 选中\r\n\t\tcodeChecked: false, // 全选状态\r\n\t\tchargeData: []\r\n\t} \r\n\tchargeCols = [\r\n\t\t{ title: '名称', \t\t\tfield: 'item_name', \t\twidth:120 },\r\n\t\t{ title: '参考价', \t\t\tfield: 'price', \t\t\twidth:100 },\r\n\t]\r\n\tcomponentDidMount () {\r\n\t\tthis.setForms()\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.drawMaterialsSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tthis.setState({data: data})\r\n\t\t\t\t\tif ($fn.hasArray(data)) { \r\n\t\t\t\t\t\tthis.setState({materialsDocOption: data})\r\n                    } else {\r\n                        $http.submit(null, 'employee/drawMaterialsSelect').then(data => {\r\n\t\t\t\t\t\t\tthis.setState({materialsDocOption: data})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t},\r\n\t\t\t\tcache: f.default.recordIdSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tthis.setState({data: data})\r\n\t\t\t\t\tif ($fn.hasArray(data)) { \r\n\t\t\t\t\t\tthis.setState({recordIdOption: data})\r\n                    } else {\r\n                        $http.submit(null, 'employee/recordIdSelect').then(data => {\r\n\t\t\t\t\t\t\tthis.setState({recordIdOption: data})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\t$fn.dataSave('dis-item-50200-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n\t\t\t  this.setState({fixedOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(this,'dis-item/item', { param: {dis_code: 50200}}).then(data=>{ \r\n\t\t\t\tthis.setState({fixedOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-50200-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.dataSave('dis-item-67000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n\t\t\t  this.setState({immuneOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(this,'dis-item/item', { param: {dis_code: 67000}}).then(data=>{ \r\n\t\t\t\tthis.setState({immuneOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-67000-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcomponentWillReceiveProps ({infos}) { \r\n\t\tthis.setState({infos: infos})\r\n\t\tthis.setForms(infos.content)\r\n\t}\r\n\tsetForms = (v) => { \r\n\t\tconst { forms } = this.state\r\n\t\tif ($fn.hasObject(v)) {  \r\n\t\t\tforms.clinical_diagnosis = v.clinical_diagnosis || ''\r\n\t\t\tforms.naked_eye = v.naked_eye || ''\r\n\t\t\tforms.pathology = v.pathology || ''\r\n\t\t\tforms.pathological_diagnosis = v.pathological_diagnosis || ''\r\n\t\t\tforms.send_material = v.send_material || ''\r\n\t\t\tforms.fees = v.fees || ''\r\n\t\t\tforms.ts_approve_id = v.ts_approve_id || ''\r\n\t\t\tforms.wax_block_number = v.wax_block_number || ''\r\n\t\t\tforms.fixed = v.fixed || ''\r\n\t\t\tforms.fixed_time = v.fixed_time || ''\r\n\t\t\tforms.imgs = v.imgs || ''\r\n\t\t\tforms.report_form_imgs = v.report_form_imgs || ''\r\n\t\t\tforms.time = v.time || ''\r\n\t\t\tforms.visit_doctor_id = v.visit_doctor_id || ''\r\n\t\t\tforms.return_visit_doctor_id = v.return_visit_doctor_id || ''\r\n\t\t\tforms.draw_materials_doctor_id = v.draw_materials_doctor_id || ''\r\n\t\t\tforms.record_id = v.record_id || ''\r\n\t\t\tforms.in_vitro_time = v.in_vitro_time || ''\r\n\t\t\tthis.setState({forms})\r\n\t\t} else {\r\n\t\t\tforms.clinical_diagnosis = ''\r\n\t\t\tforms.naked_eye = ''\r\n\t\t\tforms.pathology = ''\r\n\t\t\tforms.pathological_diagnosis = ''\r\n\t\t\tforms.send_material = ''\r\n\t\t\tforms.fees = ''\r\n\t\t\tforms.ts_approve_id = ''\r\n\t\t\tforms.wax_block_number = '1'\r\n\t\t\tforms.fixed = ''\r\n\t\t\tforms.fixed_time = ''\r\n\t\t\tforms.imgs = ''\r\n\t\t\tforms.report_form_imgs = ''\r\n\t\t\tforms.time = this.setDate()\r\n\t\t\tforms.visit_doctor_id = ''\r\n\t\t\tforms.return_visit_doctor_id = ''\r\n\t\t\tforms.draw_materials_doctor_id = ''\r\n\t\t\tforms.record_id = ''\r\n\t\t\tforms.in_vitro_time = ''\r\n\t\t\tthis.setState({forms})\r\n\t\t}\r\n\t}  \r\n\tchangeInput = (v, name) => ts.changeInput.call(this, v, name) \r\n\tsubmits = () => {\r\n\t\tconst { infos, forms } = this.state\r\n\t\tif (!$fn.hasObject(infos)) { return message.then(f => f.default.error('请选择一条列表数据')) }\r\n\t\tlet content = ts.setNullParameter(forms);\r\n\t\tconst _content = $fn.getObjectParam('content',{...content, qt_item_table: []})\r\n\t\tlet param = {\r\n\t\t  uuid: infos.uuid,\r\n\t\t ..._content,\r\n\t\t  dmodel: ts.getPath().id,\r\n\t\t  project_id: ts.getPath().project_id,\r\n\t\t  status: this.props.status,\r\n\t\t};\r\n\t\t$http.submit(null,'result-unit-item/update', { param: param, successText: '操作成功'})\r\n\t}  \r\n\tonChanges = (v) => {\r\n\t\tconst {forms} = this.state  \r\n\t\tlet d = Object.assign(forms, v)  \r\n\t\tthis.setState({forms: d})  \r\n    }\r\n\t// 复选\r\n\tchangeSelect = (v, row) => {\r\n\t\tlet { immuneOption, keys } = this.state\r\n\t\timmuneOption.forEach(i => {\r\n\t\t\tif (row.value === i.value) {\r\n\t\t\t\ti.checked = v\r\n\t\t\t}\r\n\t\t})\r\n\t\tconst codeSelect = immuneOption.filter(i => i.checked)\r\n\t\tthis.setState({immuneOption: immuneOption, codeSelect: codeSelect, codeChecked: codeSelect.length === immuneOption.length ? true : false, keys: keys + 1})  \r\n\t}\r\n\t// 全选\r\n\tallSelect () {  \r\n\t\tlet { immuneOption, codeChecked, keys } = this.state\r\n\t\timmuneOption.forEach(i => {\r\n\t\t\ti.checked = !this.state.codeChecked\r\n\t\t})\r\n\t\tconst codeSelect = immuneOption.filter(i => i.checked)\r\n\t\tthis.setState({immuneOption: immuneOption, codeSelect: codeSelect, codeChecked: !codeChecked, keys: keys + 1})  \r\n\t} \r\n    setDate = () => {\r\n\t\tlet date = new Date();\r\n\t\tlet nowDate =\r\n\t\t\tdate.getFullYear() +\r\n\t\t\t\"-\" +\r\n\t\t\t(date.getMonth() + 1 > 9\r\n\t\t\t? date.getMonth() + 1\r\n\t\t\t: \"0\" + (date.getMonth() + 1)) +\r\n\t\t\t\"-\" + \r\n\t\t\t(date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate()) +\r\n\t\t\t\" \" +\r\n\t\t\t(date.getHours() > 9 ? date.getHours() : \"0\" + date.getHours()) +\r\n\t\t\t\":\" +\r\n\t\t\t(date.getMinutes() > 9 ? date.getMinutes() : \"0\" + date.getMinutes()) +\r\n\t\t\t\":\" +\r\n\t\t\t(date.getSeconds() > 9 ? date.getSeconds() : \"0\" + date.getSeconds());\r\n\t\treturn nowDate;\r\n\t}\r\n\trender () {\r\n\t\tconst { forms, infos, keys, immuneOption, chargeData } = this.state  \r\n\t\tconst { width } = this.props\r\n\t\treturn (\r\n\t\t\t<BoxScroll \r\n\t\t\t\tclassName\t= 'fv' \r\n\t\t\t\ttitle\t\t= '实验结果'\r\n\t\t\t\tstyle\t\t= {{width: width ? width : 350}}\r\n\t\t\t\ttitleChildren = {\r\n\t\t\t\t\t<div className='fxm' >\r\n\t\t\t\t\t\t<Button label='下发设置' ghost className='ml10' />\r\n\t\t\t\t\t\t<Button label='下发' ghost className='ml10' />\r\n\t\t\t\t\t\t<Button label='保存' ghost className='ml10' onClick={() => this.submits()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} \r\n\t\t\t>   \r\n\t\t\t\t<div className='fx'>\r\n\t\t\t\t\t<div style={{width: '50%'}}> \r\n\t\t\t\t\t\t<div className='fx'>\r\n\t\t\t\t\t\t\t<div style={{width: '50%', marginRight: '10px'}}>\r\n\t\t\t\t\t\t\t\t<Title title='固定时间' />\r\n\t\t\t\t\t\t\t\t<DatePicker name='fixed_time' size='middle' showTime value={forms.fixed_time} bordered={false} after={true} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='离体时间' />\r\n\t\t\t\t\t\t\t\t<DatePicker name='in_vitro_time' size='middle' showTime value={forms.in_vitro_time} bordered={false} after={true} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t<Title title='送检材料' />\r\n\t\t\t\t\t\t<Input name='send_material' size='middle' bordered={false} value={forms.send_material} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<Title title='临床诊断' />\r\n\t\t\t\t\t\t<Input name='clinical_diagnosis' size='middle' bordered={false} value={forms.clinical_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<Title title='肉眼所见' titleChildren={\r\n\t\t\t\t\t\t\t<Button label='打印' ghost className='ml10' />\r\n\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t<Input name='naked_eye' size='middle' mode='textarea' bordered={false} value={forms.naked_eye} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t\t<div className='fx'>\r\n\t\t\t\t\t\t\t<div style={{width: '50%', marginRight: '10px'}}>\r\n\t\t\t\t\t\t\t\t<Title title='固定情况' />\r\n\t\t\t\t\t\t\t\t<Select name='fixed' size='middle' data={this.state.fixedOption} p='请选择' bordered={false} nameStr='name' idStr='value' value={forms.fixed} onChanged={(v, name) => this.changeInput(v, name)} />\r\n\t\t\t\t\t\t\t\t<Title title='取材医生' />\r\n\t\t\t\t\t\t\t\t<Select name='draw_materials_doctor_id' size='middle' data={this.state.materialsDocOption} p='请选择' bordered={false} nameStr='name' idStr='value' value={forms.draw_materials_doctor_id} onChanged={(v, name) => this.changeInput(v, name)} />\r\n\t\t\t\t\t\t\t\t<Title title='收费' titleChildren={\r\n\t\t\t\t\t\t\t\t\t<Button label='收费' ghost className='ml10' />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Input name='fees' size='middle' disabled bordered={false} value={forms.fees} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='蜡块数量' />\r\n\t\t\t\t\t\t\t\t<Input name='wax_block_number' size='middle' disabled bordered={false} value={forms.wax_block_number} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t\t\t<Title title='记录人' />\r\n\t\t\t\t\t\t\t\t<Select name='record_id' size='middle' data={this.state.recordIdOption} p='请选择' bordered={false} nameStr='name' idStr='value' value={forms.record_id} onChanged={(v, name) => this.changeInput(v, name)} />\r\n\t\t\t\t\t\t\t\t<Title title='时间' />\r\n\t\t\t\t\t\t\t\t<DatePicker name='time' size='middle' showTime value={forms.time} after={true} bordered={false} onChange={(v) => this.onChanges(v) } />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t<Table \r\n\t\t\t\t\t\t\tclassName \t\t= 'mt10'\r\n\t\t\t\t\t\t\tcols\t\t\t= { this.chargeCols }\r\n\t\t\t\t\t\t\tdata \t\t\t= { chargeData }  \r\n\t\t\t\t\t\t/> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{width: '50%', marginLeft: '20px'}}>\r\n\t\t\t\t\t\t{ $fn.hasObject(infos) && infos.is_coll_pic === '1' \t\t\t&& <UploadImg name='imgs' value={forms.imgs} handleChange={(v, name) => this.changeInput(v, name)} /> } \r\n\t\t\t\t\t\t{ $fn.hasObject(infos) && infos.is_upload_report_form === '1' \t&& <UploadReport name='report_form_imgs' value={forms.report_form_imgs} handleChange={(v, name) => this.changeInput(v, name)}/> }\r\n\t\t\t\t\t\t<Title title='病理所见' />\r\n\t\t\t\t\t\t<Input name='pathology' size='middle' mode='textarea' bordered={false} value={forms.pathology} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t\t<Title title='病理诊断' titleChildren={\r\n\t\t\t\t\t\t\t<Button label='选择' ghost className='ml10' onClick={() => this.refs.modal.open()} />\r\n\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t<Input name='pathological_diagnosis' key={keys} size='middle' mode='textarea' bordered={false} value={forms.pathological_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t\t<div className='fx'>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='初诊医生' /> \r\n\t\t\t\t\t\t\t\t<div className='b'>{forms.ts_audit_name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='复诊医生' /> \r\n\t\t\t\t\t\t\t\t<div className='b'>{forms.ts_approve_name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>   \r\n\t\t\t\t<Modal ref='modal' title='免疫组化抗体' width={800} onOk={() => {\r\n\t\t\t\t\tconst { forms } = this.state\r\n\t\t\t\t\tlet d = \"\";\r\n\t\t\t\t\tthis.state.codeSelect.forEach(i => {\r\n\t\t\t\t\t\td = d ? d + \", \" + i.name : i.name;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tforms.pathological_diagnosis = forms.pathological_diagnosis + \"\\n\" + d \r\n\t\t\t\t\timmuneOption.forEach(i => { i.checked = false })\r\n\t\t\t\t\tthis.setState({forms: forms, codeSelect: [], immuneOption: immuneOption, keys: keys + 1})\r\n\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t}}> \r\n\t\t\t\t\t<div className='fx pb10 mb10' key={keys} style={{borderBottom: '1px solid #F2F2F2'}}>\r\n\t\t\t\t\t\t<div className='ex'>\r\n\t\t\t\t\t\t\t<Checkbox disabled={!$fn.hasArray(immuneOption)} value={this.state.codeChecked} onChange={ (e) => this.allSelect()} label='全选' />\r\n\t\t\t\t\t\t\t<span>选择 {this.state.codeSelect.length} 条</span>\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='fxw' key={keys + 1}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$fn.hasArray(immuneOption) && \r\n\t\t\t\t\t\t\timmuneOption.map((item, index) => {\r\n\t\t\t\t\t\t\t\treturn <div key={index} style={{width: '120px'}}>\r\n\t\t\t\t\t\t\t\t\t<Checkbox value={item.checked} onChange={ (e) => this.changeSelect(e, item) } label='' />\r\n\t\t\t\t\t\t\t\t\t<span>{item.name}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div> \r\n\t\t\t\t</Modal>\r\n\t\t\t</BoxScroll>\r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44018.js",["1927"],"import React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $async, $fn, $http } = window\r\n// ===================================================================== antd\r\nconst Input = $async(()=>import('@antd/form/input')) \r\nconst Checkbox = $async(()=>import('@antd/form/checkbox')) \r\nconst message = import('@antd/message')\r\n// ===================================================================== component\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst BoxScroll = $async(()=>import('#tp/box/box-scroll'))\r\nconst UploadImg = $async(()=>import('./upload-img'))\r\nconst UploadReport = $async(()=>import('./upload-report'))\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n\t<h3 className='fxm h30'><i className='r100px mr5' style={{width:5,height:5,background:'#333'}}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n) \r\nconst InputTitle = ({ title, titleChildren }) => (\r\n\t<div className='fx mt10 plr10'>\r\n\t\t<span style={{width: '80px'}}>{title}：</span>\r\n\t\t<div className='ex'>{titleChildren}</div>\r\n\t</div>\r\n) \r\n// ===================================================================== component  \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tforms: {}, // 要提交的数据\r\n\t\tinfos: {}, // 详情\r\n\t\tmodel: {\r\n\t\t\tchecked0: false,\r\n\t\t\tchecked1: false,\r\n\t\t\tchecked2: false,\r\n\t\t},\r\n\t\tflow0: true,\r\n\t\tflow1: false,\r\n\t\tflow2: false,\r\n\t\tflow3: false,\r\n\t\toperation_44018: 'FL1000010000',\r\n\t\tkeys: 0\r\n\t} \r\n\tcomponentDidMount () {\r\n\t\tthis.setForms() \r\n\t}\r\n\tcomponentWillReceiveProps ({infos}) { \r\n\t\tthis.setState({infos: infos})\r\n\t\tthis.setProcess(infos.operation_44018)\r\n\t\tthis.setState({operation_44018: infos.operation_44018})\r\n\t\tthis.setForms(infos.content)\r\n\t}\r\n\tsetForms = (v) => { \r\n\t\tconst { forms, keys } = this.state\r\n\t\tif ($fn.hasObject(v)) {  \r\n\t\t\tforms.imgs = v.imgs || []\r\n\t\t\tforms.report_form_imgs = v.report_form_imgs || ''\r\n\t\t\tforms.probe_name = v.probe_name || '' \r\n\t\t\tforms.analysis_cell_number = v.analysis_cell_number || '' \r\n\t\t\tforms.pathological_diagnosis = v.pathological_diagnosis || '' \r\n\t\t\tforms.wax_stone = v.wax_stone || '' \r\n\t\t\tforms.testing_result_id = v.testing_result_id || '' \r\n\t\t\tforms.testing_result = v.testing_result || '' \r\n\t\t\tforms.result_suggestion_id = v.result_suggestion_id || '' \r\n\t\t\tforms.result_suggestion_name = v.result_suggestion_name || '' \r\n\t\t\tforms.result = v.result || '' \r\n\t\t\tthis.setState({forms: {...v, ...forms}, keys: keys + 1})\r\n\t\t} else { \r\n\t\t\tforms.imgs = []\r\n\t\t\tforms.report_form_imgs = ''\r\n\t\t\tforms.probe_name = ''\r\n\t\t\tforms.analysis_cell_number = ''\r\n\t\t\tforms.pathological_diagnosis = ''\r\n\t\t\tforms.wax_stone = ''\r\n\t\t\tforms.testing_result_id = ''\r\n\t\t\tforms.testing_result = ''\r\n\t\t\tforms.result_suggestion_id = ''\r\n\t\t\tforms.result_suggestion_name = ''\r\n\t\t\tforms.result = '' \r\n\t\t\tthis.setState({forms: forms, keys: keys + 1})\r\n\t\t} \r\n\t} \r\n\tchangeInput = (v, name) => ts.changeInput.call(this, v, name)\r\n\tchangeCheckbox = (v, name) => {\r\n\t\tconst { model } = this.state\r\n\t\tmodel[name] = v[name]\r\n\t\tthis.setState({model}) \r\n\t}\r\n\tsubmits = () => {\r\n\t\tconst { infos, model, operation_44018 } = this.state\r\n\t\tif (!$fn.hasObject(infos)) { return message.then(f => f.default.error('请选择一条列表数据')) }  \r\n\t\tswitch (operation_44018) {\r\n\t\t\tcase \"FL1000010000\":\r\n\t\t\t\tif (!model.checked0) { return message.then(f => f.default.error('请勾选前处理完成')) } \r\n\t\t\t\tthis.submits1(operation_44018)\r\n\t\t\tbreak;\r\n\t\t\tcase \"FL1000010001\":\r\n\t\t\t\tif (!model.checked1) { return message.then(f => f.default.error('请勾选杂交完成')) } \r\n\t\t\t\tthis.submits1(operation_44018)\r\n\t\t\tbreak;\r\n\t\t\tcase \"FL1000010002\": \r\n\t\t\t\tif (!model.checked2) { return message.then(f => f.default.error('请勾选后处理完成')) } \r\n\t\t\t\tthis.submits1(operation_44018)\r\n\t\t\tbreak;\r\n\t\t\tcase \"FL1000010007\":\r\n\t\t\t\tthis.submits1(operation_44018)\r\n\t\t\t  \tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tmessage.then(f => f.default.error(`提交失败，没有${operation_44018}这个流程`))\r\n\t\t\tbreak;\r\n\t\t}  \r\n\t} \r\n\tsubmits1(val) {\r\n\t\tconst { forms, infos } = this.state\r\n\t\tlet content = ts.setNullParameter(forms); \r\n\t\tcontent.operation_44018 = val\r\n\t\tconst _content = $fn.getObjectParam('content', content)\r\n\t\tlet param = {\r\n\t\t\tuuid: infos.uuid,\r\n\t\t\tdmodel: ts.getPath().id,\r\n\t\t\t..._content, \r\n\t\t} \r\n\t\t$http.submit(null,'result-unit-item/update', { param: param, successText: '操作成功'}).then(data => {\r\n\t\t\tthis.setoperation_44018(val)\r\n\t\t})  \r\n\t}\r\n\t// 判断流程节点位置\r\n\tsetProcess = (process) => {  \r\n\t\tswitch (process) {\r\n\t\t\tcase \"FL1000010000\":\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmodel: {checked0: false, checked1: false, checked2: false},\r\n\t\t\t\t\tflow0: true, flow1: false, flow2: false, flow3: false\r\n\t\t\t\t}) \r\n\t\t\t  \tbreak;\r\n\t\t\tcase \"FL1000010001\": \r\n\t\t\t  \tthis.setState({\r\n\t\t\t\t\tmodel: {checked0: true, checked1: false, checked2: false},\r\n\t\t\t\t\tflow0: true, flow1: true, flow2: false, flow3: false\r\n\t\t\t\t}) \r\n\t\t\t  \tbreak;\r\n\t\t\tcase \"FL1000010002\": \r\n\t\t\t \tthis.setState({\r\n\t\t\t\t\tmodel: {checked0: true, checked1: true, checked2: false},\r\n\t\t\t\t\tflow0: true, flow1: true, flow2: true, flow3: false\r\n\t\t\t\t}) \r\n\t\t\t  \tbreak;\r\n\t\t\tcase \"FL1000010007\": \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmodel: {checked0: true, checked1: true, checked2: true},\r\n\t\t\t\t\tflow0: true, flow1: true, flow2: true, flow3: true\r\n\t\t\t\t}) \r\n\t\t\t  \tbreak;\r\n\t\t\tdefault:  \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmodel: {checked0: false, checked1: false, checked2: false},\r\n\t\t\t\t\tflow0: true, flow1: false, flow2: false, flow3: false\r\n\t\t\t\t}) \r\n\t\t\t\tbreak;\r\n\t\t  }\r\n\t} \r\n\t// 设置流程节点 \r\n    setoperation_44018(val) { \r\n\t\tswitch (val) {\r\n\t\t\tcase \"FL1000010000\":\r\n\t\t\t\tthis.setState({operation_44018: 'FL1000010001'}, () => this.setProcess(this.state.operation_44018))\r\n\t\t\t  \tbreak;\r\n\t\t\tcase \"FL1000010001\":\r\n\t\t\t\tthis.setState({operation_44018: 'FL1000010002'}, () => this.setProcess(this.state.operation_44018))\r\n\t\t\t  \tbreak;\r\n\t\t\tcase \"FL1000010002\": \r\n\t\t\t\tthis.setState({operation_44018: 'FL1000010007'}, () => this.setProcess(this.state.operation_44018))\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"FL1000010007\": \r\n\t\t\t\tthis.setState({operation_44018: 'FL1000010007'}, () => this.setProcess(this.state.operation_44018))\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.setState({operation_44018: 'FL1000010000'}, () => this.setProcess(this.state.operation_44018))\r\n\t\t\t\tbreak;\r\n\t\t  }\r\n\t}\r\n\t\r\n\trender () {\r\n\t\tconst { forms, infos, model, keys } = this.state  \r\n\t\treturn (\r\n\t\t\t<BoxScroll \r\n\t\t\t\tkey         = {keys}\r\n\t\t\t\tclassName\t= 'fv' \r\n\t\t\t\ttitle\t\t= '实验结果'\r\n\t\t\t\tstyle\t\t= {{width:350}}\r\n\t\t\t\ttitleChildren = {\r\n\t\t\t\t\t<div className='fxm' >\r\n\t\t\t\t\t\t<Button label='保存' className='ml10' onClick={() => this.submits()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} \r\n\t\t\t>   \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_coll_pic === '1' \t\t\t&& <UploadImg name='imgs' value={forms.imgs} handleChange={(v, name) => this.changeInput(v, name)} /> } \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_upload_report_form === '1' \t&& <UploadReport name='report_form_imgs' value={forms.report_form_imgs} handleChange={(v, name) => this.changeInput(v, name)}/> }\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.flow0 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Title title='前处理' />\r\n\t\t\t\t\t\t<Checkbox name='checked0' value={model.checked0} disabled={this.state.flow1} onChange={(v, name) => this.changeCheckbox(v, name)} label='是否前处理完成' />\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.flow1 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Title title='杂交' /> \r\n\t\t\t\t\t\t<Checkbox name='checked1' value={model.checked1} disabled={this.state.flow2} onChange={(v, name) => this.changeCheckbox(v, name)} label='是否杂交完成' />\r\n\t\t\t\t\t</>\r\n\t\t\t\t} \r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.flow2 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Title title='后处理' /> \r\n\t\t\t\t\t\t<Checkbox name='checked2' value={model.checked2} disabled={this.state.flow3} onChange={(v, name) => this.changeCheckbox(v, name)} label='是否后处理完成' />\r\n\t\t\t\t\t</>\r\n\t\t\t\t} \r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.flow3 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t \t<Title title='结果' /> \r\n\t\t\t\t\t\t<InputTitle title='探针名称：' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='probe_name' bordered={false} value={forms.probe_name} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='分析细胞数：' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='analysis_cell_number' bordered={false} value={forms.analysis_cell_number} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='病理诊断：' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='pathological_diagnosis' mode='textarea' bordered={false} value={forms.pathological_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p> \r\n\t\t\t\t\t\t<InputTitle title='蜡块/玻片号：' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='wax_stone' bordered={false} value={forms.wax_stone} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='结果：' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='result' bordered={false} value={forms.result} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='检测结果：' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='testing_result' mode='textarea' bordered={false} value={forms.testing_result} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p> \r\n\t\t\t\t\t\t<InputTitle title='建议与解释：' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='result_suggestion' mode='textarea' bordered={false} value={forms.result_suggestion} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p> \r\n\t\t\t\t\t</>\r\n\t\t\t\t}   \r\n\t\t\t</BoxScroll>\r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44016.js",["1928"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $async } = window \r\n// ===================================================================== component\r\nconst Button = $async(()=>import('@antd/button')) \r\nconst Result1 = $async(()=>import('./result-44016-1'))\r\nconst Result2 = $async(()=>import('./result-44016-2'))\r\nconst Tabs = $async(()=>import('#tp/tabs')) \r\n// ===================================================================== component \r\nexport default class extends React.Component{ \r\n\tstate = {\r\n\t\tstatus: 1\r\n\t}\r\n\ttabs = [\r\n\t\t{ title: '临床诊断', status: 1 },\r\n\t\t{ title: '图形与解释', status: 2 }, \r\n\t]\r\n\tsubmits = () => {\r\n\t\tlet ref = this.state.status === 1 ? 'Result1Ref' : 'Result2Ref'\r\n\t\tthis[ref].submits()\r\n\t}\r\n\trender () {\r\n\t\tconst { status } = this.state\r\n\t\tconst { infos } = this.props\r\n\t\treturn (\r\n\t\t\t<div className='bcf r5px fv h' style={{position: 'relative', width: '450px'}}>\r\n\t\t\t\t<Tabs \r\n\t\t\t\t\tdata={ this.tabs }\r\n\t\t\t\t\tonTabs = { (data, index) => { \r\n\t\t\t\t\t\tthis.setState({status: data.status} )\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<div style={{position: 'absolute', right: '10px', top: '0', height: '34px'}} className='fxmc' >\r\n\t\t\t\t\t<Button label='保存' className='ml10' onClick={() => this.submits()} />\r\n\t\t\t\t</div>\r\n\t\t\t\t{ status === 1 ?  \r\n\t\t\t\t\t<Result1 className='ex oxys' onRef={ ref => this.Result1Ref = ref } infos={infos} /> : <Result2 className='ex oxys' onRef={ ref => this.Result2Ref = ref } infos={infos} /> \r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t) \r\n\t}  \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44015.js",["1929"],"import React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $async, $fn, $http } = window\r\n// ===================================================================== antd\r\nconst Input = $async(()=>import('@antd/form/input')) \r\nconst Checkbox = $async(()=>import('@antd/form/checkbox')) \r\nconst message = import('@antd/message')\r\n// ===================================================================== component\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst BoxScroll = $async(()=>import('#tp/box/box-scroll'))\r\nconst UploadImg = $async(()=>import('./upload-img'))\r\nconst UploadReport = $async(()=>import('./upload-report'))\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n\t<h3 className='fxm h30'><i className='r100px mr5' style={{width:5,height:5,background:'#333'}}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n) \r\nconst InputTitle = ({ title, titleChildren }) => (\r\n\t<div className='fx mt10 plr10'>\r\n\t\t<span style={{width: '80px'}}>{title}：</span>\r\n\t\t<div className='ex'>{titleChildren}</div>\r\n\t</div>\r\n) \r\n// ===================================================================== component  \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tforms: {}, // 要提交的数据\r\n\t\tinfos: {}, // 详情\r\n\t\tmodel: {\r\n\t\t\tchecked0: false,\r\n\t\t\tchecked1: false,\r\n\t\t},\r\n\t\tflow0: true,\r\n\t\tflow1: false,\r\n\t\tflow2: false,\r\n\t\toperation_44015: 'FL104210000',\r\n\t\tkeys: 0\r\n\t} \r\n\tcomponentDidMount () {\r\n\t\tthis.setForms() \r\n\t}\r\n\tcomponentWillReceiveProps ({infos}) { \r\n\t\tthis.setState({infos: infos})\r\n\t\tthis.setProcess(infos.operation_44015)\r\n\t\tthis.setState({operation_44015: infos.operation_44015})\r\n\t\tthis.setForms(infos.content)\r\n\t}\r\n\tsetForms = (v) => { \r\n\t\tconst { forms, keys } = this.state\r\n\t\tif ($fn.hasObject(v)) {  \r\n\t\t\tforms.imgs = v.imgs || []\r\n\t\t\tforms.report_form_imgs = v.report_form_imgs || ''\r\n\t\t\tforms.vaccinate_real_name = v.vaccinate_real_name || ''\r\n\t\t\tforms.vaccinate_at = v.vaccinate_at || ''\r\n\t\t\tforms.harvest_real_name = v.harvest_real_name || ''\r\n\t\t\tforms.harvest_at = v.harvest_at || ''\r\n\t\t\tforms.take_level = v.take_level || ''\r\n\t\t\tforms.preliminary_result = v.preliminary_result || ''\r\n\t\t\tforms.count_cells = v.count_cells || ''\r\n\t\t\tforms.analyze_cells = v.analyze_cells || ''\r\n\t\t\tforms.shoot_cells = v.shoot_cells || ''\r\n\t\t\tforms.test_diagnosis = v.test_diagnosis || ''\r\n\t\t\tforms.result_interpretation = v.result_interpretation || ''\r\n\t\t\tforms.other_tests = v.other_tests || ''\r\n\t\t\tthis.setState({forms: {...v, ...forms}, keys: keys + 1})\r\n\t\t} else { \r\n\t\t\tforms.imgs = []\r\n\t\t\tforms.report_form_imgs = ''\r\n\t\t\tforms.vaccinate_real_name = ''\r\n\t\t\tforms.vaccinate_at = ''\r\n\t\t\tforms.harvest_real_name = ''\r\n\t\t\tforms.harvest_at = ''\r\n\t\t\tforms.take_level = ''\r\n\t\t\tforms.preliminary_result = ''\r\n\t\t\tforms.count_cells = ''\r\n\t\t\tforms.analyze_cells = ''\r\n\t\t\tforms.shoot_cells = ''\r\n\t\t\tforms.test_diagnosis = ''\r\n\t\t\tforms.result_interpretation = ''\r\n\t\t\tforms.other_tests = ''\r\n\t\t\tthis.setState({forms: forms, keys: keys + 1})\r\n\t\t} \r\n\t} \r\n\tchangeInput = (v, name) => ts.changeInput.call(this, v, name)\r\n\tchangeCheckbox = (v, name) => {\r\n\t\tconst { model } = this.state\r\n\t\tmodel[name] = v[name]\r\n\t\tthis.setState({model}) \r\n\t}\r\n\tsubmits = () => {\r\n\t\tconst { infos, model, operation_44015 } = this.state\r\n\t\tif (!$fn.hasObject(infos)) { return message.then(f => f.default.error('请选择一条列表数据')) }  \r\n\t\tswitch (operation_44015) {\r\n\t\t\tcase \"FL104210000\":\r\n\t\t\t\tif (!model.checked0) { return message.then(f => f.default.error('请勾选接种完成')) } \r\n\t\t\t\tthis.submits1(operation_44015)\r\n\t\t\tbreak;\r\n\t\t\tcase \"FL104210001\":\r\n\t\t\t\tif (!model.checked1) { return message.then(f => f.default.error('请勾选收获完成')) } \r\n\t\t\t\tthis.submits1(operation_44015)\r\n\t\t\tbreak;\r\n\t\t\tcase \"FL104210002\": \r\n\t\t\t\tthis.submits1(operation_44015)\r\n\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tmessage.then(f => f.default.error(`提交失败，没有${infos.operation_44015}这个流程`))\r\n\t\t\tbreak;\r\n\t\t} \r\n\t} \r\n\tsubmits1(val) {\r\n\t\tconst { forms, infos } = this.state\r\n\t\tlet content = ts.setNullParameter(forms); \r\n\t\tcontent.operation_44015 = val\r\n\t\tconst _content = $fn.getObjectParam('content', content)\r\n\t\tlet param = {\r\n\t\t\tuuid: infos.uuid,\r\n\t\t\tdmodel: ts.getPath().id,\r\n\t\t\t..._content, \r\n\t\t} \r\n\t\t$http.submit(null,'result-unit-item/update', { param: param, successText: '操作成功'}).then(data => {\r\n\t\t\tthis.setForms(data.content) \r\n\t\t\tthis.setoperation_44015(val)\r\n\t\t}) \r\n\t}\r\n\t// 判断流程节点位置\r\n\tsetProcess = (process) => { \r\n\t\tswitch (process) {\r\n\t\t\tcase \"FL104210000\": \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmodel: {checked0: false, checked1: false},\r\n\t\t\t\t\tflow0: true, flow1: false, flow2: false\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"FL104210001\": \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmodel: {checked0: true, checked1: false},\r\n\t\t\t\t\tflow0: true, flow1: true, flow2: false\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"FL104210002\": \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmodel: {checked0: true, checked1: true},\r\n\t\t\t\t\tflow0: true, flow1: true, flow2: true\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmodel: {checked0: false, checked1: false},\r\n\t\t\t\t\tflow0: true, flow1: false, flow2: false\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t} \r\n\t// 设置流程节点\r\n    setoperation_44015(val) {\r\n\t\tswitch (val) {\r\n\t\t  case \"FL104210000\": \r\n\t\t\tthis.setState({operation_44015: 'FL104210001'}, () => this.setProcess(this.state.operation_44015))\r\n\t\t\tbreak;\r\n\t\t  case \"FL104210001\": \r\n\t\t\tthis.setState({operation_44015: 'FL104210002'}, () => this.setProcess(this.state.operation_44015))\r\n\t\t\tbreak;\r\n\t\t  case \"FL104210002\": \r\n\t\t\tthis.setState({operation_44015: 'FL104210002'}, () => this.setProcess(this.state.operation_44015))\r\n\t\t\tbreak;\r\n\t\t  default: \r\n\t\t\tthis.setState({operation_44015: 'FL104210000'}, () => this.setProcess(this.state.operation_44015))\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\tconst { forms, infos, model, keys } = this.state  \r\n\t\treturn (\r\n\t\t\t<BoxScroll \r\n\t\t\t\tkey         = {keys}\r\n\t\t\t\tclassName\t= 'fv' \r\n\t\t\t\ttitle\t\t= '实验结果'\r\n\t\t\t\tstyle\t\t= {{width:350}}\r\n\t\t\t\ttitleChildren = {\r\n\t\t\t\t\t<div className='fxm' >\r\n\t\t\t\t\t\t<Button label='保存' className='ml10' onClick={() => this.submits()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} \r\n\t\t\t>  \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_coll_pic === '1' \t\t\t&& <UploadImg name='imgs' value={forms.imgs} handleChange={(v, name) => this.changeInput(v, name)} /> } \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_upload_report_form === '1' \t&& <UploadReport name='report_form_imgs' value={forms.report_form_imgs} handleChange={(v, name) => this.changeInput(v, name)}/> }\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.flow0 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Title title='接种' />\r\n\t\t\t\t\t\t<Checkbox name='checked0' value={model.checked0} disabled={this.state.flow1} onChange={(v, name) => this.changeCheckbox(v, name)} label='是否接种完成' />\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.flow1 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Title title='收获' /> \r\n\t\t\t\t\t\t<Checkbox name='checked1' value={model.checked1} disabled={this.state.flow2} onChange={(v, name) => this.changeCheckbox(v, name)} label='是否收获完成' />\r\n\t\t\t\t\t</>\r\n\t\t\t\t} \r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.flow2 &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Title title='结果' /> \r\n\t\t\t\t\t\t<InputTitle title='接种人' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='vaccinate_real_name' disabled bordered={false} value={forms.vaccinate_real_name} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='接种时间' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='vaccinate_at' disabled bordered={false} value={forms.vaccinate_at} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='收获人' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='harvest_real_name' disabled bordered={false} value={forms.harvest_real_name} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='收获时间' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='harvest_at' disabled bordered={false} value={forms.harvest_at} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='条带水平' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='take_level' bordered={false} value={forms.take_level} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='初步结果' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='preliminary_result' mode='textarea' bordered={false} value={forms.preliminary_result} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='记数细胞数' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='count_cells' bordered={false} value={forms.count_cells} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='分析细胞数' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='analyze_cells' bordered={false} value={forms.analyze_cells} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='拍摄细胞数' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='shoot_cells' bordered={false} value={forms.shoot_cells} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='检验诊断' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='test_diagnosis' mode='textarea' bordered={false} value={forms.test_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t\t<InputTitle title='结果解释' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='result_interpretation' mode='textarea' bordered={false} value={forms.result_interpretation} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} />  \r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t\t<InputTitle title='建议其他检测' titleChildren={\r\n\t\t\t\t\t\t\t<Input name='other_tests' mode='textarea' bordered={false} value={forms.other_tests} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t} /> \r\n\t\t\t\t\t</>\r\n\t\t\t\t}   \r\n\t\t\t</BoxScroll>\r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44014.js",["1930"],"import React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $async, $fn, $http } = window\r\n// ===================================================================== antd\r\nconst Input = $async(()=>import('@antd/form/input')) \r\nconst message = import('@antd/message')\r\n// ===================================================================== component\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst BoxScroll = $async(()=>import('#tp/box/box-scroll'))\r\nconst UploadImg = $async(()=>import('./upload-img'))\r\nconst UploadReport = $async(()=>import('./upload-report'))\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n\t<h3 className='fxm h30'><i className='r100px mr5' style={{width:5,height:5,background:'#333'}}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n) \r\n// ===================================================================== component  \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tforms: {}, // 要提交的数据\r\n\t\tinfos: {} // 详情\r\n\t} \r\n\tcomponentDidMount () {\r\n\t\tthis.setForms()\r\n\t}\r\n\tcomponentWillReceiveProps ({infos}) { \r\n\t\tthis.setState({infos: infos})\r\n\t\tthis.setForms(infos.content)\r\n\t}\r\n\tsetForms = (v) => { \r\n\t\tconst { forms } = this.state\r\n\t\tif ($fn.hasObject(v)) { \r\n\t\t\tforms.result2 = v.result2 || ''\r\n\t\t\tforms.result3 = v.result3 || ''\r\n\t\t\tforms.result_suggestion_name = v.result_suggestion_name || ''\r\n\t\t\tforms.clinical_advice = v.clinical_advice || ''\r\n\t\t\tforms.imgs = v.imgs || []\r\n\t\t\tforms.report_form_imgs = v.report_form_imgs || ''\r\n\t\t\tthis.setState({forms: forms})\r\n\t\t} else {\r\n\t\t\tforms.result2 = ''\r\n\t\t\tforms.result3 = ''\r\n\t\t\tforms.result_suggestion_name = ''\r\n\t\t\tforms.clinical_advice = ''\r\n\t\t\tforms.imgs = []\r\n\t\t\tforms.report_form_imgs = ''\r\n\t\t\tthis.setState({forms: forms})\r\n\t\t}\r\n\t}  \r\n\tchangeInput = (v, name) => ts.changeInput.call(this, v, name)\r\n\tsubmits = () => {\r\n\t\tconst { infos, forms } = this.state\r\n\t\tif (!$fn.hasObject(infos)) { return message.then(f => f.default.error('请选择一条列表数据')) }\r\n\t\tlet content = ts.setNullParameter(forms);\r\n\t\tconst _content = $fn.getObjectParam('content',content)\r\n\r\n\t\tlet params = {\r\n\t\t  uuid: infos.uuid,\r\n\t\t ..._content,\r\n\t\t  dmodel: ts.getPath().id\r\n\t\t};\r\n\t\t$http.submit(null,'result-unit-item/update', { param: params, successText: '操作成功'})\r\n\t} \r\n\trender () {\r\n\t\tconst { forms, infos } = this.state  \r\n\t\treturn (\r\n\t\t\t<BoxScroll \r\n\t\t\t\tclassName\t= 'fv' \r\n\t\t\t\ttitle\t\t= '图形与解释'\r\n\t\t\t\tstyle\t\t= {{width:350}}\r\n\t\t\t\ttitleChildren = {\r\n\t\t\t\t\t<div className='fxm' >\r\n\t\t\t\t\t\t<Button label='保存' className='ml10' onClick={() => this.submits()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} \r\n\t\t\t>  \r\n\t\t\t\t{\r\n\t\t\t\t\t$fn.hasObject(infos) && $fn.hasObject(infos.kd_check_result_cats) && infos.kd_check_result_cats.result2 === '1' &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Title title='结果2'  />\r\n\t\t\t\t\t\t<Input name='result2' size='middle' bordered={false} value={forms.result2} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\t$fn.hasObject(infos) && $fn.hasObject(infos.kd_check_result_cats) && infos.kd_check_result_cats.result3 === '1' &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Title title='结果3' />\r\n\t\t\t\t\t\t<Input name='result3' size='middle' bordered={false} value={forms.result3} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t</>\r\n\t\t\t\t} \r\n\t\t\t\t<Title title='建议与解释（手动）' />\r\n\t\t\t\t<Input name='result_suggestion_name' size='middle' mode='textarea' bordered={false} value={forms.result_suggestion_name} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t<Title title='临床建议' />\r\n\t\t\t\t<Input name='clinical_advice' size='middle' mode='textarea' bordered={false} value={forms.clinical_advice} onChange={(v, data, name) => this.changeInput(v, name) } /> \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_coll_pic === '1' \t\t\t&& <UploadImg name='imgs' value={forms.imgs} handleChange={(v, name) => this.changeInput(v, name)} /> } \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_upload_report_form === '1' \t&& <UploadReport name='report_form_imgs' value={forms.report_form_imgs} handleChange={(v, name) => this.changeInput(v, name)}/> }\r\n\t\t\t</BoxScroll>\r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\private\\template\\content\\content-page.js",["1931"],"import React from 'react'\r\n// ===================================================================== global template\r\nconst Content = window.$async(()=>import('@tp/content'))\r\n// =====================================================================\r\nexport default ({ children, className, contentClassName, style }) => {\r\n\treturn (\r\n\t\t<Content scrollXY className={className} style={style}>\r\n\t\t\t<section className={`h ${contentClassName||''}`} style={{minWidth:1000, minHeight:600 }}>\r\n\t\t\t\t{children}\r\n\t\t\t</section>\r\n\t\t</Content>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\graphic-rendition-44013.js",["1932"],"import React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $async, $fn, $http } = window\r\n// ===================================================================== antd\r\nconst Input = $async(()=>import('@antd/form/input')) \r\nconst message = import('@antd/message') \r\n// ===================================================================== component\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst BoxScroll = $async(()=>import('#tp/box/box-scroll'))\r\nconst UploadImg = $async(()=>import('./upload-img'))\r\nconst UploadReport = $async(()=>import('./upload-report'))\r\n// ===================================================================== component\r\nconst Title = ({ title, titleChildren }) => (\r\n\t<h3 className='fxm h30'><i className='r100px mr5' style={{width:5,height:5,background:'#333'}}></i><span>{title}</span><div className='ex tr'>{titleChildren}</div></h3>\r\n) \r\n// ===================================================================== component  \r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tforms: {}, // 要提交的数据\r\n\t\tinfos: {}, // 详情 \r\n\t\tkeys: 0 \r\n\t} \r\n\tcomponentDidMount () {\r\n\t\tthis.setForms() \r\n\t}\r\n\tcomponentWillReceiveProps ({infos}) { \r\n\t\tthis.setState({infos: infos})\r\n\t\tthis.setForms(infos.content)\r\n\t}\r\n\tsetForms = (v) => { \r\n\t\tconst { forms } = this.state\r\n\t\tif ($fn.hasObject(v)) {  \r\n\t\t\tthis.setState({forms: v})\r\n\t\t} else {\r\n\t\t\tforms.clinical_diagnosis = '' \r\n\t\t\tforms.naked_eye = '' \r\n\t\t\tforms.pathology = '' \r\n\t\t\tforms.pathological_diagnosis = '' \r\n\t\t\tforms.imgs = '' \r\n\t\t\tforms.report_form_imgs = '' \r\n\t\t\tforms.send_material = '' \r\n\t\t\tforms.visit_doctor_id = '' \r\n\t\t\tforms.return_visit_doctor_id = '' \r\n\t\t\tthis.setState({forms: forms})  \r\n\t\t}\r\n\t}  \r\n\tchangeInput = (v, name) => ts.changeInput.call(this, v, name) \r\n\tsubmits = () => {\r\n\t\tconst { infos, forms } = this.state\r\n\t\tif (!$fn.hasObject(infos)) { return message.then(f => f.default.error('请选择一条列表数据')) }\r\n\t\tlet content = ts.setNullParameter(forms);\r\n\t\tconst _content = $fn.getObjectParam('content',content)\r\n\t\tlet param = {\r\n\t\t  uuid: infos.uuid,\r\n\t\t ..._content,\r\n\t\t  dmodel: ts.getPath().id,\r\n\t\t  project_id: ts.getPath().project_id,\r\n\t\t  status: this.props.status,\r\n\t\t};\r\n\t\t$http.submit(null,'result-unit-item/update', { param: param, successText: '操作成功'})\r\n\t}   \r\n\trender () {\r\n\t\tconst { forms, infos, keys } = this.state  \r\n\t\tconst { width } = this.props\r\n\t\treturn (\r\n\t\t\t<BoxScroll \r\n\t\t\t\tclassName\t= 'fv' \r\n\t\t\t\ttitle\t\t= '实验结果'\r\n\t\t\t\tstyle\t\t= {{width: width ? width : 350}}\r\n\t\t\t\ttitleChildren = {\r\n\t\t\t\t\t<div className='fxm' >\r\n\t\t\t\t\t\t<Button label='下发设置' ghost className='ml10' />\r\n\t\t\t\t\t\t<Button label='下发' ghost className='ml10' />\r\n\t\t\t\t\t\t<Button label='保存' ghost className='ml10' onClick={() => this.submits()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t} \r\n\t\t\t>   \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_coll_pic === '1' \t\t\t&& <UploadImg name='imgs' value={forms.imgs} handleChange={(v, name) => this.changeInput(v, name)} /> } \r\n\t\t\t\t{ $fn.hasObject(infos) && infos.is_upload_report_form === '1' \t&& <UploadReport name='report_form_imgs' value={forms.report_form_imgs} handleChange={(v, name) => this.changeInput(v, name)}/> } \r\n\t\t\t\t<div className='fx'>\r\n\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t<Title title='送检材料' />\r\n\t\t\t\t\t\t<Input name='send_material' size='middle' bordered={false} value={forms.send_material} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<Title title='临床诊断' />\r\n\t\t\t\t\t\t<Input name='clinical_diagnosis' size='middle' bordered={false} value={forms.clinical_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<Title title='肉眼所见' />\r\n\t\t\t\t\t\t<Input name='naked_eye' size='middle' bordered={false} value={forms.naked_eye} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t    <div className='fx'>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='初诊医生' /> \r\n\t\t\t\t\t\t\t\t<div className='b'>{forms.ts_audit_name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t\t\t<Title title='复诊医生' /> \r\n\t\t\t\t\t\t\t\t<div className='b'>{forms.ts_approve_name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{width: '50%', marginLeft: '20px'}}>\r\n\t\t\t\t\t\t<Title title='病理所见' />\r\n\t\t\t\t\t\t<Input name='pathology' size='middle' mode='textarea' bordered={false} value={forms.pathology} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t\t<Title title='病理诊断' />\r\n\t\t\t\t\t\t<Input name='pathological_diagnosis' key={keys} size='middle' mode='textarea' bordered={false} value={forms.pathological_diagnosis} onChange={(v, data, name) => this.changeInput(v, name) } />\r\n\t\t\t\t\t\t<p className='g9 lh20'>(使用向下\" ↓ \"箭头自动搜索)</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t</BoxScroll>\r\n\t\t)\r\n\t} \r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\common.js",["1933","1934","1935","1936","1937","1938","1939","1940","1941","1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952"],"/* 薛玉梅 | 2020-12-30 17:33:31 | desc: 检测中心方法 */\r\nimport React from 'react'\r\nimport waitStatusImg from '@img/test-center/wait_s.png'\r\nimport outsourcingStatusImg from '@img/test-center/outsourcing_s.png'\r\nimport sensitiveStatusImg from '@img/test-center/sensitive_s.png'\r\nimport positiveStatusImg from '@img/test-center/positive_s.png'\r\nimport overClinicalStatusImg from '@img/test-center/over_clinical_s.png'\r\nimport overLinearStatusImg from '@img/test-center/over_linear_s.png' \r\nimport setImg from '@img/test-center/set-img.png' \r\nimport tipsImg from '@img/test-center/tips-img.png'  \r\n// ===================================================================== global declare\r\nconst { $http, $fn,  $async } = window  \r\n// ===================================================================== antd  \r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst message = import('@antd/message')\r\nconst Select = $async(()=>import('@antd/form/select')) \r\n\r\nexport default {\r\n    /**\r\n\t * 列表 - 条码列展示图标\r\n\t * @param {titstatus} 切换tab的值\r\n\t * @param {row} 当行数据\r\n\t * @param {value} 条码值 \r\n\t **/ \r\n    renderIcons(row, value) { \r\n        // 资料待审核\r\n        let waitStatus = (row.case_info_status === '0' || row.case_info_status === '1') ? <img src={waitStatusImg} title='资料待审核' style={{width: '14px', height: '14px', marginLeft: '4px'}} /> : ''\r\n        // 已外包 && 委托检验中心不显示已外包 | 还需要判断是否是委托检验中心 this.$route.query.type === '0' \r\n        let outsourcingStatus = row.outsourcing_company_code ? <img src={outsourcingStatusImg} title='已外包' style={{width: '14px', height: '14px', marginLeft: '4px'}} /> : ''\r\n        // 敏感词\r\n        let sensitiveStatus = row.is_sensitive_words === '1' ? <img src={sensitiveStatusImg} title='敏感词' style={{width: '14px', height: '14px', marginLeft: '4px'}} /> : ''\r\n        // 阳性  \r\n        let positiveStatus = ''\r\n        if ( row.result === '阳性' || (row.forms.result.type === 'dict' || row.forms.result.type === 'qualitative' || row.forms.result.type === 'other') \r\n            && row.result == '45602' || row.result == '68002' || row.result == '68003' || row.result == '68004' || row.result == '68005' || row.result == '68006'\r\n            || row.result == '68007' || row.result == '68008' || row.result == '68009') { \r\n                positiveStatus = <img src={positiveStatusImg} title='阳性' style={{width: '14px', height: '14px', marginLeft: '4px'}} />\r\n        }   \r\n        // 超出临床可报告范围\r\n        let overClinicalStatus = row.over_clinical === '1' ? <img src={overClinicalStatusImg} title='超出临床可报告范围' style={{width: '14px', height: '14px', marginLeft: '4px'}} /> : ''\r\n        // 超出线性范围\r\n        let overLinearStatus = row.is_sensitive_words === '1' ? <img src={overLinearStatusImg} title='超出线性范围' style={{width: '14px', height: '14px', marginLeft: '4px'}} /> : ''\r\n        return <div className='fxm'>{value} {waitStatus} {outsourcingStatus} {sensitiveStatus} {positiveStatus} {overClinicalStatus} {overLinearStatus} </div> \r\n    },\r\n    /**\r\n\t * 列表 - 点击图标事件,跳转到项目设置页面\r\n\t * @param {value} 值\r\n\t **/ \r\n    renderSettings(value, name) { \r\n        return (<div className='fxm'>\r\n            <img src={setImg} style={{width: '14px', height: '14px', marginRight: '4px'}} onClick={() => {\r\n                $fn.push(this, $fn.getRoot().root + `system-settings/project-settings?kind_code=${name}`) \r\n            }} />\r\n            <span>{value}</span>\r\n        </div>)\r\n    }, \r\n    /**\r\n\t * 列表 - 下拉/输入框 切换值\r\n\t * @param {v} 值 当前更改的值，对象\r\n\t * @param {name} 当前参数名称\r\n\t * @param {rows} 当前行数据\r\n\t * @param {index} 第几行 \r\n\t **/ \r\n\tonChanges (v, name, rows, index) {     \r\n\t\tconst { data } = this.ProjectListRef.state \r\n\t\tdata[index][name] = $fn.hasObject(v) ? v[name] : ''\r\n        this.ProjectListRef.setState({data: data})   \r\n        if (name === 'spec_type') { // 标本类型\r\n            const param = {\r\n                spec_type: $fn.hasObject(v) ? v[name] : '',\r\n                uuid: rows.uuid\r\n            } \r\n            $http.submit(null, 'result-unit-item/updatespectype', { param }).then(data => {\r\n\t\t\t\tmessage.then(f => f.default.success('操作成功')) \r\n\t\t\t\tthis.ProjectListRef.changeFetch({pag: 1})\r\n            })\r\n\t\t} else if (name ===  'result_suggestion_id') { // 建议与解释 \r\n            const param = {\r\n                result_suggestion_id: $fn.hasObject(v) ? v[name] : '',\r\n                uuid: rows.uuid\r\n            }  \r\n            $http.submit(null, 'result-unit-item/updateResultSuggestion', { param }).then(data => {\r\n\t\t\t\tmessage.then(f => f.default.success('操作成功')) \r\n\t\t\t\tthis.ProjectListRef.changeFetch({pag: 1})\r\n            })\r\n        }\r\n    }, \r\n    /**\r\n\t * 列表 - 提示箭头 \r\n\t * @param {value} 值 \r\n\t **/ \r\n    renderTips(value) {\r\n        const down = value.indexOf('↓') !== -1 // 向下\r\n        const up = value.indexOf('↑') !== -1 // 向上 \r\n        return <div className='b f16' style={{color: down ? '#1fa8f9' : up ? '#fd5029' : ''}}>{value}</div>\r\n    },\r\n    /**\r\n\t * 列表 - 结果展示类型 \r\n\t * @param {rows} 当前行数据\r\n\t * @param {index} 第几行 \r\n\t **/ \r\n    renderResult (name, rows, index) { \r\n        let d = rows[name]\r\n        if (rows.forms && rows.forms[name].type) { \r\n            switch (rows.forms[name].type) {\r\n                case 'text': \r\n                    d = <Input name={name} width='100%' value={rows[name]} onChange={(v, data, name) => this.onChanged(v, name, rows, index) } /> \r\n                break;\r\n                case 'number':  \r\n                    d = <div className='fxm'> \r\n                        <img src={tipsImg} title='参考范围' style={{width: '14px', height: '14px', marginRight: '4px'}} onClick={() => this.changeReferenceRange(rows)} /> \r\n                        <Input className='ex' name={name} value={rows[name]} onChange={(v, data, name) => this.onChanged(v, name, rows, index) } /> \r\n                    </div>\r\n                break;\r\n                case 'dict': case 'qualitative': \r\n                    d = <Select name={name} data={rows.forms[name].select} nameStr='name' idStr='value' value={rows[name]}  onChanged={(v, data, name) => this.onChanged(v, name, rows, index)} width='100%' />\r\n                break; \r\n                case 'other': case 'compute': \r\n                break;  \r\n                default: \r\n                break;\r\n            }\r\n        } \r\n        return d\r\n    },\r\n    /**\r\n\t * 图形与解释 - 设置要提交的空数组或undefined数据为空 \r\n\t * @param {val} 已修改的数据 \r\n\t **/  \r\n    setNullParameter(val) {\r\n        let d = val;\r\n        for (let k in d) {\r\n          if (d[k] === undefined || d[k].length === 0) {\r\n            d[k] = \"\";\r\n          }\r\n        }\r\n        return d;\r\n    }, \r\n    /**\r\n\t * 图形与解释 - input|图片等切换方法\r\n\t * @param {form} 值存放的对象 \r\n\t * @param {v} 对象：当前修改的{属性：值}\r\n\t * @param {name} 属性名称 \r\n\t **/  \r\n\tchangeInput (v, name, callback) { \r\n\t\tconst { forms } = this.state\r\n\t\tforms[name] = v[name]\r\n\t\tthis.setState({forms}, () => callback && callback())\r\n    }, \r\n    /**\r\n\t * 检测中心-获取当前路径的参数 \r\n\t **/  \r\n    getPath () {\r\n        const hash = window.location.hash.split('testing-center')[1] \r\n        const arr = hash.split('/') \r\n        return { project_id: arr[3], id: arr[2] }  \r\n    }\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\tp\\control.js",["1953","1954","1955"],"import React from 'react' \r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js'  \r\nimport coms from '@/private/js/common.js'\r\nimport ResultingOperationLog from './resulting-operation-log'\r\nimport SetResult from './set-result'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== global template\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Tabs = $async(()=>import('#tp/tabs'))\r\nconst Box = $async(()=>import('#tp/box/box'))\r\n// ===================================================================== template\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form')) \r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {  \r\n\t\tforms:[],\r\n\t\tbtns:[],\r\n\t\tstatus: 45001,\r\n\t\tisCompletePro: false, // 是否完整项目\r\n\t\tsubmit1: [ // 迟发 \r\n\t\t\t{ label:'预计报告时间',\t\tname:'delay_at',\t\ttype:'date-time' },\r\n\t\t\t{ label:'异常原因类型', \tname:'abnormal_type',\ttype: 'select', data: [] },\r\n\t\t\t{ label:'原因', \t\t\tname:'reason',\t\t\ttype: 'textarea', full:true, width:'100%' }\r\n\t\t],\r\n\t\tsubmit2: [ // 退单 & 终止\r\n\t\t\t{ label:'异常原因类型', \tname:'abnormal_type',\ttype: 'select', data: [] },\r\n\t\t\t{ label:'原因', \t\t\tname:'reason',\t\t\ttype: 'textarea', full:true, width:'100%' } \r\n\t\t],\r\n\t\tbtns_configs: {},\r\n\t\tsubmit3: [ // 转外包\r\n\t\t\t{ label:'外包单位', \t\tname:'outsourcing_company_code',\ttype: 'select', data: [], nameStr: 'label', idStr: 'value' }\r\n\t\t],\r\n\t}\r\n\tmodel = {} \r\n\tparam = this.props.match.params \r\n\tform0 = [ // 公用条件\r\n\t\t{ label:'条码号', \t\t\tname:'spec_code' },\r\n\t\t{ label:'第三方条码号', \tname:'third_spec_code' },\r\n\t\t{ label:'实验号', \t\t\tname:'experiment_num' }, // 区分 病理号\r\n\t\t{ label:'姓名', \t\t\tname:'patient_name' },\r\n\t\t{ label:'项目',\t \t\t\tname:'kind_id' },\r\n\t\t{ label:'自然项目', \t\tname:'parent_kind_id' },\r\n\t\t{ label:'医院名称', \t\tname:'hosp_id' }, \r\n\t\t{ label:'提交时间', \t\tname:'date1', \t\t\ttype:'date-range',\tnames:['ts_user_start_at','ts_user_end_at'], index:1, noVisible: true }, // 45002 \r\n\t\t{ label:'审核时间', \t\tname:'date2', \t\t\ttype:'date-range',\tnames:['ts_audit_start_at','ts_audit_end_at'], index:2, noVisible: true  }, // 45003 \r\n\t\t{ label:'批准时间', \t\tname:'date3', \t\t\ttype:'date-range',\tnames:['ts_approve_start_at','ts_approve_end_at'], index:3, noVisible: true  }, // 45004\r\n\t\t{ label:'操作时间', \t\tname:'date4', \t\t\ttype:'date-range',\tnames:['start_date','end_date'] },\r\n\t]   \r\n\tbtns = [\r\n\t\t[ // 结果录入 个别模型按钮不一样\r\n\t\t\t{ label:'上机', many:true, onClick: () => { \r\n\t\t\t\tconst param = this.setParams1(); \r\n\t\t\t\tcoms.interfaceConfirm('ts-report-card/sendtodevice', '上机', param, () => { this.fetch() })\r\n\t\t\t} },\r\n\t\t\t{ label:'保存结果', disabled: false, onClick: () => { \r\n\t\t\t\tconst data = this.props.getData() \r\n\t\t\t\tlet forms = data.map(i => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\tuuid: i.uuid, \r\n\t\t\t\t\tspec_abnormal: \"\",\r\n\t\t\t\t\tcontent: \"\",\r\n\t\t\t\t\tdilution_multiple: i.dilution_multiple,\r\n\t\t\t\t\tresult: i.result,\r\n\t\t\t\t\tspec_type: i.spec_type, // 标本类型已单独提交\r\n\t\t\t\t\tresult1: i.result1 \r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tcoms.interfaceConfirm('result-unit-item/updateall', '保存结果', { forms: JSON.stringify(forms)}, () => { this.fetch() })\r\n\t\t\t} },\r\n\t\t\t{ label:'提交', many:true, onClick: () => { \r\n\t\t\t\tconst data = this.props.getData() \r\n\t\t\t\tlet forms = data.map(i => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\tuuid: i.uuid, \r\n\t\t\t\t\tspec_abnormal: \"\",\r\n\t\t\t\t\tcontent: \"\",\r\n\t\t\t\t\tdilution_multiple: i.dilution_multiple,\r\n\t\t\t\t\tresult: i.result,\r\n\t\t\t\t\tspec_type: i.spec_type, // 标本类型已单独提交\r\n\t\t\t\t\tresult1: i.result1 \r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\t$http.submit(null, 'result-unit-item/updateall', { param: { forms: JSON.stringify(forms) }, onSuccess: () => {\r\n\t\t\t\t\tconst selectedKeys = this.props.getSelectedKeys() \r\n\t\t\t\t\tconst over_linears = []\r\n\t\t\t\t\tconst over_clinicals = []\r\n\t\t\t\t\tlet uniqArr = []\r\n\t\t\t\t\tselectedKeys.forEach(i => {\r\n\t\t\t\t\t\tif (i.over_linear == '1') {\r\n\t\t\t\t\t\t\tover_linears.push(i.kind_name)\r\n\t\t\t\t\t\t\tuniqArr = [...new Set(over_linears)]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (i.over_clinical == '1') {\r\n\t\t\t\t\t\t\tover_clinicals.push(i.spec_code)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) \r\n\t\t\t\t\tconst param = this.setParams1(1);\r\n\t\t\t\t\tif (uniqArr.length || over_clinicals.length) {\r\n\t\t\t\t\t\tthis.overLinearTips(uniqArr, over_clinicals, () => { \r\n\t\t\t\t\t\t\tcoms.interfaceConfirm('ts-report-card/uptest', '提交', param)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcoms.interfaceConfirm('ts-report-card/uptest', '提交', param)\r\n\t\t\t\t}}) \r\n\t\t\t} },\r\n\t\t\t{ label:'删除结果', many:true, onClick: () => {\r\n\t\t\t\tconst param = this.setParams1(1);\r\n\t\t\t\tcoms.interfaceConfirm('ts-report-card/delresult', '删除结果', param, () => { this.fetch() })\r\n\t\t\t} },\r\n\t\t\t{ label:'迟发', many: true, onClick: () => { \r\n\t\t\t\tthis.refs.modal1.open() \r\n\t\t\t} },\r\n\t\t\t{ label:'退单', many: true, onClick: () => {\r\n\t\t\t\tthis.refs.modal2.open()  \r\n\t\t\t\tthis.setState({btns_configs: {title: '退单', status: '45007'}})\r\n\t\t\t} },\r\n\t\t\t{ label:'项目终止', many: true, onClick: () => {\r\n\t\t\t\tthis.refs.modal2.open() \r\n\t\t\t\tthis.setState({btns_configs: {title: '项目终止', status: '45008'}})\r\n\t\t\t} },\r\n\t\t\t{ label:'修改资料' },\r\n\t\t\t{ label:'转外包', many: true, onClick: () => { \r\n\t\t\t\tthis.refs.modal3.open() \r\n\t\t\t} },\r\n\t\t\t{ label:'取消外包', many: true, onClick: () => {\r\n\t\t\t\tconst param = this.setParams3();\r\n\t\t\t\tcoms.interfaceConfirm('specimen/delOutsourcingData', '取消外包', param, () => { this.fetch() })\r\n\t\t\t} },\r\n\t\t\t{ label:'结果操作日志', onClick: () => {\r\n\t\t\t\tthis.refs.modal4.open() \r\n\t\t\t\tthis.ResultingOperationLogRef.changeFetch(this.props.infos.uuid)\r\n\t\t\t} },\r\n\t\t\t{ label:'设置结果', onClick: () => {\r\n\t\t\t\tthis.refs.modal5.open() \r\n\t\t\t\tlet param = {\r\n        \t\t\texperiment_num: this.props.infos.experiment_num,\r\n          \t\t\tspec_code: this.props.infos.spec_code,\r\n          \t\t\tkind_id: this.props.infos.kind_id\r\n\t\t\t\t}\r\n\t\t\t\tthis.setResultRef.changeFetch(param)\r\n\t\t\t} }, // 44014 等\r\n\t\t],\r\n\t\t[\r\n\t\t\t{ label:'保存结果', many:true },\r\n\t\t\t{ label:'回退' }, // 病理\r\n\t\t\t{ label:'删除结果' },\r\n\t\t\t{ label:'审核', many:true },\r\n\t\t\t{ label:'不通过', many:true },\r\n\t\t\t{ label:'迟发' },\r\n\t\t\t{ label:'退单' },\r\n\t\t\t{ label:'项目终止' },\r\n\t\t\t{ label:'修改资料' },\r\n\t\t\t{ label:'危机值报告' },\r\n\t\t],\r\n\t\t[\r\n\t\t\t{ label:'保存结果', many:true },\r\n\t\t\t{ label:'回退' }, // 病理\r\n\t\t\t{ label:'批量批准', many:true },\r\n\t\t\t{ label:'手动批准', many:true },\r\n\t\t\t{ label:'拒绝' },\r\n\t\t\t{ label:'删除结果' },\r\n\t\t\t{ label:'迟发' },\r\n\t\t\t{ label:'退单' },\r\n\t\t\t{ label:'项目终止' },\r\n\t\t\t{ label:'修改资料' },\r\n\t\t\t{ label:'危机值报告' },\r\n\t\t\t{ label:'预览并批准报告单' },\r\n\t\t\t{ label:'合并项目' },\r\n\t\t\t{ label:'合并项目管理' },\r\n\t\t],\r\n\t\t[\r\n\t\t\t{ label:'报告终止', many:true },\r\n\t\t\t{ label:'预览报告单' },\r\n\t\t],\r\n\t\t[\r\n\t\t\t{ label:'保存结果', many:true },\r\n\t\t\t{ label:'提交', many:true },\r\n\t\t\t{ label:'预览报告单' },\r\n\t\t],\r\n\t\t[\r\n\t\t\t{ label:'预览报告单' },\r\n\t\t]\r\n\t] \r\n\tcomponentDidMount(){\r\n\t\tthis.props.onRef && this.props.onRef(this) \r\n\t\tthis.setState({ forms: this.form0, btns:this.btns[0] })\r\n\t\tconst { submit1, submit2, submit3 } = this.state\r\n\t\t$fn.dataSave('dis-item-62050-data').then(local => { // 异常原因类型\r\n\t\t\tif($fn.hasArray(local)){ \r\n\t\t\tsubmit1[1].data = local\r\n\t\t\tsubmit2[0].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:62050}, loading:false}).then(data=>{\r\n\t\t\t\tsubmit1[1].data = data\r\n\t\t\t\tsubmit2[0].data = data\r\n\t\t\t\t$fn.dataSave('dis-item-62050-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t})  \r\n\t\tcacheApi.then(f => {\r\n            const d = f.default \r\n\t\t\t$fn.getCache({ // 外包单位 \r\n\t\t\t\tcache: d.getOutsourcingDepartList, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit3[0].data = data \r\n                        this.setState({submit3})\r\n                    } else {\r\n                        $http.submit(null, 'specimen/getOutsourcingDepartList').then(data => {\r\n                            submit3[0].data = data \r\n                            this.setState({submit3})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t}  \r\n\ttabs = [\r\n\t\t{ title:'结果录入', status:45001 },\r\n\t\t{ title:'已提交', status:45002 },\r\n\t\t{ title:'已审核', status:45003 },\r\n\t\t{ title:'已批准', status:45004 },\r\n\t\t{ title:'已迟发', status:45006 },\r\n\t\t{ title:'已退单', status:45007 },\r\n\t\t{ title:'已终止', status:45008 },\r\n\t]\r\n\tfetch = (param) => { \r\n\t\tthis.props.changeFetch({...this.model, ...param})\r\n\t} \r\n    // 多条数据 - 提交传参 \r\n    setParams1(type) {\r\n\t\tconst params = { \r\n\t\t  ids: this.props.list.map(i => i.uuid),\r\n\t\t  project_id: ts.getPath().project_id,\r\n\t\t  result_id: ts.getPath().id,\r\n\t\t  status: this.state.status,\r\n\t\t  type: type ? type : ''\r\n\t\t}; \r\n\t\treturn params;\r\n\t}  \r\n    // 单条数据 - 提交传参 \r\n    setParams2(type) {\r\n\t\tconst params = { \r\n\t\t  ids: [this.props.infos.uuid],\r\n\t\t  project_id: ts.getPath().project_id,\r\n\t\t  result_id: ts.getPath().id,\r\n\t\t  status: this.state.status,\r\n\t\t  type: type ? type : ''\r\n\t\t};\r\n\t\treturn params;\r\n\t}  \r\n    // 线性范围\r\n    overLinearTips(data, data1, cb) {\r\n\t\tconst title1 = data.length ? `【项目“${data.join('、')}”的结果已超出线性范围】，` : ''\r\n\t\tconst title2 = data1.length ? `【条码“${data1.join('、')}”的结果已超出临床可报告范围】，` : ''\r\n\t\tconfirm.then(f=>{\r\n\t\t\tf.default({\r\n\t\t\t\tmsg:`${title1}${title2}是否继续提交?`,\r\n\t\t\t\tonOk: close => {   \r\n\t\t\t\t\tcb && cb()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})  \r\n\t} \r\n\t// 转外包 & 取消外包-参数\r\n\tsetParams3(v) {\r\n\t\tlet arr = this.props.list.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\tspec_code: item.spec_code,\r\n\t\t\t\tkind_id: item.kind_id,\r\n\t\t\t\tkind_category: item.kind_category,\r\n\t\t\t\tparent_kind_category: item.parent_kind_category,\r\n\t\t\t\tparent_kind_id: item.parent_kind_id,\r\n\t\t\t\tkind_name: item.kind_name,\r\n\t\t\t\tparent_kind_name: item.parent_kind_name\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet param = {\r\n\t\t\toutsourcing_data: arr,\r\n\t\t\tentry_type: 2, // 1标本 2 检测中心\r\n\t\t\toutsourcing_type: 2, // 外包类型：1常规2临时 \r\n\t\t}\r\n\t\tif ($fn.hasObject(v)){ param = {...param, ...v}}\r\n\t\treturn param;\r\n\t}\r\n\tbtnDisabled (many, disabled) {\r\n\t\tconst { list, infos } = this.props\r\n\t\tlet d = true \r\n\t\tif (disabled === false) { return false }\r\n\t\tif (many) {\r\n\t\t\td = $fn.hasArray(list) ? false :true\r\n\t\t} else {\r\n\t\t\td = $fn.hasObject(infos) ? false :true\r\n\t\t}\r\n\t\treturn d\r\n\t}\r\n\trender(){\r\n\t\tconst { pullLoading, forms, btns, submit1, submit2, btns_configs, submit3 } = this.state \r\n\t\treturn (\r\n\t\t\t<Box>\r\n\t\t\t\t<Tabs \r\n\t\t\t\t\tdata={ this.tabs } \r\n\t\t\t\t\tonTabs = { (data, index) => { \r\n\t\t\t\t\t\tforms.forEach((v, i) => {  \r\n\t\t\t\t\t\t\tif (v.index) {\r\n\t\t\t\t\t\t\t\tif (String(v.index) === String(index)) {\r\n\t\t\t\t\t\t\t\t\tv.noVisible = false\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tv.noVisible = true\r\n\t\t\t\t\t\t\t\t\tif (v.type === 'date-range') { // 日期\r\n\t\t\t\t\t\t\t\t\t\tthis.model[v.names[0]] = ''\r\n\t\t\t\t\t\t\t\t\t\tthis.model[v.names[1]] = ''\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis.model[v.name] = ''\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) \r\n\t\t\t\t\t\tthis.setState({status: data.status, btns: this.btns[index], forms: forms}, () => {\r\n\t\t\t\t\t\t\tthis.fetch({status: data.status}) \r\n\t\t\t\t\t\t})    \r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 操作按钮 */}\r\n\t\t\t\t{\r\n\t\t\t\t\t$fn.hasArray(btns) && (\r\n\t\t\t\t\t\t<nav className='xplr mt5'>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tbtns.map((v,i)=><Button key={i} className='mr10 mb5' ghost label={v.label} disabled={ this.btnDisabled(v.many, v.disabled) } onClick={() => v.onClick && v.onClick() } title={v.many?'请勾选一条或多条列表数据':'请选择一条列表数据'} />)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tclassName \t= { $fn.hasArray(btns) ? 'pt5 pb5' : 'pt10' }\r\n\t\t\t\t\tdata\t\t= { forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal1' title='迟发' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit1 }\r\n\t\t\t\t\t\tonSubmit = { v => {  \r\n\t\t\t\t\t\t\tlet param = { ...this.setParams1(), ...v, cross_page_submit: this.state.isCompletePro ? 1 : 0 };\r\n\t\t\t\t\t\t\t$http.submit(null, 'ts-report-card/updelay', { param: param, onSuccess: () => {\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal1.close()\r\n\t\t\t\t\t\t\t\tthis.fetch() \r\n\t\t\t\t\t\t\t} })\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal1.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal2' title={btns_configs.title} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit2 }\r\n\t\t\t\t\t\tonSubmit = { v => {  \r\n\t\t\t\t\t\t\tlet param = { ...this.setParams1(), ...v, cross_page_submit: this.state.isCompletePro ? 1 : 0, status_abnormal: btns_configs.status };\r\n\t\t\t\t\t\t\t$http.submit(null, 'ts-report-card/upstatusabnormal', { param: param, onSuccess: () => {\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal2.close()\r\n\t\t\t\t\t\t\t\tthis.fetch() \r\n\t\t\t\t\t\t\t} }) \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal2.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal3' title='转外包' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit3 }\r\n\t\t\t\t\t\tonSubmit = { v => {   \r\n\t\t\t\t\t\t\t$http.submit(null, 'specimen/changeSpec2Outsourcing', { param: this.setParams3(v), onSuccess: () => {\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal3.close()\r\n\t\t\t\t\t\t\t\tthis.fetch() \r\n\t\t\t\t\t\t\t} }) \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal3.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal4' title='结果操作日志' width={1000} noFooter>\r\n\t\t\t\t\t<ResultingOperationLog onRef={ ref => this.ResultingOperationLogRef = ref} />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal5' title='设置结果' width={1000} okText='保存结果' onOk={() => {\r\n\t\t\t\t\tthis.setResultRef.submits(() => {\r\n\t\t\t\t\t\tthis.refs.modal5.close()\r\n\t\t\t\t\t\tthis.props.changeFetch()\r\n\t\t\t\t\t}) \r\n\t\t\t\t}}>\r\n\t\t\t\t\t<SetResult onRef={ ref => this.setResultRef = ref} infos={this.props.infos} />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Box>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44031.js",["1956"],"/* 薛玉梅 | 2020-12-28 15:33:58 | desc: 新建模型*/\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))  \r\n// ===================================================================== private component\r\nconst Control = $async(()=>import('./tp/control'))\r\nconst PersonDetail = $async(()=>import('./tp/person-detail'))\r\nconst ProjectList = $async(()=>import('./tp/project-list'))\r\nconst GraphicRendition44031 = $async(()=>import('./tp/graphic-rendition-44031'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\ttableData:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tspec_typeOption: [], // 标本类型\r\n\t\tinfos: {}, // 单个数据的详情\r\n\t\tlist: [], // 多条数据\r\n\t\tstatus: '45001', // 搜索条件\r\n\t}   \r\n\tparam = this.props.match.params\r\n\t\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '病理号', \t\t\t\tfield: 'experiment_num', \t\twidth:110,  \tsort:true },\r\n\t\t{ title: '姓名', \t\t\t\tfield: 'patient_name', \t\t\twidth:100 }, \r\n\t\t{ title: '标本条码', \t\t\tfield: 'spec_code', \t\t\twidth:150, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderIcons(rows, rows.spec_code)\r\n\t\t} }, \r\n\t\t{ title: '性别', \t\t\t\tfield: 'sex_name', \t\t\t\twidth:50 },\r\n\t\t{ title: '年龄', \t\t\t\tfield: 'age', \t\t\t\t\twidth:80 },\r\n\t\t{ title: '项目名称', \t\t\tfield: 'kind_name',\t \t\t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.kind_name, rows.kind_code)\r\n\t\t} },\r\n\t\t{ title: '项目编码', \t\t\tfield: 'kind_code',\t\t\t\twidth:80 },\r\n\t\t{ title: '自然项目', \t\t\tfield: 'parent_kind_name', \t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.parent_kind_name, rows.parent_kind_code)\r\n\t\t} },\r\n\t\t{ title: '接收时间', \t\t\tfield: 'receive_time',\t\t\twidth:140, \t\tsort:true },\r\n\t\t{ title: '图标', \t\t\t\tfield: '图标',\t\t\t\t\twidth:120 }\r\n\t]\r\n\tonChanged = (v, name, rows, index) => { \r\n\t\tts.onChanges.call(this, v, name, rows, index)\r\n\t}\r\n\t// 参考范围\r\n\tchangeReferenceRange = (rows) => {\r\n\t\tthis.ProjectListRef.changeReferenceRange(rows)\r\n\t} \r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('dis-item-2000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n            this.setState({spec_typeOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:2000}}).then(data=>{\r\n                this.setState({spec_typeOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-2000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { infos, list } = this.state\r\n\t\treturn (\r\n\t\t\t<Page nobc={ true }>\r\n\t\t\t\t<Control {...this.props} list={list} infos={infos} getData={() => {return this.ProjectListRef.state.data} } getSelectedKeys={() => { return this.ProjectListRef.state.selectedKeys }}  onRef={ref => this.ControlRef = ref} changeFetch={(e) => {\r\n\t\t\t\t\tthis.ProjectListRef.changeFetch({param: e})\r\n\t\t\t\t\tthis.setState({status: e.status})\r\n\t\t\t\t}} /> \r\n\t\t\t\t<div className='fx ex mt5 height0'>\r\n\t\t\t\t\t<ProjectList onRef={ref => this.ProjectListRef = ref} cols={this.cols} getData={(v) => this.setState({tableData: v})} getInfo={(v) => this.setState({infos: v})} getSelectedKeys={(v) => this.setState({list: v})} />\r\n\t\t\t\t\t<PersonDetail infos={infos} />\r\n\t\t\t\t\t<GraphicRendition44031 infos={infos} width={480} status={this.state.status} />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\template.js",["1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968"],"import React from 'react'\r\n// ===================================================================== antd\r\n\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== global template\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst Tabs = $async(()=>import('#tp/tabs'))\r\nconst Box = $async(()=>import('#tp/box/box'))\r\n// ===================================================================== component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== private component\r\nconst Control = $async(()=>import('./tp/control'))\r\nconst PersonDetail = $async(()=>import('./tp/person-detail'))\r\nconst ProjectList = $async(()=>import('./tp/project-list'))\r\nconst GraphicRendition = $async(()=>import('./tp/graphic-rendition'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tmodel = {}\r\n\t\r\n\tparam = this.props.match.params\r\n\t\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '标本条码', \tfield: 'device_number', \twidth:145, sort:true },\r\n\t\t{ title: '自然项目', \tfield: 'device_name', \t\twidth:150, sort:true },\r\n\t\t{ title: '实验号', \t\tfield: 'device_model', \t\twidth:130, sort:true },\r\n\t\t{ title: '项目名称', \tfield: 'id_code', \t\t\twidth:100, sort:true },\r\n\t\t{ title: '姓名', \t\tfield: 'buy_date', \t\t\twidth:100, \t},\r\n\t\t{ title: '标本类型', \tfield: 'buy_price', \t\twidth:130 },\r\n\t\t{ title: '结果', \t\tfield: 'device_type_name', \twidth:80, sort:true },\r\n\t\t{ title: '结果1', \t\tfield: 'project_name', \t\twidth:80 },\r\n\t\t{ title: '单位', \t\tfield: 'pinyin_name', \t\twidth:130 },\r\n\t\t{ title: '提示', \t\tfield: 'enabeld_date', \t\twidth:100, sort:true },\r\n\t\t{ title: '建议与解释', \tfield: 'rel_type_name', \twidth:100 },\r\n\t\t{ title: '稀释倍数', \tfield: 'device_status_name',width:130 },\r\n\t\t{ title: '迟发状态', \tfield: 'device_status_name',width:130 },\r\n\t\t{ title: '迟发预计报告时间', \tfield: 'device_status_name',width:130 },\r\n\t\t{ title: '迟发原因', \tfield: 'device_status_name',width:130 },\r\n\t\t{ title: '异常状态', \tfield: 'device_status_name',width:130 },\r\n\t\t{ title: '项目检测编号', field: 'device_status_name',width:130 },\r\n\t\t{ title: '项目编码', \tfield: 'device_status_name',width:130 },\r\n\t\t{ title: '接收时间', field: 'device_status_name',width:130, sort:true },\r\n\t\t{ title: '图标', \tfield: 'device_status_name',width:130 },\r\n\t]\r\n\tcomponentDidMount(){\r\n\t\tconsole.log(this.param)\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, forms, btns } = this.state\r\n\t\treturn (\r\n\t\t\t<Page nobc={ true }>\r\n\t\t\t\t<Control {...this.props} />\r\n\t\t\t\t\r\n\t\t\t\t<div className='fx ex mt5'>\r\n\t\t\t\t\t<ProjectList cols={this.cols} data={data} />\r\n\t\t\t\t\t<PersonDetail />\r\n\t\t\t\t\t<GraphicRendition />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44030.js",["1969"],"/* 薛玉梅 | 2020-12-28 15:33:58 | desc: 新建模型*/\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))  \r\n// ===================================================================== private component\r\nconst Control = $async(()=>import('./tp/control'))\r\nconst PersonDetail = $async(()=>import('./tp/person-detail'))\r\nconst ProjectList = $async(()=>import('./tp/project-list'))\r\nconst GraphicRendition44030 = $async(()=>import('./tp/graphic-rendition-44030'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\ttableData:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tspec_typeOption: [], // 标本类型\r\n\t\tinfos: {}, // 单个数据的详情\r\n\t\tlist: [], // 多条数据\r\n\t\tstatus: '45001', // 搜索条件\r\n\t}   \r\n\tparam = this.props.match.params\r\n\t\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '病理号', \t\t\t\tfield: 'experiment_num', \t\twidth:110,  \tsort:true },\r\n\t\t{ title: '姓名', \t\t\t\tfield: 'patient_name', \t\t\twidth:100 }, \r\n\t\t{ title: '标本条码', \t\t\tfield: 'spec_code', \t\t\twidth:150, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderIcons(rows, rows.spec_code)\r\n\t\t} }, \r\n\t\t{ title: '性别', \t\t\t\tfield: 'sex_name', \t\t\t\twidth:50 },\r\n\t\t{ title: '年龄', \t\t\t\tfield: 'age', \t\t\t\t\twidth:80 },\r\n\t\t{ title: '项目名称', \t\t\tfield: 'kind_name',\t \t\t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.kind_name, rows.kind_code)\r\n\t\t} },\r\n\t\t{ title: '项目编码', \t\t\tfield: 'kind_code',\t\t\t\twidth:80 },\r\n\t\t{ title: '自然项目', \t\t\tfield: 'parent_kind_name', \t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.parent_kind_name, rows.parent_kind_code)\r\n\t\t} },\r\n\t\t{ title: '接收时间', \t\t\tfield: 'receive_time',\t\t\twidth:140, \t\tsort:true },\r\n\t\t{ title: '图标', \t\t\t\tfield: '图标',\t\t\t\t\twidth:120 }\r\n\t]\r\n\tonChanged = (v, name, rows, index) => { \r\n\t\tts.onChanges.call(this, v, name, rows, index)\r\n\t}\r\n\t// 参考范围\r\n\tchangeReferenceRange = (rows) => {\r\n\t\tthis.ProjectListRef.changeReferenceRange(rows)\r\n\t} \r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('dis-item-2000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n            this.setState({spec_typeOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:2000}}).then(data=>{\r\n                this.setState({spec_typeOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-2000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { infos, list } = this.state\r\n\t\treturn (\r\n\t\t\t<Page nobc={ true }>\r\n\t\t\t\t<Control {...this.props} list={list} infos={infos} getData={() => {return this.ProjectListRef.state.data} } getSelectedKeys={() => { return this.ProjectListRef.state.selectedKeys }}  onRef={ref => this.ControlRef = ref} changeFetch={(e) => {\r\n\t\t\t\t\tthis.ProjectListRef.changeFetch({param: e})\r\n\t\t\t\t\tthis.setState({status: e.status})\r\n\t\t\t\t}} /> \r\n\t\t\t\t<div className='fx ex mt5 height0'>\r\n\t\t\t\t\t<PersonDetail infos={infos} />\r\n\t\t\t\t\t<GraphicRendition44030 infos={infos} width={610} status={this.state.status} />\r\n\t\t\t\t\t<ProjectList onRef={ref => this.ProjectListRef = ref} cols={this.cols} getData={(v) => this.setState({tableData: v})} getInfo={(v) => this.setState({infos: v})} getSelectedKeys={(v) => this.setState({list: v})} />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44029.js",["1970"],"/* 薛玉梅 | 2020-12-28 15:33:58 | desc: 新建模型*/\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))  \r\n// ===================================================================== private component\r\nconst Control = $async(()=>import('./tp/control'))\r\nconst PersonDetail = $async(()=>import('./tp/person-detail'))\r\nconst ProjectList = $async(()=>import('./tp/project-list'))\r\nconst GraphicRendition44029 = $async(()=>import('./tp/graphic-rendition-44029'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\ttableData:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tspec_typeOption: [], // 标本类型\r\n\t\tinfos: {}, // 单个数据的详情\r\n\t\tlist: [], // 多条数据\r\n\t\tstatus: '45001', // 搜索条件\r\n\t}   \r\n\tparam = this.props.match.params\r\n\t\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '病理号', \t\t\t\tfield: 'experiment_num', \t\twidth:110,  \tsort:true },\r\n\t\t{ title: '姓名', \t\t\t\tfield: 'patient_name', \t\t\twidth:100 }, \r\n\t\t{ title: '标本条码', \t\t\tfield: 'spec_code', \t\t\twidth:150, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderIcons(rows, rows.spec_code)\r\n\t\t} }, \r\n\t\t{ title: '性别', \t\t\t\tfield: 'sex_name', \t\t\t\twidth:50 },\r\n\t\t{ title: '年龄', \t\t\t\tfield: 'age', \t\t\t\t\twidth:80 },\r\n\t\t{ title: '项目名称', \t\t\tfield: 'kind_name',\t \t\t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.kind_name, rows.kind_code)\r\n\t\t} },\r\n\t\t{ title: '项目编码', \t\t\tfield: 'kind_code',\t\t\t\twidth:80 },\r\n\t\t{ title: '自然项目', \t\t\tfield: 'parent_kind_name', \t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.parent_kind_name, rows.parent_kind_code)\r\n\t\t} },\r\n\t\t{ title: '接收时间', \t\t\tfield: 'receive_time',\t\t\twidth:140, \t\tsort:true },\r\n\t\t{ title: '图标', \t\t\t\tfield: '图标',\t\t\t\t\twidth:120 }\r\n\t]\r\n\tonChanged = (v, name, rows, index) => { \r\n\t\tts.onChanges.call(this, v, name, rows, index)\r\n\t}\r\n\t// 参考范围\r\n\tchangeReferenceRange = (rows) => {\r\n\t\tthis.ProjectListRef.changeReferenceRange(rows)\r\n\t} \r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('dis-item-2000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n            this.setState({spec_typeOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:2000}}).then(data=>{\r\n                this.setState({spec_typeOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-2000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { infos, list } = this.state\r\n\t\treturn (\r\n\t\t\t<Page nobc={ true }>\r\n\t\t\t\t<Control {...this.props} list={list} infos={infos} getData={() => {return this.ProjectListRef.state.data} } getSelectedKeys={() => { return this.ProjectListRef.state.selectedKeys }}  onRef={ref => this.ControlRef = ref} changeFetch={(e) => {\r\n\t\t\t\t\tthis.ProjectListRef.changeFetch({param: e})\r\n\t\t\t\t\tthis.setState({status: e.status})\r\n\t\t\t\t}} /> \r\n\t\t\t\t<div className='fx ex mt5 height0'>\r\n\t\t\t\t\t<PersonDetail infos={infos} />\r\n\t\t\t\t\t<GraphicRendition44029 infos={infos} width={610} status={this.state.status} />\r\n\t\t\t\t\t<ProjectList onRef={ref => this.ProjectListRef = ref} cols={this.cols} getData={(v) => this.setState({tableData: v})} getInfo={(v) => this.setState({infos: v})} getSelectedKeys={(v) => this.setState({list: v})} />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44022.js",["1971"],"/* 薛玉梅 | 2020-12-28 15:33:58 | desc: 新建模型*/\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container')) \r\n// ===================================================================== private component\r\nconst Control = $async(()=>import('./tp/control'))\r\nconst PersonDetail = $async(()=>import('./tp/person-detail'))\r\nconst ProjectList = $async(()=>import('./tp/project-list'))\r\nconst GraphicRendition44022 = $async(()=>import('./tp/graphic-rendition-44022'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\ttableData:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tspec_typeOption: [], // 标本类型\r\n\t\tinfos: {}, // 单个数据的详情\r\n\t\tlist: [], // 多条数据\r\n\t\tstatus: '45001', // 搜索条件\r\n\t}   \r\n\tparam = this.props.match.params\r\n\t\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '病理号', \t\t\t\tfield: 'experiment_num', \t\twidth:110,  \tsort:true },\r\n\t\t{ title: '姓名', \t\t\t\tfield: 'patient_name', \t\t\twidth:100 }, \r\n\t\t{ title: '标本条码', \t\t\tfield: 'spec_code', \t\t\twidth:150, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderIcons(rows, rows.spec_code)\r\n\t\t} }, \r\n\t\t{ title: '性别', \t\t\t\tfield: 'sex_name', \t\t\t\twidth:50 },\r\n\t\t{ title: '年龄', \t\t\t\tfield: 'age', \t\t\t\t\twidth:80 },\r\n\t\t{ title: '项目名称', \t\t\tfield: 'kind_name',\t \t\t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.kind_name, rows.kind_code)\r\n\t\t} },\r\n\t\t{ title: '项目编码', \t\t\tfield: 'kind_code',\t\t\t\twidth:80 },\r\n\t\t{ title: '自然项目', \t\t\tfield: 'parent_kind_name', \t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.parent_kind_name, rows.parent_kind_code)\r\n\t\t} },\r\n\t\t{ title: '接收时间', \t\t\tfield: 'receive_time',\t\t\twidth:140, \t\tsort:true },\r\n\t\t{ title: '图标', \t\t\t\tfield: '图标',\t\t\t\t\twidth:120 }\r\n\t]\r\n\tonChanged = (v, name, rows, index) => { \r\n\t\tts.onChanges.call(this, v, name, rows, index)\r\n\t}\r\n\t// 参考范围\r\n\tchangeReferenceRange = (rows) => {\r\n\t\tthis.ProjectListRef.changeReferenceRange(rows)\r\n\t} \r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('dis-item-2000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n            this.setState({spec_typeOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:2000}}).then(data=>{\r\n                this.setState({spec_typeOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-2000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { infos, list } = this.state\r\n\t\treturn (\r\n\t\t\t<Page nobc={ true }>\r\n\t\t\t\t<Control {...this.props} list={list} infos={infos} getData={() => {return this.ProjectListRef.state.data} } getSelectedKeys={() => { return this.ProjectListRef.state.selectedKeys }}  onRef={ref => this.ControlRef = ref} changeFetch={(e) => {\r\n\t\t\t\t\tthis.ProjectListRef.changeFetch({param: e})\r\n\t\t\t\t\tthis.setState({status: e.status})\r\n\t\t\t\t}} /> \r\n\t\t\t\t<div className='fx ex mt5 height0'>\r\n\t\t\t\t\t<PersonDetail infos={infos} />\r\n\t\t\t\t\t<GraphicRendition44022 infos={infos} width={610} status={this.state.status} />\r\n\t\t\t\t\t<ProjectList onRef={ref => this.ProjectListRef = ref} cols={this.cols} getData={(v) => this.setState({tableData: v})} getInfo={(v) => this.setState({infos: v})} getSelectedKeys={(v) => this.setState({list: v})} />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44021.js",["1972"],"/* 薛玉梅 | 2020-12-28 15:33:58 | desc: 新建模型*/\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container')) \r\n// ===================================================================== private component\r\nconst Control = $async(()=>import('./tp/control'))\r\nconst PersonDetail = $async(()=>import('./tp/person-detail'))\r\nconst ProjectList = $async(()=>import('./tp/project-list'))\r\nconst GraphicRendition44021 = $async(()=>import('./tp/graphic-rendition-44021'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\ttableData:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tspec_typeOption: [], // 标本类型\r\n\t\tinfos: {}, // 单个数据的详情\r\n\t\tlist: [], // 多条数据\r\n\t\tstatus: '45001', // 搜索条件\r\n\t}   \r\n\tparam = this.props.match.params\r\n\t\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '病理号', \t\t\t\tfield: 'experiment_num', \t\twidth:110,  \tsort:true },\r\n\t\t{ title: '姓名', \t\t\t\tfield: 'patient_name', \t\t\twidth:100 }, \r\n\t\t{ title: '标本条码', \t\t\tfield: 'spec_code', \t\t\twidth:150, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderIcons(rows, rows.spec_code)\r\n\t\t} }, \r\n\t\t{ title: '性别', \t\t\t\tfield: 'sex_name', \t\t\t\twidth:50 },\r\n\t\t{ title: '年龄', \t\t\t\tfield: 'age', \t\t\t\t\twidth:80 },\r\n\t\t{ title: '项目名称', \t\t\tfield: 'kind_name',\t \t\t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.kind_name, rows.kind_code)\r\n\t\t} },\r\n\t\t{ title: '项目编码', \t\t\tfield: 'kind_code',\t\t\t\twidth:80 },\r\n\t\t{ title: '自然项目', \t\t\tfield: 'parent_kind_name', \t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.parent_kind_name, rows.parent_kind_code)\r\n\t\t} },\r\n\t\t{ title: '接收时间', \t\t\tfield: 'receive_time',\t\t\twidth:140, \t\tsort:true },\r\n\t\t{ title: '图标', \t\t\t\tfield: '图标',\t\t\t\t\twidth:120 }\r\n\t]\r\n\tonChanged = (v, name, rows, index) => { \r\n\t\tts.onChanges.call(this, v, name, rows, index)\r\n\t}\r\n\t// 参考范围\r\n\tchangeReferenceRange = (rows) => {\r\n\t\tthis.ProjectListRef.changeReferenceRange(rows)\r\n\t} \r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('dis-item-2000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n            this.setState({spec_typeOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:2000}}).then(data=>{\r\n                this.setState({spec_typeOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-2000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { infos, list } = this.state\r\n\t\treturn (\r\n\t\t\t<Page nobc={ true }>\r\n\t\t\t\t<Control {...this.props} list={list} infos={infos} getData={() => {return this.ProjectListRef.state.data} } getSelectedKeys={() => { return this.ProjectListRef.state.selectedKeys }}  onRef={ref => this.ControlRef = ref} changeFetch={(e) => {\r\n\t\t\t\t\tthis.ProjectListRef.changeFetch({param: e})\r\n\t\t\t\t\tthis.setState({status: e.status})\r\n\t\t\t\t}} /> \r\n\t\t\t\t<div className='fx ex mt5 height0'>\r\n\t\t\t\t\t<PersonDetail infos={infos} />\r\n\t\t\t\t\t<GraphicRendition44021 infos={infos} width={610} status={this.state.status} />\r\n\t\t\t\t\t<ProjectList onRef={ref => this.ProjectListRef = ref} cols={this.cols} getData={(v) => this.setState({tableData: v})} getInfo={(v) => this.setState({infos: v})} getSelectedKeys={(v) => this.setState({list: v})} />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44018.js",["1973"],"/* 薛玉梅 | 2020-12-28 15:33:58 | desc: 新建模型*/\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container')) \r\n// ===================================================================== antd \r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Select = $async(()=>import('@antd/form/select')) \r\n// ===================================================================== private component\r\nconst Control = $async(()=>import('./tp/control'))\r\nconst PersonDetail = $async(()=>import('./tp/person-detail'))\r\nconst ProjectList = $async(()=>import('./tp/project-list'))\r\nconst GraphicRendition44018 = $async(()=>import('./tp/graphic-rendition-44018'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\ttableData:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tspec_typeOption: [], // 标本类型\r\n\t\tinfos: {}, // 单个数据的详情\r\n\t\tlist: [], // 多条数据\r\n\t}\r\n\tmodel = {}\r\n\t\r\n\tparam = this.props.match.params\r\n\t\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '标本条码', \t\t\tfield: 'spec_code', \t\t\twidth:150, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderIcons(rows, rows.spec_code)\r\n\t\t} }, \r\n\t\t{ title: '自然项目', \t\t\tfield: 'parent_kind_name', \t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.parent_kind_name, rows.parent_kind_code)\r\n\t\t} },\r\n\t\t{ title: '实验号', \t\t\t\tfield: 'experiment_num', \t\twidth:110 },\r\n\t\t{ title: '项目名称', \t\t\tfield: 'kind_name',\t \t\t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.kind_name, rows.kind_code)\r\n\t\t} },\r\n\t\t{ title: '姓名', \t\t\t\tfield: 'patient_name', \t\t\twidth:100 },\r\n\t\t{ title: '报告结果', \t\t\tfield: 'result1', \t\t\t\twidth:120, render: ({ rows, index }) => {\r\n\t\t\treturn rows.kd_check_result_cats && rows.kd_check_result_cats.result1 === '1' ?\r\n\t\t\t<Input name='result1' width='100%' value={rows.result1} onChange={(v, data, name) => ts.onChanges.call(this, v, name, rows, index) } /> : ''\r\n\t\t} },\r\n\t\t{ title: '建议与解释', \t\t\tfield: 'result_suggestion_id', \twidth:100, render: ({ rows, index }) => {\r\n\t\t\treturn <Select name='result_suggestion_id' data={rows.result_suggestion} nameStr='name' idStr='uuid' value={rows.result_suggestion_id}  onChanged={(v, data, name) => ts.onChanges.call(this, v, name, rows, index)} width='100%' />\r\n\t\t} },\r\n\t\t{ title: '迟发状态', \t\t\tfield: 'is_delay',\t\t\t\twidth:70, render: ({ rows }) => {\r\n\t\t\tconst options = [{ name: \"是\", value: \"1\" }, { name: \"否\", value: \"0\" }]\r\n\t\t\treturn $fn.filterSelect(options, rows.is_delay)\r\n\t\t} },\r\n\t\t{ title: '迟发预计报告时间', \tfield: 'delay_at',\t\t\t\twidth:140 },\r\n\t\t{ title: '异常状态', \t\t\tfield: 'status_abnormal_name',\twidth:80 },\r\n\t\t{ title: '项目检测编号', \t\tfield: 'ts_sn',\t\t\t\t\twidth:160 },\r\n\t\t{ title: '项目编码', \t\t\tfield: 'kind_code',\t\t\t\twidth:80 },\r\n\t\t{ title: '检验日期', \t\t\tfield: 'check_time',\t\t\twidth:140 },\r\n\t\t{ title: '医院名称', \t\t\tfield: 'hosp_name',\t\t\t\twidth:180 }, \r\n\t\t{ title: '科室', \t\t\t\tfield: 'department_name',\t\twidth:100 }, \r\n\t\t{ title: '住院号', \t\t\t\tfield: 'outpatient',\t\t\twidth:100 }, \r\n\t\t{ title: '类型', \t\t\t\tfield: 'case_type',\t\t\t\twidth:100 }, \r\n\t\t{ title: '打印', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '提交', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '预审核', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '架子号', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '年龄', \t\t\t\tfield: 'age',\t\t\t\t\twidth:80 }, \r\n\t\t{ title: '床号', \t\t\t\tfield: 'bed_no',\t\t\t\twidth:80 }, \r\n\t\t{ title: '测试时间', \t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t]\r\n\tonChanged = (v, name, rows, index) => { \r\n\t\tts.onChanges.call(this, v, name, rows, index)\r\n\t}\r\n\t// 参考范围\r\n\tchangeReferenceRange = (rows) => {\r\n\t\tthis.ProjectListRef.changeReferenceRange(rows)\r\n\t} \r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('dis-item-2000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n            this.setState({spec_typeOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:2000}}).then(data=>{\r\n                this.setState({spec_typeOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-2000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { infos, list } = this.state\r\n\t\treturn (\r\n\t\t\t<Page nobc={ true }>\r\n\t\t\t\t<Control {...this.props} list={list} infos={infos} getData={() => {return this.ProjectListRef.state.data} } getSelectedKeys={() => { return this.ProjectListRef.state.selectedKeys }}  onRef={ref => this.ControlRef = ref} changeFetch={(e) => {this.ProjectListRef.changeFetch({param: e})}} /> \r\n\t\t\t\t<div className='fx ex mt5 height0'>\r\n\t\t\t\t\t<ProjectList onRef={ref => this.ProjectListRef = ref} cols={this.cols} getData={(v) => this.setState({tableData: v})} getInfo={(v) => this.setState({infos: v})} getSelectedKeys={(v) => this.setState({list: v})} />\r\n\t\t\t\t\t<PersonDetail infos={infos} />\r\n\t\t\t\t\t<GraphicRendition44018 infos={infos} />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44016.js",["1974"],"/* 薛玉梅 | 2020-12-28 15:33:58 | desc: 新建模型*/\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container')) \r\n// ===================================================================== antd \r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Select = $async(()=>import('@antd/form/select')) \r\n// ===================================================================== private component\r\nconst Control = $async(()=>import('./tp/control'))\r\nconst PersonDetail = $async(()=>import('./tp/person-detail'))\r\nconst ProjectList = $async(()=>import('./tp/project-list'))\r\nconst GraphicRendition44016 = $async(()=>import('./tp/graphic-rendition-44016'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\ttableData:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tspec_typeOption: [], // 标本类型\r\n\t\tinfos: {}, // 单个数据的详情\r\n\t\tlist: [], // 多条数据\r\n\t}\r\n\tmodel = {}\r\n\t\r\n\tparam = this.props.match.params\r\n\t\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '标本条码', \t\t\tfield: 'spec_code', \t\t\twidth:150, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderIcons(rows, rows.spec_code)\r\n\t\t} }, \r\n\t\t{ title: '自然项目', \t\t\tfield: 'parent_kind_name', \t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.parent_kind_name, rows.parent_kind_code)\r\n\t\t} },\r\n\t\t{ title: '实验号', \t\t\t\tfield: 'experiment_num', \t\twidth:110 },\r\n\t\t{ title: '项目名称', \t\t\tfield: 'kind_name',\t \t\t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.kind_name, rows.kind_code)\r\n\t\t} },\r\n\t\t{ title: '姓名', \t\t\t\tfield: 'patient_name', \t\t\twidth:100 },\r\n\t\t{ title: '报告结果', \t\t\tfield: 'result1', \t\t\t\twidth:120, render: ({ rows, index }) => {\r\n\t\t\treturn rows.kd_check_result_cats && rows.kd_check_result_cats.result1 === '1' ?\r\n\t\t\t<Input name='result1' width='100%' value={rows.result1} onChange={(v, data, name) => ts.onChanges.call(this, v, name, rows, index) } /> : ''\r\n\t\t} },\r\n\t\t{ title: '建议与解释', \t\t\tfield: 'result_suggestion_id', \twidth:100, render: ({ rows, index }) => {\r\n\t\t\treturn <Select name='result_suggestion_id' data={rows.result_suggestion} nameStr='name' idStr='uuid' value={rows.result_suggestion_id}  onChanged={(v, data, name) => ts.onChanges.call(this, v, name, rows, index)} width='100%' />\r\n\t\t} },\r\n\t\t{ title: '迟发状态', \t\t\tfield: 'is_delay',\t\t\t\twidth:70, render: ({ rows }) => {\r\n\t\t\tconst options = [{ name: \"是\", value: \"1\" }, { name: \"否\", value: \"0\" }]\r\n\t\t\treturn $fn.filterSelect(options, rows.is_delay)\r\n\t\t} },\r\n\t\t{ title: '迟发预计报告时间', \tfield: 'delay_at',\t\t\t\twidth:140 },\r\n\t\t{ title: '异常状态', \t\t\tfield: 'status_abnormal_name',\twidth:80 },\r\n\t\t{ title: '项目检测编号', \t\tfield: 'ts_sn',\t\t\t\t\twidth:160 },\r\n\t\t{ title: '项目编码', \t\t\tfield: 'kind_code',\t\t\t\twidth:80 },\r\n\t\t{ title: '检验日期', \t\t\tfield: 'check_time',\t\t\twidth:140 },\r\n\t\t{ title: '医院名称', \t\t\tfield: 'hosp_name',\t\t\t\twidth:180 }, \r\n\t\t{ title: '科室', \t\t\t\tfield: 'department_name',\t\twidth:100 }, \r\n\t\t{ title: '住院号', \t\t\t\tfield: 'outpatient',\t\t\twidth:100 }, \r\n\t\t{ title: '类型', \t\t\t\tfield: 'case_type',\t\t\t\twidth:100 }, \r\n\t\t{ title: '打印', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '提交', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '预审核', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '架子号', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '年龄', \t\t\t\tfield: 'age',\t\t\t\t\twidth:80 }, \r\n\t\t{ title: '床号', \t\t\t\tfield: 'bed_no',\t\t\t\twidth:80 }, \r\n\t\t{ title: '测试时间', \t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t]\r\n\tonChanged = (v, name, rows, index) => { \r\n\t\tts.onChanges.call(this, v, name, rows, index)\r\n\t}\r\n\t// 参考范围\r\n\tchangeReferenceRange = (rows) => {\r\n\t\tthis.ProjectListRef.changeReferenceRange(rows)\r\n\t} \r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('dis-item-2000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n            this.setState({spec_typeOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:2000}}).then(data=>{\r\n                this.setState({spec_typeOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-2000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { infos, list } = this.state\r\n\t\treturn (\r\n\t\t\t<Page nobc={ true }>\r\n\t\t\t\t<Control {...this.props} list={list} infos={infos} getData={() => {return this.ProjectListRef.state.data} } getSelectedKeys={() => { return this.ProjectListRef.state.selectedKeys }}  onRef={ref => this.ControlRef = ref} changeFetch={(e) => {this.ProjectListRef.changeFetch({param: e})}} /> \r\n\t\t\t\t<div className='fx ex mt5 height0'>\r\n\t\t\t\t\t<ProjectList onRef={ref => this.ProjectListRef = ref} cols={this.cols} getData={(v) => this.setState({tableData: v})} getInfo={(v) => this.setState({infos: v})} getSelectedKeys={(v) => this.setState({list: v})} />\r\n\t\t\t\t\t<PersonDetail infos={infos} />\r\n\t\t\t\t\t<GraphicRendition44016 infos={infos} />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44015.js",["1975"],"/* 薛玉梅 | 2020-12-28 15:33:58 | desc: 新建模型*/\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container')) \r\n// ===================================================================== antd \r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Select = $async(()=>import('@antd/form/select')) \r\n// ===================================================================== private component\r\nconst Control = $async(()=>import('./tp/control'))\r\nconst PersonDetail = $async(()=>import('./tp/person-detail'))\r\nconst ProjectList = $async(()=>import('./tp/project-list'))\r\nconst GraphicRendition44015 = $async(()=>import('./tp/graphic-rendition-44015'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\ttableData:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tspec_typeOption: [], // 标本类型\r\n\t\tinfos: {}, // 单个数据的详情\r\n\t\tlist: [], // 多条数据\r\n\t}\r\n\tmodel = {}\r\n\t\r\n\tparam = this.props.match.params\r\n\t\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '标本条码', \t\t\tfield: 'spec_code', \t\t\twidth:150, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderIcons(rows, rows.spec_code)\r\n\t\t} }, \r\n\t\t{ title: '自然项目', \t\t\tfield: 'parent_kind_name', \t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.parent_kind_name, rows.parent_kind_code)\r\n\t\t} },\r\n\t\t{ title: '实验号', \t\t\t\tfield: 'experiment_num', \t\twidth:110 },\r\n\t\t{ title: '项目名称', \t\t\tfield: 'kind_name',\t \t\t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.kind_name, rows.kind_code)\r\n\t\t} },\r\n\t\t{ title: '姓名', \t\t\t\tfield: 'patient_name', \t\t\twidth:100 },\r\n\t\t{ title: '报告结果', \t\t\tfield: 'result1', \t\t\t\twidth:120, render: ({ rows, index }) => {\r\n\t\t\treturn rows.kd_check_result_cats && rows.kd_check_result_cats.result1 === '1' ?\r\n\t\t\t<Input name='result1' width='100%' value={rows.result1} onChange={(v, data, name) => ts.onChanges.call(this, v, name, rows, index) } /> : ''\r\n\t\t} },\r\n\t\t{ title: '建议与解释', \t\t\tfield: 'result_suggestion_id', \twidth:100, render: ({ rows, index }) => {\r\n\t\t\treturn <Select name='result_suggestion_id' data={rows.result_suggestion} nameStr='name' idStr='uuid' value={rows.result_suggestion_id}  onChanged={(v, data, name) => ts.onChanges.call(this, v, name, rows, index)} width='100%' />\r\n\t\t} },\r\n\t\t{ title: '迟发状态', \t\t\tfield: 'is_delay',\t\t\t\twidth:70, render: ({ rows }) => {\r\n\t\t\tconst options = [{ name: \"是\", value: \"1\" }, { name: \"否\", value: \"0\" }]\r\n\t\t\treturn $fn.filterSelect(options, rows.is_delay)\r\n\t\t} },\r\n\t\t{ title: '迟发预计报告时间', \tfield: 'delay_at',\t\t\t\twidth:140 },\r\n\t\t{ title: '异常状态', \t\t\tfield: 'status_abnormal_name',\twidth:80 },\r\n\t\t{ title: '项目检测编号', \t\tfield: 'ts_sn',\t\t\t\t\twidth:160 },\r\n\t\t{ title: '项目编码', \t\t\tfield: 'kind_code',\t\t\t\twidth:80 },\r\n\t\t{ title: '检验日期', \t\t\tfield: 'check_time',\t\t\twidth:140 },\r\n\t\t{ title: '医院名称', \t\t\tfield: 'hosp_name',\t\t\t\twidth:180 }, \r\n\t\t{ title: '科室', \t\t\t\tfield: 'department_name',\t\twidth:100 }, \r\n\t\t{ title: '住院号', \t\t\t\tfield: 'outpatient',\t\t\twidth:100 }, \r\n\t\t{ title: '类型', \t\t\t\tfield: 'case_type',\t\t\t\twidth:100 }, \r\n\t\t{ title: '打印', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '提交', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '预审核', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '架子号', \t\t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '年龄', \t\t\t\tfield: 'age',\t\t\t\t\twidth:80 }, \r\n\t\t{ title: '床号', \t\t\t\tfield: 'bed_no',\t\t\t\twidth:80 }, \r\n\t\t{ title: '测试时间', \t\t\tfield: '',\t\t\t\twidth:80 }, \r\n\t\t{ title: '备注', \t\t\t\tfield: 'remark',\t\t\t\twidth:140 }, \r\n\t\t{ title: '接收时间', \t\t\tfield: 'receive_time',\t\t\twidth:140 }, \r\n\t\t{ title: '图标', \t\t\t\tfield: 'icon',\t\t\t \t\twidth:120 }, \r\n\t]\r\n\tonChanged = (v, name, rows, index) => { \r\n\t\tts.onChanges.call(this, v, name, rows, index)\r\n\t}\r\n\t// 参考范围\r\n\tchangeReferenceRange = (rows) => {\r\n\t\tthis.ProjectListRef.changeReferenceRange(rows)\r\n\t} \r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('dis-item-2000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n            this.setState({spec_typeOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:2000}}).then(data=>{\r\n                this.setState({spec_typeOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-2000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { infos, list } = this.state\r\n\t\treturn (\r\n\t\t\t<Page nobc={ true }>\r\n\t\t\t\t<Control {...this.props} list={list} infos={infos} getData={() => {return this.ProjectListRef.state.data} } getSelectedKeys={() => { return this.ProjectListRef.state.selectedKeys }}  onRef={ref => this.ControlRef = ref} changeFetch={(e) => {this.ProjectListRef.changeFetch({param: e})}} /> \r\n\t\t\t\t<div className='fx ex mt5 height0'>\r\n\t\t\t\t\t<ProjectList onRef={ref => this.ProjectListRef = ref} cols={this.cols} getData={(v) => this.setState({tableData: v})} getInfo={(v) => this.setState({infos: v})} getSelectedKeys={(v) => this.setState({list: v})} />\r\n\t\t\t\t\t<PersonDetail infos={infos} />\r\n\t\t\t\t\t<GraphicRendition44015 infos={infos} />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44014.js",["1976"],"/* 薛玉梅 | 2020-12-28 15:33:58 | desc: 新建模型*/\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container')) \r\n// ===================================================================== antd \r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Select = $async(()=>import('@antd/form/select')) \r\n// ===================================================================== private component\r\nconst Control = $async(()=>import('./tp/control'))\r\nconst PersonDetail = $async(()=>import('./tp/person-detail'))\r\nconst ProjectList = $async(()=>import('./tp/project-list'))\r\nconst GraphicRendition44014 = $async(()=>import('./tp/graphic-rendition-44014'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\ttableData:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tspec_typeOption: [], // 标本类型\r\n\t\tinfos: {}, // 单个数据的详情\r\n\t\tlist: [], // 多条数据\r\n\t}\r\n\tmodel = {}\r\n\t\r\n\tparam = this.props.match.params\r\n\t\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '标本条码', \t\t\tfield: 'spec_code', \t\t\twidth:150, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderIcons(rows, rows.spec_code)\r\n\t\t} },\r\n\t\t{ title: '自然项目', \t\t\tfield: 'parent_kind_name', \t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.parent_kind_name, rows.parent_kind_code)\r\n\t\t} },\r\n\t\t{ title: '实验号', \t\t\t\tfield: 'experiment_num', \t\twidth:110 },\r\n\t\t{ title: '项目名称', \t\t\tfield: 'kind_name',\t \t\t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.kind_name, rows.kind_code)\r\n\t\t} },\r\n\t\t{ title: '姓名', \t\t\t\tfield: 'patient_name', \t\t\twidth:100 },\r\n\t\t{ title: '标本类型', \t\t\tfield: 'spec_type', \t\t\twidth:120, render: ({ rows, index }) => { \r\n            return <Select name='spec_type' data={this.state.spec_typeOption} nameStr='name' idStr='value' noClear value={rows.spec_type}  onChanged={(v, data, name) => ts.onChanges.call(this, v, name, rows, index)} width='100%' />\r\n\t\t} }, \r\n\t\t{ title: '结果', \t\t\t\tfield: 'result', \t\t\t\twidth:150, \t\tsort:true, render: ({ rows, index }) => { \r\n\t\t\treturn ts.renderResult.call(this, 'result', rows, index)\r\n\t\t} }, \r\n\t\t{ title: '报告结果', \t\t\tfield: 'result1', \t\t\t\twidth:120, render: ({ rows, index }) => {\r\n\t\t\treturn rows.kd_check_result_cats && rows.kd_check_result_cats.result1 === '1' ?\r\n\t\t\t<Input name='result1' width='100%' value={rows.result1} onChange={(v, data, name) => ts.onChanges.call(this, v, name, rows, index) } /> : ''\r\n\t\t} },\r\n\t\t{ title: '单位', \t\t\t\tfield: 'unit_val_name', \t\twidth:80 },\r\n\t\t{ title: '提示', \t\t\t\tfield: 'tips', \t\t\t\t\twidth:70, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderTips(rows.tips)\r\n\t\t} },\r\n\t\t{ title: '建议与解释', \t\t\tfield: 'result_suggestion_id', \twidth:100, render: ({ rows, index }) => {\r\n\t\t\treturn <Select name='result_suggestion_id' data={rows.result_suggestion} nameStr='name' idStr='uuid' value={rows.result_suggestion_id}  onChanged={(v, data, name) => ts.onChanges.call(this, v, name, rows, index)} width='100%' />\r\n\t\t} },\r\n\t\t{ title: '稀释倍数', \t\t\tfield: 'dilution_multiple',\t\twidth:120, render: ({ rows, index }) => {\r\n\t\t\treturn <Input name='dilution_multiple' width='100%' value={rows.dilution_multiple} onChange={(v, data, name) => ts.onChanges.call(this, v, name, rows, index) } />  \r\n\t\t} },\r\n\t\t{ title: '迟发状态', \t\t\tfield: 'is_delay',\t\t\t\twidth:70, render: ({ rows }) => {\r\n\t\t\tconst options = [{ name: \"是\", value: \"1\" }, { name: \"否\", value: \"0\" }]\r\n\t\t\treturn $fn.filterSelect(options, rows.is_delay)\r\n\t\t} },\r\n\t\t{ title: '迟发预计报告时间', \tfield: 'delay_at',\t\t\t\twidth:140 },\r\n\t\t{ title: '迟发原因', \t\t\tfield: 'delay_reason',\t\t\twidth:120 },\r\n\t\t{ title: '异常状态', \t\t\tfield: 'status_abnormal_name',\twidth:80 },\r\n\t\t{ title: '项目检测编号', \t\tfield: 'ts_sn',\t\t\t\t\twidth:160 },\r\n\t\t{ title: '项目编码', \t\t\tfield: 'kind_code',\t\t\t\twidth:80 },\r\n\t\t{ title: '医院名称', \t\t\tfield: 'hosp_name',\t\t\t\twidth:180 },\r\n\t\t{ title: '接收时间', \t\t\tfield: 'receive_time',\t\t\twidth:140, \t\tsort:true },\r\n\t\t{ title: '图标', \t\t\t\tfield: '图标',\t\t\t\t\twidth:120 }\r\n\t]\r\n\tonChanged = (v, name, rows, index) => { \r\n\t\tts.onChanges.call(this, v, name, rows, index)\r\n\t}\r\n\t// 参考范围\r\n\tchangeReferenceRange = (rows) => {\r\n\t\tthis.ProjectListRef.changeReferenceRange(rows)\r\n\t} \r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('dis-item-2000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n            this.setState({spec_typeOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:2000}}).then(data=>{\r\n                this.setState({spec_typeOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-2000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { infos, list } = this.state\r\n\t\treturn (\r\n\t\t\t<Page nobc={ true }>\r\n\t\t\t\t<Control {...this.props} list={list} infos={infos} getData={() => {return this.ProjectListRef.state.data} } getSelectedKeys={() => { return this.ProjectListRef.state.selectedKeys }}  onRef={ref => this.ControlRef = ref} changeFetch={(e) => {this.ProjectListRef.changeFetch({param: e})}} /> \r\n\t\t\t\t<div className='fx ex mt5 height0'>\r\n\t\t\t\t\t<ProjectList onRef={ref => this.ProjectListRef = ref} cols={this.cols} getData={(v) => this.setState({tableData: v})} getInfo={(v) => this.setState({infos: v})} getSelectedKeys={(v) => this.setState({list: v})} />\r\n\t\t\t\t\t<PersonDetail infos={infos} />\r\n\t\t\t\t\t<GraphicRendition44014 infos={infos} />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\testing-center\\result44013.js",["1977"],"/* 薛玉梅 | 2020-12-28 15:33:58 | desc: 新建模型*/\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport ts from '@views/laboratory/testing-center/tp/common.js' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))  \r\n// ===================================================================== private component\r\nconst Control = $async(()=>import('./tp/control'))\r\nconst PersonDetail = $async(()=>import('./tp/person-detail'))\r\nconst ProjectList = $async(()=>import('./tp/project-list'))\r\nconst GraphicRendition44013 = $async(()=>import('./tp/graphic-rendition-44013'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\ttableData:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tspec_typeOption: [], // 标本类型\r\n\t\tinfos: {}, // 单个数据的详情\r\n\t\tlist: [], // 多条数据\r\n\t\tstatus: '45001', // 搜索条件\r\n\t}   \r\n\tparam = this.props.match.params\r\n\t\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '病理号', \t\t\t\tfield: 'experiment_num', \t\twidth:110,  \tsort:true },\r\n\t\t{ title: '姓名', \t\t\t\tfield: 'patient_name', \t\t\twidth:100 }, \r\n\t\t{ title: '标本条码', \t\t\tfield: 'spec_code', \t\t\twidth:150, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderIcons(rows, rows.spec_code)\r\n\t\t} }, \r\n\t\t{ title: '性别', \t\t\t\tfield: 'sex_name', \t\t\t\twidth:50 },\r\n\t\t{ title: '年龄', \t\t\t\tfield: 'age', \t\t\t\t\twidth:80 },\r\n\t\t{ title: '项目名称', \t\t\tfield: 'kind_name',\t \t\t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.kind_name, rows.kind_code)\r\n\t\t} },\r\n\t\t{ title: '项目编码', \t\t\tfield: 'kind_code',\t\t\t\twidth:80 },\r\n\t\t{ title: '自然项目', \t\t\tfield: 'parent_kind_name', \t\twidth:220, \t\tsort:true, render: ({ rows }) => {\r\n\t\t\treturn ts.renderSettings.call(this, rows.parent_kind_name, rows.parent_kind_code)\r\n\t\t} },\r\n\t\t{ title: '接收时间', \t\t\tfield: 'receive_time',\t\t\twidth:140, \t\tsort:true },\r\n\t\t{ title: '图标', \t\t\t\tfield: '图标',\t\t\t\t\twidth:120 }\r\n\t]\r\n\tonChanged = (v, name, rows, index) => { \r\n\t\tts.onChanges.call(this, v, name, rows, index)\r\n\t}\r\n\t// 参考范围\r\n\tchangeReferenceRange = (rows) => {\r\n\t\tthis.ProjectListRef.changeReferenceRange(rows)\r\n\t} \r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('dis-item-2000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){ \r\n            this.setState({spec_typeOption: local})\r\n\t\t\t}else{\r\n\t\t\t  $http.submit(null,'dis-item/item', { param:{dis_code:2000}}).then(data=>{\r\n                this.setState({spec_typeOption: data})\r\n\t\t\t\t$fn.dataSave('dis-item-2000-data', data)\r\n\t\t\t  }) \r\n\t\t\t}\r\n\t\t}) \r\n\t}\r\n\trender(){\r\n\t\tconst { infos, list } = this.state\r\n\t\treturn (\r\n\t\t\t<Page nobc={ true }>\r\n\t\t\t\t<Control {...this.props} list={list} infos={infos} getData={() => {return this.ProjectListRef.state.data} } getSelectedKeys={() => { return this.ProjectListRef.state.selectedKeys }}  onRef={ref => this.ControlRef = ref} changeFetch={(e) => {\r\n\t\t\t\t\tthis.ProjectListRef.changeFetch({param: e})\r\n\t\t\t\t\tthis.setState({status: e.status})\r\n\t\t\t\t}} /> \r\n\t\t\t\t<div className='fx ex mt5 height0'>\r\n\t\t\t\t\t<PersonDetail infos={infos} />\r\n\t\t\t\t\t<GraphicRendition44013 infos={infos} width={610} status={this.state.status} />\r\n\t\t\t\t\t<ProjectList onRef={ref => this.ProjectListRef = ref} cols={this.cols} getData={(v) => this.setState({tableData: v})} getInfo={(v) => this.setState({infos: v})} getSelectedKeys={(v) => this.setState({list: v})} />\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\router.js",["1978"],"/* ====================================== 模块子路由配置  ====================================== */\r\nimport React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n// ===================================================================== 异步加载\r\nimport Import from '@com/bundle'\r\n// ===================================================================== 路由配置\r\nimport Workbench from '@views/workbench/main'\r\nimport LaboratoryManage from '@views/laboratory/laboratory-manage'\r\nimport TestingCenter from '@views/laboratory/testing-center'\r\n// ===================================================================== 同步路由\r\nexport default () => (\r\n\t<Switch>\r\n\t\t<Route \tpath='/laboratory/workbench' \t\t\tcomponent={ Workbench }  />\r\n\t\t<Route \tpath='/laboratory/laboratory-manage' \tcomponent={ LaboratoryManage }  />\r\n\t\t<Route \tpath='/laboratory/testing-center' \t\tcomponent={ TestingCenter }  />\r\n\t\t{/* 重定向 */}\r\n\t\t<Route path='/laboratory' children={<Redirect to='/laboratory/workbench/index' />}  />\r\n\t\t{/* 404 */}\r\n\t\t<Route component={ Import('404') } />\r\n\t</Switch>\r\n)","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\main.js",["1979"],"import React from 'react'\r\n// ===================================================================== private template\r\nimport Router from './router'\r\nconst Frame = window.$async(()=>import('#frame/frame'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{ title: '工作台', path:'workbench'},\r\n\t{ title: '检测中心', path:'testing-center'},\r\n\t{ title: '实验室管理', path:'laboratory-manage'},\r\n]\r\n\r\n// ===================================================================== component\r\nexport default () => <Frame title='实验室系统' data={data} Router={Router} />","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\test-data.js",["1980"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n        { label:'统计时间',\t\tname:'date',\t\t\t\ttype:'date-range',\tnames:['start_at','end_at'],\tvalue:[] },\r\n\t\t{ label:'科室',\t\t\tname:'project_parent_id',\ttype:'select',\t\tdata:[]},\r\n        { label:'岗位',\t\t\tname:'project_id',\t\t\ttype:'select',\t\tdata:[],    idStr: 'uuid'},\r\n\t\t{ label:'检测项目',\t\tname:'kind_id',             type:'select',\t\tdata:[]},\r\n        \r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 科室\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 岗位\r\n            $fn.getCache({\r\n                cache: d.laboratoryselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/laboratoryselect').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            // 检测项目\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.kindinfoSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[3].data = data\r\n                    } else {\r\n                        $http.submit(null, 'kind-info/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[3].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'statistics/labSingleTestResultCount', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '科室',            field: 'project_parent_name' },\r\n\t\t{ title: '岗位',            field: 'project_name' },\r\n\t\t{ title: '检测项目名称',    field: 'single_kind_name' },\r\n\t\t{ title: '检测数量',        field:  'count_total', },\r\n\t\t{ title: '收费标准',        field: 'sprice_total' },\r\n\t\t{ title: '实际收费',        field: 'price_total' },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='测试数统计'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\tat.js",["1981"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n        { label:'统计时间',\t\tname:'date',\t\t\t\ttype:'date-range',\tnames:['start_at','end_at'],\tvalue:[] },\r\n\t\t{ label:'科室',\t\t\tname:'project_parent_id',\ttype:'select',\t\tdata:[]},\r\n        { label:'岗位',\t\t\tname:'project_id',\t\t\ttype:'select',\t\tdata:[],    idStr: 'uuid'},\r\n\t\t{ label:'检测项目',\t\tname:'kind_id',             type:'select',\t\tdata:[]},\r\n        \r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 科室\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 岗位\r\n            $fn.getCache({\r\n                cache: d.laboratoryselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/laboratoryselect').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            // 检测项目\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.kindinfoSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[3].data = data\r\n                    } else {\r\n                        $http.submit(null, 'kind-info/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[3].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'statistics/labTATCount', param)\r\n\t// table\r\n\tcols = [\r\n        { title: '检测项目名称',    field: 'single_kind_name' },\r\n\t\t{ title: '科室',            field: 'project_parent_name' },\r\n\t\t{ title: '岗位',            field: 'project_name' },\r\n\t\t{ title: 'TAT中位数',       field: 'median_minute', },\r\n\t\t{ title: '检测数量',        field: 'count_total' },\r\n\t\t{ title: '最短报告时间',    field: 'min_minute' },\r\n\t\t{ title: '最长报告时间',    field: 'max_minute' },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='TAT统计'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\sampling-time-in.js",["1982"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n        { label:'统计时间',\t\tname:'date',\t\t\t\ttype:'date-range',\tnames:['start_at','end_at'],\tvalue:[] },\r\n\t\t{ label:'科室',\t\t\tname:'project_parent_id',\ttype:'select',\t\tdata:[]},\r\n\t\t{ label:'岗位',\t\t\tname:'project_id',\t\t\ttype:'select',\t\tdata:[],    idStr: 'uuid'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 科室\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 岗位\r\n            $fn.getCache({\r\n                cache: d.laboratoryselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/laboratoryselect').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'statistics/labSpecimenCollTimeCount', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '科室',            field: 'project_parent_name' },\r\n\t\t{ title: '岗位',            field: 'project_name' },\r\n\t\t{ title: '接收标本数',      field: 'receive_total' },\r\n\t\t{ title: '采样时间录入数',  field:  'coll_total', },\r\n\t\t{ title: '采样时间录入率',\tfield: 'input_proportion' },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='采样时间录入'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\sample.js",["1983"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n        { label:'统计时间',\t\tname:'date',\t\t\t\ttype:'date-range',\tnames:['start_at','end_at'],\tvalue:[] },\r\n\t\t{ label:'科室',\t\t\tname:'project_parent_id',\ttype:'select',\t\tdata:[]},\r\n        { label:'岗位',\t\t\tname:'project_id',\t\t\ttype:'select',\t\tdata:[],    idStr: 'uuid'},\r\n\t\t{ label:'医院',\t\t    name:'hosp_id',             type:'select',\t\tdata:[]},\r\n        \r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 科室\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 岗位\r\n            $fn.getCache({\r\n                cache: d.laboratoryselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/laboratoryselect').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            // 医院\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[3].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[3].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'statistics/labSpecimenCount', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '医院',        field: 'hosp_name' },\r\n\t\t{ title: '开始时间',    field: 'start_at',  align: 'tc' },\r\n\t\t{ title: '结束时间',    field: 'end_at',  align: 'tc' },\r\n\t\t{ title: '科室',        field: 'project_parent_name' },\r\n\t\t{ title: '岗位',        field: 'project_name' },\r\n\t\t{ title: '标本量',      field: 'count_total' },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='实验室标本量'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\delay.js",["1984"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n        { label:'统计时间',\t\tname:'date',\t\t\t\ttype:'date-range',\tnames:['start_at','end_at'],\tvalue:[] },\r\n\t\t{ label:'科室',\t\t\tname:'project_parent_id',\ttype:'select',\t\tdata:[]},\r\n\t\t{ label:'岗位',\t\t\tname:'project_id',\t\t\ttype:'select',\t\tdata:[],    idStr: 'uuid'},\r\n\t\t{ label:'迟发原因',\t\tname:'delay_reason'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 科室\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 岗位\r\n            $fn.getCache({\r\n                cache: d.laboratoryselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/laboratoryselect').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'statistics/labReportDelayCount', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '科室',            field: 'project_parent_name' },\r\n\t\t{ title: '岗位',            field: 'project_name' },\r\n\t\t{ title: '迟发项目',        field: 'single_kind_name' },\r\n\t\t{ title: '迟发原因',        field: 'delay_reason', },\r\n\t\t{ title: '数量',\t        field: 'report_delay_count' },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='实验室迟发统计'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\critical-value.js",["1985"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n        { label:'统计时间',\t\tname:'date',\t\t\t\ttype:'date-range',\tnames:['start_at','end_at'],\tvalue:[] },\r\n\t\t{ label:'科室',\t\t\tname:'project_parent_id',\ttype:'select',\t\tdata:[]},\r\n        { label:'岗位',\t\t\tname:'project_id',\t\t\ttype:'select',\t\tdata:[],    idStr: 'uuid'},\r\n\t\t{ label:'医院',\t\t    name:'hosp_id',             type:'select',\t\tdata:[]},\r\n        \r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 科室\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 岗位\r\n            $fn.getCache({\r\n                cache: d.laboratoryselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/laboratoryselect').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            // 医院\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[3].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[3].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'statistics/labCrisisCount', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '医院',                            field: 'hosp_name' },\r\n\t\t{ title: '科室',                            field: 'project_parent_name' },\r\n\t\t{ title: '岗位',                            field: 'project_name' },\r\n\t\t{ title: '检测项目名称',                    field: 'kind_name' },\r\n\t\t{ title: '检测结果',                        field: 'result' },\r\n\t\t{ title: '危急值结果批准时间',              field: 'ts_approve_at',     align: 'tc' },\r\n\t\t{ title: '危急值结果电话报告时间',          field: '',                  align: 'tc' },\r\n\t\t{ title: '危急值电话报告与结果批准时间差',  field: '',                  align: 'tc' },\r\n\t\t{ title: '接收项目与结果批准时间差',        field: 'receive2report_at', align: 'tc' },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='实验室危急值统计'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\statistics\\chargeback.js",["1986"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n        { label:'统计时间',\t\tname:'date',\t\t\t\ttype:'date-range',\tnames:['start_at','end_at'],\tvalue:[] },\r\n\t\t{ label:'科室',\t\t\tname:'project_parent_id',\ttype:'select',\t\tdata:[]},\r\n\t\t{ label:'岗位',\t\t\tname:'project_id',\t\t\ttype:'select',\t\tdata:[],    idStr: 'uuid'},\r\n\t\t{ label:'退单原因',\t\tname:'status_abnormal_reason'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 科室\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 岗位\r\n            $fn.getCache({\r\n                cache: d.laboratoryselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/laboratoryselect').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'statistics/labReportBackCount', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '科室',            field: 'project_parent_name' },\r\n\t\t{ title: '岗位',            field: 'project_name' },\r\n\t\t{ title: '退单项目',        field: 'single_kind_name' },\r\n\t\t{ title: '退单原因',        field: 'status_abnormal_reason', },\r\n\t\t{ title: '数量',\t        field: 'report_back_count' },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='实验室退单统计'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\rotation-manage\\index.js",["1987","1988"],"import React from 'react'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\n// ===================================================================== 页面常量\r\nconst enabledOptions = [\r\n    { name: \"待开启\", value: \"0\" },\r\n    { name: \"已开启\", value: \"1\" },\r\n    { name: \"禁用\", value: \"-1\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n        data:[],\r\n        pag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '规则名称',    name: 'rotate_name',    full: true,     width: '100%',  required: true},\r\n            { label: '规则描述',    name: 'rotate_desc',    full: true,     width: '100%',  required: true,      type: 'textarea'},\r\n        ],\r\n        uuid: ''\r\n    }\r\n    forms = [\r\n\t\t{ label:'状态',\t\t\tname:'enabled',\t\t\ttype:'select',\t\tdata:[]},\r\n\t\t{ label:'名称',\t\t\tname:'rotate_name'},\r\n\t]\r\n    model = {}\r\n\tcomponentDidMount(){\r\n        this.forms[0].data = enabledOptions\r\n\t\tthis.fetch(this.model)\r\n    }\r\n    // paging\r\n    fetch = param => $fn.fetch.call(this,'rt-rotate-conf/index', param)\r\n    // table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '编号',    field: 'rotate_code',   width: 100 },\r\n\t\t{ title: '名称',    field: 'rotate_name',   width: 240},\r\n\t\t{ title: '状态',    field: 'enabled',       width: 130,   render: ({ rows }) => {\r\n            const d = enabledOptions.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '描述',    field: 'rotate_desc',   width: 500,   tdCss: 'wpn'},\r\n\t\t{ title: '操作', align:'tc',   width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'rt-rotate-conf/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='mr10' label='绑定' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/rotation-rule/bind?id=' + rows.uuid)\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n    ButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'开启', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuids: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('rt-rotate-conf/open', '开启', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n            { label:'禁用', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuids: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('rt-rotate-conf/del', '禁用', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n        const { submit, pullLoading, data, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='轮转规则列表' ButtonGroup={this.ButtonGroup()}>\r\n                {/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n                <Table\r\n                    className\t\t= 'xplr'\r\n                    cols\t\t\t= { this.cols }\r\n                    data \t\t\t= { data }\r\n                    loading \t\t= { pullLoading }\r\n                    onRow\t\t\t= { (v) => this.setState({selectedKeys: v})}\r\n                    pag\t\t\t\t= { pag }\r\n                    onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                    onSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n                />\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...v, uuid: this.rows.uuid}\r\n                                $http.submit(null,'rt-rotate-conf/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'rt-rotate-conf/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\rotation-manage\\bind-rotation.js",["1989","1990"],"import React from 'react'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst enabledOptions = [\r\n    { name: \"待开启\", value: \"0\" },\r\n    { name: \"已开启\", value: \"1\" },\r\n    { name: \"禁用\", value: \"-1\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n        data:[],\r\n        pag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '项目',        name:'kind_id',     type:'select',  data:[],    required: true},\r\n            { label: '轮转规则',    name:'rotate_id',   type:'select',  data:[],    required: true},\r\n            { label: '排序',        name: 'sort'},\r\n        ],\r\n    }\r\n    forms = [\r\n\t\t{ label:'轮转规则',     name:'rotate_id',       type:'select',\t\tdata:[]},\r\n\t\t{ label:'状态',         name:'enabled',         type:'select',\t\tdata:[]},\r\n\t]\r\n    model = {uuid: $fn.query('id') || ''}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        this.forms[1].data = enabledOptions\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 轮转规则\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.rotateConfSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[1].data = data\r\n                        this.forms[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'rt-rotate-conf/select').then(data => {\r\n                            submit[1].data = data\r\n                            this.forms[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 项目\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.combinKindSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'kd-combin-project/select').then(data => {\r\n                            submit[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            this.setState({submit})\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n    }\r\n    // paging\r\n    fetch = param => $fn.fetch.call(this,'rt-rotate-kind/index', param)\r\n    // table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '排序',        field: 'sort',          width: 60 },\r\n\t\t{ title: '规则名称',    field: 'rotate_name',   width: 240},\r\n\t\t{ title: '项目',        field: 'kind_name',     width: '50%'},\r\n\t\t{ title: '岗位',        field: 'project_name',  width: 240},\r\n\t\t{ title: '科室',        field: 'dept_name',     width: 240},\r\n\t\t{ title: '状态',        field: 'enabled',       width: 130,   render: ({ rows }) => {\r\n            const d = enabledOptions.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '操作', align:'tc',   width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'rt-rotate-kind/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n    ButtonGroup = () => {\r\n\t\treturn [\r\n            { label:'返回', onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t} },\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'sort') {\r\n                        item.value = '0'\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'开启', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuids: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('rt-rotate-kind/open', '开启', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n            { label:'禁用', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuids: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('rt-rotate-kind/del', '禁用', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n        const { submit, pullLoading, data, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='轮转绑定' ButtonGroup={this.ButtonGroup()}>\r\n                {/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n                <Table\r\n                    className\t\t= 'xplr'\r\n                    cols\t\t\t= { this.cols }\r\n                    data \t\t\t= { data }\r\n                    loading \t\t= { pullLoading }\r\n                    onRow\t\t\t= { (v) => this.setState({selectedKeys: v})}\r\n                    pag\t\t\t\t= { pag }\r\n                    onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                    onSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n                />\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...v, uuid: this.rows.uuid}\r\n                                $http.submit(null,'rt-rotate-kind/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'rt-rotate-kind/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\view-report.js",["1991"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n        form: {},\r\n\t\tid:$fn.query('id'),\r\n\t\tmodel: {}\r\n\t}\r\n\tasync getDataAsync() {\r\n\t\tconst { id } = this.state\r\n\t\tif (id) {\r\n\t\t\t$http.submit(null, 'kd-report-spec/info', {param: {uuid: id}}).then(data => {\r\n\t\t\t\tsetTimeout(() => {\r\n                    this.setState({form: data})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.getDataAsync()\r\n\t}\r\n\trender(){\r\n\t\tconst { form, id } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title={id ? '查看报告单' : ''}>\r\n\t\t\t\t<div className='ex fv xplr pt10'>\r\n                    <h6 className=\"w xmlr h40 bbor1 mb10\">报告单基础信息</h6>\r\n                    <div className='fxw'>\r\n                        <div className='ant-row mb20' style={{width: '25%'}}>\r\n                            <span>编号：</span><span className='b'>{form.spec_num}</span>\r\n                        </div>\r\n                        <div className='ant-row mb20' style={{width: '25%'}}>\r\n                            <span>标本条码：</span><span className='b'>{form.spec_code}</span>\r\n                        </div>\r\n                        <div className='ant-row mb20' style={{width: '25%'}}>\r\n                            <span>报告单路径：</span><span className='b'>{form.report_path}</span>\r\n                        </div>\r\n                        <div className='ant-row mb20' style={{width: '25%'}}>\r\n                            <span>所属医院：</span><span className='b'>{form.hosp_name}</span>\r\n                        </div>\r\n                        <div className='ant-row mb20' style={{width: '25%'}}>\r\n                            <span>所属派送人：</span><span className='b'>{form.salesman_name}</span>\r\n                        </div>\r\n                        <div className='ant-row mb20' style={{width: '25%'}}>\r\n                            <span>生成时间：</span><span className='b'>{form.created_at}</span>\r\n                        </div>\r\n                        <div className='ant-row mb20' style={{width: '25%'}}>\r\n                            <span>派送完成时间：</span><span className='b'>{form.update_at}</span>\r\n                        </div>\r\n                        <div className='ant-row mb20' style={{width: '25%'}}>\r\n                            <span>报告单状态：</span><span className='b'>{form.status_name}</span>\r\n                        </div>\r\n                    </div>\r\n                    <h6 className=\"w xmlr h40 bbor1 mb10\">报告单数据</h6>\r\n                    <Input value={form.json_data} width='100%' mode='textarea' rows={12} />\r\n                    <div className='mt20 tc'>\r\n                        <Button label='返回' size='large' ghost className='mr15' width={90} onClick={() => {\r\n                            $fn.back(this)\r\n                        }} />\r\n                    </div>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\undelivered-report.js",["1992"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        notauditreportTotal: 0\r\n\t}\r\n\tforms = [\r\n\t\t{ label: '标本条码',        name:'spec_code'},\r\n\t\t{ label: '医院名称',        name:'hosp_id',         type:'select',      data: []},\r\n        { label: '姓名',            name:'patient_name'},\r\n        { label: '录入项目时间',    name:'date',\t\t\ttype:'date-range',  names:['start_date','end_date'], value:[] },\r\n\t]\r\n    model = {}\r\n\tcomponentDidMount(){\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 医院名称\r\n            $fn.getCache({\r\n                cache: d.BsHospitalSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        // 未批准报告单数量\r\n        $http.pull(null, 'kd-report-spec/notauditreport').then(data => {\r\n            const num = data.num || 0\r\n            this.setState({notauditreportTotal: num})\r\n        })\r\n        this.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'kd-report-spec/notsendreportlist', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '标本条码',        field: 'spec_code', \t        width: 130 },\r\n\t\t{ title: '姓名',\t\t    field: 'patient_name',\t\t    width: 100 },\r\n\t\t{ title: '性别', \t\t    field: 'sex_name',              width: 80 },\r\n\t\t{ title: '年龄',            field: 'newAge',                width: 80 },\r\n\t\t{ title: '项目名称',        field: 'kind_name',             width: 240 },\r\n\t\t{ title: '医院',            field: 'hosp_name',             width: 220 },\r\n\t\t{ title: '录入项目时间',    field: 'created_at',            width: 160,         align: 'tc' },\r\n    ]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, notauditreportTotal } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='未发报告清单'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n                    onChange    = {(v, press, { name, data }) => $fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n                    onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                    otherInfo       = { <span>未批准报告单数量：{notauditreportTotal}</span> }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\version-manage.js",["1993","1994"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面常量\r\nconst isDefaultOptions = [\r\n    { name: \"是\", value: \"1\" },\r\n    { name: \"否\", value: \"0\" }\r\n] // 是否默认\r\nconst enabledOptions = [\r\n    { name: \"启用\", value: \"1\" },\r\n    { name: \"禁用\", value: \"0\" }\r\n] // 状态\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n        data: [],\r\n        pag: {},\r\n        selectedKeys: [],\r\n\t\tid:$fn.query('id'),\r\n\t}\r\n    model = {report_tpl_id: $fn.query('id') || ''}\r\n    form = {\r\n        report_name: $fn.query('report_name') || '--',\r\n        report_num: $fn.query('report_num') || '--',\r\n        report_en: $fn.query('report_en') || '--',\r\n        enabled: $fn.query('enabled') == '1' ? '启用' : '禁用',\r\n        route_name: $fn.query('route_name') || '--',\r\n    }\r\n\tcomponentDidMount(){\r\n        this.fetch(this.model)\r\n    }\r\n    // paging\r\n    fetch = param => $fn.fetch.call(this,'kd-report-from-version/index', param).then(data => {\r\n        const d = $fn.hasArray(data) && data.filter(i => i.is_default === '1')\r\n        if ($fn.hasArray(d)) {\r\n            this.setState({selectedKeys: [d[0].uuid]})\r\n        }\r\n    })\r\n    // table\r\n    cols = [\r\n        { title: '默认模板',        field: 'is_default',        type: 'radio',  width: 100},\r\n\t\t{ title: '版本号',          field: 'version_num' },\r\n\t\t{ title: '所属报告单模板',  field: 'report_num'},\r\n\t\t{ title: '上传时间',        field: 'created_at'},\r\n\t\t{ title: '是否默认',        field: 'is_default',        render: ({ rows }) => {\r\n            const d = isDefaultOptions.filter(i => i.value === rows.is_default)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '状态',            field: 'enabled',           render: ({ rows }) => {\r\n            const d = enabledOptions.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t]\r\n\trender(){\r\n        const { data, pullLoading, pag, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='版本管理'>\r\n\t\t\t\t<div className='ex fv xplr pt10'>\r\n                    <h6 className=\"w xmlr h40 bbor1 mb10\">模板信息</h6>\r\n                    <div className='fxw'>\r\n                        <div className='ant-row mb20' style={{width: '20%'}}>\r\n                            <span>模板名称：</span><span className='b'>{decodeURI(this.form.report_name)}</span>\r\n                        </div>\r\n                        <div className='ant-row mb20' style={{width: '20%'}}>\r\n                            <span>模板编号：</span><span className='b'>{decodeURI(this.form.report_num)}</span>\r\n                        </div>\r\n                        <div className='ant-row mb20' style={{width: '20%'}}>\r\n                            <span>模板英文名称：</span><span className='b'>{decodeURI(this.form.report_en)}</span>\r\n                        </div>\r\n                        <div className='ant-row mb20' style={{width: '20%'}}>\r\n                            <span>状态：</span><span className='b'>{decodeURI(this.form.enabled)}</span>\r\n                        </div>\r\n                        <div className='ant-row mb20' style={{width: '20%'}}>\r\n                            <span>路径：</span><span className='b'>{decodeURI(this.form.route_name)}</span>\r\n                        </div>\r\n                    </div>\r\n                    <h6 className=\"w xmlr h40 bbor1 mb10\">版本列表</h6>\r\n                    {/* 表格 */}\r\n                    <Table\r\n                        className\t\t= 'xplr'\r\n                        cols\t\t\t= { this.cols }\r\n                        data \t\t\t= { data }\r\n                        loading \t\t= { pullLoading }\r\n                        onRow\t\t\t= { v => this.setState({ selectedKeys: [v.uuid] }) }\r\n                        pag\t\t\t\t= { pag }\r\n                        idStr           = 'uuid'\r\n                        selectedKeys    = { selectedKeys }\r\n                        onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                    />\r\n                    <div className='mt20 tc'>\r\n                        <Button label='保存' size='large' className='mr15' width={90} onClick={() => {\r\n                            $http.submit(null, 'kd-report-from-version/setdefault', {param: {uuid: selectedKeys[0] || ''}}).then(data => {\r\n                                message.then(f => f.default.success('保存成功'))\r\n                                $fn.back(this)\r\n                            })\r\n                        }} />\r\n                        <Button label='返回' size='large' ghost className='mr15' width={90} onClick={() => {\r\n                            $fn.back(this)\r\n                        }} />\r\n                    </div>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\report-title.js",["1995","1996"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面常量\r\nconst enabledOptions = [\r\n    { name: \"开启\", value: \"1\" },\r\n    { name: \"未开启\", value: \"0\" },\r\n    { name: \"关闭\", value: \"-1\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '公司抬头',        name: 'main_title',         required: true},\r\n\t\t\t{ label: '二级抬头',        name: 'secondary_title'},\r\n\t\t\t{ label: '二级英文抬头',    name: 'subtitle'},\r\n            { label: '公司地址',        name: 'address'},\r\n            { label: '岗位',            name:'project_id',          type:'select',      data:[],    idStr: 'uuid'},\r\n\t\t\t{ label: '状态',            name: 'enabled',            type:'select',      data:[]},\r\n\t\t\t{ label: 'logo',            name: 'logo_img',           type: 'upload',     params: {modular: 124}},\r\n\t\t\t{ label: '二维码',          name: 'qr_code',            type: 'upload',     params: {modular: 124}},\r\n        ],\r\n\t}\r\n\tforms = [\r\n        { label: '岗位',            name:'project_id',         type:'select',      data:[]},\r\n\t]\r\n    model = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        submit[5].data = enabledOptions\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 岗位\r\n            $fn.getCache({\r\n                cache: d.jobAllselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[0].data = data\r\n                        submit[4].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/jobAllselect').then(data => {\r\n                            this.forms[0].data = data\r\n                            submit[4].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            this.setState({submit})\r\n        })\r\n        this.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'conf-report/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox' },\r\n\t\t{ title: '公司抬头',        field: 'main_title',            width: 160 },\r\n\t\t{ title: '二级抬头',        field: 'secondary_title',       width: 180},\r\n\t\t{ title: '二级英文抬头',    field: 'subtitle',              width: 240},\r\n\t\t{ title: '公司地址',        field: 'address',               width: 300},\r\n\t\t{ title: '岗位',            field: 'project_name',          width: 120},\r\n        { title: '状态',            field: 'enabled',               width: 80,       render: ({ rows }) => {\r\n            const d = enabledOptions.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '操作', width: 200, align: 'tc', render: ({rows}) => {\r\n            return (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' className='' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null, 'conf-report/info', {param: {uuid: rows.uuid}}).then(data => {\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                            this.refs.modal.open()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n        }},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const { selectedKeys } = this.state\r\n\t\treturn [\r\n            { label:'新增 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n                const { submit } = this.state\r\n                submit.map(item => {\r\n                    item.value = ''\r\n                })\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n            { label:'删除', disabled:selectedKeys.length === 0, onClick:()=>{\r\n                const param = selectedKeys.map(i => i.uuid)\r\n\t\t\t\tcoms.interfaceConfirm('conf-report/del', '删除', {uuid: param}, () => {\r\n\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t})\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='报告单抬头' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n                                const param = { ...this.rows, ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'conf-report/edit', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n                                const param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'conf-report/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n                            }\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.editForm = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\report-template.js",["1997","1998"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面常量\r\nconst enabledOptions = [\r\n    { name: \"启用\", value: \"1\" },\r\n    { name: \"禁用\", value: \"0\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '名称',        name: 'report_name',    required: true},\r\n\t\t\t{ label: '英文名称',    name: 'report_en'},\r\n\t\t\t{ label: '路径',        name: 'route',          type:'select',      data:[]},\r\n\t\t\t{ label: '类型',        name: 'type',           required: true,     type:'select',      data:[]},\r\n\t\t\t{ label: '数据格式',    name: 'json_data',      type: 'textarea',   full: true,     width: '100%'},\r\n\t\t\t{ label: '说明',        name: 'remark',         type: 'textarea',   full: true,     width: '100%'},\r\n        ],\r\n\t}\r\n\tforms = [\r\n        { label: '模板名称',        name:'report_name'},\r\n        { label: '模板编号',        name:'report_num'},\r\n\t\t{ label: '模板英文名称',    name:'report_en'},\r\n        { label: '创建时间',        name:'date',\t\t\ttype:'date-range',\tnames:['created_at_start_date','created_at_end_date'], value:[] },\r\n        { label: '状态',            name:'enabled',         type:'select',      data:[]},\r\n\t]\r\n    model = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        this.forms[4].data = enabledOptions\r\n        // 报告单模板类型\r\n        $fn.getDisItem({\r\n            code: 61950,\r\n            callback: (data) => {\r\n                submit[3].data = data\r\n            }\r\n        })\r\n        // 报告单路径\r\n        $fn.getDisItem({\r\n            code: 41000,\r\n            callback: (data) => {\r\n                submit[2].data = data\r\n            }\r\n        })\r\n        this.setState({submit})\r\n        this.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'kd-report-from/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox' },\r\n\t\t{ title: '模板名称',        field: 'report_name' },\r\n\t\t{ title: '模板编号',        field: 'report_num'},\r\n\t\t{ title: '模板英文名称',    field: 'report_en'},\r\n\t\t{ title: '状态',            field: 'enabled',       render: ({ rows }) => {\r\n            const d = enabledOptions.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '路径',            field: 'route_name' },\r\n\t\t{ title: '模板版本',        field: 'version_num'},\r\n\t\t{ title: '说明',            field: 'remark'},\r\n\t\t{ title: '类型',            field: 'type_name'},\r\n\t\t{ title: '更新时间',        field: 'created_at',    width: 160,     align: 'tc'},\r\n\t\t{ title: 'token',           field: 'token',         width: 260},\r\n\t\t{ title: '操作', width: 200, align: 'tc', render: ({rows}) => {\r\n            return (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' className='' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null, 'kd-report-from/info', {param: {uuid: rows.uuid}}).then(data => {\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                            this.refs.modal.open()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n                    <Button label='查看版本' ghost className='mlr5' onClick={()=>{\r\n                        const str = `report_name=${rows.report_name}&report_num=${rows.report_num}&report_en=${rows.report_en}&enabled=${rows.enabled}&route_name=${rows.route_name}`\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/report-template/version?id=' + rows.uuid + '&' + str)\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n        }},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const { selectedKeys } = this.state\r\n\t\treturn [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n                const { submit } = this.state\r\n                submit.map(item => {\r\n                    item.value = ''\r\n                })\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n            { label:'删除', disabled:selectedKeys.length === 0, onClick:()=>{\r\n                const param = selectedKeys.map(i => i.uuid)\r\n\t\t\t\tcoms.interfaceConfirm('kd-report-from/del', '删除', {uuid: param}, () => {\r\n\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t})\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='报告单模板' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n                                const param = { ...this.rows, ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'kd-report-from/edit', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n                                const param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'kd-report-from/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n                            }\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.editForm = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\report\\report-manage.js",["1999","2000"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '报告单模板',              name: 'tmpl_id',        required: true,        type:'select',      data:[],    onChange: (v, press, { name, data }) => {\r\n                this.tmpl_id = v\r\n                this.getTemplateVer({report_tpl_id: v})\r\n            } },\r\n\t\t\t{ label: '模板版本号',              name: 'tmpl_vs_id',     required: true,        type:'select',       data:[]},\r\n        ],\r\n        submit1: [{ label:'原因',               name:'reason',          type: 'textarea',      full: true,          width: '100%'}],\r\n        submit2: [\r\n            { checkLabel: '是否生成终止报告单',  name:'termination',    full: true,             width: '100%',      type: 'checkbox',   onChange: (v, press, {name}) => {\r\n                this.termination = v ? '1' : '0'\r\n            } },\r\n            { label: '异常原因类型',            name: 'abnormal_type',  full: true,             width: '100%',     type:'select',       data:[],    onChange: (v, press, { name, data }) => {\r\n                this.changeType(v)\r\n            } },\r\n            { label: '原因',                    name: 'reason',         full: true,             width: '100%',     type:'textarea',     required: true, onChange: (v, press, {name}) => {\r\n                this.abnormal_reason = v\r\n            } },\r\n        ],\r\n        submit3: [{ label:'标本条码',           name:'spec_code',       type: 'textarea',       full: true,         width: '100%'}]\r\n\t}\r\n\tforms = [\r\n        { label:'编号',             name:'spec_num'},\r\n        { label:'标本条码',         name:'spec_code'},\r\n\t\t{ label:'状态',             name:'status',          type:'select',      data:[]},\r\n        { label:'医院',             name:'hosp_id',         type:'select',      data:[]},\r\n        { label:'姓名',             name:'patient_name'},\r\n        { label: '生成时间',        name:'date',\t\t\ttype:'date-range',\tnames:['start_date','end_date'], value:[] },\r\n\t]\r\n    model = {}\r\n    // 获取版本号\r\n    getTemplateVer(param) {\r\n        const { submit } = this.state\r\n        $http.submit(null, 'kd-report-from-version/select', {param}).then(data => {\r\n            submit[0].value = this.tmpl_id\r\n            submit[1].data = data.items\r\n        })\r\n        this.setState({submit})\r\n    }\r\n    // 异常原因类型\r\n    changeType(val) {\r\n        const { submit2 } = this.state\r\n        let d = submit2[1].data.filter(i => {\r\n          return String(i.value) === String(val);\r\n        });\r\n        if ($fn.hasArray(d)) {\r\n            submit2[2].value = d[0].value !== '62051' ? d[0].name : (this.abnormal_reason || '')\r\n        }\r\n        submit2[0].value = this.termination\r\n        submit2[1].value = val\r\n        this.setState({submit2})\r\n      }\r\n\tcomponentDidMount(){\r\n        const { submit, submit2 } = this.state\r\n        // 状态\r\n        $fn.getDisItem({\r\n            code: 90,\r\n            callback: (data) => {\r\n                this.forms[2].data = data\r\n            }\r\n        })\r\n        // 异常原因类型\r\n        $fn.getDisItem({\r\n            code: 62050,\r\n            callback: (data) => {\r\n                submit2[1].data = data\r\n                this.setState({submit2})\r\n            }\r\n        })\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 报告单模板\r\n            $fn.getCache({\r\n                cache: d.reportTemplate, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'kd-report-from/select').then(data => {\r\n                            submit[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            // 医院名称\r\n            $fn.getCache({\r\n                cache: d.BsHospitalSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[3].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[3].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            this.setState({submit})\r\n        })\r\n        this.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'kd-report-spec/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox' },\r\n\t\t{ title: '编号',            field: 'spec_num' },\r\n\t\t{ title: '标本条码',        field: 'spec_code'},\r\n\t\t{ title: '姓名',            field: 'patient_name'},\r\n\t\t{ title: '版本号',          field: 'tmpl_vs'},\r\n\t\t{ title: '报告单模板',      field: 'report_form',   width: 200, render: ({ rows }) => {\r\n            return `${rows.report_name}-${rows.report_form}`\r\n        }},\r\n\t\t{ title: '所属医院',        field: 'hosp_name' },\r\n\t\t{ title: '所属派送人',      field: 'salesman'},\r\n\t\t{ title: '生成时间',        field: 'created_at',  align: 'tc'},\r\n\t\t{ title: '派送完成时间',    field: 'update_at',  align: 'tc'},\r\n\t\t{ title: '报告单状态',      field: 'status_name'},\r\n\t\t{ title: '操作',    width: 200, align: 'tc', render: ({rows}) => {\r\n            return (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' className='' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null, 'kd-report-spec/info', {param: {uuid: rows.uuid}}).then(data => {\r\n                            this.getTemplateVer({report_tpl_id: data.tmpl_id})\r\n                            setTimeout(() => {\r\n                                this.editForm.setFieldsValue({...data})\r\n                            },  200)\r\n                            this.isEdit = true\r\n                            this.rows = data\r\n                            this.refs.modal.open()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n                    <Button label='查看' ghost className='mlr5' onClick={()=>{\r\n                        $fn.push(this, $fn.getRoot(2).root + 'report-manage/info?id=' + rows.uuid) \r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<Button label='预览' ghost onClick={()=>{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n        }},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const { selectedKeys } = this.state\r\n\t\treturn [\r\n            { label:'打印', onClick:()=>{\r\n\t\t\t\t\r\n            } },\r\n\t\t\t{ label:'补报告单', onClick:()=>{\r\n\t\t\t\tthis.refs.modal3.open()\r\n                const { submit3 } = this.state\r\n                submit3[0].value = ''\r\n                this.setState({ submit3 })\r\n            } },\r\n            { label:'推送到查询平台', disabled:selectedKeys.length === 0, onClick:()=>{\r\n                const params = selectedKeys.map(i=>{\r\n                    return {\r\n                        spec_num: i.spec_num,\r\n                        status: i.status,\r\n                        spec_code: i.spec_code\r\n                    }\r\n                })\r\n                const param = { params }\r\n\t\t\t\tcoms.interfaceConfirm('kd-report-spec/supplementrep', '推送到查询平台', param, () => { this.fetch(this.model) })\r\n            } },\r\n            { label:'报告单删除', disabled:selectedKeys.length === 0, onClick:()=>{\r\n                this.refs.modal1.open()\r\n                const { submit1 } = this.state\r\n                submit1[0].value = ''\r\n                this.params = selectedKeys.map(i=>{\r\n                    return {\r\n                        spec_num: i.spec_num,\r\n                        kind_id: i.kind_id\r\n                    }\r\n                })\r\n                this.setState({ submit1 })\r\n            } },\r\n            { label:'报告单终止', disabled:selectedKeys.length === 0, onClick:()=>{\r\n\t\t\t\tthis.refs.modal2.open()\r\n                const { submit2 } = this.state\r\n                submit2[0].value = this.termination = false\r\n                submit2[1].value = ''\r\n                submit2[2].value = this.abnormal_reason = ''\r\n                this.setState({ submit2 })\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, submit1, submit2, submit3, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='报告单管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n                                const param = { ...this.rows, ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'kd-report-spec/edit', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.editForm = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n                <Modal ref='modal1' title='报告单删除' width={500} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit1 }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const param = { params: this.params, ...v }\r\n                            console.log(param)\r\n\t\t\t\t\t\t\t$http.submit(null, 'kd-report-spec/recallReport', { param }).then(data => {\r\n                                message.then(f => f.default.success('操作成功'))\r\n                                this.refs.modal1.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal1.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n                <Modal ref='modal2' title='报告单终止' width={500} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n                        modal\r\n\t\t\t\t\t\tdata = { submit2 }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const data = {\r\n                                abnormal_type: v.abnormal_type || '',\r\n                                termination: v.termination ? '1' : '0',\r\n                                reason: v.reason\r\n                            }\r\n                            const param = { ids: selectedKeys.map(i => i.uuid), ...data }\r\n\t\t\t\t\t\t\t$http.submit(null, 'kd-report-spec/abortReport', { param }).then(data => {\r\n                                message.then(f => f.default.success('操作成功'))\r\n                                this.refs.modal2.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal2.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n                <Modal ref='modal3' title='补打报告单' width={500} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n                        modal\r\n\t\t\t\t\t\tdata = { submit3 }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const param = { ...v }\r\n\t\t\t\t\t\t\t$http.submit(null, 'kd-report-spec/createreport', { param }).then(data => {\r\n                                message.then(f => f.default.success('操作成功'))\r\n                                this.refs.modal3.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal3.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\project-statistics\\index.js",["2001"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'岗位',\t\t\tname:'project_id',\t\t\ttype:'select',\t\tdata:[],    idStr: 'uuid'},\r\n\t\t{ label:'项目',\t\t\tname:'kind_id',\t\t\t\ttype:'select',\t\tdata:[]},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 项目\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.labkindselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'specimen/labkindselect').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 岗位\r\n            $fn.getCache({\r\n                cache: d.jobAllselect, callback: (data) => {\r\n                    console.log(data)\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/jobAllselect').then(data => {\r\n                            this.forms[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'Specimen/laboratoryListsCount', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '岗位',\t\tfield: 'project_name' },\r\n\t\t{ title: '项目名称',\tfield: 'kind_name' },\r\n\t\t{ title: '数量',\t\tfield:  'count', },\r\n\t\t{ title: '标准收费',\tfield: 'sprice' },\r\n\t\t{ title: '实际收费',\tfield: 'price' },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='项目统计单'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\project-result\\index.js",["2002"],"import React from 'react'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面常量\r\nconst statusData = [\r\n\t{ name: \"已审核\", value: \"45003\" },\r\n\t{ name: \"已批准\", value: \"45004\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'条码号',\t\tname:'spec_code'},\r\n\t\t{ label:'科室',\t\t\tname:'department_name'},\r\n\t\t{ label:'状态',\t\t\tname:'status',\t\t\t\ttype:'select',\t\tdata:[]},\r\n\t\t{ label:'岗位',\t\t\tname:'project_id',\t\t\ttype:'select',\t\tdata:[],    idStr: 'uuid'},\r\n\t\t{ label:'项目',\t\t\tname:'kind_id',\t\t\t\ttype:'select',\t\tdata:[]},\r\n\t\t{ label:'检测时间',\t\tname:'date',\t\t\t\ttype:'date-range',\tnames:['start_at','end_at'],\t\t\tvalue:[] },\r\n\t\t{ label:'接收时间',\t\tname:'date1',\t\t\t\ttype:'date-range',\tnames:['ck_start_date','ck_end_date'],\tvalue:[] },\r\n\t]\r\n\tmodel = {start_at: coms.sysTime(1, '9'), end_at: coms.sysTime(2, '9')}\r\n\tcomponentDidMount(){\r\n\t\tthis.forms[2].data = statusData\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 项目\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.labkindselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[4].data = data\r\n                    } else {\r\n                        $http.submit(null, 'specimen/labkindselect').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[4].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 岗位\r\n            $fn.getCache({\r\n                cache: d.jobAllselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[3].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/jobAllselect').then(data => {\r\n                            this.forms[3].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'specimen/laboratorylists', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '条码号',\t\tfield: 'spec_code',\t\t\twidth: 130 },\r\n\t\t{ title: '实验号',\t\tfield: 'experiment_num',\twidth: 70 },\r\n\t\t{ title: '送检单位', \tfield: 'hosp_name',\t\t\twidth: 200 },\r\n\t\t{ title: '接收时间', \tfield: 'receive_at',\t\twidth: 160,\t\talign: 'tc' },\r\n\t\t{ title: '检测时间', \tfield: 'created_at',\t\twidth: 160,\t\talign: 'tc' },\r\n\t\t{ title: '姓名',\t\tfield: 'patient_name',\t\twidth: 100 },\r\n\t\t{ title: '性别',\t\tfield: 'sex_name',\t\t\twidth: 50 },\r\n\t\t{ title: '年龄',\t\tfield: 'age',\t\t\t\twidth: 70 },\r\n\t\t{ title: '身份证',\t\tfield: 'card_no',\t\t\twidth: 150 },\r\n\t\t{ title: '电话',\t\tfield: 'patient_phone',\t\twidth: 100 },\r\n\t\t{ title: '医生电话', \tfield: 'doctor_phone',\t\twidth: 100 },\r\n\t\t{ title: '科室',\t\tfield: 'department_name',\twidth: 100 },\r\n\t\t{ title: '患者类型', \tfield: 'case_type_name',\twidth: 100 },\r\n\t\t{ title: '床号',\t\tfield: 'bed_no',\t\t\twidth: 100 },\r\n\t\t{ title: '住院号',\t\tfield: 'outpatient',\t\twidth: 100 },\r\n\t\t{ title: '临床诊断', \tfield: 'diagnosis_info',\twidth: 130 },\r\n\t\t{ title: '自然项目', \tfield: 'parent_kind_name',\twidth: 220 },\r\n\t\t{ title: '检验项目', \tfield: 'kind_name',\t\t\twidth: 220 },\r\n\t\t{ title: '批准时间', \tfield: 'ts_approve_at',\t\twidth: 160,\t\talign: 'tc' },\r\n\t\t{ title: '结果',\t\tfield: 'result_str',\t\twidth: 100 },\r\n\t\t{ title: '状态',\t\tfield: 'status_name',\t\twidth: 70 },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'导出', onClick:()=>{\r\n\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='项目结果清单' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit\t\t= { form => form.setFieldsValue({date: [this.model.start_at, this.model.end_at]}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\pathological\\tct.js",["2003","2004"],"import React from 'react'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n        data:[],\r\n        pag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '选项',    name: 'num_key',   full: true,     width: '100%',      type: 'select', data: [],    required: true,    onChange: (v, press, {name, data}) => {\r\n                this.selectChange(v)\r\n            } },\r\n            { label: '结果',    name: 'result',    full: true,     width: '100%',      type: 'textarea'},\r\n            { label: '注释',    name: 'notes',     full: true,     width: '100%',      type: 'textarea'},\r\n            { label: '排序',    name: 'sort',      full: true,     width: '100%',},\r\n        ],\r\n        uuid: ''\r\n    }\r\n    model = {}\r\n    selectChange(v) {\r\n        const { submit } = this.state\r\n        const d = submit[0].data.filter(i => i.value === v)\r\n        if ($fn.hasArray(d)) {\r\n            this.option = d[0].name\r\n        }\r\n    }\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // TCT选项\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.conftctSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'conf-tct/selectSum').then(data => {\r\n\t\t\t\t\t\t\tsubmit[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n    }\r\n    // paging\r\n    fetch = param => $fn.fetch.call(this,'conf-tct/index', param)\r\n    // table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '选项',    field: 'option',    width: 300,     tdCss: 'wpn' },\r\n\t\t{ title: '结果',    field: 'result',    width: 240,     tdCss: 'wpn'},\r\n\t\t{ title: '注释',    field: 'notes',     width: 500,     tdCss: 'wpn'},\r\n        { title: '数值',    field: 'num_key',   width: 100},\r\n        { title: '排序',    field: 'sort',      width: 60},\r\n\t\t{ title: '操作', align:'tc',   width: 150, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'conf-tct/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n    ButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('conf-tct/del', '删除', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n        const { submit, pullLoading, data, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='TCT规则设置' ButtonGroup={this.ButtonGroup()}>\r\n                <Table\r\n                    className\t\t= 'xplr'\r\n                    cols\t\t\t= { this.cols }\r\n                    data \t\t\t= { data }\r\n                    loading \t\t= { pullLoading }\r\n                    onRow\t\t\t= { (v) => this.setState({selectedKeys: v})}\r\n                    pag\t\t\t\t= { pag }\r\n                    onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                    onSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n                />\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...v, option: this.option || '', uuid: this.rows.uuid}\r\n                                $http.submit(null,'conf-tct/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v, option: this.option || '' }\r\n                                $http.submit(null, 'conf-tct/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\tp\\add-associate.js",["2005"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $fn, $http, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tsubmit: [\r\n            { label: '科室',        name: 'project_pid',    type: 'select', data: [],   full: true, width: '100%',  required: true, idStr: 'uuid'},\r\n\t\t\t{ label: '物流人员',    name: 'empl_id',        type: 'select', data: [],   full: true, width: '100%',  required: true},\r\n        ],\r\n    }\r\n\tmodel = {}\r\n\t\r\n    componentDidMount(){\r\n        const { submit } = this.state\r\n        const { rows } = this.props\r\n        // 科室\r\n        $http.submit(null, 'project-team/select', { param: {type: '2'}}).then(data => {\r\n            submit[0].data = data\r\n            this.setState({submit})\r\n        })\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 物流人员\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.employeeSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'employee/select').then(data => {\r\n                            submit[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            this.setState({submit})\r\n        })\r\n        if (rows && Object.keys(rows).length) {\r\n            setTimeout(() => {\r\n                this.form.setFieldsValue({...rows})\r\n            }, 200)\r\n        }\r\n    }\r\n\trender(){\r\n        const { submit } = this.state\r\n        const { type, rows, onClose, fetch } = this.props\r\n\t\treturn (\r\n            <SubmitForm\r\n                modal\r\n                data = { submit }\r\n                onSubmit = { v => {\r\n                    if (type === 'add') {\r\n                        const param = { ...v }\r\n                        $http.submit(null,'specimen/addOutsourcingEmployee',{ param }).then(data=>{\r\n                            message.then(f=>f.default.success('添加成功'))\r\n                            onClose && onClose()\r\n                            fetch && fetch()\r\n                        })\r\n                    } else {\r\n                        const param = { ...v, uuid: rows.uuid}\r\n                        $http.submit(null, 'specimen/editOutsourcingEmployee', { param }).then(data => {\r\n                            message.then(f => f.default.success('编辑成功'))\r\n                            onClose && onClose()\r\n                            fetch && fetch()\r\n                        })\r\n                    }\r\n                }}\r\n                onClose = { ()=>onClose && onClose() }\r\n                init    = { form => this.form = form }\r\n            />\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\tp\\add-company.js",["2006"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $fn, $http, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tsubmit: [\r\n            { label: '单位名称',    name: 'company_name',                   required: true},\r\n\t\t\t{ label: '单位简称',    name: 'company_short_name',             required: true},\r\n\t\t\t{ label: '联系人',      name: 'company_employee' },\r\n\t\t\t{ label: '联系电话',    name: 'company_mobile'},\r\n\t\t\t{ label: '地址',\t\tname: 'company_address'},\r\n\t\t\t{ label: '主检实验室',  name: 'company_laboratory'},\r\n\t\t\t{ label: '导出模板',    name: 'company_export_template_code',   type: 'select',     data: [],   nameStr: 'model_name',  idStr: 'uuid'},\r\n        ],\r\n    }\r\n\tmodel = {}\r\n\t\r\n    componentDidMount(){\r\n        const { submit } = this.state\r\n        const { rows } = this.props\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 导出模板\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.exportTemplate, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[6].data = data\r\n                    } else {\r\n                        $http.submit(null, 'lis-outsourcing-company/getExportModel4Select').then(data => {\r\n                            submit[6].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            this.setState({submit})\r\n        })\r\n        if (rows && Object.keys(rows).length) {\r\n            setTimeout(() => {\r\n                this.form.setFieldsValue({...rows})\r\n            }, 200)\r\n        }\r\n    }\r\n\trender(){\r\n        const { submit } = this.state\r\n        const { type, rows, onClose, fetch } = this.props\r\n\t\treturn (\r\n            <SubmitForm\r\n                modal\r\n                data = { submit }\r\n                onSubmit = { v => {\r\n                    if (type === 'add') {\r\n                        const param = { ...v }\r\n                        $http.submit(null,'lis-outsourcing-company/add',{ param }).then(data=>{\r\n                            message.then(f=>f.default.success('添加成功'))\r\n                            onClose && onClose()\r\n                            fetch && fetch()\r\n                        })\r\n                    } else {\r\n                        const param = { ...v, uuid: rows.uuid}\r\n                        $http.submit(null, 'lis-outsourcing-company/edit', { param }).then(data => {\r\n                            message.then(f => f.default.success('编辑成功'))\r\n                            onClose && onClose()\r\n                            fetch && fetch()\r\n                        })\r\n                    }\r\n                }}\r\n                onClose = { ()=>onClose && onClose() }\r\n                init    = { form => this.form = form }\r\n            />\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\outsorcing-person.js",["2007"],"import React from 'react'\r\n// ===================================================================== global declare\r\nimport Modal from '@antd/modal'\r\nconst { $http, $fn, $async } = window\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nconst AddAssociate = $async(()=>import('./tp/add-associate'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\ttype: '',\r\n\t\trows: {},\r\n\t\tforms: [\r\n\t\t\t{ label:'科室',\t\tname:'project_pid',\t\ttype: 'select',\t\tdata: [] },\r\n\t\t\t{ label:'物流人员',\tname:'empl_id',\t\t\ttype: 'select',\t\tdata: [] },\r\n\t\t]\r\n\t}\r\n\t\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.props.onRef(this)\r\n\t\tconst { forms } = this.state\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 科室\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        forms[0].data = data\r\n\t\t\t\t\t\tthis.setState({forms})\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n                            forms[0].data = data\r\n\t\t\t\t\t\t\tthis.setState({forms})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// 物流人员\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.employeeSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        forms[1].data = data\r\n\t\t\t\t\t\tthis.setState({forms})\r\n                    } else {\r\n                        $http.submit(null, 'employee/select').then(data => {\r\n                            forms[1].data = data\r\n\t\t\t\t\t\t\tthis.setState({forms})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n        })\r\n\t\tthis.fetchFn()\r\n\t}\r\n\tfetchFn() {\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'specimen/outsourcingEmployeeList', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '科室', \t\tfield: 'project_name' },\r\n\t\t{ title: '物流人员', \tfield: 'real_name' },\r\n\t\t{ title: '操作', align:'tc', width:380, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={()=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tthis.setState({ type: 'edit', rows: rows })\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, rows, type, forms } = this.state\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 关联外包物流人员 */}\r\n\t\t\t\t<Modal ref='modal' title={'关联外包物流人员'} width={500} noFooter>\r\n\t\t\t\t\t<AddAssociate\r\n\t\t\t\t\t\ttype\t= { type }\r\n\t\t\t\t\t\trows\t= { rows }\r\n\t\t\t\t\t\tonClose\t= { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t\tfetch\t= { ()=>{this.fetchFn()} }\r\n\t\t\t\t\t/>\r\n                </Modal>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\outsorcing-list.js",["2008"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面常量\r\nconst outsourTypeOption = [\r\n\t{name: '常规外包', value: '1'},\r\n\t{name: '临时外包', value: '2'}\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tforms: [\r\n\t\t\t{ label:'条码号',\tname:'spec_code' },\r\n\t\t\t{ label:'外送单位', name:'outsourcing_company' },\r\n\t\t\t{ label:'科室',\t\tname:'project_parent_id',\t\ttype: 'select',\t\tdata: [], idStr: 'uuid' },\r\n\t\t\t{ label:'岗位',\t\tname:'project_id',\t\t\t\ttype: 'select',\t\tdata: [] },\r\n\t\t\t{ label:'外送类型',\tname:'outsourcing_type',\t\ttype: 'select',\t\tdata: [] },\r\n\t\t\t{ label:'外送时间',\tname:'date',\t\t\t\t\ttype:'date-range',\tnames:['start_at','end_at'],\tvalue:[] },\r\n\t\t]\r\n\t}\r\n\t// forms = [\r\n\t// \t{ label:'条码号',\tname:'spec_code' },\r\n    //     { label:'外送单位', name:'outsourcing_company' },\r\n\t// \t{ label:'科室',\t\tname:'project_parent_id',\t\ttype: 'select',\t\tdata: [], idStr: 'uuid' },\r\n\t// \t{ label:'岗位',\t\tname:'project_id',\t\t\t\ttype: 'select',\t\tdata: [] },\r\n    //     { label:'外送类型',\tname:'outsourcing_type',\t\ttype: 'select',\t\tdata: [] },\r\n    //     { label:'外送时间',\tname:'date',\t\t\t\t\ttype:'date-range',\tnames:['start_at','end_at'],\tvalue:[] },\r\n\t// ]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tconst { forms } = this.state\r\n\t\tthis.props.onRef(this)\r\n\t\tforms[4].data = outsourTypeOption\r\n\t\tcacheApi.then(f => {\r\n\t\t\tconst d = f.default\r\n            // 科室\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        forms[2].data = data\r\n\t\t\t\t\t\tthis.setState({forms})\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n                            forms[2].data = data\r\n\t\t\t\t\t\t\tthis.setState({forms})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// 岗位\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.laboratoryselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        forms[3].data = data\r\n\t\t\t\t\t\tthis.setState({forms})\r\n                    } else {\r\n                        $http.submit(null, 'project-team/laboratoryselect').then(data => {\r\n                            forms[3].data = data\r\n\t\t\t\t\t\t\tthis.setState({forms})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n        })\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'specimen/getOutsourcingList', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '外送单位', \tfield: 'outsourcing_company',\t \twidth:145 },\r\n\t\t{ title: '外送时间', \tfield: 'outsourcing_created_at', \twidth:150 },\r\n\t\t{ title: '外送类型', \tfield: 'outsourcing_type',\t \t\twidth:80 },\r\n\t\t{ title: '条码号',\t \tfield: 'spec_code', \t\t\t\twidth:130 },\r\n\t\t{ title: '姓名',\t \tfield: 'patient_name', \t\t\t\twidth:120 },\r\n\t\t{ title: '性别',\t \tfield: 'sex_name', \t\t\t\t\twidth:80 },\r\n\t\t{ title: '年龄',\t \tfield: 'age_first_val',\t\t\t \twidth:100 },\r\n\t\t{ title: '单一项目', \tfield: 'kind_name', \t\t\t\twidth:150 },\r\n\t\t{ title: '实验科室', \tfield: 'project_parent_name', \t\twidth:150 },\r\n\t\t{ title: '岗位',\t \tfield: 'project_name', \t\t\t\twidth:150 },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, forms } = this.state\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\outsorcing-company.js",["2009"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst AddCompany = $async(()=>import('./tp/add-company'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\ttype: '',\r\n\t\trows: {},\r\n\t\tsubmit: [\r\n            { label: '开始时间',        name: 'start_at',    type:'date-time', after:true,   full: true, width: '100%',  required: true},\r\n\t\t\t{ label: '结束时间',    name: 'end_at',        type:'date-time', after:true,   full: true, width: '100%',  required: true},\r\n        ],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'单位名称',\t\tname:'company_name' },\r\n\t\t{ label:'单位编码',\t\tname:'company_code' },\r\n\t\t{ label:'单位简称',\t\tname:'company_short_name' },\r\n\t\t{ label:'主检实验室',\tname:'company_laboratory' },\r\n\t]\r\n\tmodel = {start_at: coms.sysTime(1, '9'), end_at: coms.sysTime(2, '9')}\r\n\tcomponentDidMount(){\r\n\t\tthis.props.onRef(this)\r\n\t\tthis.fetchFn()\r\n\t}\r\n\tfetchFn() {\r\n\t\tthis.fetch(this.model)\r\n\t\tthis.setState({selectedKeys: []})\r\n\t}\r\n\tselectedUuids() {\r\n\t\treturn this.state.selectedKeys.map(i=>i.uuid)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'lis-outsourcing-company/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '单位名称', \tfield: 'company_name',   \t    width:145 },\r\n\t\t{ title: '单位编码', \tfield: 'company_code', \t\t    width:150 },\r\n\t\t{ title: '单位简称', \tfield: 'company_short_name', \twidth:130 },\r\n\t\t{ title: '联系人',  \tfield: 'company_employee', \t\twidth:100 },\r\n\t\t{ title: '联系电话', \tfield: 'company_mobile', \t\twidth:120 },\r\n\t\t{ title: '地址',    \tfield: 'company_address', \t\twidth:300 },\r\n\t\t{ title: '主检实验室', \tfield: 'company_laboratory', \twidth:150 },\r\n\t\t{ title: '导出模板', \tfield: 'model_name', \t\t    width:150 },\r\n\t\t{ title: '操作', align:'tc', width:150, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={()=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tthis.setState({ type: 'edit', rows: rows })\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button label='导出' ghost className='mlr5' onClick={()=>{\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\tthis.rows = rows\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, rows, type, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 外包单位管理编辑 */}\r\n\t\t\t\t<Modal ref='modal' title='编辑' width={648} noFooter>\r\n\t\t\t\t\t<AddCompany\r\n\t\t\t\t\t\ttype\t= { type }\r\n\t\t\t\t\t\trows\t= { rows }\r\n\t\t\t\t\t\tonClose\t= { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t\tfetch\t= { ()=>{this.fetchFn()} }\r\n\t\t\t\t\t/>\r\n                </Modal>\r\n\t\t\t\t<Modal ref='modal1' title='导出外包单位数据' width={500} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\tconsole.log(param)\r\n\t\t\t\t\t\t\tcoms.exportExcel({\r\n\t\t\t\t\t\t\t\tapi: 'lis-outsourcing-company/exportData',\r\n\t\t\t\t\t\t\t\tapiType: 'submit',\r\n\t\t\t\t\t\t\t\tparam: {param},\r\n\t\t\t\t\t\t\t\tcb: () => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('导出成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal1.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal1.close() }\r\n\t\t\t\t\t\tinit\t= { form => form.setFieldsValue({start_at: this.model.start_at, end_at: this.model.end_at}) }\r\n\t\t\t\t\t/>\r\n                </Modal>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\outsourcing\\index.js",["2010"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport { Tabs } from 'antd'\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\nconst { TabPane } = Tabs;\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== component\r\nconst TableCompany = $async(()=>import('./outsorcing-company'))\r\nconst TablePerson = $async(()=>import('./outsorcing-person'))\r\nconst TableList = $async(()=>import('./outsorcing-list'))\r\nconst AddCompany = $async(()=>import('./tp/add-company'))\r\nconst AddAssociate = $async(()=>import('./tp/add-associate'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tindex: 1,\r\n\t\ttype: ''\r\n\t}\r\n\tmodel = {}\r\n\t\r\n\tcomponentDidMount(){}\r\n\trender(){\r\n\t\tconst { index } = this.state\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Tabs \r\n\t\t\t\t\tclassName='wh fv tab-custom'\r\n\t\t\t\t\ttabBarExtraContent={\r\n\t\t\t\t\t\t<nav className='xplr tr'>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tindex === 1 && (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Button className='mr15' label='添加' onClick={()=>{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ type: 'add' })\r\n\t\t\t\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t\t\t\t\t<Button label='删除' ghost onClick={()=>{\r\n\t\t\t\t\t\t\t\t\t\t\tconst param = this.TableCompany.selectedUuids()\r\n\t\t\t\t\t\t\t\t\t\t\tif (!$fn.hasArray(param)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.error('请至少选择一条数据'))\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tcoms.interfaceConfirm('lis-outsourcing-company/del', '删除', {uuids: param}, () => { \r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.TableCompany.fetchFn()\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tindex === 2 && (\r\n\t\t\t\t\t\t\t\t\t<Button label='关联物流人员' onClick={()=>{\r\n\t\t\t\t\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({ type: 'add' })\r\n\t\t\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tindex === 3 && (\r\n\t\t\t\t\t\t\t\t\t<Button label='导出' onClick={()=>{\r\n\t\t\t\t\t\t\t\t\t\tcoms.exportExcel({\r\n\t\t\t\t\t\t\t\t\t\t\tapi: 'specimen/getOutsourcingList',\r\n\t\t\t\t\t\t\t\t\t\t\tparam: {param: {...this.TableList.model, export: '1'}}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonChange = { (index) => {\r\n\t\t\t\t\t\tthis.setState({index: +index})\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<TabPane tab='外包单位管理' key={1}>\r\n\t\t\t\t\t\t<TableCompany\r\n\t\t\t\t\t\t\tonRef={c=>this.TableCompany=c}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab='关联外包物流人员' key={2}>\r\n\t\t\t\t\t\t<TablePerson\r\n\t\t\t\t\t\t\tonRef={c=>this.TablePerson=c}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab='外包清单' key={3}>\r\n\t\t\t\t\t\t<TableList\r\n\t\t\t\t\t\t\tonRef={c=>this.TableList=c}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</Tabs>\r\n\t\t\t\t{/* 外包单位管理添加 */}\r\n\t\t\t\t<Modal ref='modal' title={'添加'} width={648} noFooter>\r\n\t\t\t\t\t<AddCompany\r\n\t\t\t\t\t\ttype={this.state.type}\r\n\t\t\t\t\t\tonClose={()=>this.refs.modal.close()}\r\n\t\t\t\t\t\tfetch={()=>{this.TableCompany.fetchFn()}}\r\n\t\t\t\t\t/>\r\n                </Modal>\r\n\t\t\t\t{/* 关联外包物流人员 */}\r\n\t\t\t\t<Modal ref='modal1' title={'关联外包物流人员'} width={500} noFooter>\r\n\t\t\t\t\t<AddAssociate\r\n\t\t\t\t\t\ttype={this.state.type}\r\n\t\t\t\t\t\tonClose={()=>this.refs.modal1.close()}\r\n\t\t\t\t\t\tfetch={()=>{this.TablePerson.fetchFn()}}\r\n\t\t\t\t\t/>\r\n                </Modal>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\microorganism\\drug-sensitivity-comb.js",["2011","2012"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst ViewModel = $async(() => import('./tp/dialog-view-drug'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '组合名称',\tname: 'group_name',\t\t    required: true},\r\n\t\t\t{ label: '组合编号',\tname: 'group_num',\t\t\tdisabled: true},\r\n\t\t\t{ label: '排序',        name: 'sort' },\r\n\t\t\t{ label: '描述',\t\tname: 'description',\t\tfull: true,         width: '100%',  type: 'textarea'},\r\n\t\t],\r\n\t\tuuid: '',\r\n\t\ttype: ''\r\n\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'组合名称',\t\t\tname:'group_name'},\r\n\t\t{ label:'药敏组合编号',     name:'group_num'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        this.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'drug-group/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '排序',\t\t\tfield: 'sort' },\r\n\t\t{ title: '组合名称',\t\tfield: 'group_name'},\r\n\t\t{ title: '药敏组合编号', \tfield: 'group_num'},\r\n\t\t{ title: '操作', align:'tc', render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'drug-group/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button className='mr10' label='查看' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\tthis.setState({uuid: rows.uuid, type: 1})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button label='添加药敏' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\tthis.setState({uuid: rows.uuid, type: 2})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n\t\t\t\t})\r\n\t\t\t\tsubmit[2].value = `${this.state.data.length + 1}`\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('drug-group/del', '删除', param, () => {\r\n\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, uuid, type } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='药敏组合' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'drug-group/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'drug-group/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref = 'modal1' title\t= {type === 1 ? '查看药敏' : '添加药敏'} width = {648} noFooter >\r\n\t\t\t\t\t<ViewModel\r\n\t\t\t\t\t\tuuid = { uuid }\r\n\t\t\t\t\t\ttype = { type }\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal1.close() }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\microorganism\\drug-sensitivity.js",["2013","2014"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '药物名称',\tname: 'drug_name',\t\t    required: true},\r\n\t\t\t{ label: '英文名称',\tname: 'name_en'},\r\n\t\t\t{ label: '简写',        name: 'short_name' },\r\n\t\t\t{ label: '通道号',\t\tname: 'channel_number'},\r\n\t\t\t{ label: '描述',\t\tname: 'description',\t\tfull: true,         width: '100%',  type: 'textarea'},\r\n\t\t],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'药物名称',     name:'drug_name'},\r\n\t\t{ label:'英文名称',     name:'name_en'},\r\n\t\t{ label:'通道号',       name:'channel_number'},\r\n\t\t{ label:'所属药敏组合', name:'group_id',        type:'select',      data:[],    nameStr: 'group_name'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 药敏组合列表\r\n            $fn.getCache({\r\n                cache: d.drugGroupSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[3].data = data\r\n                    } else {\r\n                        $http.submit(null, 'drug-group/selectList').then(data => {\r\n                            this.forms[3].data = data.items\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        this.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'drug-sensitivity/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '抗菌药物名称', \tfield: 'drug_name' },\r\n\t\t{ title: '英文名称',        field: 'name_en'},\r\n\t\t{ title: '描述',           field: 'description'},\r\n\t\t{ title: '简写',            field: 'short_name' },\r\n\t\t{ title: '通道号',          field: 'channel_number' },\r\n\t\t{ title: '操作', align:'tc', render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'drug-sensitivity/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                })\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('drug-sensitivity/del', '删除', param, () => {\r\n\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='药敏' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const data = {\r\n                                name_en: v.name_en || '',\r\n                                short_name: v.short_name || '',\r\n                                channel_number: v.channel_number || '',\r\n                                description: v.description || ''\r\n                            }\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'drug-sensitivity/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, ...data }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'drug-sensitivity/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\microorganism\\tp\\dialog-view-drug.js",["2015"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tdata1: [],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'药物名称',\tname:'drug_name'}\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\t$http.submit(null, 'drug-group/infoDrug', { param: {uuid: this.props.uuid} }).then(data => {\r\n\t\t\tthis.setState({data1: data})\r\n\t\t})\r\n\t\tif (this.props.type === 2) {\r\n\t\t\tthis.fetch(this.model)\r\n\t\t}\r\n\t}\r\n\tfilterArr (arr, uuid) {\r\n\t\tlet d = arr.filter(i => i.uuid === uuid)\r\n\t\tlet flag = d && d.length ? false : true\r\n\t\treturn flag\r\n\t}\r\n\tgetSelection(selectData) {\r\n\t\tlet data = this.state.data1\r\n\t\tselectData.forEach(i => {\r\n\t\t\tif (this.filterArr(this.state.data1, i.uuid)) {\r\n\t\t\t\tlet v1 = {...i, checked: false}\r\n\t\t\t\tdata.push(v1)\r\n\t\t\t} \r\n\t\t})\r\n\t\treturn data\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'drug-sensitivity/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '抗菌药物名称', \tfield: 'drug_name',\t\twidth: 120 },\r\n\t\t{ title: '英文名称',\t\tfield: 'name_en',\t\twidth: 80},\r\n\t\t{ title: '描述',\t\t\tfield: 'description',\twidth: 150},\r\n\t]\r\n\tcols1 = [\r\n\t\t{ title: '抗菌药物名称', \tfield: 'drug_name',\t\twidth: 120 },\r\n\t\t{ title: '英文名称',\t\tfield: 'name_en',\t\twidth: 80},\r\n\t\t{ title: '描述',\t\t\tfield: 'description',\twidth: 150},\r\n\t\t{ title: '操作', align:'tc', width: 80, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='删除' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst { data1 } = this.state\r\n\t\t\t\t\t\tconst newData = data1.filter(i => i.uuid !== rows.uuid)\r\n\t\t\t\t\t\tthis.setState({data1: newData})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, data1, pag } = this.state\r\n\t\tconst { onClose, uuid, type } = this.props\r\n\t\t// type=1:查看，2:添加\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{\r\n\t\t\t\t\ttype === 2 && \r\n\t\t\t\t\t<SearchForm\r\n\t\t\t\t\t\tclassName\t= 'pb10'\r\n\t\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\ttype === 2 && \r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\t\tonRow\t\t\t= { v => {\r\n\t\t\t\t\t\t\tthis.setState({ selectedKeys: v, data1: [...this.getSelection(v)] })\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t<div className='pb10 b'>已选药敏</div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= ''\r\n\t\t\t\t\tcols\t\t\t= { this.cols1 }\r\n\t\t\t\t\tdata \t\t\t= { data1 }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<Button label='取消' size='middle' className='mr15 dkm' onClick={onClose} />\r\n\t\t\t\t\t<Button label='确定' ghost size='middle' className='mr15 dkm' onClick={(v) => {\r\n\t\t\t\t\t\tconst param = {\r\n\t\t\t\t\t\t\tgroup_id: uuid,\r\n\t\t\t\t\t\t\tuuid: data1.map(i => i.uuid)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$http.submit(null, 'drug-group/addDrug', { param }).then(data => {\r\n\t\t\t\t\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\t\t\t\t\tonClose()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\material\\stock-warning.js",["2016"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window\r\n// ===================================================================== antd\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面变量\r\nconst warntypeOption = [\r\n    { name: \"数量不足\", value: \"1\" },\r\n    { name: \"即将过期\", value: \"2\" }\r\n  ]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n\t}\r\n\tforms = [\r\n\t\t{ label: '物料名称',    name:'mate_name'},\r\n\t\t{ label: '物料编号',        name:'mate_number'},\r\n\t\t{ label: '物料分类',        name:'mate_type',       type:'select', data: []},\r\n        { label: '警告类型',        name:'warn_type',       type:'select', data: []},\r\n\t]\r\n    model = {}\r\n\tcomponentDidMount(){\r\n        this.forms[3].data = warntypeOption\r\n        // 物料分类\r\n        $fn.getDisItem({\r\n\t\t\tcode: 26000,\r\n\t\t\tcallback: (data) => {\r\n                this.forms[2].data = data\r\n            }\r\n        })\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'material/warning', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '物料名称',        field: 'mate_name', \t        width: 130 },\r\n\t\t{ title: '物料编号',\t\tfield: 'mate_number',\t\t    width: 100 },\r\n\t\t{ title: '物料类型', \t\tfield: 'type',                  width: 80 },\r\n\t\t{ title: '剩余量',          field: 'unuse_qty',             width: 80 },\r\n\t\t{ title: '距离过期（天）',   field: 'expire_date_num',       width: 80 },\r\n\t\t{ title: '保质期',          field: 'shelf_life',            width: 100 },\r\n    ]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='库存警告列表'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n                    onChange    = {(v, press, { name, data }) => $fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\material\\material-list.js",["2017"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面变量\r\nconst conditionOptions = [\r\n    { name: \"小于\", value: \"<\" },\r\n    { name: \"大于\", value: \">\" },\r\n    { name: \"等于\", value: \"=\" }\r\n  ]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '物料编号',\t    name: 'mate_number',        required: true },\r\n            { label: '物料名称',\t    name: 'mate_number',        required: true },\r\n            { label: '物料分类',\t\tname: 'mate_type',          required: true,     type: 'select',     data: [] },\r\n\t\t\t{ label: '描述',\t\t\tname: 'mate_content',       type: 'textarea' }\r\n        ],\r\n\t}\r\n\tforms = [\r\n\t\t{ label: '物料编号',        name:'mate_number'},\r\n\t\t{ label: '输入物料名称',    name:'mate_name'},\r\n\t\t{ label: '物料分类',        name:'mate_type',       type:'select', data: []},\r\n        { label: '未使用量',        name:'condition',       type:'select', data: []},\r\n        { label: '',               name:'unuse_qty'},\r\n        { label: '最后采购时间',    name:'date',\t\t\ttype:'date-range',\tnames:['start_date','end_date'], value:[] },\r\n\t]\r\n    model = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        this.forms[3].data = conditionOptions\r\n        // 物料分类\r\n        $fn.getDisItem({\r\n\t\t\tcode: 26000,\r\n\t\t\tcallback: (data) => {\r\n                this.forms[2].data = data\r\n                submit[2].data = data\r\n            }\r\n        })\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'material/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '物料名称',        field: 'mate_name', \t        width: 130 },\r\n\t\t{ title: '物料编号',\t\tfield: 'mate_number',\t\t    width: 100 },\r\n\t\t{ title: '物料类型', \t\tfield: 'mate_type_name',        width: 80 },\r\n\t\t{ title: '单位',            field: 'unit_name',             width: 80 },\r\n\t\t{ title: '总量',            field: 'total',                 width: 80 },\r\n\t\t{ title: '未使用量', \t\tfield: 'unuse_qty',             width: 80 },\r\n\t\t{ title: '使用量',          field: 'use_qty',               width: 80 },\r\n\t\t{ title: '过期量',          field: 'expire_qty',            width: 80 },\r\n\t\t{ title: '即将过期量', \t\tfield: 'coming_soon_qty',\t    width: 80 },\r\n\t\t{ title: '保质期',          field: 'shelf_life',            width: 100 },\r\n\t\t{ title: '最后采购时间',    field: 'updated_at',\t        width: 160,         align: 'tc' },\r\n\t\t{ title: '操作', align:'tc', width: 110, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n                    <Button label='编辑' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null, 'material/info', { param: { uuid: rows.uuid } }).then(data => {\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                            this.refs.modal.open()\r\n                        })\r\n\t\t\t\t\t} } />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n    ]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='物料列表'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n                    onChange    = {(v, press, { name, data }) => $fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title='编辑' width={648} noFooter>\r\n                <SubmitForm\r\n                    modal\r\n                    data\t\t= { submit }\r\n                    onChange    = {(v, press, { name, data }) => {} }\r\n                    onSubmit\t= { v => {\r\n                        if (this.isEdit) {\r\n                            const param = { ...this.rows, ...v }\r\n                            $http.submit(null, 'material/edit', { param }).then(data => {\r\n                                message.then(f => f.default.success('修改成功'))\r\n                                this.refs.modal.close()\r\n                                this.fetch()\r\n                            })\r\n                        }\r\n                    }}\r\n                    onClose\t\t= { ()=>this.refs.modal.close() }\r\n                    init        = { form => this.form = form }\r\n                    />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\material\\material-import.js",["2018"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '物料编号',\tname: 'mate_number',\t\trequired: true},\r\n\t\t\t{ label: '物料名称',\tname: 'mate_name',\t\trequired: true},\r\n\t\t\t{ label: '物料分类',\tname: 'mate_type',          required: true,\t\ttype: 'select',\t    data: [] },\r\n\t\t\t{ label: '审核人',\t\tname: 'reviewer',\t\t\trequired: true},\r\n\t\t\t{ label: '采购数量',\tname: 'buy_qty',    \t\trequired: true},\r\n\t\t\t{ label: '采购人',\t\tname: 'buy_user',   \t\trequired: true},\r\n\t\t\t{ label: '采购时间',\tname: 'buy_date',   \t\trequired: true,     type:'date-time',   after:true},\r\n            // { label: '生产厂家',\tname: 'mate_factory_id',\ttype: 'select',\t    data: []},\r\n            { label: '生产厂家',\tname: 'mate_factory_id'},\r\n            { label: '单位',\t\tname: 'unit',\t\t        required: true,\t\ttype: 'select',\t    data: []},\r\n            { label: '入库批次号',\tname: 'batch_number',\t\trequired: true},\r\n\t\t\t{ label: '保质期',\t\tname: 'shelf_life',\t\t    required: true},\r\n\t\t]\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'物料编号',     name:'mate_number'},\r\n\t\t{ label:'物料名称',     name:'mate_name'},\r\n        { label:'物料分类',     name:'mate_type',       type:'select',      data:[]},\r\n        { label:'批次号',       name:'batch_number'},\r\n        { label:'采购人',       name:'buy_user'},\r\n        { label: '采购时间',    name:'date',\t\t\ttype:'date-range',\tnames:['start_date','end_date'], value:[] },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit } = this.state\r\n\t\t// 物料分类\r\n        $fn.getDisItem({\r\n\t\t\tcode: 26000,\r\n\t\t\tcallback: (data) => {\r\n                this.forms[2].data = data\r\n                submit[2].data = data\r\n            }\r\n        })\r\n        // 单位\r\n        $fn.getDisItem({\r\n\t\t\tcode: 22000,\r\n\t\t\tcallback: (data) => {\r\n                submit[8].data = data\r\n            }\r\n        })\r\n        this.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'material-in/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '物料名称', \tfield: 'mate_name' },\r\n\t\t{ title: '物料编号', \tfield: 'mate_number'},\r\n\t\t{ title: '物料类型', \tfield: 'mate_type_name'},\r\n\t\t{ title: '单位',        field: 'unit_name'},\r\n\t\t{ title: '采购人',      field: 'buy_user'},\r\n\t\t{ title: '审核人',      field: 'reviewer'},\r\n\t\t{ title: '采购数量', \tfield: 'buy_qty'},\r\n\t\t{ title: '批次号',      field: 'batch_number'},\r\n\t\t{ title: '购买时间', \tfield: 'buy_date', align:'tc' },\r\n\t\t{ title: '保质期',      field: 'shelf_life'},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\tsubmit[6].value = ''\r\n\t\t\t\tsubmit[7].value = ''\r\n\t\t\t\tsubmit[8].value = ''\r\n\t\t\t\tsubmit[9].value = ''\r\n\t\t\t\tsubmit[10].value = ''\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} }\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='物料入库批次列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'material-in/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\material\\material-export.js",["2019"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '申请单',      name: 'apply_form_id',      type:'select',          data:[],            idStr: 'uuid'},\r\n\t\t\t{ label: '物料名称',\tname: 'mate_id',\t\t    required: true,         type:'select',      data:[]},\r\n\t\t\t{ label: '出库数量',\tname: 'out_qty',            required: true },\r\n            { label: '领取人',      name: 'receive_user',       required: true },\r\n            { label: '检测组',      name:'pgroup_id',           required: true,         type:'select',          data:[],    idStr: 'uuid'},\r\n\t\t\t{ label: '审核人',\t\tname: 'reviewer',\t\t\trequired: true},\r\n\t\t\t{ label: '出库码',      name: 'out_code'},\r\n\t\t]\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'物料名称',     name:'material',        type:'select',      data:[]},\r\n        { label:'检测组',       name:'pproject',        type:'select',      data:[],    idStr: 'uuid'},\r\n        { label:'领取人',       name:'receive_user'},\r\n        { label: '采购时间',    name:'date',\t\t\ttype:'date-range',\tnames:['start_date','end_date'], value:[] },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit } = this.state\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 申请单\r\n            $fn.getCache({\r\n                cache: d.mtApplyFormSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'mt-apply-form/select').then(data => {\r\n                            submit[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            // 检测组列表\r\n            $fn.getCache({\r\n                cache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[1].data = data\r\n                        submit[4].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n                            this.forms[1].data = data\r\n                            submit[4].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            // 物料名称\r\n            $fn.getCache({\r\n                cache: d.materialSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[0].data = data\r\n                        submit[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'material/select').then(data => {\r\n                            this.forms[0].data = data\r\n                            submit[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            this.setState({submit})\r\n        })\r\n        this.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'material-out/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '申请单编号', \t    field: 'apply_form_id' },\r\n\t\t{ title: '出库单编号', \t    field: 'out_form_number'},\r\n\t\t{ title: '物料名称', \t    field: 'mate_name'},\r\n\t\t{ title: '物料编号',        field: 'mate_number'},\r\n\t\t{ title: '出库量',          field: 'out_qty'},\r\n\t\t{ title: '出库时间', \t    field: 'out_time',          align:'tc' },\r\n\t\t{ title: '出库码',          field: 'out_code'},\r\n\t\t{ title: '审核人',          field: 'reviewer'},\r\n\t\t{ title: '检测组', \t        field: 'project_name'},\r\n\t\t{ title: '领取人号',        field: 'receive_user'},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\tsubmit[6].value = ''\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n            } },\r\n            { label:'查看申请单', onClick:()=>{\r\n\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/material-export/application')\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='物料出库记录列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'material-out/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\material\\application-list.js",["2020"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面变量\r\nconst enabledOptions = [\r\n    { name: '已申请', value: '1' },\r\n    { name: '申请中', value: '0' },\r\n    { name: '已过期', value: '-1' }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '物料名称',\tname: 'mate_id',            required: true,         type:'select',      data:[]},\r\n\t\t\t{ label: '申请数量',\tname: 'apply_qty',          required: true },\r\n            { label: '申请人',      name: 'apply_user',         required: true },\r\n            { label: '申请时间',\tname: 'apply_for_time',     required: true,         type:'date-time',   after:true},\r\n\t\t\t{ label: '检测组',\t\tname: 'pgroup_id',\t\t\trequired: true,         type:'select',      data:[]},\r\n\t\t\t{ label: '审核人',      name: 'reviewer'},\r\n\t\t]\r\n\t}\r\n\tforms = [\r\n\t\t{ label: '物料名称',    name:'material',        type:'select',      data:[]},\r\n        { label: '检测组',      name:'pproject',        type:'select',      data:[],    idStr: 'uuid'},\r\n        { label: '申请人',      name:'apply_user'},\r\n        { label: '状态',        name:'apply_status',    type:'select',      data:[]},\r\n        { label: '申请时间',    name:'date',\t\t\ttype:'date-range',\tnames:['start_date','end_date'], value:[] },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        this.forms[3].data = enabledOptions\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 检测组列表\r\n            $fn.getCache({\r\n                cache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[1].data = data\r\n                        submit[4].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n                            this.forms[1].data = data\r\n                            submit[4].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            // 物料名称\r\n            $fn.getCache({\r\n                cache: d.materialSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[0].data = data\r\n                        submit[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'material/select').then(data => {\r\n                            this.forms[0].data = data\r\n                            submit[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            this.setState({submit})\r\n        })\r\n        this.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'mt-apply-form/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '申请单', \t        field: 'apply_number' },\r\n\t\t{ title: '申请时间', \t    field: 'apply_for_time',          align:'tc'},\r\n\t\t{ title: '物料名称', \t    field: 'mate_name'},\r\n\t\t{ title: '物料编号',        field: 'mate_number'},\r\n\t\t{ title: '申请数量',        field: 'apply_qty'},\r\n\t\t{ title: '申请码', \t        field: 'encrypt_code' },\r\n\t\t{ title: '审核人',          field: 'reviewer'},\r\n\t\t{ title: '检测组', \t        field: 'project_name'},\r\n\t\t{ title: '状态',            field: 'apply_status', render: ({rows}) => {\r\n            const d = enabledOptions.filter(i => i.value === rows.apply_status)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        } },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n            } },\r\n            { label:'返回', onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='申请单列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'mt-apply-form/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\laboratory-settings\\rule-setting.js",["2021"],"import React from 'react'\r\nimport { Radio } from 'antd';\r\n// ===================================================================== global declare\r\nconst { $http, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n        check_user_conf: ''\r\n    }\r\n    form = [\r\n        { label: '主检、审核不能为同一人',          value: '0' },\r\n        { label: '主检、批准不能为同一人',          value: '1' },\r\n        { label: '审核、批准不能为同一人',          value: '2' },\r\n        { label: '主检、审核、批准不能为同一人',    value: '3' },\r\n    ]\r\n\tcomponentDidMount(){\r\n\t\t$http.submit(null, 'conf-lab-settings/info').then(data => {\r\n            setTimeout(() => {\r\n                this.setState({check_user_conf: data.check_user_conf})\r\n            })\r\n        })\r\n    }\r\n    onChange = e => {\r\n        this.setState({\r\n            check_user_conf: e.target.value,\r\n        });\r\n    };\r\n\trender(){\r\n        const { check_user_conf } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='规则设置'>\r\n                <div className='ex fv xplr pt10'>\r\n                    <h6 className=\"w xmlr h40 bbor1 mb10\">报告单基础信息</h6>\r\n                    <div className='mb20'>\r\n                        <Radio.Group onChange={this.onChange} value={check_user_conf}>\r\n                            {\r\n                                this.form.map(item => {\r\n                                    return <div className='mb20' key={item.value}><Radio value={item.value}>{item.label}</Radio></div>\r\n                                })\r\n                            }\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className='mt20 tc'>\r\n                        <Button label='保存' size='large' className='mr15' width={90} onClick={() => {\r\n                            $http.submit(null, 'conf-lab-settings/add', {param: {check_user_conf}}).then(data => {\r\n                                message.then(f => f.default.success('保存成功'))\r\n                            })\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\merge-rules.js",["2022"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n            { label: '分组名称',\t    name: 'merge_name',         required: true },\r\n\t\t\t{ label: '处理方法',\t    name: 'handle_type',        required: true,     type: 'select',     data: []},\r\n            { label: '排序',\t    \tname: 'sort',               required: true },\r\n            { label: '报告单模板',\t\tname: 'report_tpl_id',      required: true,     type: 'select',     data: [] },\r\n\t\t\t{ label: '描述',\t\t\tname: 'description',        type: 'textarea' }\r\n        ],\r\n\t}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        // 处理方法\r\n        $fn.getDisItem({\r\n\t\t\tcode: 63050,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[1].data = data\r\n\t\t\t\tthis.setState({submit})\r\n            }\r\n        })\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 报告单模板\r\n            $fn.getCache({\r\n                cache: d.reportTemplate, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[3].data = data\r\n                    } else {\r\n                        $http.submit(null, 'kd-report-from/select').then(data => {\r\n                            submit[3].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            this.setState({submit})\r\n        })\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'merge-group/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type:'checkbox' },\r\n\t\t{ title: '分组编号', \t    field: 'merge_no',\t\twidth: 150 },\r\n\t\t{ title: '分组名称', \t\tfield: 'merge_name',\t\twidth: 160 },\r\n\t\t{ title: '分组描述', \t\tfield: 'description',\t\twidth: 150 },\r\n\t\t{ title: '处理方法',\t\tfield: 'handle_type_name',\t\twidth: 100 },\r\n\t\t{ title: '操作', align:'tc', width:150, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' className='ml15' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null, 'merge-group/info', {param: {uuid: rows.uuid}}).then(data => {\r\n\t\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n            } },\r\n            { label:'删除', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n                const keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\t$http.submit(null,'merge-group/del',{ param:{uuid: keys, enabled: '-1'} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} }\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='合并规则' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '添加' : '编辑'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data\t\t= { submit }\r\n                        onChange    = {(v, press, { name, data }) => {} }\r\n\t\t\t\t\t\tonSubmit\t= { v => {\r\n                            if (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...this.rows, ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'merge-group/edit', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('修改成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, ...this.form }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'merge-group/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n                        onClose\t\t= { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\merge-project.js",["2023"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n        detailData: []\r\n\t}\r\n\tforms = [\r\n\t\t{ label: '条码号',        name:'spec_code'},\r\n\t\t{ label: '报告单编号',    name:'report_num'},\r\n\t\t{ label: '合并规则',      name:'merge_group_id',    type:'select', data: []},\r\n\t]\r\n    model = {}\r\n\tcomponentDidMount(){\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 合并规则\r\n            $fn.getCache({\r\n                cache: d.mergeGroupSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'merge-group/select').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'merge-report/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '条码号', \t        field: 'spec_code', \t        width: 130 },\r\n\t\t{ title: '报告单编号',\t\tfield: 'report_num',\t\t    width: 100 },\r\n\t\t{ title: '报告单模板', \t\tfield: 'report_name',\t\t    width: 120 },\r\n\t\t{ title: '姓名', \t        field: 'patient_name',\t\t\twidth: 100 },\r\n\t\t{ title: '规则名称',\t\tfield: 'merge_name',\t\t    width: 160 },\r\n\t\t{ title: '处理方法', \t\tfield: 'handle_type_name',\t    width: 100 },\r\n\t\t{ title: '创建日期', \t\tfield: 'created_at',\t        width: 160,         align: 'tc' },\r\n\t\t{ title: '操作', align:'tc', width:300, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='预览报告单' className='ml15' ghost onClick={e=>{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}}  />\r\n                    <Button label='召回报告单' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tconfirm.then(f => {\r\n\t\t\t\t\t\t\tf.default({\r\n\t\t\t\t\t\t\t\tmsg: '是否确认召回报告单?',\r\n\t\t\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\t\t\t$http.submit(null, 'merge-report/stop', { param: { report_num: rows.report_num } }).then(data => {\r\n\t\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} } />\r\n                    <Button label='查看项目明细' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\t$http.submit(null, 'merge-report/kindlists', { param: { merge_report_id: rows.uuid } }).then(data => {\r\n                            this.setState({detailData: data.items})\r\n                        })\r\n                        this.refs.modal.open()\r\n\t\t\t\t\t} } />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n    ]\r\n    detailCols = [\r\n        { title: '条码号', \t        field: 'spec_code',             width: 130 },\r\n        { title: '自然项目',        field: 'parent_kind_name',      width: 180 },\r\n        { title: '实验号', \t        field: 'experiment_num',        width: 100 },\r\n        { title: '项目名称',        field: 'kind_name', \t        width: 150 },\r\n        { title: '姓名',            field: 'patient_name', \t        width: 100 },\r\n        { title: '结果', \t        field: 'result',                width: 150 },\r\n        { title: '接收时间',        field: 'receive_time', \t        width: 160 }\r\n    ]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, detailData } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='合并项目列表'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n                    onChange    = {(v, press, { name, data }) => $fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title='查看项目明细' width={1200} noFooter>\r\n                    <Table\r\n                        className\t\t= 'xplr'\r\n                        cols\t\t\t= { this.detailCols }\r\n                        data \t\t\t= { detailData }\r\n                        loading \t\t= { pullLoading }\r\n                        onRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n                        pag\t\t\t\t= { pag }\r\n                        onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                    />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\tp\\label-template-form.js",["2024"],"import React from 'react'\r\n// ================================================================== global declare\r\nconst { $fn, $async } = window\r\n// ================================================================== global antd\r\nconst Form = $async(() => import('@antd/form/form'))\r\nconst Item = $async(() => import('@antd/form/item'))\r\nconst Button = $async(() => import('@antd/button'))\r\nconst Input = $async(() => import('@antd/form/input'))\r\nconst Select = $async(() => import('@antd/form/select'))\r\nconst Checkbox = $async(()=>import('@antd/form/checkbox'))\r\nconst Title = $async(()=>import('#tp/title'))\r\n// =================================================================\r\nconst addItem = { sortLabel: '位置排序', sortName: 'sort', contentLabel: '内容', contentName: 'content' }\r\nexport default class extends React.Component {\r\n    state = {\r\n        paperTypeOption: [],\r\n        checked: false,\r\n        loading: false,\r\n        addList: [\r\n            { sortLabel: '位置排序', sortName: 'sort', contentLabel: '内容', contentName: 'content' },\r\n        ]\r\n    }\r\n    componentDidMount(){\r\n\t\t$fn.getDisItem({\r\n\t\t\tcode: 38000,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tthis.setState({paperTypeOption: data})\r\n\t\t\t}\r\n\t\t})\r\n    }\r\n    \r\n    render() {\r\n        const { paperTypeOption, addList, checked, loading } = this.state\r\n        const { onClose } = this.props\r\n        return (\r\n            <Form className='submit-form small-form fv ex ' layout='horizontal'>\r\n                <div className='ex rel'>\r\n                    <div className='fxw'>\r\n                        <Item label='标签模板名称' name='tpl_number' rules={[{ required: true }]}>\r\n                            <Input p='请输入标签模板名称' width={180} bordered={false} size='middle' />\r\n                        </Item>\r\n                        <Item label='纸型' name='tpl_number'>\r\n                            <Select data={paperTypeOption} p='请选择纸型' width={180} bordered={false} size='middle' onChanged={(n,press) => {}}/> \r\n                        </Item>\r\n                    </div>\r\n                    <div className='mt15 ml20'><Checkbox value={checked} label='只显示当前打印机支持的纸型' onChange={v=>{}} /></div>\r\n                    <div className={`wh fv r5px bcf`}>\r\n                        <Title title='内容设置' noPadding={true}>\r\n                            <Button label='增加' loading={loading} onClick={v=>{\r\n                                const list = addList\r\n                                list.push(addItem)\r\n                                this.setState({addList: list})\r\n                                console.log(addList)\r\n                            }} />\r\n                        </Title>\r\n                    </div>\r\n                    <div className=''>\r\n                        {\r\n                            $fn.hasArray(addList) && addList.map((item, index) => {\r\n                                return (\r\n                                    <div  key={index} className='fxw fxm mt20'>\r\n                                        <Item label={item.sortLabel} name={item.sortName} rules={[{ required: item.required }]}>\r\n                                            <Input p={`请输入${item.sortLabel}`} width={120} bordered={false} size='middle' />\r\n                                        </Item>\r\n                                        <Item label={item.contentLabel} name={item.contentName} rules={[{ required: item.required }]}>\r\n                                            <Select data={paperTypeOption} p='请选择内容' width={120} bordered={false} size='middle' onChanged={(n,press) => {}}/>\r\n                                        </Item>\r\n                                        <Button className='ml40' label='删除' loading={loading} onClick={v=>{}} />\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='fxmc mt20'>\r\n\t\t\t\t\t<Button label='取消' ghost className='mr15' size='middle' width={90} onClick={onClose} />\r\n\t\t\t\t\t<Button label='确定 Enter' htmlType='sbumit' size='middle' width={90} />\r\n\t\t\t\t</div>\r\n            </Form>\r\n        )\r\n    }\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\expno-template.js",["2025"],"import React from 'react'\r\n// ===================================================================== antd\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst compleOptions = [\r\n    { name: \"启用\", value: \"1\" },\r\n    { name: \"禁用\", value: \"0\" },\r\n    { name: \"删除\", value: \"-1\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n\t\t{ label: '模板编号',        name:'lab_number' },\r\n\t\t{ label: '模板名称',        name:'lab_name'}\r\n\t]\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'lis-lab-tag/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type:'checkbox' },\r\n\t\t{ title: '模板编号', \t    field: 'lab_number'},\r\n\t\t{ title: '模板名称',\t\tfield: 'lab_name' },\r\n\t\t{ title: '当前实验号', \t\tfield: 'last_code'},\r\n\t\t{ title: '结束时间', \t    field: 'cycle_end', align:'tc' },\r\n\t\t{ title: '状态',\t        field: 'enabled', render: ({rows}) => {\r\n            const d = compleOptions.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        } },\r\n\t\t{ title: '描述',            field: 'description' },\r\n\t\t{ title: '操作', align:'tc', width:150, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' className='ml15' ghost onClick={e=>{\r\n                        $fn.push(this, $fn.getRoot().root + 'laboratory-manage/expno-template/add?id=' + rows.uuid)\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\treturn [\r\n            { label:'设置规则 F2', code:'F2', onClick:()=>{\r\n\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/expno-template/add')\r\n            } },\r\n            { label:'启用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n                $http.submit(null,'lis-lab-tag/on',{ param:{uuid: keys, enabled: '1'} }).then(data=>{\r\n                    message.then(f=>f.default.success('启用成功'))\r\n                    this.fetch(this.model)\r\n                })\r\n            } },\r\n            { label:'禁用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n                $http.submit(null,'lis-lab-tag/off',{ param:{uuid: keys, enabled: '-1'} }).then(data=>{\r\n                    message.then(f=>f.default.success('禁用成功'))\r\n                    this.fetch(this.model)\r\n                })\r\n\t\t\t} },\r\n            { label:'删除', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\t$http.submit(null,'lis-lab-tag/delete',{ param:{uuid: keys} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} }\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='实验号模板' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n                    onChange    = { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\label-template.js",["2026"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst templateStatus = [\r\n    { name: \"启用\", value: \"1\" },\r\n    { name: \"禁用\", value: \"0\" },\r\n]\r\n// ===================================================================== component\r\nconst SubmitModel = $async(() => import('./tp/label-template-form'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '只显示当前打印机支持的纸型',\tname: 'gps_number',\t\ttype: 'checkbox'},\r\n\t\t\t{ label: '步经参数',\tname: 'step_param',\t\trequired: true},\r\n\t\t\t{ label: '设备状态',\tname: 'device_status',\trequired: true,\t\ttype: 'select',\tdata: [] },\r\n\t\t\t{ label: '排序',\t\tname: 'sort',\t\t\trequired: true},\r\n\t\t\t{ label: 'IMEI',\t\tname: 'gps_unique',\t\trequired: true},\r\n        ]\r\n\t}\r\n\tforms = [\r\n\t\t{ label: '模板编号',        name:'tpl_number' },\r\n\t\t{ label: '状态',        name:'enabled', type: 'select', data: []}\r\n\t]\r\n\tcomponentDidMount(){\r\n        this.forms[1].data = templateStatus\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'lis-tag-template/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type:'checkbox' },\r\n\t\t{ title: '标签名称', \t    field: 'tag_name'},\r\n\t\t{ title: '模板编号',\t\tfield: 'tpl_number' },\r\n\t\t{ title: '纸型', \t\tfield: 'pager_type_name'},\r\n\t\t{ title: '创建时间', \t    field: 'created_at', align:'tc' },\r\n\t\t{ title: '状态',\t        field: 'enabled', render: ({rows}) => {\r\n            const d = templateStatus.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        } },\r\n\t\t{ title: '操作', align:'tc', render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' className='ml15' ghost onClick={e=>{\r\n                        this.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tsubmit[0].value = rows['gps_number']\r\n\t\t\t\t\t\tsubmit[1].value = rows['step_param']\r\n\t\t\t\t\t\tsubmit[2].value = rows['device_status']\r\n\t\t\t\t\t\tsubmit[3].value = rows['sort']\r\n\t\t\t\t\t\tsubmit[4].value = rows['gps_unique']\r\n\t\t\t\t\t\tthis.rows = rows\r\n\t\t\t\t\t\tthis.isEdit = true\r\n\t\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\treturn [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n            } },\r\n            { label:'启用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n                $http.submit(null,'lis-tag-template/on',{ param:{uuid: keys} }).then(data=>{\r\n                    message.then(f=>f.default.success('启用成功'))\r\n                    this.fetch(this.model)\r\n                })\r\n            } },\r\n            { label:'禁用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n                $http.submit(null,'lis-tag-template/off',{ param:{uuid: keys} }).then(data=>{\r\n                    message.then(f=>f.default.success('禁用成功'))\r\n                    this.fetch(this.model)\r\n                })\r\n\t\t\t} },\r\n            { label:'删除', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\t$http.submit(null,'lis-tag-template/delete',{ param:{uuid: keys} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} }\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='标签模板' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n                    onChange    = { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                     <SubmitModel onClose = { ()=>this.refs.modal.close() } />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\label\\expno-template-add.js",["2027"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n// ===================================================================== private component\r\nconst selectType = [\r\n\t{ value: \"0\", name: \"数字\" },\r\n\t{ value: \"1\", name: \"字母\" }\r\n]\r\nconst prefix_auto_data = [\r\n\t{name: '年', value: 'Y'},\r\n\t{name: '月', value: 'M'},\r\n\t{name: '日', value: 'D'},\r\n\t{name: '年月', value: 'YM'},\r\n\t{name: '年日', value: 'YD'},\r\n\t{name: '月日', value: 'MD'},\r\n\t{name: '数值', value: 'INT'},\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdepartment: [],\r\n\t\tsubmit: [],\r\n\t\tid:$fn.query('id'),\r\n\t\tmodel: {}\r\n\t}\r\n\tforms =  [\r\n\t\t{ label:'实验号模板名称', \t\tname:'lab_name',\t\t\trequired: true},\r\n\t\r\n\t\t{ label:'动态前缀', \t\t\tname:'prefix_auto',\t\t\ttype:'select',\t\t\tdata:[],\t\t\t\ttitle: '前缀配置' },\r\n\t\t{ label:'前缀值起始值', \t\tname:'prefix_int_start',\tprefix: 'INT'\t},\r\n\t\t{ label:'前缀值结束值', \t\tname:'prefix_int_end',\t\tprefix: 'INT'},\r\n\t\t{ label:'前缀值增量', \t\t\tname:'prefix_int_inc',\t\tprefix: 'INT' },\r\n\t\r\n\t\t{ label:'前缀位数', \t\t\tname:'lab_rule_start_type',\trequired: true,\t\t\ttitle: '其他配置' },\r\n\t\t{ label:'类型', \t\t\t\tname:'start_type',\t\t\trequired: true,\t\t\ttype:'select',\t\t\tdata:[]},\r\n\t\t{ label:'数字编码', \t\t\tname:'lab_rule_start',\t\trequired: true,\t\t\tdisabled: true,\t\t\tstart_type: '0'},\r\n\t\t{ label:'后缀位数', \t\t\tname:'lab_rule_end_type',\trequired: true},\r\n\t\t{ label:'起始值', \t\t\t\tname:'lab_rule_end',\t\trequired: true,\t\t\tdisabled: true,},\r\n\t\t{ label:'加急前缀', \t\t\tname:'critical_prefix',\t\trequired: true },\r\n\t\t{ label:'加急起始值', \t\t\tname:'critical_start',\t\trequired: true,\t\t\tdisabled: true },\r\n\t\t{ label:'周期', \t\t\t\tname:'lab_cycle',\t\t\trequired: true, \t\ttype:'select',\t\t\tdata:[]},\r\n\t\r\n\t\t{ label:'周期值', \t\t\t\tname:'cycle_start',\t\t\tlab_cycle_number: ''},\r\n\t\t{ label:'开始时间', \t\t\tname:'cycle_start_time',\ttype:'time',\t\tafter:true,\t\t\t\tlab_cycle_number: '43901' },\r\n\t\t{ label:'结束时间', \t\t\tname:'cycle_end',\t\t\ttype:'time',\t\tafter:true,\t\t\t\tlab_cycle_number: '43901' },\r\n\t\t{ label:'描述', \t\t\t\tname:'description',\t\t\ttype: 'textarea'},\r\n\t]\r\n\tasync getDataAsync() {\r\n\t\tconst { id } = this.state\r\n\t\tif (id) {\r\n\t\t\t$http.submit(null, 'lis-lab-tag/info', {param: {uuid: id}}).then(data => {\r\n\t\t\t\tfor (let i in data) {\r\n\t\t\t\t\tthis.forms.forEach(item => {\r\n\t\t\t\t\t\tif ((i !== 'id' || i !== 'uuid' || i !== 'comp_id' || i !== 'created_at') && item.name === i) {\r\n\t\t\t\t\t\t\titem.value = data[i]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.form.setFieldsValue({...data})\r\n\t\t\t\t}, 200)\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.showForm = this.forms\r\n\t\tthis.showForm.forEach(item => {\r\n\t\t\t// 动态前缀\r\n\t\t\tif (item.name === 'prefix_auto') {\r\n\t\t\t\titem.data = prefix_auto_data\r\n\t\t\t}\r\n\t\t\t// 类型\r\n\t\t\tif (item.name === 'start_type') {\r\n\t\t\t\titem.data = selectType\r\n\t\t\t}\r\n\t\t\t// 动态前缀非数值\r\n\t\t\tif (item.prefix_auto !== 'INT') {\r\n\t\t\t\tthis.showForm = this.showForm.filter(i => i.prefix !== 'INT')\r\n\t\t\t}\r\n\t\t\tthis.showForm = this.showForm.filter(i => i.lab_cycle_number === undefined)\r\n\t\t})\r\n\t\t\r\n\t\tawait $fn.getDisItem({\r\n\t\t\tcode: 43900,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\t// 周期\r\n\t\t\t\tthis.showForm.forEach(item => {\r\n\t\t\t\t\tif (item.name === 'lab_cycle') {\r\n\t\t\t\t\t\titem.data = data\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}) // 设备类型\r\n\t\t\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (this.form) {\r\n\t\t\t\t // 周期\r\n\t\t\t\tif (this.form.getFieldValue('lab_cycle') === '43901') {\r\n\t\t\t\t\tthis.showForm.splice(this.showForm.length - 1, 0, this.forms[14], this.forms[15])\r\n\t\t\t\t}\r\n\t\t\t\tif (this.form.getFieldValue('lab_cycle') && this.form.getFieldValue('lab_cycle') !== '43901') {\r\n\t\t\t\t\tthis.showForm.splice(this.showForm.length - 1, 0, this.forms[13])\r\n\t\t\t\t}\r\n\t\t\t\t// 动态前缀\r\n\t\t\t\tif (this.form.getFieldValue('prefix_auto') === 'INT') {\r\n\t\t\t\t\tthis.showForm.splice(2, 0, this.forms[2], this.forms[3], this.forms[4])\r\n\t\t\t\t}\r\n \t\t\t\t\r\n\t\t\t\tthis.showForm.forEach(item => {\r\n\t\t\t\t\t// 数字编码 | 字母编码\r\n\t\t\t\t\tif (this.form.getFieldValue('start_type')) {\r\n\t\t\t\t\t\tif (item.name === 'lab_rule_start') {\r\n\t\t\t\t\t\t\tif (this.form.getFieldValue('start_type') === '1') {\r\n\t\t\t\t\t\t\t\titem.label = '字母编码'\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\titem.label = '数字编码'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\titem.disabled = false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 后缀位数\r\n\t\t\t\t\tif (this.form.getFieldValue('lab_rule_end_type')) {\r\n\t\t\t\t\t\tif (item.name === 'lab_rule_end' || item.name === 'critical_start') {\r\n\t\t\t\t\t\t\titem.disabled = false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tthis.setState({submit: this.showForm})\r\n\t\t}, 500)\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\t\r\n\t\tthis.getDataAsync()\r\n\t}\r\n\trender(){\r\n\t\tconst { submit, id } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='实验号模板-设置规则'>\r\n\t\t\t\t<div className='ex fv xplr pt10'>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tdata\t= { submit }\r\n\t\t\t\t\t\tbtnSize\t= 'large'\r\n\t\t\t\t\t\tokText\t= { id ? '修改 Enter' : '保存 Enter'} \r\n\t\t\t\t\t\tonChange    = {(v, press, { name, data }) => {\r\n\t\t\t\t\t\t\tif (name === 'lab_cycle') { // 周期\r\n\t\t\t\t\t\t\t\tconst d = this.showForm.filter(i => i.lab_cycle_number !== undefined)\r\n\t\t\t\t\t\t\t\tif (d.length) {\r\n\t\t\t\t\t\t\t\t\tif (v === '43901') { // 天\r\n\t\t\t\t\t\t\t\t\t\tthis.showForm.splice(this.showForm.length - 2, 1, this.forms[14], this.forms[15])\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis.showForm.splice(this.showForm.length - 3, 2, this.forms[13])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (v === '43901') { // 天\r\n\t\t\t\t\t\t\t\t\t\tthis.showForm.splice(this.showForm.length - 1, 0, this.forms[14], this.forms[15])\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis.showForm.splice(this.showForm.length - 1, 0, this.forms[13])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.setState({submit: this.showForm})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.showForm.forEach((item) => {\r\n\t\t\t\t\t\t\t\tif (name === item.name) {\r\n\t\t\t\t\t\t\t\t\titem.value = v\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (name === 'prefix_auto') { // 动态前缀\r\n\t\t\t\t\t\t\t\t\tif (v === 'INT') {\r\n\t\t\t\t\t\t\t\t\t\tif (this.showForm[2].prefix !== 'INT') {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.showForm.splice(2, 0, this.forms[2], this.forms[3], this.forms[4])\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tif (this.showForm[2].prefix === 'INT') {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.showForm.splice(2, 3)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.setState({submit: this.showForm})\r\n\t\t\t\t\t\t\t\t} else if (name === 'start_type') { // 类型\r\n\t\t\t\t\t\t\t\t\tif (item.name === 'lab_rule_start') { // 数字编码 | 字母编码\r\n\t\t\t\t\t\t\t\t\t\tif (v === '1') {\r\n\t\t\t\t\t\t\t\t\t\t\titem.label = '字母编码'\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\titem.label = '数字编码'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\titem.disabled = false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.setState({submit: this.showForm})\r\n\t\t\t\t\t\t\t\t} else if (name === 'lab_rule_end_type') { // 后缀位数\r\n\t\t\t\t\t\t\t\t\tif (item.name === 'lab_rule_end' || item.name === 'critical_start') {\r\n\t\t\t\t\t\t\t\t\t\tif (v) {\r\n\t\t\t\t\t\t\t\t\t\t\titem.disabled = false\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\titem.disabled = true\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.setState({submit: this.showForm})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n                        } } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconst data = {\r\n\t\t\t\t\t\t\t\tprefix_int_end: '',\r\n\t\t\t\t\t\t\t\tprefix_int_inc: '',\r\n\t\t\t\t\t\t\t\tprefix_int_start: ''\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(id){\r\n\t\t\t\t\t\t\t\tconst param = {...data, ...v, uuid: id}\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'lis-lab-tag/edit', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('修改成功'))\r\n\t\t\t\t\t\t\t\t\t$fn.back(this)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tconst param = {...data, ...v}\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'lis-lab-tag/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\t$fn.back(this)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=> $fn.back(this) }\r\n\t\t\t\t\t\tinit\t= {form => this.form = form}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\experiment-num\\index.js",["2028"],"import React from 'react'\r\n// =====================================================================\r\nimport ScanImage from '@img/saoma.svg'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Select = $async(()=>import('@antd/form/select'))\r\nconst message = import('@antd/message')\r\n// =====================================================================\r\nconst Image = $async(()=>import('@tp/image'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n        submit: [\r\n            { label: '条码号',\t    name: 'spec_code',      disabled: true,     full: true,     width: '100%' },\r\n            { label: '标本架编号',  name: 'sf_number',      disabled: true,     full: true,     width: '100%' },\r\n            { label: '实验号',      name: 'lb_tpl',         full: true,         width: '100%',  onChange: (v, press, {name}) => {\r\n                this.form.lb_tpl = v\r\n            } },\r\n            { label: '创建人',      name: 'founder',        disabled: true },\r\n            { label: '领取人',      name: 'receive_user',   disabled: true },\r\n            { label: '创建时间',    name: 'created_at',     disabled: true },\r\n            { label: '领取时间',    name: 'receive_time',   disabled: true },\r\n            { label: '岗位',        name: 'job_id',         disabled: true },\r\n            { label: '状态',        name: 'handover_type',  disabled: true,     type: 'select',     data: [\r\n                { name: '未领取', value: '0' },\r\n                { name: '已领取', value: '1' }\r\n            ] },\r\n        ],\r\n        submit1: [\r\n            { label: '模板名称',    name: 'lab_name',       disabled: true,     full: true,     width: '100%' },\r\n            { label: '模板编号',    name: 'lab_number',     disabled: true,     full: true,     width: '100%' },\r\n            { label: '当前实验号',  name: 'last_code',      disabled: true,     full: true,     width: '100%' },\r\n            { label: '结束时间',    name: 'cycle_end',      disabled: true },\r\n            { label: '状态',        name: 'enabled',        disabled: true,     type: 'select', data: [\r\n                { name: '启用', value: '1' },\r\n                { name: '禁用', value: '0' },\r\n                { name: '删除', value: '-1' }\r\n            ] },\r\n            { label: '描述',        name: 'description',    disabled: true,     type: 'textarea',   rows: 4,    full: true, width: '100%' },\r\n        ],\r\n        lisLabTemData: []\r\n    }\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            // 模板列表\r\n            $fn.getCache({\r\n                cache: d.lisLabTemplate, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.setState({lisLabTemData: data})\r\n                    } else {\r\n                        $http.submit(null, 'lis-lab-tag/select').then(data => {\r\n                            this.setState({lisLabTemData: data})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n    // 条码号查询\r\n    queryCode() {\r\n        $http.submit(null, 'lis-lab-tag/getSpecInfo', {param: {spec_code: this.form.spec_code || ''}}).then(data => {\r\n            this.form.setFieldsValue({...data})\r\n            message.then(f => f.default.success('查询成功'))\r\n            this.form.lb_tpl = data.lb_tpl || ''\r\n            this.form.receive_time = data.receive_time || ''\r\n        })\r\n    }\r\n\trender(){\r\n        const { submit, submit1, lisLabTemData } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='实验号管理'>\r\n                <div className='pt10 fx'>\r\n                    <div className='bor1 r4px ex fv mr15'>\r\n                        <h6 className=\"w xmlr pl20 h40 b\">实验号修改</h6>\r\n                        <div className='plr20 pb20 bbor1 fxmj'>\r\n                            <div className='ex mr20'>\r\n                                <Input size='middle' p='请输入条码号' width='100%' bordered={false} onChange={v=> this.form.spec_code = v} onPressEnter={v=>{\r\n                                    this.queryCode()\r\n                                }}  />\r\n                            </div>\r\n                            <div>\r\n                                <Image className='mr15 dkm' src={ ScanImage } height='24px' width='24px'/>\r\n                                <Button label='查询' size='small' className='mr15 dkm' onClick={() => {\r\n                                    this.queryCode()\r\n                                }} />\r\n                                <Button label='保存' size='small' className='mr15 dkm' onClick={(v) => {\r\n                                    const param = {\r\n                                        spec_code: this.form.spec_code,\r\n                                        new_lb_tpl: this.form.lb_tpl,\r\n                                        receive_time: this.form.receive_time\r\n                                    }\r\n                                    $http.submit(null, 'lis-lab-tag/modifyLabTag', { param }).then(data => {\r\n                                        message.then(f => f.default.success('保存成功'))\r\n                                    })\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='mb20 p20'>\r\n                            <SubmitForm\r\n                                modal\r\n                                display = { true }\r\n                                data = { submit }\r\n                                onChange = {(v, press, { name, data }) => {} } \r\n                                onSubmit = { v => {}}\r\n                                onClose = { ()=>this.refs.modal.close() }\r\n                                init    = { form => this.form = form }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='bor1 r4px ex fv'>\r\n                        <h6 className=\"w xmlr pl20 h40 b\">实验号重置</h6>\r\n                        <div className='plr20 pb20 bbor1 fxmj'>\r\n                            <div className='ex mr20'>\r\n                                <Select size='middle' p='请选择模板' data={lisLabTemData} width='100%' bordered={false} onChanged={v => {\r\n                                    const d = lisLabTemData.filter(i => i.value === v)\r\n                                    this.lab_number = $fn.hasArray(d) && d[0].lab_number\r\n                                }} />\r\n                            </div>\r\n                            <div>\r\n                                <Button label='查询' size='small' className='mr15 dkm' onClick={() => {\r\n                                    $http.submit(null, 'lis-lab-tag/getLabTagInfo', {param: {lab_number: this.lab_number || ''}}).then(data => {\r\n                                        this.form2.setFieldsValue({...data})\r\n                                        this.form2.uuid = data.uuid || ''\r\n                                        message.then(f => f.default.success('查询成功'))\r\n                                    })\r\n                                }} />\r\n                                <Button label='重置' size='small' className='mr15 dkm' onClick={() => {\r\n                                    $http.submit(null, 'lis-lab-tag/resetLabTag', {param: {uuid: this.form2.uuid || ''}}).then(data => {\r\n                                        message.then(f => f.default.success('操作成功'))\r\n                                    })\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='mb20 p20'>\r\n                        <SubmitForm\r\n                            modal\r\n                            display = { true }\r\n                            data = { submit1 }\r\n                            onChange    = {(v, press, { name, data }) => {} } \r\n                            onSubmit = { v => {}}\r\n                            onClose = { ()=>this.refs.modal.close() }\r\n                            init    = { form => this.form2 = form }\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\repair-record.js",["2029"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst enabledOptions = [\r\n    { name: \"未执行\", value: \"1\" },\r\n    { name: \"已执行\", value: \"2\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '设备名称',\t    \tname: 'device_id',\t\t    required: true,     type: 'select',     data: [],       nameStr: 'title', idStr:'value'},\r\n            { label: '设备编号',\t    \tname: 'device_number',      disabled: true },\r\n            { label: '设备型号',\t    \tname: 'device_model',\t    disabled: true },\r\n            { label: '所属科室',\t\t\tname: 'project_name',       disabled: true },\r\n\t\t\t{ label: '维修总时长',\t\t\tname: 'repair_time' },\r\n\t\t\t{ label: '总故障时间',\t\t\tname: 'total_time' },\r\n\t\t\t{ label: '维修后确认方式',\t    name: 'con_mode' },\r\n\t\t\t{ label: '故障日期',\t    \tname: 'fault_time',\t\t\ttype:'date-time', after:true },\r\n\t\t\t{ label: '厂商维修人员',\t    name: 'repair_user' },\r\n\t\t\t{ label: '故障原因',\t    \tname: 'fault_reason',\t\ttype: 'textarea' },\r\n\t\t\t{ label: '修理情况概述',\t    name: 'reason',\t\t\t\ttype: 'textarea' },\r\n\t\t\t{ label: '对病人结果的影响',\tname: 'result_infl',\t\ttype: 'textarea' },\r\n\t\t\t{ label: '操作人员',\t\t\tname: 'operator_user' },\r\n\t\t\t{ label: '操作日期',\t\t\tname: 'operator_time',\t\ttype:'date-time', after:true },\r\n\t\t\t{ label: '审核人员',\t\t\tname: 'auditor' },\r\n\t\t\t{ label: '审核日期',\t\t\tname: 'auditor_time',\t\ttype:'date-time', after:true },\r\n        ],\r\n\t}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 设备名称\r\n            $fn.getCache({\r\n                cache: d.deviceSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        data.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n                        submit[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'device/select').then(data => {\r\n                            data.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n                            submit[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            this.setState({submit})\r\n        })\r\n\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'de-repair-log/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '设备名称', \t    field: 'device_name',\t\twidth: 150 },\r\n\t\t{ title: '设备型号', \t\tfield: 'device_model',\t\twidth: 160 },\r\n\t\t{ title: '故障日期', \t\tfield: 'fault_time',\t\twidth: 150 },\r\n\t\t{ title: '故障原因',\t\tfield: 'fault_reason',\t\twidth: 100 },\r\n\t\t{ title: '厂家维修人员', \tfield: 'repair_user',\t     width: 130 },\r\n\t\t{ title: '状态', \t\t\tfield: 'enabled',        \twidth: 130, render: ({rows}) => {\r\n            const d = enabledOptions.filter(i => i.value === rows.imple_sit)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        } },\r\n\t\t{ title: '操作', align:'tc', width:150, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='故障设备明细' className='ml15' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null, 'de-repair-log/info', {param: {uuid: rows.uuid}}).then(data => {\r\n\t\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n            { label:'维修记录新增 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\tsubmit[6].value = ''\r\n\t\t\t\tsubmit[7].value = ''\r\n\t\t\t\tsubmit[8].value = ''\r\n\t\t\t\tsubmit[9].value = ''\r\n\t\t\t\tsubmit[10].value = ''\r\n\t\t\t\tsubmit[11].value = ''\r\n\t\t\t\tsubmit[12].value = ''\r\n\t\t\t\tsubmit[13].value = ''\r\n\t\t\t\tsubmit[14].value = ''\r\n\t\t\t\tsubmit[15].value = ''\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n            } },\r\n            { label:'返回', onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='维修记录' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '故障设备明细' : '维修记录新增'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data\t\t= { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit } = this.state;\r\n                            if (name === 'device_id') {\r\n                                this.deviceInfo = submit[0].data.filter(i => i.value === v)\r\n                                if ($fn.hasArray(this.deviceInfo)) {\r\n\t\t\t\t\t\t\t\t\tconst d = this.deviceInfo[0]\r\n\t\t\t\t\t\t\t\t\t$http.submit(null, 'project-team/info', { param: {uuid: d.pgroup_id} }).then(data => {\r\n\t\t\t\t\t\t\t\t\t\tthis.form = {\r\n\t\t\t\t\t\t\t\t\t\t\tproject_id: data.uuid || ''\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tconst form = {\r\n\t\t\t\t\t\t\t\t\t\t\tdevice_name: d.device_name,\r\n\t\t\t\t\t\t\t\t\t\t\tdevice_number: d.device_number,\r\n\t\t\t\t\t\t\t\t\t\t\tdevice_model: d.device_model,\r\n\t\t\t\t\t\t\t\t\t\t\tproject_name: data.project_name || ''\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tthis.formSubmit.setFieldsValue({...form})\r\n\t\t\t\t\t\t\t\t\t})\r\n                                }\r\n                            }\r\n                        } } \r\n\t\t\t\t\t\tonSubmit\t= { v => {\r\n                            if (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...this.rows, ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'de-repair-log/editNew', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('修改成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, ...this.form }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'de-repair-log/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n                        onClose\t\t= { ()=>this.refs.modal.close() }\r\n                        init    \t= { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\project-related.js",["2030"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面变量\r\n// 联机状态\r\nconst relOptions = [\r\n    { name: \"切换\",    value: '1' },\r\n    { name: \"启用\",  value: '0' },\r\n    { name: \"停用\",    value: '-1' }\r\n]\r\nconst enabledOptions = [\r\n    { name: \"正常\",    value: '1' },\r\n    { name: \"异常\",  value: '-1' }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '设备名称',\tname: 'device_id',\t\ttype: 'select',     data: [],       required: true, nameStr: 'title', idStr:'value'},\r\n            { label: '设备编号',\tname: 'device_number',\tdisabled: true },\r\n\t\t\t{ label: '单一项目',\tname: 'kind_id',\t\ttype:'select',      data:[],        required: true, },\r\n\t\t\t{ label: '从属项目',\tname: 'sub_kind_id',\ttype:'select',      data:[],        nameStr: 'kind_name',   idStr: 'uuid' },\r\n\t\t\t{ label: '通道号',\t\tname: 'pass_num',\t\ttype:'select',\t    data:[],        nameStr: 'title',\t\tidStr: 'uuid' },\r\n\t\t\t{ label: '联机状态',\tname: 'rel_status',     type:'select',\t    data:[] },\r\n\t\t],\r\n\t\t// 编辑通道号\r\n\t\tsubmit1: [\r\n\t\t\t{ label: '设备名称',\t\tname: 'device_name',\t    disabled: true},\r\n\t\t\t{ label: '设备编号',\t\tname: 'device_number',\t    disabled: true},\r\n\t\t\t{ label: '通道号',\t\t\tname: 'pass_num',\t\t    required: true,\t\ttype: 'select',\tdata: [], nameStr: 'title', idStr: 'uuid'},\r\n\t\t\t{ label: '仪器项目名称',\tname: 'device_pro_name',\tdisabled: true},\r\n\t\t]\r\n\t}\r\n\tforms = [\r\n\t\t{ label: '设备编号',        name:'device_number'},\r\n\t\t{ label: '设备名称',        name:'device_id',           type:'select', data: [], nameStr: 'title'},\r\n\t\t{ label: '设备型号',        name:'device_model'},\r\n\t\t{ label: '仪器通道号',      name:'pass_num'},\r\n\t\t{ label: '关联项目名称',    name:'sub_name'},\r\n\t]\r\n    model = {device_id: $fn.query('id') || ''}\r\n    getList({api, params, callback}) {\r\n        $http.submit(null, api, {param: params}).then(data => {\r\n            callback && callback(data)\r\n        })\r\n    }\r\n\tcomponentDidMount(){\r\n        const { submit, submit1 } = this.state\r\n        submit[5].data = relOptions\r\n        $fn.dataSave('pass-num').then(local => {\r\n            if ($fn.hasArray(local)) {\r\n                submit1[2].data = local\r\n            } else {\r\n                $http.submit(null, 'de-pass-info/index').then(data => {\r\n                  submit1[2].data = data  \r\n                })\r\n            }\r\n            this.setState({submit1})\r\n        })\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 单一项目\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.singleKindSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'kind-info/kindSelect').then(data => {\r\n                            submit[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 设备名称\r\n            $fn.getCache({\r\n                cache: d.deviceSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        data.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n                        submit[0].data = data\r\n                        this.forms[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'device/select').then(data => {\r\n                            data.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n                            submit[0].data = data\r\n                            this.forms[1].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            this.setState({submit})\r\n        })\r\n\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'de-rel-kind/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type:'checkbox' },\r\n\t\t{ title: '编号',\t\t    field: 'device_number',\t\twidth: 100 },\r\n\t\t{ title: '设备型号', \t\tfield: 'device_model',\t\twidth: 160 },\r\n\t\t{ title: '设备名称', \t    field: 'device_name',\t\twidth: 150 },\r\n\t\t{ title: '关联项目代码', \tfield: 'sub_code',\t\t\twidth: 100 },\r\n\t\t{ title: '关联项目名称', \tfield: 'sub_name',\t        width: 130 },\r\n\t\t{ title: '自然项目代码', \tfield: 'kind_code', \t\twidth: 100 },\r\n\t\t{ title: '自然项目名称',\tfield: 'kind_name',\t\t\twidth: 130 },\r\n\t\t{ title: '仪器通道号',\t\tfield: 'pass_num',\t\t    width: 100 },\r\n\t\t{ title: '联机状态',\t\tfield: 'rel_status',\t\twidth: 100, render: ({rows}) => {\r\n            let d = relOptions.filter(i => i.value === rows.rel_status)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        } },\r\n\t\t{ title: '状态',\t\t    field: 'enabled',\t\t    width: 100, render: ({rows}) => {\r\n            let d = enabledOptions.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        } },\r\n\t\t{ title: '操作', align:'tc', width:300, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n                    <Button label='停用' ghost onClick={() => {\r\n                        confirm.then(f => {\r\n\t\t\t\t\t\t\tf.default({\r\n\t\t\t\t\t\t\t\tmsg: '是否确认停用?',\r\n\t\t\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\t\t\t$http.submit(null, 'de-rel-kind/setStatus', { param: { uuid: [rows.uuid], rel_status: \"-1\" } }).then(data => {\r\n\t\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n                    }} />\r\n                    <Button label={rows.rel_status === '-1' ? '正常' : '异常'} className='ml15' ghost onClick={() => {\r\n                        confirm.then(f => {\r\n\t\t\t\t\t\t\tf.default({\r\n\t\t\t\t\t\t\t\tmsg: `是否确认${rows.rel_status === '-1' ? '正常' : '异常'}?`,\r\n\t\t\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\t\t\t$http.submit(null, 'de-rel-kind/abnormal', { param: { uuid: rows.uuid, rel_status: rows.rel_status === '-1' ? '0' : '-1' } }).then(data => {\r\n\t\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n                    }} />\r\n\t\t\t\t\t<Button label='编辑通道号' className='ml15' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst { submit1 } = this.state\r\n\t\t\t\t\t\t$http.submit(null, 'de-rel-kind/info', {param: {uuid: rows.uuid}}).then(data => {\r\n\t\t\t\t\t\t\tthis.getList({api: 'de-pass-info/passInfo', params: {device_id: data.device_id}, callback: (res) => {\r\n\t\t\t\t\t\t\t\tconst d = res.items\r\n\t\t\t\t\t\t\t\td.forEach(v=> v.title = `${v.pass_num}(${v.device_pro_name})`)\r\n\t\t\t\t\t\t\t\tif ($fn.hasArray(d)) {\r\n\t\t\t\t\t\t\t\t\tsubmit1[2].data = d\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsubmit1[2].data = []\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}})\r\n\t\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\t\tsubmit1[0].value = data['device_name']\r\n\t\t\t\t\t\t\tsubmit1[1].value = data['device_number']\r\n\t\t\t\t\t\t\tsubmit1[2].value = data['pass_num']\r\n\t\t\t\t\t\t\tsubmit1[3].value = data['device_pro_name']\r\n\t\t\t\t\t\t\tthis.rows = data\r\n\t\t\t\t\t\t\tthis.setState({submit1})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n            { label: '联机F1', code: 'F1', disabled: !this.state.selectedKeys.length, onClick: () => {\r\n                confirm.then(f => {\r\n                    f.default({\r\n                        msg: '是否确认联机?',\r\n                        onOk: close => {\r\n                            const keys = this.state.selectedKeys.map(v=>v.uuid)\r\n                            $http.submit(null, 'de-rel-kind/setStatus', { param: { uuid: keys, rel_status: \"0\" } }).then(data => {\r\n                                message.then(f => f.default.success('联机成功'))\r\n                                this.fetch(this.model)\r\n                                close()\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            } },\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\tthis.setState({ submit })\r\n            } }\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, submit1 } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='项目关联' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n                    onChange    = {(v, press, { name, data }) => {\r\n\t\t\t\t\t\t$fn.onChange.call(this, v, press, () => {\r\n\t\t\t\t\t\t\tif (name && name === 'device_id') {\r\n\t\t\t\t\t\t\t\treturn { device_name: data.device_name }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit        = { form => form.setFieldsValue({device_id: this.model.device_id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title='添加' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit } = this.state;\r\n                            if (name && name === 'kind_id') {\r\n                                this.getList({api: 'kd-subordinate-set/subSelect', params: {kind_id: v}, callback: (res) => {\r\n                                    if ($fn.hasArray(res.items)) {\r\n                                        submit[3].data = res.items\r\n                                    } else  {\r\n                                        submit[3].data = []\r\n                                    }\r\n                                    this.submitVal2 = v\r\n                                    this.submitVal3 = ''\r\n                                    submit[0].value = this.submitVal0\r\n                                    submit[2].value = this.submitVal2\r\n                                    submit[1].value = this.submitVal1\r\n                                    submit[3].value = this.submitVal3\r\n                                    submit[4].value = this.submitVal4\r\n                                    submit[5].value = this.submitVal5\r\n                                    this.setState({submit})\r\n                                }})\r\n                            } \r\n                            if (name && name === 'device_id') {\r\n                                this.getList({api: 'de-pass-info/select', params: {device_id: v}, callback: (res) => {\r\n                                    res.forEach(v=> v.title = `${v.pass_num}(${v.device_pro_name})`)\r\n                                    if ($fn.hasArray(res)) {\r\n                                        submit[4].data = res\r\n                                    } else {\r\n                                        submit[4].data = []\r\n                                    }\r\n                                    this.submitVal0 = v\r\n                                    const d = submit[0].data.filter(i => i.value === v)\r\n                                    this.submitVal1 = d[0].device_number\r\n                                    this.submitVal4 = ''\r\n                                    submit[0].value = v\r\n                                    submit[1].value = this.submitVal1\r\n                                    submit[2].value = this.submitVal2\r\n                                    submit[3].value = this.submitVal3\r\n                                    submit[4].value = this.submitVal4\r\n                                    submit[5].value = this.submitVal5\r\n                                    this.setState({submit})\r\n                                }})\r\n                            }\r\n                            if (name === 'sub_kind_id') {\r\n                                this.submitVal3 = v\r\n                            }\r\n                            if (name === 'pass_num') {\r\n                                this.submitVal4 = v\r\n                            }\r\n                            if (name === 'rel_status') {\r\n                                this.submitVal5 = v\r\n                            }\r\n                        } } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const param = { ...v }\r\n                            $http.submit(null, 'de-rel-kind/add', { param }).then(data => {\r\n                                message.then(f => f.default.success('添加成功'))\r\n                                this.refs.modal.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => form.setFieldsValue({rel_status: '0'}) }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal1' title='编辑通道号' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit1 }\r\n\t\t\t\t\t\tonChange = { (v, press, { name, data }) => {\r\n\t\t\t\t\t\t\tif (name === 'pass_num') {\r\n\t\t\t\t\t\t\t\tconst d = submit1[2].data.filter(i => i.uuid === v)\r\n\t\t\t\t\t\t\t\tsubmit1[2].value = d[0].pass_num\r\n\t\t\t\t\t\t\t\tsubmit1[3].value = d[0].device_pro_name\r\n\t\t\t\t\t\t\t\tthis.setState({submit1})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconst param = { ...this.rows, ...v}\r\n\t\t\t\t\t\t\t$http.submit(null,'de-rel-kind/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal1.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal1.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-result-manage.js",["2031","2032","2033"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[]\r\n    }\r\n    \r\n    forms = [\r\n        { label:'标本条码',     name:'spec_code'},\r\n        { label:'实验号',       name:'experiment_num'},\r\n        { label: '项目名称',    name:'kind_id',\t            type:'select',      data:[]},\r\n        { label:'设备名称',     name:'device_name',\t        type:'select',      data: [],   nameStr: 'device_name', idStr: 'device_name'},\r\n        { label:'设备编号',     name:'device_uid'},\r\n        { label:'通道号',       name:'device_channel'},\r\n        { label:'结果时间',\t\tname:'date',\t\t\t    type:'date-range',\tnames:['start_at', 'end_at'], value:[] },\r\n    ]\r\n\t// 请求参数\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 设备名称\r\n            $fn.getCache({\r\n                cache: d.deviceResult4Select, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[3].data = data\r\n                    } else {\r\n                        $http.submit(null, 'result-unit-item/getDeviceResult4Select').then(data => {\r\n                            this.forms[3].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            // 项目名称\r\n            $fn.getCache({\r\n                cache: d.kindinfoSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'kind-info/select').then(data => {\r\n                            this.forms[2].data = data.items\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'result-unit-item/getDeviceResultList', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '标本条码',\tfield: 'spec_code',\t\t    width: 110 },\r\n\t\t{ title: '实验号',\t\tfield: 'lab_tag',\t\t    width: 80 },\r\n\t\t{ title: '通道号',\t\tfield: 'device_channel',\twidth: 80 },\r\n\t\t{ title: '结果时间',\tfield: 'msg_send_at',\t\twidth: 150,\t\talign: 'tc' },\r\n\t\t{ title: '设备名称',\tfield: 'device_name',\t\twidth: 200 },\r\n\t\t{ title: '设备编号',\tfield: 'device_uid',\t\twidth: 100 },\r\n\t\t{ title: '项目',\t\tfield: 'kind_name',\t\t    width: 200 },\r\n\t\t{ title: '值',          field: 'value',\t\t\t    width: 100 },\r\n\t\t{ title: '值1', \t    field: 'value1',\t\t\twidth: 150 },\r\n\t\t{ title: '值2',         field: 'value2',\t        width: 150 },\r\n\t\t{ title: '值3',         field: 'value3', \t\t    width: 150 },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='设备结果管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n                    loading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\instrument-manage.js",["2034"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '设备名称',\t    name: 'device_id',\t\t    required: true,     type: 'select',     data: [],       nameStr: 'title', idStr:'value'},\r\n            { label: '设备编号',\t    name: 'device_number',\t    disabled: true },\r\n            { label: '设备项目名称',\tname: 'device_pro_name',    required: true },\r\n\t\t\t{ label: '通道号',\t\t    name: 'pass_num',           required: true },\r\n\t\t\t{ label: '描述',\t        name: 'desc_info',         type:'textarea' },\r\n\t\t],\r\n\t}\r\n\tforms = [\r\n\t\t{ label: '设备名称',        name:'device_id',           type:'select', data: [], nameStr: 'title'},\r\n\t\t{ label: '设备型号',        name:'device_model'},\r\n\t\t{ label: '仪器项目名称',    name:'device_pro_name'},\r\n\t\t{ label: '通道号',          name:'item_name'},\r\n\t]\r\n    model = {device_id: $fn.query('id') || ''}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 设备名称\r\n            $fn.getCache({\r\n                cache: d.deviceSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        data.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n                        submit[0].data = data\r\n                        this.forms[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'device/select').then(data => {\r\n                            data.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n                            submit[0].data = data\r\n                            this.forms[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            this.setState({submit})\r\n        })\r\n\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'de-pass-info/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type:'checkbox' },\r\n\t\t{ title: '设备名称', \t    field: 'device_name',\t\twidth: 150 },\r\n\t\t{ title: '设备编号',\t\tfield: 'device_number',\t\twidth: 100 },\r\n\t\t{ title: '设备型号', \t\tfield: 'device_model',\t\twidth: 160 },\r\n\t\t{ title: '仪器项目名称', \tfield: 'device_pro_name',\t\t\twidth: 100 },\r\n\t\t{ title: '通道号',\t\t\tfield: 'pass_num',\t\t    width: 100 },\r\n\t\t{ title: '描述', \t\t\tfield: 'desc_info',\t        width: 130 },\r\n\t\t{ title: '操作', align:'tc', width:150, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' className='ml15' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null, 'de-pass-info/info', {param: {uuid: rows.uuid}}).then(data => {\r\n\t\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n                this.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n            } },\r\n            { label: '删除', disabled: !this.state.selectedKeys.length, onClick: () => {\r\n                confirm.then(f => {\r\n                    f.default({\r\n                        msg: '是否确认删除?',\r\n                        onOk: close => {\r\n                            const keys = this.state.selectedKeys.map(v=>v.uuid)\r\n                            $http.submit(null, 'de-pass-info/del', { param: { uuid: keys } }).then(data => {\r\n                                message.then(f => f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n                                close()\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            } },\r\n\t\t\t{ label:'文件导入', ghost:true, onClick:()=>{\r\n\t\t\t\t\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='仪器通道管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n                    onChange    = {(v, press, { name, data }) => {\r\n\t\t\t\t\t\t$fn.onChange.call(this, v, press, () => {\r\n\t\t\t\t\t\t\tif (name && name === 'device_id') {\r\n\t\t\t\t\t\t\t\treturn { device_name: data.device_name }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit        = { form => form.setFieldsValue({device_id: this.model.device_id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data \t\t= { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit } = this.state;\r\n                            if (name === 'device_id') {\r\n                                this.deviceInfo = submit[0].data.filter(i => i.value === v)\r\n                                this.formSubmit.setFieldsValue({device_number: $fn.hasArray(this.deviceInfo) ? this.deviceInfo[0].device_number : ''})\r\n                            }\r\n                        } } \r\n\t\t\t\t\t\tonSubmit \t= { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v }\r\n                                $http.submit(null, 'de-pass-info/edit', { param }).then(data => {\r\n                                    message.then(f => f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'de-pass-info/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n\t\t\t\t\t\t}}\r\n                        onClose \t= { ()=>this.refs.modal.close() }\r\n                        init    \t= { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-repair.js",["2035"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst enabledOptions = [\r\n    { name: \"未执行\", value: \"1\" },\r\n    { name: \"已执行\", value: \"2\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n            { label: '设备名称',\t    name: 'device_id',\t\t    required: true,     type: 'select',     data: [],       nameStr: 'title', idStr:'value'},\r\n            { label: '设备编号',\t    name: 'device_number',      disabled: true },\r\n            { label: '设备型号',\t    name: 'device_model',\t    disabled: true },\r\n            { label: '科室',\t\t    name: 'project_name',       disabled: true },\r\n\t\t\t{ label: '维修申请人',\t\tname: 'service_user' },\r\n\t\t\t{ label: '维修日期',\t\tname: 'service_at',\t\t\ttype:'date-time', after:true },\r\n\t\t\t{ label: '故障原因',\t    name: 'service_content',     type:'textarea' },\r\n        ],\r\n\t}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 设备名称\r\n            $fn.getCache({\r\n                cache: d.deviceSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        data.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n                        submit[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'device/select').then(data => {\r\n                            data.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n                            submit[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            this.setState({submit})\r\n        })\r\n\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'de-device-service/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '设备名称', \t    field: 'device_name',\t\twidth: 150 },\r\n\t\t{ title: '设备编号',\t\tfield: 'device_number',\t\twidth: 100 },\r\n\t\t{ title: '设备型号', \t\tfield: 'device_model',\t\twidth: 160 },\r\n\t\t{ title: '生产厂家', \t\tfield: 'serial_man',\t\twidth: 100 },\r\n\t\t{ title: '科室',\t\t\tfield: 'project_name',\t\twidth: 100 },\r\n\t\t{ title: '维修申请人', \t\tfield: 'service_user',\t     width: 130 },\r\n\t\t{ title: '维修日期', \t\tfield: 'service_at',\t     width: 130 },\r\n\t\t{ title: '状态', \t\t\tfield: 'enabled',        \twidth: 130, render: ({rows}) => {\r\n            const d = enabledOptions.filter(i => i.value === rows.imple_sit)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        } },\r\n\t\t{ title: '操作', align:'tc', width:150, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='维修明细' className='ml15' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null, 'de-device-service/info', {param: {uuid: rows.uuid}}).then(data => {\r\n\t\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n            { label:'维修申请 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\tsubmit[6].value = ''\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n            } },\r\n            { label:'返回', onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='设备维修' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '维修明细' : '维修申请'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit } = this.state;\r\n                            if (name === 'device_id') {\r\n                                this.deviceInfo = submit[0].data.filter(i => i.value === v)\r\n                                if ($fn.hasArray(this.deviceInfo)) {\r\n\t\t\t\t\t\t\t\t\tconst d = this.deviceInfo[0]\r\n\t\t\t\t\t\t\t\t\t$http.submit(null, 'project-team/info', { param: {uuid: d.pgroup_id} }).then(data => {\r\n\t\t\t\t\t\t\t\t\t\tthis.form = {\r\n\t\t\t\t\t\t\t\t\t\t\tproject_id: data.uuid || ''\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tconst form = {\r\n\t\t\t\t\t\t\t\t\t\t\tdevice_name: d.device_name,\r\n\t\t\t\t\t\t\t\t\t\t\tdevice_number: d.device_number,\r\n\t\t\t\t\t\t\t\t\t\t\tdevice_model: d.device_model,\r\n\t\t\t\t\t\t\t\t\t\t\tproject_name: data.project_name || ''\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tthis.formSubmit.setFieldsValue({...form})\r\n\t\t\t\t\t\t\t\t\t})\r\n                                }\r\n                            }\r\n                        } } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            if (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...this.rows, ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'de-device-service/edit', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('修改成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, ...this.form }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'de-device-service/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-maintain.js",["2036"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst compleOptions = [\r\n    { name: \"已完成\", value: \"1\" },\r\n    { name: \"未完成\", value: \"2\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n            { label: '设备名称',\t    name: 'device_id',\t\t    required: true,     type: 'select',     data: [],       nameStr: 'title', idStr:'value'},\r\n            { label: '设备编号',\t    name: 'device_number',      disabled: true },\r\n            { label: '设备型号',\t    name: 'device_model',\t    disabled: true },\r\n            { label: '生产厂家',\t    name: 'serial_man',         disabled: true },\r\n\t\t\t{ label: '维护周期',\t\tname: 'imple_cycle',        required: true },\r\n\t\t\t{ label: '执行方',\t\t    name: 'imple_party' },\r\n\t\t\t{ label: '维护内容',\t    name: 'repair_content',     type:'textarea' },\r\n        ],\r\n        submit1: [\r\n            { label: '设备名称',\t    name: 'device_id',\t\t    required: true,     type: 'select',     data: [],       nameStr: 'title', idStr:'value'},\r\n            { label: '设备编号',\t    name: 'device_number',      disabled: true },\r\n            { label: '设备型号',\t    name: 'device_model',\t    disabled: true },\r\n            { label: '生产厂家',\t    name: 'serial_man',         disabled: true },\r\n\t\t\t{ label: '维护周期',\t\tname: 'imple_cycle',        required: true },\r\n\t\t\t{ label: '执行方',\t\t    name: 'imple_party' },\r\n\t\t\t{ label: '维护内容',\t    name: 'repair_content' },\r\n\t\t\t{ label: '执行情况',\t    name: 'imple_sit',     type:'select', data: [] },\r\n\t\t\t{ label: '备注',\t        name: 'remark' },\r\n\t\t],\r\n\t}\r\n\tforms = [\r\n\t\t{ label: '设备名称',        name:'device_id',           type:'select', data: [], nameStr: 'title'},\r\n\t\t{ label: '设备编号',        name:'device_number'}\r\n\t]\r\n    model = {device_id: $fn.query('id') || ''}\r\n\tcomponentDidMount(){\r\n        const { submit, submit1 } = this.state\r\n        submit1[7].data = compleOptions\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 设备名称\r\n            $fn.getCache({\r\n                cache: d.deviceSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        data.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n                        submit[0].data = data\r\n                        submit1[0].data = data\r\n                        this.forms[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'device/select').then(data => {\r\n                            data.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n                            submit[0].data = data\r\n                            submit1[0].data = data\r\n                            this.forms[0].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            this.setState({submit})\r\n        })\r\n\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'de-device-repair/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type:'checkbox' },\r\n\t\t{ title: '设备名称', \t    field: 'device_name',\t\twidth: 150 },\r\n\t\t{ title: '设备编号',\t\tfield: 'device_number',\t\twidth: 100 },\r\n\t\t{ title: '设备型号', \t\tfield: 'device_model',\t\twidth: 160 },\r\n\t\t{ title: '生产厂家', \tfield: 'serial_man',\t\t\twidth: 100 },\r\n\t\t{ title: '维护周期',\t\tfield: 'imple_cycle',\t\t    width: 100 },\r\n\t\t{ title: '执行方', \tfield: 'imple_party',\t        width: 130 },\r\n\t\t{ title: '执行人', \tfield: 'imple_user',\t        width: 130 },\r\n\t\t{ title: '维护时间', \tfield: 'repair_at',\t        width: 150, align: 'tc' },\r\n\t\t{ title: '执行情况', \tfield: 'imple_sit',\t        width: 130, render: ({rows}) => {\r\n            const d = compleOptions.filter(i => i.value === rows.imple_sit)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        } },\r\n\t\t{ title: '维护内容', \tfield: 'repair_content',\t        width: 130 },\r\n\t\t{ title: '备注', \tfield: 'remark',\t        width: 130 },\r\n\t\t{ title: '操作', align:'tc', width:150, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='维护登记' className='ml15' ghost onClick={e=>{\r\n                        const { submit1 } = this.state\r\n\t\t\t\t\t\t$http.submit(null, 'de-device-repair/info', {param: {uuid: rows.uuid}}).then(data => {\r\n\t\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit1, data, ()=>{this.setState({submit1})})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n            { label:'维护计划 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\tsubmit[6].value = ''\r\n\t\t\t\tthis.setState({ submit })\r\n            } },\r\n            { label:'设备维修', onClick:()=>{\r\n\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/equipment-maintain/repair')\r\n            } },\r\n            { label:'维修记录', onClick:()=>{\r\n\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/equipment-maintain/repair-record')\r\n\t\t\t} }\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, submit1 } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='设备维护' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n                    onChange    = {(v, press, { name, data }) => {\r\n\t\t\t\t\t\t$fn.onChange.call(this, v, press, () => {\r\n\t\t\t\t\t\t\tif (name && name === 'device_id') {\r\n\t\t\t\t\t\t\t\treturn { device_name: data.device_name }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit        = { form => form.setFieldsValue({device_id: this.model.device_id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title='计划新增' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit } = this.state;\r\n                            if (name === 'device_id') {\r\n                                this.deviceInfo = submit[0].data.filter(i => i.value === v)\r\n                                if ($fn.hasArray(this.deviceInfo)) {\r\n                                    const d = this.deviceInfo[0]\r\n                                    const form = {\r\n                                        device_name: d.device_name,\r\n                                        device_number: d.device_number,\r\n                                        device_model: d.device_model,\r\n                                        serial_man: d.serial_man\r\n                                    }\r\n                                    this.formSubmit.setFieldsValue({...form})\r\n                                }\r\n                            }\r\n                        } } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const param = { ...v }\r\n                            $http.submit(null, 'de-device-repair/add', { param }).then(data => {\r\n                                message.then(f => f.default.success('添加成功'))\r\n                                this.refs.modal.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n                <Modal ref='modal1' title='维护登记' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data        = { submit1 }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            if (name === 'device_id') {\r\n                                this.deviceInfo = submit1[0].data.filter(i => i.value === v)\r\n                                if ($fn.hasArray(this.deviceInfo)) {\r\n                                    const d = this.deviceInfo[0]\r\n                                    const form = {\r\n                                        device_name: d.device_name,\r\n                                        device_number: d.device_number,\r\n                                        device_model: d.device_model,\r\n                                        serial_man: d.serial_man\r\n                                    }\r\n                                    this.formSubmit.setFieldsValue({...form})\r\n                                }\r\n                            }\r\n                        } } \r\n\t\t\t\t\t\tonSubmit     = { v => {\r\n                            const param = { ...this.rows, ...v }\r\n                            $http.submit(null, 'de-device-repair/edit', { param }).then(data => {\r\n                                message.then(f => f.default.success('编辑成功'))\r\n                                this.refs.modal1.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose     = { ()=>this.refs.modal1.close() }\r\n                        init        = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-list.js",["2037"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n\t\r\n\tforms = [\r\n\t\t{ label: '设备名称',\tname: 'device_id',\t\ttype: 'select',\t\tdata: [],\tnameStr:'title'},\r\n\t\t{ label:'设备型号',\t\tname:'device_model',\ttype:'input' },\r\n\t\t{ label:'购买时间',\t\tname:'date',\t\t\ttype:'date-range',\tnames:['buy_date_start_date','buy_date_end_date'], value:['2020-12-10 12:12:50', '2020-12-11'] },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('device').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[0].data = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'device/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tdata.forEach(v=> v.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`)\r\n\t\t\t\t\tthis.forms[0].data = data\r\n\t\t\t\t\t$fn.dataSave('device', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\t// fetch = param => $http.paging(this,'device/index',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\tfetch = param => $fn.fetch.call(this,'device/index', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '编号', \t\tfield: 'device_number', \twidth:145 },\r\n\t\t{ title: '设备名称', \tfield: 'device_name', \t\twidth:150 },\r\n\t\t{ title: '设备型号', \tfield: 'device_model', \t\twidth:130 },\r\n\t\t{ title: '设备识别码', \tfield: 'id_code', \t\t\twidth:100, \talign:'tc' },\r\n\t\t{ title: '购买时间', \tfield: 'buy_date', \t\t\twidth:150, \talign:'tc' },\r\n\t\t{ title: '采购价格', \tfield: 'buy_price', \t\twidth:130 },\r\n\t\t{ title: '设备类型', \tfield: 'device_type_name', \twidth:80 },\r\n\t\t{ title: '所属科室', \tfield: 'project_name', \t\twidth:80 },\r\n\t\t{ title: '负责人', \t\tfield: 'pinyin_name', \t\twidth:130 },\r\n\t\t{ title: '启用时间', \tfield: 'enabeld_date', \t\twidth:150, \talign:'tc' },\r\n\t\t{ title: '联机类型', \tfield: 'rel_type_name', \twidth:100 },\r\n\t\t{ title: '设备状态', \tfield: 'device_status_name',width:80, \talign:'tc' },\r\n\t\t{ title: '操作', align:'tc', width:380, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={()=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/equipment-list/add?id=' + rows.uuid)\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button label='校准计划' ghost className='mlr5' onClick={()=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/calibration-plan?id=' + rows.uuid)\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<Button label='校准记录' ghost onClick={()=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/calibration-record?id=' + rows.uuid)\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<Button label='项目关联' ghost className='mlr5' onClick={()=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/project-related?id=' + rows.uuid)\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<Button label='设备维护' ghost onClick={()=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/equipment-maintain?id=' + rows.uuid)\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/equipment-list/add')\r\n\t\t\t} },\r\n\t\t\t{ label:'禁用', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认禁用？',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\t\t\t\t\t\tconsole.log(keys)\r\n\t\t\t\t\t\t\t$http.submit(null, 'device/delete', { param: { uuid: keys } }).then(data => {\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('禁用成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'文件导入', ghost:true, onClick:()=>{\r\n\t\t\t\t\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='设备列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange={(v, press, { name, data }) => {\r\n\t\t\t\t\t\t$fn.onChange.call(this, v, press, () => {\r\n\t\t\t\t\t\t\tif (name && name === 'device_id') {\r\n\t\t\t\t\t\t\t\treturn { device_name: data.device_name }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tonAdd\t\t= { ()=> $fn.push(this,'/laboratory/laboratory-manage/equipment-list/add') }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/*\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\t\tselectedKeys\t= {[  ]}\r\n\t\t\t\t\t\tdisabledKeys\t= {[ ]}\r\n\t\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t\tsort\r\n\t\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t*/}\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-gps.js",["2038"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '设备编号',\tname: 'gps_number',\t\trequired: true},\r\n\t\t\t{ label: '步经参数',\tname: 'step_param',\t\trequired: true},\r\n\t\t\t{ label: '设备状态',\tname: 'device_status',\trequired: true,\t\ttype: 'select',\tdata: [] },\r\n\t\t\t{ label: '排序',\t\tname: 'sort',\t\t\trequired: true},\r\n\t\t\t{ label: 'IMEI',\t\tname: 'gps_unique',\t\trequired: true},\r\n\t\t],\r\n\t\tkey:0\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'设备编号', name:'gps_number'},\r\n\t\t{ label:'设备状态', name:'device_status', type:'select', data:[]},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit } = this.state\r\n\t\t$fn.dataSave('dis-item-200').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[1].data = local\r\n\t\t\t\tsubmit[2].data = local\r\n\t\t\t\tthis.setState({deviceStadius:local, submit:this.state.submit})\r\n\t\t\t}else{\r\n\t\t\t\t$http.submit(null,'dis-item/item', { param:{dis_code:200}, loading:false}).then(data=>{\r\n\t\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t\tsubmit[2].data = data\r\n\t\t\t\t\t$fn.dataSave('dis-item-200', data)\r\n\t\t\t\t\tthis.setState({deviceStadius:data, submit:this.state.submit})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tthis.fetch()\r\n\t\t})\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'sp-gps-device/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '设备编号', \tfield: 'gps_number' },\r\n\t\t{ title: '步经参数', \tfield: 'step_param'},\r\n\t\t{ title: '设备状态', \tfield: 'device_status_name', align:'tc'},\r\n\t\t{ title: '创建时间', \tfield: 'created_at', align:'tc' },\r\n\t\t{ title: '操作', align:'tc', render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'sp-gps-device/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\t\t\t\t\t\t$http.submit(null,'sp-gps-device/del',{ param:{uuid: keys} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='GPS设备列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'sp-gps-device/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\tconsole.log(param, 'param')\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'sp-gps-device/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\equipment-list-add.js",["2039"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n// ===================================================================== private component\r\n\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdeviceStadius: [],\r\n\t\tdepartment: [],\r\n\t\tsubmit: [\r\n\t\t\t{ label:'设备名称', \t\tname:'device_name',\t\trequired:true,\t title:'设备信息'},\r\n\t\t\t{ label:'设备编号', \t\tname:'device_number'},\r\n\t\t\t{ label:'设备型号', \t\tname:'device_model',\trequired:true,\t},\r\n\t\t\t{ label:'英文名称', \t\tname:'device_name_en'},\r\n\t\t\t{ label:'设备类型', \t\tname:'device_type',\t\trequired:true,\t type:'select', data:[] },\r\n\t\t\t{ label:'联机类型', \t\tname:'rel_type',\t\trequired:true,\t type:'select', data:[] },\r\n\t\t\t{ label:'金额', \t\t\tname:'buy_price',\t\trequired:true},\r\n\t\t\t{ label:'所属科室', \t\tname:'pgroup_id',\t\trequired:true,\ttype:'select', data:[], idStr: 'uuid'},\r\n\t\t\t{ label:'购买日期', \t\tname:'buy_date',\t\trequired:true,\t type:'date-time', after:true },\r\n\t\t\t{ label:'启用日期', \t\tname:'enabeld_date',\trequired:true,\t type:'date-time', after:true },\r\n\t\t\t{ label:'设备状态', \t\tname:'device_status',\trequired:true,\t type:'select', data:[] },\r\n\t\t\t{ label:'负责人', \t\t\tname:'pinyin_name'},\r\n\t\t\t{ label:'设备识别码', \t\tname:'id_code'},\r\n\t\t\t{ label:'数据标识类型', \tname:'data_type',\t\trequired:true,\ttype:'select', data:[] },\r\n\t\t\t\r\n\t\t\t{ label:'供应商', \t\t\tname:'supplier', \t\ttitle: '供应商信息'},\r\n\t\t\t{ label:'联系人', \t\t\tname:'supp_user'},\r\n\t\t\t{ label:'联系电话', \t\tname:'supp_phone'},\r\n\t\t\t{ label:'供应商联系地址', \tname:'supp_address'},\r\n\t\t\t{ label:'维修联系人', \t\tname:'repair_man'},\r\n\t\t\t{ label:'维修电话', \t\tname:'repair_phone'},\r\n\r\n\t\t\t{ label:'出厂编号/系列号',\tname:'serial_number', \ttitle:'厂家信息'},\r\n\t\t\t{ label:'出厂日期', \t\tname:'serial_date', \ttype:'date-time', after:true },\r\n\t\t\t{ label:'生产厂家', \t\tname:'serial_man'},\r\n\t\t\t{ label:'厂家联系人', \t\tname:'serial_user'},\r\n\t\t\t{ label:'联系电话', \t\tname:'serial_phone'},\r\n\t\t\t{ label:'备注', \t\t\tname:'serial_memo', \ttype:'textarea', full:true, width:'100%'},\r\n\t\t\t\r\n\t\t\t{ label:'最低湿度',\t\t\tname:'min_humidity', \ttitle:'使用环境'},\r\n\t\t\t{ label:'最高湿度', \t\tname:'max_humidity'},\r\n\t\t\t{ label:'最低温度', \t\tname:'min_temperature'},\r\n\t\t\t{ label:'最高温度', \t\tname:'max_temperature'},\r\n\t\t\t{ label:'功率', \t\t\tname:'power'},\r\n\t\t\t{ label:'电压', \t\t\tname:'voltage'},\r\n\t\t],\r\n\t\tid:$fn.query('id'),\r\n\t\tmodel: {}\r\n\t}\r\n\tasync getDataAsync() {\r\n\t\tconst { submit, id } = this.state\r\n\t\t$fn.getDisItem({\r\n\t\t\tcode: 43500,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[4].data = data\r\n\t\t\t\tthis.setState({deviceStadius:data, submit})\r\n\t\t\t}\r\n\t\t}) // 设备类型\r\n\t\t$fn.getDisItem({\r\n\t\t\tcode: 43300,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[5].data = data\r\n\t\t\t\tthis.setState({deviceStadius:data, submit})\r\n\t\t\t}\r\n\t\t}) // 联机类型\r\n\t\t$fn.getDisItem({\r\n\t\t\tcode: 200,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[10].data = data\r\n\t\t\t\tthis.setState({deviceStadius:data, submit})\r\n\t\t\t}\r\n\t\t}) // 设备状态\r\n\t\t$fn.getDisItem({\r\n\t\t\tcode: 64000,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[13].data = data\r\n\t\t\t\tthis.setState({deviceStadius:data, submit})\r\n\t\t\t}\r\n\t\t}) // 数据标识类型\r\n\t\t// 科室\r\n\t\t$fn.dataSave('project-team').then(local => {\r\n\t\t\tif ($fn.hasArray(local)) {\r\n\t\t\t\tsubmit[7].data = local\r\n\t\t\t\tthis.setState({department:local, submit:this.state.submit})\r\n\t\t\t} else {\r\n\t\t\t\t$http.pull(null, 'project-team/select').then(data => {\r\n\t\t\t\t\tsubmit[7].data = data\r\n\t\t\t\t\tthis.setState({department:data, submit:this.state.submit})\r\n\t\t\t\t\t$fn.dataSave('project-team', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\t// 获取设备详情\r\n\t\tif (id) {\r\n\t\t\t$http.submit(null, 'device/info', {param: {uuid: id}}).then(data => {\r\n\t\t\t\t$fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.getDataAsync()\r\n\t}\r\n\trender(){\r\n\t\tconst { submit, id } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title={id ? '编辑设备' : '添加设备'}>\r\n\t\t\t\t<div className='ex fv xplr pt10'>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tdata\t= { submit }\r\n\t\t\t\t\t\tbtnSize\t= 'large'\r\n\t\t\t\t\t\tokText\t= { id ? '修改 Enter' : '保存 Enter'}\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif(id){\r\n\t\t\t\t\t\t\t\tconst param = {...v, uuid: id}\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'device/edit', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('修改成功'))\r\n\t\t\t\t\t\t\t\t\t$fn.back(this)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tconst param = {...v}\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'device/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\t$fn.back(this)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=> $fn.back(this) }\r\n\t\t\t\t\t\tinit\t= {form => this.form = form}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\calibration-record.js",["2040","2041"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面变量\r\n// 状态\r\nconst statusOptions = [\r\n    { name: \"合格\",    value: '1' },\r\n    { name: \"待校准\",  value: '0' },\r\n    { name: \"停用\",    value: '-1' }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n        deviceStadius:[],\r\n        \r\n    }\r\n    \r\n    forms = [\r\n        { label:'设备名称',     name:'device_id',\ttype:'select',  data: [], nameStr: 'title'},\r\n        { label:'执行人',       name:'ex_user'},\r\n        { label: '状态',        name:'status',\t    type:'select',  data:[]},\r\n    ]\r\n\t// 请求参数\r\n\tmodel = {device_id: $fn.query('id') || ''}\r\n\tcomponentDidMount(){\r\n\t\t// 设备名称\r\n\t\t$fn.dataSave('device').then(local => {\r\n\t\t\tif ($fn.hasArray(local)) {\r\n\t\t\t\tthis.forms[0].data = local\r\n\t\t\t\tthis.setState({deviceStadius:local, submit:this.state.submit})\r\n\t\t\t} else {\r\n\t\t\t\t$http.pull(null, 'device/select', { dataName: null }).then(data => {\r\n\t\t\t\t\tdata.forEach(v => {\r\n\t\t\t\t\t\tv.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.forms[0].data = data\r\n\t\t\t\t\tthis.setState({deviceStadius:data, submit:this.state.submit})\r\n\t\t\t\t\t$fn.dataSave('device', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n        this.forms[2].data = statusOptions\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'de-plan-log/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '设备名称',\t\tfield: 'device_name',\t\twidth: 200 },\r\n\t\t{ title: '结果', \t\t    field: 'content',\t\t    width: 100 },\r\n\t\t{ title: '执行人', \t        field: 'ex_user',\t\t\twidth: 100 },\r\n\t\t{ title: '状态', \t        field: 'status',\t\t\twidth: 80, render: ({rows}) => {\r\n            let d = statusOptions.filter(i => i.value === rows.status)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        } },\r\n\t\t{ title: '任务生成时间', \tfield: 'created_at',\t    width: 150,\t\talign: 'tc' },\r\n\t\t{ title: '实际校准时间', \tfield: 'operator_at', \t\twidth: 150,\t\talign: 'tc' },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='校准记录' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n                    loading\t\t= { pullLoading }\r\n                    init        = { form => form.setFieldsValue({device_id: this.model.device_id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\device\\calibration-plan.js",["2042"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== utils\r\nimport Time from '@utils/time'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面变量\r\n// 状态\r\nconst statusOptions = [\r\n    { name: \"合格\",    value: '1' },\r\n    { name: \"待校准\",  value: '0' },\r\n    { name: \"停用\",    value: '-1' }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius:[],\r\n\t\tdeviceName: [],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '设备名称',\t\tname: 'device_id',\t\trequired: true,\t\ttype: 'select',\tdata: [], nameStr: 'title'},\r\n\t\t\t{ label: '周期值',\t\t\tname: 'type_val',\t\trequired: true },\r\n\t\t\t{ label: '校准周期类型',\tname: 'cycle_type',\t\trequired: true,\t\ttype:'select',\tdata:[] },\r\n\t\t\t{ label: '操作人',\t\t\tname: 'operator_user',\trequired: true },\r\n\t\t\t{ label: '校准机构',\t\tname: 'agency' },\r\n\t\t\t{ label: '提前提醒天数',\tname: 'remind_set',\t\trequired: true },\r\n\t\t\t{ label: '描述',\t\t\tname: 'content',\t\ttype: 'textarea' },\r\n\t\t],\r\n\t\t// 校准\r\n\t\tsubmit1: [\r\n\t\t\t{ label: '设备名称',\t\tname: 'device_id',\trequired: true,\t\ttype: 'select',\tdata: [], nameStr: 'title'},\r\n\t\t\t{ label: '执行人',\t\t\tname: 'ex_user',\trequired: true,},\r\n\t\t\t{ label: '状态',\t\t\tname: 'status',\t\trequired: true,\t\ttype: 'select',\tdata: []},\r\n\t\t\t{ label: '实际校准时间',\tname: 'update_at',\tdisabled: true},\r\n\t\t\t{ label: '结果',\t\t\tname: 'result',\t\trequired: true,\t\ttype: 'textarea'},\r\n\t\t]\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'设备编号', name:'device_number'},\r\n\t\t{ label:'设备名称', name:'device_id',\ttype:'select', data: [], nameStr: 'title'},\r\n\t\t{ label: '周期类型', name:'cycle_type',\ttype:'select', data:[]},\r\n\t]\r\n\tmodel = {device_id: $fn.query('id') || ''}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit, submit1 } = this.state\r\n\t\t// 周期类型\r\n\t\t$fn.dataSave('dis-item-44200').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[2].data = local\r\n\t\t\t\tsubmit[2].data = local\r\n\t\t\t\tthis.setState({deviceStadius:local, submit:this.state.submit})\r\n\t\t\t}else{\r\n\t\t\t\t$http.submit(null, 'dis-item/item', { param: { dis_code: 44200}, loading:false}).then(data=>{\r\n\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\tsubmit[2].data = data\r\n\t\t\t\t\t$fn.dataSave('dis-item-44200', data)\r\n\t\t\t\t\tthis.setState({deviceStadius:data, submit:this.state.submit})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\t// 设备名称\r\n\t\t$fn.dataSave('device').then(local => {\r\n\t\t\tif ($fn.hasArray(local)) {\r\n\t\t\t\tthis.forms[1].data = local\r\n\t\t\t\tsubmit[0].data = local\r\n\t\t\t\tsubmit1[0].data = local\r\n\t\t\t\tthis.setState({deviceName:local, submit:this.state.submit})\r\n\t\t\t} else {\r\n\t\t\t\t$http.pull(null, 'device/select', { dataName: null }).then(data => {\r\n\t\t\t\t\tdata.forEach(v => {\r\n\t\t\t\t\t\tv.title = `${v.device_name}(${v.device_number}) - ${v.device_model}`\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t\tsubmit[0].data = data\r\n\t\t\t\t\tsubmit1[0].data = data\r\n\t\t\t\t\tthis.setState({deviceName:data, submit:this.state.submit})\r\n\t\t\t\t\t$fn.dataSave('device', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'device-plan/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '设备编号',\t\tfield: 'device_number',\t\twidth: 100 },\r\n\t\t{ title: '设备名称', \t\tfield: 'device_name',\t\twidth: 200 },\r\n\t\t{ title: '上次校准日期', \tfield: 'last_time',\t\t\twidth: 150 },\r\n\t\t{ title: '下次校准日期', \tfield: 'next_time',\t\t\twidth: 150,\t\talign: 'tc' },\r\n\t\t{ title: '校准周期类型', \tfield: 'cycle_type_name',\twidth: 150,\t\talign: 'tc' },\r\n\t\t{ title: '实际完成时间', \tfield: 'update_at', \t\twidth: 150,\t\talign: 'tc' },\r\n\t\t{ title: '校准机构',\t\tfield: 'agency',\t\t\twidth: 150 },\r\n\t\t{ title: '操作人员',\t\tfield: 'operator_user',\t\twidth: 100 },\r\n\t\t{ title: '操作时间',\t\tfield: 'created_at',\t\twidth: 150,\t\talign: 'tc' },\r\n\t\t{ title: '操作', align:'tc', width:300, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'device-plan/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button label='校准' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\tconst { submit1 } = this.state\r\n\t\t\t\t\t\tsubmit1[2].data = statusOptions\r\n\t\t\t\t\t\tsubmit1[0].value = rows['device_id']\r\n\t\t\t\t\t\tsubmit1[1].value = ''\r\n\t\t\t\t\t\tsubmit1[2].value = ''\r\n\t\t\t\t\t\tsubmit1[3].value = Time.format(new Date(), {t: 'full'})\r\n\t\t\t\t\t\tsubmit1[4].value = ''\r\n\t\t\t\t\t\tthis.rows = rows\r\n\t\t\t\t\t\tconst device = submit1[0].data.filter(i => i.value === submit1[0].value)\r\n\t\t\t\t\t\tthis.device_name = {device_name: device[0].device_name}\r\n\t\t\t\t\t\tthis.setState({submit1})\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<Button label='校准记录' className='ml15' ghost onClick={() => {\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'laboratory-manage/calibration-record?id=' + rows.device_id)\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<Button label='删除' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tconfirm.then(f => {\r\n\t\t\t\t\t\t\tf.default({\r\n\t\t\t\t\t\t\t\tmsg: '是否确认删除?',\r\n\t\t\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\t\t\t$http.submit(null, 'device-plan/delete', { param: { uuid: rows.uuid } }).then(data => {\r\n\t\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} } />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\tsubmit[6].value = ''\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, submit1 } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='设备校准计划' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit        = { form => form.setFieldsValue({device_id: this.model.device_id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'device-plan/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'device-plan/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal1' title='校准' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit1 }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid, ...this.device_name}\r\n\t\t\t\t\t\t\t$http.submit(null,'device-plan/cali',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal1.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal1.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\absurdity-value\\index.js",["2043","2044"],"import React from 'react'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n// ===================================================================== 页面常量\r\nconst relateOption = [\r\n    { name: \"同时满足\", value: \"1\" },\r\n    { name: \"满足一条\", value: \"2\" },\r\n    { name: \"满足多条\", value: \"3\" },\r\n    { name: \"都不满足\", value: \"4\" }\r\n] // 关系\r\nconst statusOption = [\r\n    { name: \"启用\", value: \"1\" },\r\n    { name: \"禁用\", value: \"0\" }\r\n] // 状态\r\nconst typeOption = [\r\n    { name: \"默认\", value: \"0\" }\r\n] // 类型\r\n// ===================================================================== component\r\nconst DetailTable = $async(() => import('./tp/detail-table'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n        data:[],\r\n        pag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '编号',    name: 'absurd_number',      required: true },\r\n            { label: '名称',    name: 'absurd_name',        required: true },\r\n            { label: '类型',    name: 'absurd_type',        required: true,     type: 'select',     data: [] },\r\n            { label: '关系',    name: 'absurd_relation',    required: true,     type: 'select',     data: [] },\r\n            { label: '状态',    name: 'enabled',            required: true,     type: 'select',     data: [] },\r\n            { label: '备注',    name: 'absurd_remark',      type: 'textarea',   full: true,         width: '100%' },\r\n        ],\r\n        uuid: ''\r\n    }\r\n    forms = [\r\n\t\t{ label:'编号',     name:'absurd_number'},\r\n\t\t{ label:'名称',     name:'absurd_name'},\r\n\t\t{ label:'类型',     name:'absurd_type',         type:'select',      data:[]},\r\n\t\t{ label:'关系',     name:'absurd_relation',     type:'select',      data:[]},\r\n\t\t{ label:'状态',     name:'enabled',             type:'select',      data:[]},\r\n    ]\r\n    model = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        this.forms[2].data = submit[2].data = typeOption\r\n        this.forms[3].data = submit[3].data = relateOption\r\n        this.forms[4].data = submit[4].data = statusOption\r\n\t\tthis.fetch(this.model)\r\n    }\r\n    // paging\r\n    fetch = param => $fn.fetch.call(this,'lis-absurd-data/index', param)\r\n    // table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '编号',    field: 'absurd_number' },\r\n\t\t{ title: '名称',    field: 'absurd_name'},\r\n\t\t{ title: '类型',    field: 'absurd_type',       render: ({rows}) => {\r\n            let d = typeOption.filter(i => i.value === rows.absurd_type)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '关系',    field: 'absurd_relation',   render: ({rows}) => {\r\n            let d = relateOption.filter(i => i.value === rows.absurd_relation)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '状态',    field: 'enabled',           render: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '备注',    field: 'absurd_remark'},\r\n\t\t{ title: '操作', align:'tc', render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'lis-absurd-data/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n    ButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('lis-absurd-data/del', '删除', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n        const { submit, pullLoading, data, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='荒谬值' ButtonGroup={this.ButtonGroup()}>\r\n                {/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n                <div className='fx ex'>\r\n                    <div className='bor1 r4px mr15 ex fv'>\r\n                        <h6 className=\"w xmlr pl20 h40 b\">项目列表</h6>\r\n                        <Table\r\n                            className\t\t= 'xplr'\r\n                            cols\t\t\t= { this.cols }\r\n                            data \t\t\t= { data }\r\n                            loading \t\t= { pullLoading }\r\n                            onRow\t\t\t= { (v, rows) => {\r\n                                this.setState({ selectedKeys: v, uuid: rows.uuid })\r\n                            } }\r\n                            pag\t\t\t\t= { pag }\r\n                            onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                            onSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n                        />\r\n                        <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                            <SubmitForm\r\n                                modal\r\n                                data = { submit }\r\n                                onSubmit = { v => {\r\n                                    if (this.isEdit) {\r\n                                        const param = { ...v, uuid: this.rows.uuid}\r\n                                        $http.submit(null,'lis-absurd-data/edit',{ param }).then(data=>{\r\n                                            message.then(f=>f.default.success('编辑成功'))\r\n                                            this.refs.modal.close()\r\n                                            this.fetch(this.model)\r\n                                        })\r\n                                    } else {\r\n                                        const param = { ...v }\r\n                                        $http.submit(null, 'lis-absurd-data/add', { param }).then(data => {\r\n                                            message.then(f => f.default.success('添加成功'))\r\n                                            this.refs.modal.close()\r\n                                            this.fetch(this.model)\r\n                                        })\r\n                                    }\r\n                                    \r\n                                }}\r\n                                onClose = { ()=>this.refs.modal.close() }\r\n                                init    = { form => this.form = form }\r\n                            />\r\n                        </Modal>\r\n                    </div>\r\n                    <div className='bor1 r4px ex fv'>\r\n                        <DetailTable uuid={this.state.uuid} />\r\n                    </div>\r\n                </div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\index.js",["2045"],"import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n// ===================================================================== image\r\nimport Logo from '@img/logo.png'\r\nimport InfoImage from '@img/index/info.png'\r\nimport BgImage from '@img/index/bg.png'\r\n\r\nimport Laboratory from '@img/index/menu-laboratory.png'\r\nimport Lgistics from '@img/index/menu-lgistics.png'\r\nimport Administrators from '@img/index/menu-administrators.png'\r\nimport Business from '@img/index/menu-business.png'\r\nimport Service from '@img/index/menu-service.png'\r\nimport Finance from '@img/index/menu-finance.png'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== global template\r\nconst Image = $async(()=>import('@tp/image'))\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/content/content-page'))\r\n// ===================================================================== template\r\n\r\n// ===================================================================== component\r\nexport default () => {\r\n\tconst history = useHistory( )\r\n\tconst [user, setUser] = React.useState({})\r\n\tconst [news, setNews] = React.useState({})\r\n\t\r\n\tReact.useEffect(()=>{\r\n\t\tsetUser($fn.getUser())\r\n\t\t$http.pull(null,'msg-notice/getnewest', { loading:true }).then(data=>{\r\n\t\t\tsetNews(data)\r\n\t\t})\r\n\t},[])\r\n\t// 菜单列表\r\n\tconst LiComponent = React.useCallback(({ title, url, icon, path }) => (\r\n\t\t<li className='cp' onClick={()=>history.push(`/${path}`)}>\r\n\t\t\t<div className='fxmc bg' style={{width:180,height:180,background:`url(${BgImage}) no-repeat center/cover`}}>\r\n\t\t\t\t<div style={{width:100}}><Image src={icon}/></div>\r\n\t\t\t</div>\r\n\t\t\t<h3 className='tc mt20 f14'>{title}</h3>\r\n\t\t</li>\r\n\t), [history])\r\n\t\r\n\treturn (\r\n\t\t<Page contentClassName='fv wh oh'>\r\n\t\t\t<header className='bcf fxm plr20 g6' style={{height:60}}>\r\n\t\t\t\t{/* logo */}\r\n\t\t\t\t<div style={{width:120}}><Image src={ Logo }/></div>\r\n\t\t\t\t{/* 消息 */}\r\n\t\t\t\t<div className='fxm ml50 ex'>\r\n\t\t\t\t\t<div style={{width:18}}><Image src={ InfoImage }/></div>\r\n\t\t\t\t\t<p className='g6 ml24 ml10 ex omits-1'><Text value={news.title} /></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* 账户创建时间 */}\r\n\t\t\t\t<time className='mr15'><Text value={user.created_at}/></time>\r\n\t\t\t\t{/* 头像 */}\r\n\t\t\t\t<Image wrap round size={40} src={user.head_portrait} className='bor1'/>\r\n\t\t\t\t{/* 姓名 */}\r\n\t\t\t\t<div className='ml10'><Text value={user.real_name} /></div>\r\n\t\t\t\t{/* 职位 */}\r\n\t\t\t\t<div className='ml15'><span className='mr5'>职位:</span><Text value={user.position} /></div>\r\n\t\t\t</header>\r\n\t\t\t<section className='ex bcm fv cf'>\r\n\t\t\t\t<div className='ex fv' style={{width:1200,margin:'0 auto'}}>,\r\n\t\t\t\t\t{/* 文本 */}\r\n\t\t\t\t\t<hgroup style={{paddingTop: '2%' }}>\r\n\t\t\t\t\t\t<h2 className='lh' style={{fontSize:38,letterSpacing:10}}>诺森检验</h2>\r\n\t\t\t\t\t\t<h3 className='lh f16 mt20'>致力于做民众身边的健康管理专家</h3>\r\n\t\t\t\t\t\t<div className='bcf mt15' style={{height:3,width:100}}></div>\r\n\t\t\t\t\t</hgroup>\r\n\t\t\t\t\t{/* 菜单 */}\r\n\t\t\t\t\t<div className='ex fxm'>\r\n\t\t\t\t\t\t<ul className='lh30 ex fxmj index-menu-list'>\r\n\t\t\t\t\t\t\t<LiComponent title='实验室系统' icon={Laboratory} path='laboratory' />\r\n\t\t\t\t\t\t\t<LiComponent title='物流系统' icon={Lgistics} path='lgistics' />\r\n\t\t\t\t\t\t\t<LiComponent title='管理员系统' icon={Administrators} path='administrators' />\r\n\t\t\t\t\t\t\t<LiComponent title='业务系统' icon={Business} path='business' />\r\n\t\t\t\t\t\t\t<LiComponent title='客服系统' icon={Service} path='service' />\r\n\t\t\t\t\t\t\t<LiComponent title='财务系统' icon={Finance} path='finance' />\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<footer className='f12 tc h50 i'>成都诺森医学检验-LIS系统（试运行版）</footer>\r\n\t\t\t</section>\r\n\t\t\t<footer className='f12 fxmc c0 h40'>\r\n\t\t\t\t<p>电话：<span className='ar'>028-61037888</span> 传真：<span className='ar'>028-61037888</span> 邮箱：<span className='ar'>norson@norsonmed.com</span></p>\r\n\t\t\t\t<p className='mlr5'>|</p>\r\n\t\t\t\t<p><span className='ar'>Copyright@2017</span> 诺森医学检验版权所有​ 网站备案号： 蜀ICP备16034622号</p>\r\n\t\t\t</footer>\r\n\t\t</Page>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\router.js",["2046"],"/* ====================================== 模块子路由配置  ====================================== */\r\nimport React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n// ===================================================================== 异步加载\r\nimport Import from '@com/bundle'\r\n// ===================================================================== 路由配置\r\nimport Workbench from '@views/workbench/main'\r\nimport finance from '@views/finance/finance-page'\r\n// ===================================================================== 同步路由\r\nexport default () => (\r\n\t<Switch>\r\n\t\t<Route \tpath='/finance/workbench' \t\t\tcomponent={ Workbench }  />\r\n\t\t<Route \tpath='/finance/finance-page' \t\tcomponent={ finance }  />\r\n\t\t{/* 重定向 */}\r\n\t\t<Route path='/finance' children={<Redirect to='/finance/workbench/index' />}  />\r\n\t\t{/* 404 */}\r\n\t\t<Route component={ Import('404') } />\r\n\t</Switch>\r\n)","F:\\jia-git\\react-norson-lis\\src\\views\\laboratory\\laboratory-manage\\absurdity-value\\tp\\detail-table.js",["2047","2048"],"import React from 'react'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n    { name: \"启用\", value: \"1\" },\r\n    { name: \"未启用\", value: \"0\" }\r\n]\r\nconst conditionOption = [\r\n    { name: \"必须\", value: \"1\" },\r\n    { name: \"非必须\", value: \"0\" }\r\n]\r\nconst ruleOption = [\r\n    { name: \"<\", value: \"1\" },\r\n    { name: \"=\", value: \"2\" },\r\n    { name: \"<=\", value: \"3\" },\r\n    { name: \">\", value: \"4\" },\r\n    { name: \">=\", value: \"5\" },\r\n    { name: \"≠\", value: \"6\" },\r\n    { name: \"包含\", value: \"7\" },\r\n    { name: \"等于\", value: \"8\" }\r\n  ]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n        data:[],\r\n        pag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '键',      name: 'absurd_key',         required: true },\r\n            { label: '条件',    name: 'absurd_condition',   required: true,     type: 'select',     data: [] },\r\n            { label: '规则',    name: 'absurd_rule',        required: true,     type: 'select',     data: [] },\r\n            { label: '值',      name: 'absurd_value',       required: true },\r\n            { label: '状态',    name: 'enabled',            type: 'select',     data: [] },\r\n            { label: '排序',    name: 'sort' },\r\n            { label: '说明',    name: 'absurd_description', type: 'textarea',   full: true,         width: '100%' },\r\n        ],\r\n        \r\n    }\r\n    model = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        submit[1].data = conditionOption\r\n        submit[2].data = ruleOption\r\n        submit[4].data = statusOption\r\n    }\r\n    componentWillReceiveProps(props) {\r\n        if (props.uuid) {\r\n            this.model = {absurd_id: props.uuid}\r\n            this.fetch(this.model)\r\n        }\r\n    }\r\n    // paging\r\n    fetch = param => $fn.fetch.call(this,'lis-absurd-data-config/index', param)\r\n    // table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '键',      field: 'absurd_key' },\r\n\t\t{ title: '规则',    field: 'absurd_rule',       render: ({rows}) => {\r\n            let d = ruleOption.filter(i => i.value === rows.absurd_rule)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '值',      field: 'absurd_value' },\r\n        { title: '条件',    field: 'absurd_condition',  render: ({rows}) => {\r\n            let d = conditionOption.filter(i => i.value === rows.absurd_condition)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '说明',    field: 'absurd_description' },\r\n        { title: '状态',    field: 'enabled',           render: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '操作', align:'tc', render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'lis-absurd-data-config/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\trender(){\r\n        const { submit, pullLoading, data, pag } = this.state\r\n\t\treturn (\r\n            <>\r\n                <div className='fxmj'>\r\n                    <h6 className=\"w xmlr pl20 h40 b\">列表明细</h6>\r\n                    <div className='fxm'>\r\n                        <Button label='添加' size='small' disabled={!this.props.uuid} className='mr15 dkm' onClick={() => {\r\n                            this.refs.modal.open()\r\n                            const { submit } = this.state\r\n                            submit.map(item => {\r\n                                item.value = ''\r\n                                if (item.name === 'sort') {\r\n                                    item.value = '50'\r\n                                }\r\n                                if (item.name === 'enabled') {\r\n                                    item.value = '1'\r\n                                }\r\n                            })\r\n                            this.isEdit = false\r\n                            this.setState({ submit })\r\n                        }} />\r\n                        <Button label='删除' ghost size='small' disabled={this.state.selectedKeys.length===0} className='mr15 dkm' onClick={(v) => {\r\n                            const param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n                            coms.interfaceConfirm('lis-absurd-data-config/del', '删除', param, () => { \r\n                                this.fetch(this.model)\r\n                                this.setState({selectedKeys: []})\r\n                             })\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n                <Table\r\n                    className\t\t= 'xplr'\r\n                    cols\t\t\t= { this.cols }\r\n                    data \t\t\t= { data }\r\n                    loading \t\t= { pullLoading }\r\n                    onRow\t\t\t= { (v) => this.setState({ selectedKeys: v }) }\r\n                    pag\t\t\t\t= { pag }\r\n                    onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                    onSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n                />\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { absurd_id: this.props.uuid, ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'lis-absurd-data-config/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { absurd_id: this.props.uuid, ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'lis-absurd-data-config/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n            </>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\main.js",["2049"],"import React from 'react'\r\n// ===================================================================== private template\r\nimport Router from './router'\r\nconst Frame = window.$async(()=>import('#frame/frame'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{ title: '工作台', path:'workbench'},\r\n\t{ title: '财务管理', path:'finance-page/control'},\r\n]\r\n\r\n// ===================================================================== component\r\nexport default () => <Frame title='财务系统' data={data} Router={Router} />","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\outsourcing-list.js",["2050","2051","2052"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\toutsourStatusOption = [\r\n\t\t{ label: '全部',   value: '' },\r\n\t\t{ label: '待派送', value: 1 },\r\n\t\t{ label: '派送中', value: 2 },\r\n\t\t{ label: '已送达', value: 3 }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'物流人员', name:'empl_id',      \t\ttype:'select', data:[] },\r\n\t\t{ label:'派送状态', name:'outsourcing_status', \ttype:'select', data: this.outsourStatusOption, nameStr:'label', idStr:'value' },\r\n\t\t{ label:'外送时间', name: 'date',\t\t\t\tnames:['start_at','end_at'],type:'date-range' },\r\n        { label:'条码号',\tname:'spec_code' },\r\n    ]\r\n\tmodel = {\r\n\t\tspec_code: '', \r\n\t\toutsourcing_status: '',\r\n\t\toutsourcing_type: '',\r\n\t\templ_id: '',\r\n\t\tstart_date: '',\r\n\t\tend_date: '',\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.employeeSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[0].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'employee/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[0].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 物流人员\r\n\t\t\t\tcache: d.employeeSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[0].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'employee/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[0].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t\r\n\tfetch = param => $fn.fetch.call(this,'bill-st/outsourcingList', param)\r\n\tcols = [\r\n\t\t{ title: '外送单位',\t\tfield: 'outsourcing_company', \twidth:130 },\r\n\t\t{ title: '外送时间',\t\tfield: 'outsourcing_created_at',width:160 },\r\n\t\t{ title: '派送状态',\t\tfield: 'outsourcing_status', \twidth:80, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.outsourStatusOption, rows.outsourcing_status, 'label', 'value') \r\n\t\t} },\r\n\t\t{ title: '送达时间',\t\tfield: 'outsourcing_updated_at',width:160 },\r\n\t\t{ title: '外送人员', \t\tfield: 'outsourcing_empl',\t\twidth:100 },\r\n\t\t{ title: '岗位', \t\t\tfield: 'project_name', \twidth:100 },\r\n\t\t{ title: '接收时间', \t\tfield: 'check_time',\twidth:160 },\r\n\t\t{ title: '客户名称', \t\tfield: 'hosp_name', \twidth:100 },\r\n\t\t{ title: '条码号', \t\t    field: 'old_spec_code',  width:130, render: ({rows})=> {\r\n\t\t\tlet len = rows.old_spec_code\r\n\t\t\tif (len.length == 14) {\r\n\t\t\t\tlen = len.slice(0,11) + '-' + len.slice(12)\r\n\t\t\t\treturn rows.old_spec_code = len\r\n\t\t\t} else {\r\n\t\t\t\treturn rows.old_spec_code = len\r\n\t\t\t}\r\n\t\t} },\r\n\t\t{ title: '自然项目', \t    field: 'parent_kind_name',width:130 },\r\n\t\t{ title: '项目名称',        field: 'kind_name',      width:130 },\r\n\t\t{ title: '送检科室', \t\tfield: 'department_name',width:100 },\r\n\t\t{ title: '标准价格',\t\tfield: 'sprice', \t    width:80 },\r\n\t\t{ title: '实际价格',\t\tfield: 'price', \t    width:80 },\r\n\t\t{ title: '姓名', \t\t    field: 'patient_name',  width:80 },\r\n\t\t{ title: '性别', \t        field: 'sex_name',      width:80 },\r\n\t\t{ title: '年龄',            field: 'age',           width:80 },\r\n\t\t{ title: '送检科室', \t\tfield: 'department_name',width:100 },\r\n\t\t{ title: '医生',\t\t    field: 'doctor', \t    width:100 },\r\n\t\t{ title: '备注', \t\t\tfield: 'remark', \t\twidth:100 },\r\n\t\t{ title: '账单属性',\t\tfield: 'attribute_name',width:100 },\r\n\t\t{ title: '实验科室',\t\tfield: 'project_parent_name', width:100 },\r\n\t\t{ title: '开票单位（NC）',\t field: 'organization_name',   width:100 },\r\n\t\t{ title: '开票单位编码（NC）',field: 'organization_code',   width:160 },\r\n\t\t{ title: '业务员',\t\t    field: 'salesman_user',\twidth:100 },\r\n\t\t{ title: '业务员编码',\t\tfield: 'salesman_code',\twidth:100 },\r\n\t\t{ title: '区域',\t\t    field: 'region_name',\twidth:100 },\r\n\t\t{ title: '区域编码',\t\tfield: 'region_num',\t width:100 },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'导出', onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否导出数据?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t$http.submit(null,'bill-st/outsourcingList', { param: {export: 1} } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('导出成功'))\r\n\t\t\t\t\t\t\t\twindow.location.href = data.url;\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='外包清单管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange={(v, press, { name, data }) => {\r\n\r\n\t\t\t\t\t\t$fn.onChange.call(this, v, press, () => {\r\n\t\t\t\t\t\t\tif (name && name === 'device_id') {\r\n\t\t\t\t\t\t\t\treturn { device_name: data.name }\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\tp\\natural-projects.js",["2053","2054","2055","2056"],"import React from 'react'\r\n// ===================================================================== utils\r\nimport Time from '@utils/time'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst NaturalProjectsChild = $async(() => import('../tp/natural-projects-child'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tshowmodel:'',\r\n\t}\r\n    billStatusOption = [\r\n        { label: \"财务待审核\",      value: \"45301\" },\r\n        { label: \"财务待结算\",      value: \"45302\" },\r\n        { label: \"财务已结算\",      value: \"45303\" },\r\n        { label: \"已作废\",          value: \"45304\" },\r\n        { label: \"业务员待审核\",    value: \"45305\" }\r\n    ]\r\n\tpayTypeOptions = [\r\n        { label: \"全部\", value: \"\"  },\r\n        { label: \"正常\", value: \"1\" },\r\n        { label: \"冲抵\", value: \"2\" }\r\n    ]\r\n\tforms = [\r\n\t\t{ label:'帐单生成时间', name: 'date', \t\t\t\tnames:['start_at','end_at'], type:'date-range' },\r\n\t\t{ label:'条码号', \t    name:'spec_code' },\r\n\t\t{ label:'客户名称', \tname:'hosp_id', \t\t\ttype:'select', data:[] },\r\n\t\t{ label:'实验科室', \tname:'project_parent_id', \ttype:'select', data:[] },\r\n        { label:'区域', \t\tname:'region_id', \t\t\ttype:'select', data:[] },\r\n        { label:'业务员', \t\tname:'salesman_id', \t\ttype:'select', data:[] },\r\n        { label:'姓名', \t    name:'patient_name' },\r\n        { label:'自然项目', \tname:'parent_kind_id',      type:'select', data:[] },\r\n\t\t{ label:'状态', \t    name:'status', \t            type:'select', data: this.billStatusOption,   nameStr:'label', idStr:'value' },\r\n\t\t// { label:'账单类型', \tname:'pay_type',      \t    type:'select', data: this.payTypeOptions,   nameStr:'label', idStr:'value' },\r\n    ]\r\n\tmodel = {\r\n\t\tstart_at: Time.customDate(3, \"date\"),\r\n\t\tend_at: Time.customDate(\"current-date\"),\r\n\t\thosp_id: '',\r\n\t\tstatus: '',\r\n\t\tregion_id: '',\r\n\t\tproject_parent_id: '',\r\n\t\tsalesman_id: '',\r\n\t}\r\n\tgetDataAsync() {\r\n\t\tlet T = new Date()\r\n\t\tvar y = T.getFullYear();\t\t//年\r\n\t\tvar m = T.getMonth() + 1;\t\t//月\r\n\t\tvar d = T.getDay();\t\t\t//日\r\n\t\tif ( m < 10 ) {\r\n\t\t\tm = '0' + m\r\n\t\t}\r\n\t\tif ( d < 10 ) {\r\n\t\t\td = '0' + d\r\n\t\t}\r\n\t\tconsole.log(T);\r\n\t\tthis.model.start_at = y + '-' + m + '-' + d\r\n\t\tthis.forms[0].names[0] = this.model.start_at\r\n\t\tconsole.log(this.forms[0].names)\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('bill-phase-select-data').then(local => { // 账期\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[0].data = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bill-phase/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tthis.forms[0].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bill-phase-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n            $fn.getCache({ // 客户名称\r\n                cache: d.BsHospitalSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            $fn.getCache({ // 实验科室\r\n                cache: d.ProjectTeamSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[3].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n                            this.forms[3].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.bsareaSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 业务员\r\n\t\t\t\tcache: d.bssalesmanSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[5].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-salesman/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[5].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            })\r\n            $fn.getCache({ // 自然项目\r\n\t\t\t\tcache: d.kindItemSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[7].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'kd-market/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[7].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.getDataAsync()\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'bill-st/parentkind', param)\r\n\tcols = [\r\n        { title: '客户名称',\tfield: 'hosp_name',         width:100 },\r\n\t\t{ title: '接收时间',    field: 'check_time',        width:160 },\r\n        { title: '条码号',\t\tfield: 'old_spec_code',     width:100 },\r\n        { title: '自然项目',    field: 'parent_kind_name',  width: 160 },\r\n        { title: '总价',\t    field: 'sum_sprice',        width:100 },\r\n        { title: '总实际价格',\tfield: 'sum_price',         width:100 },\r\n\t\t{ title: '姓名', \t\tfield: 'patient_name',      width:80 },\r\n\t\t{ title: '性别', \t    field: 'sex_name',          width:80 },\r\n\t\t{ title: '年龄',        field: 'age',               width:80 },\r\n\t\t{ title: '送检科室',    field: 'department_name',    width:80 },\r\n\t\t{ title: '医生', \t    field: 'doctor',             width:100 },\r\n\t\t{ title: '实验科室', \tfield: 'project_parent_name',width:100 },\r\n\t\t{ title: '开票单位',\tfield: 'organization_name',  width:160 },\r\n\t\t{ title: '开票单位编码',field: 'organization_code',   width:170 },\r\n\t\t{ title: '业务员',\t    field: 'salesman_user',      width:100 },\r\n\t\t{ title: '业务员编码',\tfield: 'salesman_code',      width:100 },\r\n\t\t{ title: '区域',\t    field: 'region_name',        width:100 },\r\n\t\t{ title: '区域编码',\tfield: 'region_num',          width:100 },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'导出F1', code:'F1', onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否导出自然项目?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tthis.model.export= 1\r\n\t\t\t\t\t\t\t$http.submit(null,'bill-st/parentkind', { param: this.model } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('导出成功'))\r\n\t\t\t\t\t\t\t\twindow.location.href = data.url;\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, showmodel, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='自然项目统计' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange={(v,press)=>$fn.onChange.call(this,v,press)\r\n\t\t\t\t\t\t// (v, press, { name, data }) => {\r\n\t\t\t\t\t\t// $fn.onChange.call(this, v, press, () => {\r\n\t\t\t\t\t\t// \tif (name && name === 'device_id') {\r\n\t\t\t\t\t\t// \t\treturn { device_name: data.name }\r\n\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t} \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => { form.setFieldsValue({date:[Time.customDate(2, \"date\"), Time.customDate(\"current-date\")]}) }}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { current => {\r\n\t\t\t\t\t\tconsole.log(current)\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t<NaturalProjectsChild className='fv rel ex xplr' model={this.model} rowdata={ data1 || [] } />\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\tp\\natural-projects-child.js",["2057","2058","2059","2060"],"// ===================================================================== 薛玉梅 | 2020-10-19 | 新增文件\r\nimport React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst BillInfo = $async(()=>import('../finance-list/bill-info'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\trowId: '',\r\n\t\tselectedKeys:[], \r\n\t\tspecCode: '',\r\n\t}\r\n\tforms = []\r\n\tmodel = {}\r\n\tcomponentDidMount(){}\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tif (props.rowdata.hosp_id) {\r\n            this.model.hosp_id \t\t\t = props.rowdata.hosp_id || \"\"\r\n\t\t\tthis.model.spec_code \t\t = props.rowdata.old_spec_code || \"\"\r\n\t\t\tthis.model.project_parent_id = props.rowdata.project_parent_id || \"\"\r\n\t\t\tthis.model.salesman_id\t\t = props.rowdata.salesman_id || \"\"\r\n\t\t\tthis.model.status\t\t\t = props.model.status\r\n\t\t\tthis.model.start_at\t\t\t = props.model.start_at\r\n\t\t\tthis.model.end_at\t\t\t = props.model.end_at\r\n\t\t\tthis.model.region_id\t\t = props.model.region_id || \"\"\r\n\t\t\tthis.fetch(this.model)\r\n\t\t}\r\n\t}\r\n\r\n\tfetch = param => $http.paging(this,'bill-st/detailindex',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\r\n\tcols = [\r\n\t\t{ title: '岗位',\t    field: 'project_name',      width:100 },\r\n\t\t{ title: '接收时间',    field: 'check_time',        width:160 },\r\n\t\t{ title: '客户名称',\tfield: 'hosp_name',         width:100 },\r\n        { title: '条码号',\t\tfield: 'old_spec_code',     width:100,render: ({text,rows})=> <span onDoubleClick={()=>{\r\n\t\t\tthis.setState({specCode: text})\r\n\t\t\tthis.refs.modal.open()\r\n\t\t}}>{text}</span> \r\n\t\t},\r\n        { title: '自然项目',    field: 'parent_kind_name',  width: 160 },\r\n        { title: '项目名称',    field: 'kind_name',         width: 160 },\r\n        { title: '标准价格',\tfield: 'sprice',        \twidth:100 },\r\n        { title: '实际价格',\tfield: 'price',         \twidth:100 },\r\n\t\t{ title: '姓名', \t\tfield: 'patient_name',      width:80 },\r\n\t\t{ title: '性别', \t    field: 'sex_name',          width:80 },\r\n\t\t{ title: '年龄',        field: 'age',               width:80 },\r\n\t\t{ title: '送检科室',    field: 'department_name',    width:80 },\r\n\t\t{ title: '医生', \t    field: 'doctor',             width:80 },\r\n\t\t{ title: '备注', \t    field: 'remark',             width:80 },\r\n\t\t{ title: '账单属性', \tfield: 'attribute_name',     width:100 },\r\n\t\t{ title: '实验科室', \tfield: 'project_parent_name',width:100 },\r\n\t\t{ title: '开票单位',\tfield: 'organization_name',  width:160 },\r\n\t\t{ title: '开票单位编码',field: 'organization_code',   width:170 },\r\n\t\t{ title: '业务员',\t    field: 'salesman_user',      width:100 },\r\n\t\t{ title: '业务员编码',\tfield: 'salesman_code',      width:100 },\r\n\t\t{ title: '区域',\t    field: 'region_name',        width:100 },\r\n\t\t{ title: '区域编码',\tfield: 'region_num',          width:100 },\r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, specCode } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title='账单信息' width={1000} noFooter>\r\n\t\t\t\t\t<BillInfo className='fv rel ex xplr' specCode = { specCode || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\tp\\display-form.js",["2061"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== global template\r\n// ===================================================================== private template\r\n// ===================================================================== template\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== btns\r\n// ===================================================================== component\r\nconst BillInfo = $async(()=>import('../finance-list/bill-info'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[], \r\n\t\tspecCode: '',\r\n\t}\r\n\tmodel = {}\r\n\tcomponentDidMount(){}\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tconsole.log(props)\r\n\t\tif (props.rowdata.hosp_id) {\r\n            this.model.hosp_id \t\t\t= props.rowdata.hosp_id\r\n\t\t\tthis.model.parent_kind_id \t= props.rowdata.parent_kind_id\r\n\t\t\tthis.model.region_id \t\t= props.rowdata.region_id\r\n            this.model.salesman_id \t\t= props.rowdata.salesman_id\r\n            this.model.status \t\t\t= props.model.status\r\n            this.model.start_at \t\t= props.model.start_at\r\n            this.model.end_at \t\t\t= props.model.end_at\r\n\t\t\tthis.fetch(this.model)\r\n\t\t}\r\n\t}\r\n\tfetch = param => $http.paging(this,'bill-st/detailindex',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\t\r\n\tcols = [\r\n\t\t{ title: '岗位',\t\t\tfield: 'project_name', \t\twidth:150 },\r\n\t\t{ title: '接收时间',\t\tfield: 'check_time', \t\twidth:145 },\r\n\t\t{ title: '客户名称',\t\tfield: 'hosp_name', \t\twidth:130 },\r\n\t\t{ title: '条码号',\t\t    field: 'old_spec_code', \twidth:100, render: ({text,rows})=> <span onDoubleClick={()=>{\r\n\t\t\tthis.setState({specCode: text})\r\n\t\t\tthis.refs.modal.open()\r\n\t\t}}>{text}</span> },\r\n\t\t{ title: '自然项目',\t\tfield: 'parent_kind_name', \twidth:100 },\r\n\t\t{ title: '项目名称', \t\tfield: 'kind_name', \t\twidth:130 },\r\n\t\t{ title: '标准价格', \t\tfield: 'sprice', \t\t\twidth:80 },\r\n\t\t{ title: '实际价格', \t\tfield: 'price', \t\t\twidth:80 },\r\n\t\t{ title: '姓名', \t\t    field: 'patient_name', \t\twidth:80 },\r\n\t\t{ title: '性别', \t\t    field: 'sex_name', \t\t    width:80 },\r\n\t\t{ title: '年龄', \t        field: 'age', \t            width:80 },\r\n\t\t{ title: '送检科室',        field: 'department_name', \twidth:100 },\r\n\t\t{ title: '医生', \t\t\tfield: 'doctor', \t\t\twidth:100 },\r\n\t\t{ title: '备注',\t\t    field: 'remark', \t\t\twidth:100 },\r\n\t\t{ title: '账单属性', \t\tfield: 'attribute_name', \twidth:100 },\r\n\t\t{ title: '实验科室', \t\tfield: 'project_parent_name',width:100 },\r\n\t\t{ title: '开票单位(NC)', \tfield: 'organization_name', width:100 },\r\n\t\t{ title: '开票单位编码(NC)',field: 'organization_code', width:130 },\r\n\t\t{ title: '业务员', \t\t\tfield: 'salesman_user', \twidth:100 },\r\n\t\t{ title: '业务原编码',\t\tfield: 'salesman_code', \twidth:100 },\r\n\t\t{ title: '区域', \t\t\tfield: 'region_name', \t\twidth:100 },\r\n\t\t{ title: '区域编码',\t\tfield: 'region_num',\t\twidth:100 },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, specCode } = this.state\r\n\t\tconsole.log(data)\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>  \r\n\t\t\t\t<Modal ref='modal' title='账单信息' width={1000} noFooter>\r\n\t\t\t\t\t<BillInfo className='fv rel ex xplr' specCode = { specCode || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\tp\\control.js",["2062","2063"],"import React from 'react'\r\n// ===================================================================== antd\r\n// ===================================================================== utils\r\nimport Time from '@utils/time'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== global template\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst DisplayForm = $async(()=>import('./display-form'))\r\n// ===================================================================== template\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== btns\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tbtns:[],\r\n\t\tdataList:[]\r\n\t}\r\n\tbillStatusOption = [\r\n        { label: \"财务待审核\", \tvalue: \"45301\" },\r\n        { label: \"财务待结算\", \tvalue: \"45302\" },\r\n        { label: \"财务已结算\", \tvalue: \"45303\" },\r\n        { label: \"已作废\", \t   \tvalue: \"45304\" },\r\n        { label: \"业务员待审核\",value: \"45305\" }\r\n\t]\r\n\t\r\n\tmodel = {\r\n\t\tstart_at: Time.customDate(2, \"date\"),\r\n\t\tend_at: Time.customDate(\"current-date\"),\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'接收标本时间', name:'date',\t\t\t\ttype:'date-range', names:['start_at','end_at'], },\r\n\t\t{ label:'客户名称', \tname:'hosp_id', \t\t\ttype:'select', data:[] },\r\n\t\t{ label:'实验科室', \tname:'project_parent_id', \ttype:'select', data:[] },\r\n\t\t{ label:'区域', \t\tname:'region_id', \t\t\ttype:'select', data:[] },\r\n\t\t{ label:'业务员', \t\tname:'salesman_id', \t\ttype:'select', data:[] },\r\n\t\t{ label:'状态', \t\tname:'status', \t\t\t\ttype:'select', data:this.billStatusOption, nameStr:'label', idStr:'value' }\r\n\t]\r\n\r\n\tfetch = param => $http.paging(this,'bill-st/constsummary',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\r\n\tcols = [\r\n\t\t{ title: '序号',\t\t\tfield: 'sort', \t\t\t\twidth:80 },\r\n\t\t{ title: '岗位',\t\t\tfield: 'project_name', \t\twidth:130 },\r\n\t\t{ title: '客户名称',\t\tfield: 'hosp_name', \t\twidth:160 },\r\n\t\t{ title: '自然项目',\t\tfield: 'parent_kind_name', \twidth:160 },\r\n\t\t{ title: '数量',\t\t\tfield: 'sum_spec_in', \t\twidth:80 },\r\n\t\t{ title: '冲抵数量', \t\tfield: 'sum_spec_out', \t\twidth:80 },\r\n\t\t{ title: '实际数量', \t\tfield: 'sum_spec', \t\t\twidth:80 },\r\n\t\t{ title: '标准价格', \t\tfield: 'sum_sprice', \t\twidth:100 },\r\n\t\t{ title: '实际价格', \t\tfield: 'sum_price', \t\twidth:100 },\r\n\t\t{ title: '实验科室', \t\tfield: 'project_parent_name',width:100 },\r\n\t\t{ title: '开票单位(NC)', \tfield: 'organization_name', width:100 },\r\n\t\t{ title: '开票单位编码(NC)',field: 'organization_code', width:130 },\r\n\t\t{ title: '业务员', \t\t\tfield: 'salesman_user', \twidth:100 },\r\n\t\t{ title: '业务原编码',\t\tfield: 'salesman_code', \twidth:100 },\r\n\t\t{ title: '区域', \t\t\tfield: 'region_name', \t\twidth:100 },\r\n\t\t{ title: '区域编码',\t\tfield: 'region_num',\t\twidth:100 },\r\n\t]\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 客户名称\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 实验科室\r\n\t\t\t\tcache: d.ProjectTeamMenuSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'project-team/selectMenu').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.bsareaSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[3].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[3].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 业务员\r\n\t\t\t\tcache: d.bssalesmanSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-salesman/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'导出F1', code:'F1', onClick:()=>{\r\n\t\t\t\t\t\t\tconsole.log(this)\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否导出账单?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tlet list = {\r\n\t\t\t\t\t\t\t\texport: 1,\r\n\t\t\t\t\t\t\t\tstart_at: this.model.start_at,\r\n\t\t\t\t\t\t\t\tend_at: this.model.end_at\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$http.submit(null,'bill-st/constsummary', { param: list } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('导出成功'))\r\n\t\t\t\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\t\t\t\twindow.location.href = data.url;\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) \r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, dataList,  pullLoading, pag, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='成本汇总' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= {(v,press)=>$fn.onChange.call(this,v,press)} \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => { form.setFieldsValue({date:[Time.customDate(2, \"date\"), Time.customDate(\"current-date\")]}) }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { current => {\r\n\t\t\t\t\t\tthis.setState({dataList:current})\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<DisplayForm rowdata={ dataList || [] } model={this.model} />\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\settlement-hospital.js",["2064","2065","2066"],"import React from 'react'\r\n// ===================================================================== utils\r\nimport Time from '@utils/time'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst SettHospitalChild = $async(()=>import('./sett-hospital-child'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {}\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'账期', \t    name:'bill_phase_id',      \ttype:'select', data:[] },\r\n\t\t{ label:'接收标本日期', name: 'date', \t\t\t\t names:['start_at','end_at'], type:'date-range' },\r\n        { label:'区域名称', \tname:'region_id', \t\t\t type:'select', data:[] },\r\n        { label:'客户名称', \tname:'hosp_id', \t\t     type:'select', data:[] },\r\n    ]\r\n\tmodel = {\r\n\t\tstart_at: Time.customDate(2, \"date\"),\r\n\t\tend_at: Time.customDate(\"current-date\"),\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('bill-phase-select-data').then(billPhase => { // 账期\r\n\t\t\tif($fn.hasArray(billPhase)){\r\n\t\t\t\tthis.forms[0].data = billPhase\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bill-phase/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\tthis.forms[0].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bill-phase-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.dataSave('bs-area-select').then(bsArea => { // 区域\r\n\t\t\tif($fn.hasArray(bsArea)){\r\n\t\t\t\tthis.forms[2].data = bsArea\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bs-area/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\tthis.forms[2].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bs-area-select', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.dataSave('device').then(local => { // 客户名称\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[3].data = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bs-hospital/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tthis.forms[3].data = data.items\r\n\t\t\t\t\t$fn.dataSave('device', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'bill-hosp/wait', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '区域名称',\tfield: 'region_name', \twidth:160 },\r\n\t\t{ title: '客户名称',\tfield: 'hosp_name', \twidth:170 },\r\n\t\t{ title: '账期', \t\tfield: 'phase_name', \twidth:170 },\r\n\t\t{ title: '标本数量',\tfield: 'num',    \t\twidth:160 },\r\n\t\t{ title: '标准总价',\tfield: 'sum_sprice', \twidth:160 },\r\n\t\t{ title: '实际总价',\tfield: 'sum_price', \twidth:170 },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'批量结算', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认批量结算？',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.data1.map(v=>v.hosp_id)\r\n\t\t\t\t\t\t\tconst billPhaseId = this.state.data1.map(v=>v.bill_phase_id)\r\n\t\t\t\t\t\t\t$http.submit(null,'bill-hosp/settlement', { param: { hosp_ids: keys.join(','), bill_phase_id:billPhaseId} } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('批量结算成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}  },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='账单结算' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange={(v,press)=>$fn.onChange.call(this,v,press)\r\n\t\t\t\t\t\t// (v, press, { name, data }) => {\r\n\t\t\t\t\t\t// $fn.onChange.call(this, v, press, () => {\r\n\t\t\t\t\t\t// \tif (name && name === 'device_id') {\r\n\t\t\t\t\t\t// \t\tconsole.log(data)\r\n\t\t\t\t\t\t// \t\treturn { device_name: data.name }\r\n\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t \t} \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => { form.setFieldsValue({date:[Time.customDate(2, \"date\"), Time.customDate(\"current-date\")]}) }}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { current => {\r\n\t\t\t\t\t\tconsole.log(current)\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t<SettHospitalChild className='fv rel ex xplr' model={this.model} rowdata={ data1 || [] } />\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\settlement-details.js",["2067"],"import React from 'react'\r\n// ===================================================================== utils\r\nimport Time from '@utils/time'\r\nimport Modal from '@antd/modal'\r\n\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\n// const Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// const confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst SettDetailsChild = $async(() => import('./sett-details-child'))\r\nconst BillInfo = $async(()=>import('./bill-info'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\t// selectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tshowmodel:'',\r\n\t\tsubmit: [\r\n\t\t\t{label: '结算账期',\t\tname: 'phase_id',\ttype: 'select', data:[] },\r\n\t\t\t{label: '用户名',\t\tname: 'account',    },\r\n\t\t\t{label: '密码',\t\t\tname: 'password',   },\r\n\t\t],\r\n\t\tspecCode: '',\r\n\t}\r\n\tpayTypeOptions = [\r\n\t\t{ label: \"全部\", value: \"\" },\r\n        { label: \"已结算\", value: \"45303\" },\r\n        { label: \"待结算\", value: \"45302\" }\r\n\t]\r\n\toptions = [\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"冲抵\", value: \"2\" }\r\n\t]\r\n\tstatusList = []\r\n\tforms = [\r\n\t\t{ label:'账期', \t    name:'bill_phase_id',      \ttype:'select', data:[], mode: 'multiple',required: true, },\r\n\t\t{ label:'条码号', \t    name:'spec_code' },\r\n\t\t{ label:'帐单生成时间',  name: 'date', \t\t\t\tnames:['start_at','end_at'], type:'date-range' },\r\n\t\t{ label:'账单状态', \tname:'status', \t            type:'select', data: this.payTypeOptions,   nameStr:'label', idStr:'value' },\r\n        { label:'区域', \t\tname:'region_id', \t\t\ttype:'select', data:[] },\r\n        { label:'医院名称', \tname:'hosp_id', \t\t    type:'select', data:[] },\r\n        { label:'业务员', \t\tname:'salesman_id', \t\ttype:'select', data:[] },\r\n        { label:'病人姓名', \tname:'patient_name' },\r\n    ]\r\n\tmodel = {\r\n\t\tstart_at: Time.customDate(2, \"date\"),\r\n\t\tend_at: Time.customDate(\"current-date\"),\r\n\t}\r\n    async getDataAsync() {\r\n\t\tawait $fn.getDisItem({\r\n\t\t\tcode: 45300,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tthis.statusList = data\r\n\t\t\t}\r\n\t\t}) // 账单状态\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit } = this.state\r\n\t\t$fn.dataSave('bill-phase-select-data').then(local => { // 账期\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tconsole.log(local)\r\n\t\t\t\tthis.forms[0].data = local\r\n\t\t\t\tsubmit[0].data = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bill-phase/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\tthis.forms[0].data = data.items\r\n\t\t\t\t\tsubmit[0].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bill-phase-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.bsareaSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 医院\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[5].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[5].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 业务员\r\n\t\t\t\tcache: d.bssalesmanSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[6].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-salesman/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[6].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.getDataAsync()\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'bill/index', param)\r\n\tcols = [\r\n\t\t{ title: \"序号\",\t\tfield: \"id\", \t\t\twidth:80, },\r\n\t\t{ title: '接收标本日期',field: 'receive_at',     width:160 },\r\n\t\t{ title: '开票单位',\tfield: 'organization_name', width:160 },\r\n\t\t{ title: '开票单位编码',field: 'organization_code', width:170 },\r\n\t\t{ title: '姓名', \t\tfield: 'patient_name',  width:80 },\r\n\t\t{ title: '性别', \t    field: 'sex_name',      width:80 },\r\n\t\t{ title: '年龄',        field: 'age',           width:80 },\r\n\t\t{ title: '所属医生', \tfield: 'doctor', \t\twidth:100 },\r\n\t\t{ title: '业务员名称',\tfield: 'salesman_user',\twidth:100 },\r\n\t\t{ title: '业务区域',\tfield: 'region_name',\twidth:100 },\r\n\t\t{ title: '条码号',\t\tfield: 'spec_code', \twidth:100, render: ({text,rows})=> <span onDoubleClick={()=>{\r\n\t\t\tthis.setState({specCode: text})\r\n\t\t\tthis.refs.modal1.open()\r\n\t\t}}>{text}</span> },\r\n\t\t{ title: '账期', \t\tfield: 'phase_str', \twidth:100 },\r\n\t\t{ title: '账单类型', \tfield: 'pay_type',      width:100,\r\n\t\t\trender: ({rows}) => {\r\n\t\t\t\treturn window.$fn.filterSelect(this.options, rows.pay_type, 'label', 'value')\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ title: '医院名称',\tfield: 'hosp_name', \twidth:100 },\r\n\t\t{ title: '标准价格',\tfield: 'sprice',        width:100 },\r\n\t\t{ title: '折扣率',\t\tfield: 'percent',\t    width:100 },\r\n\t\t{ title: '实际价格',    field: 'price',         width:160 },\r\n\t\t{ title: '折扣金额',    field: 'perprice',\t    width:100 },\r\n\t\t{ title: '帐单生成时间',field: 'created_at',\twidth:100 },\r\n\t\t{ title: '账单状态',\tfield: 'status',\t    width:100, \r\n\t\t\trender: ({rows}) => {\r\n\t\t\t\treturn window.$fn.filterSelect(this.statusList, rows.status, 'name', 'value')\r\n\t\t\t}\r\n\t\t},\r\n        { title: '备注',\t\tfield: 'attribute_name',width:100 },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'结算', ghost:true, onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t\tthis.setState({showmodel: 1})\r\n\t\t\t} },\r\n\t\t\t{ label:'反结算', ghost:true, onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t\tthis.setState({showmodel: 0})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, showmodel, specCode } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='账单信息' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange={(v,press)=>$fn.onChange.call(this,v,press)} \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => { form.setFieldsValue({date:[Time.customDate(2, \"date\"), Time.customDate(\"current-date\")]}) }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={showmodel?\"结算\":\"反结算\"} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {} }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\tif (showmodel) {\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'bill/settlement', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'bill/resettlement', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { current => {\r\n\t\t\t\t\t\tconsole.log(current)\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal1' title='账单信息' width={1000} noFooter>\r\n\t\t\t\t\t<BillInfo className='fv rel ex xplr' specCode = { specCode || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<SettDetailsChild className='fv rel ex xplr' model={this.model} rowdata={ data1 || [] } />\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\finance-confirm.js",["2068","2069","2070"],"import React from 'react'\r\n// ===================================================================== utils\r\nimport Time from '@utils/time'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst FinanceConfirmChild = $async(()=>import('./finance-confirm-child'))\r\nconst BillInfo = $async(()=>import('./bill-info'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tsubmit: [\r\n            { label: '账期',\t    name: 'bill_phase_id',\trequired: true,\t  type: 'select',\tdata: [], nameStr: 'name', idStr:'value', width: '100%'},\r\n            { label: '开始时间',\tname: 'start_at',\t\ttype:'date-time', after:true },\r\n\t\t\t{ label: '结束时间',\tname: 'end_at',     \ttype:'date-time', after:true },\r\n        ],\r\n\t\tspecCode: '',\r\n\t\tstatusList: []\r\n\t}\r\n\tpayTypeOptions = [\r\n        { label: \"待审核\", \t\t value: \" 45301\" },\r\n\t\t{ label: \"业务员待确认\", value: \" 45305\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'账期', \t    name:'bill_phase_id',\ttype:'select', data:[] },\r\n\t\t{ label:'条码号', \t    name:'spec_code' },\r\n\t\t{ label:'账单生成时间', name: 'date', \t\t\tnames:['start_at','end_at'], type:'date-range' },\r\n        { label:'医院名称', \tname:'hosp_id', \t\ttype:'select', data:[] },\r\n\t\t{ label:'账单状态', \tname:'status', \t        type:'select', data: this.payTypeOptions,   nameStr:'label', idStr:'value' },\r\n        { label:'显示状态异常', name:'status_salesman',\ttype:'checkbox' },\r\n    ]\r\n\tmodel = {\r\n\t\tstart_at: Time.customDate(2, \"date\"),\r\n\t\tend_at: Time.customDate(\"current-date\"),\r\n\t}\r\n\toptions= [\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"冲抵\", value: \"2\" }\r\n\t]\r\n\tasync getDataAsync() {\r\n\t\tawait $fn.getDisItem({\r\n\t\t\tcode: 45300,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tthis.setState({statusList:data})\r\n\t\t\t}\r\n\t\t}) // 账单状态\r\n\t}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n\t\t$fn.dataSave('bill-summary-select-data').then(local => { // 账期\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[0].data = local\r\n\t\t\t\tsubmit[0].data\t   = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bill-summary/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tthis.forms[0].data = data.items\r\n\t\t\t\t\tsubmit[0].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bill-summary-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.dataSave('bs-hospital-select-data').then(hospital => { // 医院名称\r\n\t\t\tif($fn.hasArray(hospital)){\r\n\t\t\t\tthis.forms[3].data = hospital\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bs-hospital/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tthis.forms[3].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bs-hospital-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.getDataAsync()\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'bill/auditlists', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '序号',\t\tfield: 'id', \t    \twidth:60 },\r\n\t\t{ title: '条码号',\t\tfield: 'spec_code', \twidth:100, render: ({text,rows})=> <span onDoubleClick={()=>{\r\n\t\t\tthis.setState({specCode: text})\r\n\t\t\tthis.refs.modal1.open()\r\n\t\t}}>{text}</span> },\r\n\t\t{ title: '账期',\t\tfield: 'phase_str', \twidth:100 },\r\n\t\t{ title: '账单类型', \tfield: 'pay_type',      width:80, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options, rows.pay_type, 'label', 'value')\r\n\t\t}},\r\n\t\t{ title: '医院名称',\tfield: 'hosp_name', \twidth:100 },\r\n\t\t{ title: '业务员',\t\tfield: 'salesman_user',\twidth:100 },\r\n\t\t{ title: '标准价格',\tfield: 'sprice',        width:100 },\r\n\t\t{ title: '折扣率',\t\tfield: 'percent',\t    width:100 },\r\n\t\t{ title: '实际价格',    field: 'price',         width:100 },\r\n\t\t{ title: '创建时间',\tfield: 'created_at',    width:160 },\r\n\t\t{ title: '账单状态',\tfield: 'status',\t    width:100, \r\n\t\trender: ({rows}) => {\r\n\t\t\tconst { statusList } = this.state\r\n\t\t\treturn window.$fn.filterSelect(statusList, rows.status, 'name', 'value')\r\n\t\t} },\r\n        { title: '备注',\t\tfield: 'remark',\t\twidth:100 },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'确认', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认账单？',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst ids = this.state.data1.map(v=>v.hosp_id)\r\n\t\t\t\t\t\t\t$http.submit(null,'bill/audit', { param: { ids: ids.join(',')} } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('确认成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'一键审核', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tthis.setState({ submit })\r\n            }\r\n\t\t\t},\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, specCode } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='待确认账单' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= {(v,press)=>$fn.onChange.call(this,v,press)} \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => { form.setFieldsValue({date:[Time.customDate(2, \"date\"), Time.customDate(\"current-date\")]}) }}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title='一键审核' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit } = this.state;\r\n                            // if (name === 'device_id') {\r\n                            //     this.deviceInfo = submit[0].data.filter(i => i.value === v)\r\n                                if ($fn.hasArray(this.deviceInfo)) {\r\n                                    const d = this.deviceInfo[0]\r\n                                    const form = {\r\n                                        bill_phase_id: d.bill_phase_id,\r\n                                        start_at: d.start_at,\r\n                                        end_at: d.end_at,\r\n                                    }\r\n                                    this.formSubmit.setFieldsValue({...form})\r\n                                }\r\n                            // }\r\n\t\t\t\t\t\t} } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const param = { ...v }\r\n                            $http.submit(null, 'bill/auditall', { param }).then(data => {\r\n                                message.then(f => f.default.success('审核成功'))\r\n                                this.refs.modal.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal1' title='账单信息' width={1000} noFooter>\r\n\t\t\t\t\t<BillInfo className='fv rel ex xplr' specCode = { specCode || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<FinanceConfirmChild className='fv rel ex xplr' model={this.model} rowdata={ data1 || [] } />\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\sett-hospital-child.js",["2071"],"// ===================================================================== 薛玉梅 | 2020-10-19 | 新增文件\r\nimport React from 'react'\r\nimport Modal from '@antd/modal'\r\n\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst message = import('@antd/message')\r\n\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst BillInfo = $async(()=>import('./bill-info'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\trowId: '',\r\n\t\tselectedKeys:[], \r\n\t\tsubmit: [\r\n            { label: '标本条码',\tname: 'old_spec_code',\t},\r\n            { label: '医院名称',\tname: 'hosp_name',\t\t},\r\n\t\t\t{ label: '项目',\t\tname: 'kind_name',\t \t},\r\n\t\t\t{ label: '选择类型',\tname: 'pay_type',\t\ttype: 'select',\t\tdata: this.typeList,   nameStr:'label', idStr:'value' },\r\n\t\t\t{ label: '价格',\t\tname: 'price',\t\t\t},\r\n\t\t\t{ label: '原因',\t\tname: 'reason',\t\t\ttype: 'textarea' },\r\n\t\t\t{ label: '上传图片',\tname: 'pic_path',\t\ttype: 'upload', \tparams: {modular: 124} },\r\n\t\t],\r\n\t\tspecCode: '',\r\n\t}\r\n\t\r\n\tforms = []\r\n\tmodel = {}\r\n\tstatusList = [\r\n\t\t{ label: \"作废\", value: \"45801\" },\r\n\t\t{ label: \"正常\", value: \"45802\" }\r\n\t]\r\n\toptions = [\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"冲抵\", value: \"2\" }\r\n\t]\r\n\ttypeList = [\r\n\t\t{ label: \"增加\", value: \"1\" },\r\n\t\t{ label: \"减少\", value: \"2\" }\r\n\t]\r\n\tcheck = {}\r\n\tcomponentDidMount(){}\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tif (props.rowdata.length > 0) { \r\n\t\t\tvar len = props.rowdata.length-1\r\n            this.model.hosp_id = props.rowdata[len].hosp_id\r\n\t\t\tthis.model.bill_phase_id = props.rowdata[len].bill_phase_id\r\n\t\t\tthis.model.status = props.rowdata[len].status\r\n            this.model.summary_sn = props.model.summary_sn\r\n\t\t\tthis.fetch(this.model)\r\n\t\t}\r\n\t}\r\n\r\n\tfetch = param => $http.paging(this,'bill/speclists',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\r\n\tcols = [\r\n\t\t{ title: '条码', \t\tfield: 'old_spec_code', width:120, render: ({text,rows})=> <span onDoubleClick={()=>{\r\n\t\t\tthis.setState({specCode: text})\r\n\t\t\tthis.refs.modal2.open()\r\n\t\t}}>{text}</span> },\r\n\t\t{ title: '账期', \t\tfield: 'phase_str', \twidth:120 },\r\n\t\t{ title: '自然项目', \tfield: 'category_name',\twidth:120 },\r\n\t\t{ title: '账单类型', \tfield: 'pay_type', \t\twidth:80, \r\n\t\t\trender: ({rows}) => {\r\n\t\t\t\treturn window.$fn.filterSelect(this.options, rows.pay_type, 'label', 'value') \r\n\t\t\t}  },\r\n        { title: '医院名称', \tfield: 'hosp_name', \twidth:120 },\r\n        { title: '项目名称', \tfield: 'kind_name', \twidth:120 },\r\n\t\t{ title: '标准价格', \tfield: 'sprice', \t    width:80 },\r\n        { title: '折扣率', \t\tfield: 'percent', \t\twidth:80 },\r\n\t\t{ title: '实际价格', \tfield: 'price', \t    width:80 },\r\n        { title: '折扣金额', \tfield: 'perprice', \t\twidth:80 },\r\n\t\t{ title: '帐单生成时间',field: 'created_at', \twidth:120 },\r\n\t\t{ title: '账单状态', \tfield: 'status', \t    width:80, \r\n            render: ({rows}) => {\r\n                return window.$fn.filterSelect(this.statusList, rows.status, 'label', 'value') \r\n            } },\r\n\t\t{ title: '备注', \t\tfield: 'remark', \t    width:120 },\r\n\t\t{ title: '操作', \t\tfield: 'custom', \t    width:180, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='新增账单' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\t\t\tsubmit[6].value = ''\r\n\t\t\t\t\t\tthis.setState({submit})\r\n                    }} />\r\n                    <Button label='查看其它' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\t$http.submit(null,'bill/viewpic', { param: { uuid: rows.uuid } } ).then(data=>{\r\n\t\t\t\t\t\t\tthis.check = data\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} }\r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, rowId, specCode } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Modal ref='modal' title='新增账单' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {} }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconsole.log(v)\r\n                            $http.submit(null, 'bill/add', { param: { uuid: rowId,...v} }).then(data => {\r\n                                message.then(f => f.default.success('操作成功'))\r\n                                this.refs.modal.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal1' title='查看其他' width={648} noFooter>\r\n\t\t\t\t\t<div className='p20 r6px'>\r\n\t\t\t\t\t\t<div className='pb20 pt20'>\r\n\t\t\t\t\t\t\t<span className='dk pr10'>原因:</span>\r\n\t\t\t\t\t\t\t<input type='textarea' className=' bor1 h70 ' disabled style={{width: \"84%\"}} value={this.check.reason} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='pb20'>\r\n\t\t\t\t\t\t\t<span className='dk pr10'>图片:</span>\r\n\t\t\t\t\t\t\t<div className='dk bor1 h100 w tc' style={{width: \"84%\",lineHeight:\"100px\"}} >{this.check.img||'暂无图片'}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>  \r\n\t\t\t\t<Modal ref='modal2' title='账单信息' width={1000} noFooter>\r\n\t\t\t\t\t<BillInfo className='fv rel ex xplr' specCode = { specCode || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\sett-details-child.js",["2072","2073"],"// ===================================================================== 薛玉梅 | 2020-10-19 | 新增文件\r\nimport React from 'react'\r\nimport Modal from '@antd/modal'\r\n\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\trowId: '',\r\n\t\tselectedKeys:[], \r\n\t\tsubmit: [\r\n            { label: '标本条码',\tname: 'old_spec_code',\t},\r\n            { label: '医院名称',\tname: 'hosp_name',\t\t},\r\n\t\t\t{ label: '项目',\t\tname: 'kind_name',\t \t},\r\n\t\t\t{ label: '选择类型',\tname: 'pay_type',\t\ttype:'select',\t\tdata: this.typeList,   nameStr:'label', idStr:'value' },\r\n\t\t\t{ label: '价格',\t\tname: 'price',\t\t\t},\r\n\t\t\t{ label: '原因',\t\tname: 'reason',\t\t\ttype:'textarea' },\r\n\t\t\t{ label: '上传图片',\tname: 'pic_path',\t\ttype: 'upload',},\r\n\t\t],\r\n\t\tsubmit1: [\r\n            { label: '原因',  name: 'reason' },\r\n            { label: '图片',  name: 'img',\t\ttype: 'textarea' },\r\n        ],\r\n\t}\r\n\t\r\n\tforms = []\r\n\tmodel = {}\r\n\tstatusList = []\r\n\ttypeList = [\r\n        { label: \"增加\", value: \"1\" },\r\n        { label: \"减少\", value: \"2\" }\r\n    ]\r\n\toptions = [\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"冲抵\", value: \"2\" }\r\n    ]\r\n\ttypeList = [\r\n\t\t{ label: \"增加\", value: \"1\" },\r\n\t\t{ label: \"减少\", value: \"2\" }\r\n\t]\r\n\tcheck = {}\r\n    async getDataAsync() {\r\n\t\tawait $fn.getDisItem({\r\n\t\t\tcode: 45300,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tthis.statusList = data\r\n\t\t\t}\r\n\t\t}) // 账单状态\r\n\t}\r\n\tcomponentDidMount(){ \r\n\t\tthis.getDataAsync()\r\n\t}\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tif (props.rowdata.hosp_id) {\r\n            this.model.hosp_id = props.rowdata.hosp_id\r\n\t\t\tthis.model.spec_code = props.rowdata.spec_code\r\n\t\t\tthis.model.status = props.rowdata.status\r\n\t\t\tthis.fetch(this.model)\r\n\t\t}\r\n\t}\r\n\r\n\tfetch = param => $http.paging(this,'bill/speclists',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\r\n\tcols = [\r\n\t\t{ title: '账单编号', \tfield: 'order_sn',      width:120 },\r\n\t\t{ title: '账期', \t\tfield: 'phase_str', \twidth:120 },\r\n        { title: '自然项目', \tfield: 'parent_kind_name',\twidth:120 },\r\n\t\t{ title: '账单类型', \tfield: 'pay_type', \t\twidth:80, \r\n\t\t\trender: ({rows}) => {\r\n\t\t\t\treturn window.$fn.filterSelect(this.options, rows.pay_type, 'label', 'value') \r\n\t\t\t}  },\r\n        { title: '医院名称', \tfield: 'hosp_name', \twidth:120 },\r\n        { title: '项目名称', \tfield: 'kind_name', \twidth:120 },\r\n\t\t{ title: '标准价格', \tfield: 'sprice', \t    width:80 },\r\n        { title: '折扣率', \t\tfield: 'percent', \t\twidth:80 },\r\n\t\t{ title: '实际价格', \tfield: 'price', \t    width:80 },\r\n\t\t{ title: '折扣金额',    field: 'perprice',\t    width:100 },\r\n\t\t{ title: '帐单生成时间',field: 'created_at', \twidth:120 },\r\n\t\t{ title: '账单状态', \tfield: 'status', \t    width:80, \r\n        render: ({rows}) => {\r\n            return window.$fn.filterSelect(this.statusList, rows.status, 'name', 'value')\r\n        } },\r\n\t\t{ title: '备注', \t\tfield: 'remark', \t    width:120 },\r\n\t\t{ title: '操作', \t\tfield: 'custom', \t    width:180, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='新增账单' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\t\t\tsubmit[6].value = ''\r\n\t\t\t\t\t\tthis.setState({submit})\r\n                    }} />\r\n                    <Button label='查看其它' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\t$http.submit(null,'bill/viewpic', { param: { uuid: rows.uuid } } ).then(data=>{\r\n\t\t\t\t\t\t\tthis.check = data\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} }\r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, rowId, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Modal ref='modal' title='新增账单' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {} }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconsole.log(v)\r\n                            $http.submit(null, 'bill/add', { param: { uuid: rowId,...v} }).then(data => {\r\n                                message.then(f => f.default.success('操作成功'))\r\n                                this.refs.modal.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal1' title='查看其他' width={648} noFooter>\r\n\t\t\t\t\t<div className='p20 r6px'>\r\n\t\t\t\t\t\t<div className='pb20 pt20'>\r\n\t\t\t\t\t\t\t<span className='dk pr10'>原因:</span>\r\n\t\t\t\t\t\t\t<input type='textarea' className=' bor1 h70 ' disabled style={{width: \"84%\"}} value={this.check.reason} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='pb20'>\r\n\t\t\t\t\t\t\t<span className='dk pr10'>图片:</span>\r\n\t\t\t\t\t\t\t<div className='dk bor1 h100 w tc' style={{width: \"84%\",lineHeight:\"100px\"}} >{this.check.img||'暂无图片'}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\finance-confirm-child.js",["2074"],"// ===================================================================== 薛玉梅 | 2020-10-19 | 新增文件\r\nimport React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== component\r\nconst BillDetailsTable = $async(()=>import('./bill-details-table'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\t// selectedKeys:[], \r\n\t\trowId: '',\r\n\t\tsubmit: [\r\n\t\t\t{ label: '作废原因',\tname: 'remark',\ttype: 'textarea', width: 400 },\r\n\t\t]\r\n\t}\r\n\t\r\n\tforms = []\r\n\tmodel = {}\r\n\tstatusList = []\r\n\toptions = [\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"冲抵\", value: \"2\" }\r\n\t]\r\n\tasync getDataAsync() {\r\n\t\tawait $fn.getDisItem({\r\n\t\t\tcode: 45300,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tthis.statusList = data\r\n\t\t\t}\r\n\t\t}) // 账单状态\r\n\t}\r\n\tcomponentDidMount(){ \r\n\t\tthis.getDataAsync()\r\n\t}\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tif (props.rowdata.length > 0) { \r\n\t\t\tvar len = props.rowdata.length-1\r\n            this.model.hosp_id = props.rowdata[len].hosp_id\r\n\t\t\tthis.model.bill_phase_id = props.rowdata[len].bill_phase_id\r\n\t\t\tthis.model.status = props.rowdata[len].status\r\n            this.model.summary_sn = props.model.summary_sn\r\n\t\t\tthis.fetch(this.model)\r\n\t\t}\r\n\t}\r\n\r\n\tfetch = param => $http.paging(this,'bill/speclists',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\r\n\tcols = [\r\n\t\t{ title: '账单编号', \tfield: 'order_sn',      width:120 },\r\n\t\t{ title: '账期', \t\tfield: 'phase_str', \twidth:120 },\r\n\t\t{ title: '账单类型', \tfield: 'pay_type', \t\twidth:80, \r\n\t\t\trender: ({rows}) => {\r\n\t\t\t\treturn window.$fn.filterSelect(this.options, rows.pay_type, 'label', 'value') \r\n\t\t\t}  },\r\n\t\t{ title: '自然项目', \tfield: 'parent_kind_name',\twidth:120 },\r\n        { title: '医院名称', \tfield: 'hosp_name', \twidth:120 },\r\n        { title: '项目名称', \tfield: 'kind_name', \twidth:120 },\r\n\t\t{ title: '标准价格', \tfield: 'sprice', \t    width:80 },\r\n        { title: '折扣率', \t\tfield: 'percent', \t\twidth:80 },\r\n\t\t{ title: '实际价格', \tfield: 'price', \t    width:80 },\r\n\t\t{ title: '创建时间',    field: 'created_at', \twidth:120 },\r\n\t\t{ title: '账单状态', \tfield: 'status', \t    width:80, \r\n            render: ({rows}) => {\r\n                return window.$fn.filterSelect(this.statusList, rows.status, 'name', 'value') \r\n            } },\r\n        { title: '业务员',      field: 'salesman_user', width: 100 },\r\n        { title: '业务员状态',  field: 'status_salesman_name', width: 100 },\r\n\t\t{ title: '备注', \t\tfield: 'remark', \t    width:120 },\r\n\t\t{ title: '操作', \t\tfield: 'custom', \t    width:180, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n                    <Button label='作废' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tthis.setState({rowId:rows.uuid})\r\n\t\t\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<Button label='操作详情' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\tthis.setState({rowId:rows.uuid})\r\n                    }} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} }\r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, rowId } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Modal ref='modal' title='作废' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {} } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconsole.log(v)\r\n\t\t\t\t\t\t\t// const param = { ...v,uuid: rowId }\r\n                            $http.submit(null, 'bill/del', { param: { uuid: rowId,...v} }).then(data => {\r\n                                message.then(f => f.default.success('成功'))\r\n                                this.refs.modal.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal1' title='操作详情' width={900} noFooter>\r\n\t\t\t\t\t<BillDetailsTable className='fv rel ex xplr' bill_id = { rowId } />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\t// onRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\bill-inquiry-child.js",["2075"],"import React from 'react'\r\n// ===================================================================== antd\r\n\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst BillInfo = $async(()=>import('./bill-info'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[], \r\n\t\tsubmit: [\r\n            { label: '原因',  name: 'reason' },\r\n            { label: '图片',  name: 'img',\t\ttype: 'textarea' },\r\n        ],\r\n\t\tspecCode: '',\r\n\t}\r\n\t\r\n\tforms = []\r\n\tmodel = {}\r\n\tstatusList = [\r\n\t\t{ label: \"作废\", value: \"45801\" },\r\n\t\t{ label: \"正常\", value: \"45802\" }\r\n\t]\r\n\toptions = [\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"冲抵\", value: \"2\" }\r\n\t]\r\n\tcheck = {}\r\n\tcomponentDidMount(){}\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tif (props.rowdata.length > 0) { \r\n\t\t\tvar len = props.rowdata.length-1\r\n            this.model.hosp_id = props.rowdata[len].hosp_id\r\n            this.model.summary_sn = props.model.summary_sn\r\n\t\t\tthis.fetch()\r\n\t\t}\r\n\t}\r\n\r\n\tfetch = param => $http.paging(this,'bill/speclists',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\r\n\tcols = [\r\n\t\t{ title: '条码', \t\tfield: 'old_spec_code', width:120, render: ({text,rows})=> <span onDoubleClick={()=>{\r\n\t\t\tthis.setState({specCode: text})\r\n\t\t\tthis.refs.modal1.open()\r\n\t\t}}>{text}</span> },\r\n\t\t{ title: '账期', \t\tfield: 'phase_str', \twidth:120 },\r\n\t\t{ title: '自然项目', \tfield: 'category_name',\twidth:120 },\r\n\t\t{ title: '账单类型', \tfield: 'pay_type', \t\twidth:120, \r\n\t\t\trender: ({rows}) => {\r\n\t\t\t\treturn window.$fn.filterSelect(this.options, rows.pay_type, 'label', 'value') \r\n\t\t\t}  },\r\n        { title: '医院名称', \tfield: 'hosp_name', \twidth:120 },\r\n        { title: '项目名称', \tfield: 'kind_name', \twidth:120 },\r\n\t\t{ title: '标准价格', \tfield: 'sprice', \t    width:120 },\r\n        { title: '折扣率', \t\tfield: 'percent', \t\twidth:120 },\r\n\t\t{ title: '实际价格', \tfield: 'price', \t    width:120 },\r\n        { title: '折扣金额', \tfield: 'perprice', \t\twidth:120 },\r\n\t\t{ title: '帐单生成时间',field: 'created_at', \twidth:120 },\r\n\t\t{ title: '账单状态', \tfield: 'status', \t    width:120, \r\n\t\t\trender: ({rows}) => {\r\n\t\t\t\treturn window.$fn.filterSelect(this.statusList, rows.status, 'label', 'value') \r\n\t\t\t} },\r\n\t\t{ title: '备注', \t\tfield: 'remark', \t    width:120 },\r\n\t\t{ title: '操作', \t\tfield: 'custom', \t    width:120, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='查看其他' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\t$http.submit(null,'bill/viewpic', { param: { uuid: rows.uuid } } ).then(data=>{\r\n\t\t\t\t\t\t\tthis.check = data\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} }\r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, specCode } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Modal ref='modal1' title='查看其他' width={648} noFooter>\r\n\t\t\t\t\t<div className='p20 r6px'>\r\n\t\t\t\t\t\t<div className='pb20 pt20'>\r\n\t\t\t\t\t\t\t<span className='dk pr10'>原因:</span>\r\n\t\t\t\t\t\t\t<input type='textarea' className=' bor1 h70 ' disabled style={{width: \"84%\"}} value={this.check.reason} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='pb20'>\r\n\t\t\t\t\t\t\t<span className='dk pr10'>图片:</span>\r\n\t\t\t\t\t\t\t<div className='dk bor1 h100 w tc' style={{width: \"84%\",lineHeight:\"100px\"}} >{this.check.img||'暂无图片'}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal1' title='账单信息' width={1000} noFooter>\r\n\t\t\t\t\t<BillInfo className='fv rel ex xplr' specCode = { specCode || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\bill-inquiry.js",["2076","2077","2078","2079","2080"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst BillInquiryChild = $async(()=>import('./bill-inquiry-child'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t}\r\n\tstatusList = [\r\n\t\t{ label: \"作废\", value: \"45801\" },\r\n\t\t{ label: \"正常\", value: \"45802\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'账期',\t\t\tname:'summary_sn',\t\ttype:'select', data:[] },\r\n        { label:'区域名称',\t\tname:'region_id',\t\ttype:'select', data:[] },\r\n        { label:'客户名称',\t\tname:'hosp_id',\t\t\ttype:'select', data:[] },\r\n\t\t{ label:'结算单状态',\tname:'status',\t\t\ttype:'select', data:this.statusList, nameStr:'label', idStr:'value' },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('bill-summary-select-data').then(local => { // 账期\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[0].data = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bill-summary/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\tthis.forms[0].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bill-summary-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.bsareaSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 客户名称\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\r\n\tfetch = param => $fn.fetch.call(this,'bill-summary/index', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '区域', \t\tfield: 'region_name', \twidth:120 },\r\n        { title: '客户名称', \tfield: 'hosp_name', \twidth:120 },\r\n\t\t{ title: '账期', \t\tfield: 'phase_str', \twidth:120 },\r\n\t\t{ title: '标本数量', \tfield: 'spec_num', \t\twidth:120 },\r\n\t\t{ title: '标准总价', \tfield: 'sprice', \t\twidth:120 },\r\n        { title: '折扣率', \t\tfield: 'percent', \t\twidth:120 },\r\n\t\t{ title: '实际总价', \tfield: 'price', \t\twidth:120 },\r\n\t\t{ title: '结算时间', \tfield: 'created_at', \twidth:120 },\r\n\t\t{ title: '结算人', \t\tfield: 'operator_name',\twidth:120 },\r\n\t\t{ title: '结算单状态', \tfield: 'status', \t\twidth:120,  \r\n\t\t\trender: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.statusList, rows.status, 'label', 'value')\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'反结算', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认反结算账单？',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.data1.map(v=>v.hosp_id)\r\n\t\t\t\t\t\t\tconst summary = this.state.data1[0].summary_sn\r\n\t\t\t\t\t\t\t$http.submit(null,'bill-hosp/resettlement', { param: { hosp_ids: keys.join(','), summary_sn:summary} } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('反结算成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'客户账单导出F2', code:'F2', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否导出客户账单?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.data1.map(v=>v.hosp_id)\r\n\t\t\t\t\t\t\t$http.submit(null,'bill/endexport', { param: { hosp_ids: keys, summary_sn:this.state.data1[0].summary_sn} } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('导出成功'))\r\n\t\t\t\t\t\t\t\twindow.location.href = data.url;\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\tgetChildrenMsg = (result, msg) => {\r\n\t\tif (msg.uuid) {\r\n\t\t\t$http.submit(null,'bill/viewpic', { param: { uuid: msg.uuid } } ).then(data=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].reason = data.reason\r\n\t\t\t\tsubmit[1].img\t = data.img\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t})\r\n\t\t}\r\n    }\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='已结算账单查询' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t<BillInquiryChild className='fv rel ex xplr' parent={ this } model={this.model} rowdata={ data1 || [] } />\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\bill-info.js",["2081","2082"],"import React from 'react'\r\n// ===================================================================== antd\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = []\r\n\tmodel = {\r\n        spec_code: \"\",\r\n        show_del: 1\r\n    }\r\n    check = {}\r\n    options= [\r\n        { label: \"正常\", value: \"1\" },\r\n        { label: \"冲抵\", value: \"2\" }\r\n    ]\r\n\tcomponentDidMount(){\r\n        if (this.props.specCode) {\r\n            this.model.spec_code = this.props.specCode\r\n            this.fetch(this.model)\r\n        }\r\n    }\r\n\tcomponentWillReceiveProps(props) {}\r\n\r\n\tfetch = param => $http.paging(this,'bill/speclists',{ param } )\r\n\r\n\tcols = [\r\n\t\t{ title: '条码号',      field: 'old_spec_code',   width: 120 },\r\n\t\t{ title: '账期',        field: 'phase_str',        width: 120 },\r\n\t\t{ title: '账单生成时间',field: 'created_at',       width: 160 },\r\n        { title: '账单状态', \tfield: 'status_name', \t   width: 120 },\r\n\t\t{ title: '账单类型',    field: 'pay_type', \t       width: 80, render:({rows})=> {\r\n            return window.$fn.filterSelect(this.options, rows.pay_type, 'label', 'value')\r\n        } },\r\n        { title: '备注', \t    field: 'attribute_name', \twidth: 80 },\r\n\t\t{ title: '医院名称',    field: 'hosp_name',         width: 160 },\r\n\t\t{ title: '业务员名称',  field: 'salesman_user',     width: 100 },\r\n\t\t{ title: '接收标本日期',field: 'sp_check_time',     width: 160 },\r\n\t\t{ title: '自然项目',    field: 'parent_kind_name',  width: 160 },\r\n\t\t{ title: '项目名称',    field: 'kind_name',         width: 160 },\r\n        { title: '标准价格', \tfield: 'sprice', \t        width: 80 },\r\n\t\t{ title: '实际价格',    field: 'price', \t        width: 80, },\r\n        { title: '折扣率', \t    field: 'percent', \t        width: 80 },\r\n\t\t{ title: '折扣金额',    field: 'perprice', \t        width: 100 },\r\n\t] \r\n\trender(){\r\n        const { data, pullLoading, pag, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\bill-details-table.js",["2083","2084","2085"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = []\r\n\tmodel = {\r\n        bill_id: this.props.bill_id,\r\n    }\r\n\tcheck = {}\r\n\tcomponentDidMount(){\r\n        this.fetch(this.model)\r\n    }\r\n\tcomponentWillReceiveProps(props) {}\r\n\r\n\tfetch = param => $http.paging(this,'bill/salesmanabnormallists',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\r\n\tcols = [\r\n\t\t{ title: '操作时间',    field: 'created_at',        width: 120 },\r\n\t\t{ title: '操作类型',    field: 'type_name',         width: 120 },\r\n\t\t{ title: '操作人',      field: 'real_name',         width: 120 },\r\n        { title: '输入价格', \tfield: 'price', \t        width: 80 },\r\n\t\t{ title: '修改前价格',  field: 'change_old_price', \twidth: 80, },\r\n        { title: '修改后价格', \tfield: 'change_new_price', \twidth: 80 },\r\n\t\t{ title: '备注',        field: 'remark', \t        width: 120 },\r\n\t\t{ title: '操作', \t\tfield: 'custom', \t        width: 120, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='查看图片' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\t$http.submit(null,'bill/viewpic', { param: { uuid: rows.uuid } } ).then(data=>{\r\n\t\t\t\t\t\t\tthis.check = data\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} }\r\n\t] \r\n\trender(){\r\n        const { data, pullLoading, pag, submit, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Modal ref='modal1' title='查看其他' width={648} noFooter>\r\n\t\t\t\t\t<div className='p20 r6px'>\r\n\t\t\t\t\t\t<div className='pb20 pt20'>\r\n\t\t\t\t\t\t\t<span className='dk pr10'>原因:</span>\r\n\t\t\t\t\t\t\t<input type='textarea' className=' bor1 h70 ' disabled style={{width: \"84%\"}} value={this.check.reason} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='pb20'>\r\n\t\t\t\t\t\t\t<span className='dk pr10'>图片:</span>\r\n\t\t\t\t\t\t\t<div className='dk bor1 h100 w tc' style={{width: \"84%\",lineHeight:\"100px\"}} >{this.check.img||'暂无图片'}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\finance-list\\bill-details.js",["2086","2087","2088"],"import React from 'react'\r\n// ===================================================================== global declare\r\nimport Time from '@utils/time'\r\nimport Modal from '@antd/modal'\r\nconst { $http, $fn, $async } = window\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst BillDetailsTable = $async(()=>import('./bill-details-table'))\r\nconst BillInfo = $async(()=>import('./bill-info'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: [],\r\n\t\trowId: '',\r\n\t\tsubmit: [\r\n            { label: '条码号',\t    name: 'spec_code',\t\tdisabled: true },\r\n            { label: '当前账期',\tname: 'phase_str',\t\tdisabled: true },\r\n\t\t\t{ label: '修改后账期',\tname: 'phase_id',\t\ttype:'select',\t\tdata:[] },\r\n\t\t],\r\n\t\tspecCode: '',\r\n\t}\r\n\tpayTypeOptions = [\r\n        { label: \"财务待审核\", \tvalue: \"45301\" },\r\n        { label: \"财务待结算\", \tvalue: \"45302\" },\r\n        { label: \"财务已结算\", \tvalue: \"45303\" },\r\n        { label: \"已作废\", \t   \tvalue: \"45304\" },\r\n        { label: \"业务员待审核\",value: \"45305\" }\r\n\t]\r\n\toptions= [\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"冲抵\", value: \"2\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'账期', \t    name:'bill_phase_id',      \ttype:'select', data:[] },\r\n\t\t{ label:'条码号', \t    name:'spec_code' },\r\n\t\t{ label:'接收标本日期', name: 'date', \t\t\t\tnames:['start_at','end_at'], type:'date-range' },\r\n\t\t{ label:'账单状态', \tname:'status', \t            type:'select', data: this.payTypeOptions,   nameStr:'label', idStr:'value' },\r\n        { label:'区域', \t\tname:'region_id', \t\t\ttype:'select', data:[] },\r\n        { label:'医院名称', \tname:'hosp_id', \t\t    type:'select', data:[] },\r\n        { label:'业务员', \t\tname:'salesman_id', \t\ttype:'select', data:[] },\r\n        { label:'病人姓名', \tname:'patient_name' },\r\n\t\t{ label:'项目名称', \tname:'item_name' },\r\n    ]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit } = this.state\r\n\t\t$fn.dataSave('bill-phase-select-data').then(local => { // 账期\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[0].data = local\r\n\t\t\t\tsubmit[2].data = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bill-phase/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tthis.forms[0].data = data.items\r\n\t\t\t\t\tsubmit[2].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bill-phase-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.bsareaSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 医院名称\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[5].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[5].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 业务员\r\n\t\t\t\tcache: d.bssalesmanSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[6].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-salesman/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[6].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\t\r\n\tfetch = param => $fn.fetch.call(this,'bill/speclists', param)\r\n\r\n\tcols = [\r\n\t\t{ title: '账单编号',\tfield: 'order_sn', \t    \twidth:160 },\r\n\t\t{ title: '条码号',\t\tfield: 'old_spec_code', \twidth:100, render: ({text,rows})=> <span onDoubleClick={()=>{\r\n\t\t\tthis.setState({specCode: text})\r\n\t\t\tthis.refs.modal2.open()\r\n\t\t}}>{text}</span>\r\n\t\t},\r\n\t\t{ title: '接收标本日期',field: 'receive_at',    \twidth:160 },\r\n\t\t{ title: '开票单位',\tfield: 'organization_name', width:160 },\r\n\t\t{ title: '开票单位编码',field: 'organization_code', width:170 },\r\n\t\t{ title: '姓名', \t\tfield: 'patient_name',  \twidth:80 },\r\n\t\t{ title: '性别', \t    field: 'sex_name',      \twidth:80 },\r\n\t\t{ title: '年龄',        field: 'age',           \twidth:80 },\r\n\t\t{ title: '所属医生', \tfield: 'doctor', \t\t\twidth:100 },\r\n\t\t{ title: '业务员名称',\tfield: 'salesman_user',\t\twidth:100 },\r\n\t\t{ title: '账期', \t\tfield: 'phase_str', \t\twidth:100 },\r\n\t\t{ title: '自然项目', \tfield: 'parent_kind_name',  width:100 },\r\n\t\t{ title: '账单类型', \tfield: 'pay_type',      \twidth:80, render: ({rows})=> {\r\n\t\t\treturn window.$fn.filterSelect(this.options, rows.pay_type, 'label', 'value') \r\n\t\t} },\r\n\t\t{ title: '医院名称',\tfield: 'hosp_name', \t\twidth:100 },\r\n\t\t{ title: '项目名称', \tfield: 'kind_name',     \twidth:100 },\r\n\t\t{ title: '实验科室',\tfield: 'project_parent_name',width:100 },\r\n\t\t{ title: '送检科室',\tfield: 'department_name',\twidth:100 },\r\n\t\t{ title: '标准价格',\tfield: 'sprice',        \twidth:100 },\r\n\t\t{ title: '实际价格',    field: 'price',        \t \twidth:100 },\r\n\t\t{ title: '折扣率',\t\tfield: 'percent',\t    \twidth:100 },\r\n\t\t{ title: '折扣金额',    field: 'perprice',\t    \twidth:100 },\r\n\t\t{ title: '帐单生成时间',field: 'created_at',\t\twidth:100 },\r\n\t\t{ title: '账单状态',\tfield: 'status',\t    \twidth:80,  render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.payTypeOptions, rows.status, 'label', 'value') \r\n\t\t} },\r\n        { title: '备注',\t\tfield: 'attribute_name',\twidth:100 },\r\n        { title: '操作', \t\talign:'tc', \t\t\t\twidth:100, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='操作详情' ghost onClick={() => {\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\tthis.setState({rowId:rows.uuid})\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'修改账期', ghost:true, disabled:this.state.data1.length===0, onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = this.state.data1.old_spec_code\r\n\t\t\t\tsubmit[1].value = this.state.data1.phase_str\r\n\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\tthis.setState({ submit })\r\n            }}\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, rowId, specCode } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='账单明细' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange={(v, press, { name, data }) => { } } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => { form.setFieldsValue({date:[Time.customDate(2, \"date\"), Time.customDate(\"current-date\")]}) }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title='修改账期' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit } = this.state;\r\n\t\t\t\t\t\t} } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const param = { ...v }\r\n                            $http.submit(null, 'bill/changephase', { param }).then(data => {\r\n                                message.then(f => f.default.success('审核成功'))\r\n                                this.refs.modal.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal1' title='操作详情' width={900} noFooter>\r\n\t\t\t\t\t<BillDetailsTable className='fv rel ex xplr' bill_id = { rowId } />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal2' title='账单信息' width={1000} noFooter>\r\n\t\t\t\t\t<BillInfo className='fv rel ex xplr' specCode = { specCode || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { current => { this.setState({data1:current}) } }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\finance\\finance-page\\cost-breakdown.js",["2089","2090"],"import React from 'react'\r\nimport Time from '@utils/time'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst BillInfo = $async(()=>import('./finance-list/bill-info'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tspecCode: '',\r\n\t}\r\n\tbillStatusOption = [\r\n        { label: \"财务待审核\", \tvalue: \"45301\" },\r\n        { label: \"财务待结算\", \tvalue: \"45302\" },\r\n        { label: \"财务已结算\", \tvalue: \"45303\" },\r\n        { label: \"已作废\", \t   \tvalue: \"45304\" },\r\n        { label: \"业务员待审核\",value: \"45305\" }\r\n\t]\r\n\tpayTypeOptions = [\r\n        { label: \"全部\", value: \"\" },\r\n        { label: \"正常\", value: \"1\" },\r\n        { label: \"冲抵\", value: \"2\" }\r\n    ]\r\n\tforms = [\r\n\t\t{ label:'接收标本时间', name: 'date',\t\t\t\tnames:['start_at','end_at'],type:'date-range' },\r\n\t\t{ label:'条码号', \t    name:'spec_code' },\r\n\t\t{ label:'客户名称', \tname:'hosp_id',      \t\ttype:'select', \tdata:[] },\r\n\t\t{ label:'实验科室', \tname:'project_parent_id', \ttype:'select', \tdata:[] },\r\n        { label:'区域', \t\tname:'region_id', \t\t\ttype:'select', \tdata:[] },\r\n        { label:'业务员', \t\tname:'salesman_id', \t\ttype:'select', \tdata:[] },\r\n        { label:'姓名', \t    name:'patient_name' },\r\n\t\t{ label:'项目名称', \tname:'item_name' },\r\n        { label:'状态', \t\tname:'status', \t\t\t\ttype:'select', \tdata: this.billStatusOption, nameStr:'label', idStr:'value' },\r\n\t\t{ label:'账单类型', \tname:'pay_type', \t\t\ttype:'select', \tdata: this.payTypeOptions,   nameStr:'label', idStr:'value' },\r\n    ]\r\n\tmodel = {\r\n\t\tstart_at: Time.customDate(2, \"date\"),\r\n\t\tend_at: Time.customDate(\"current-date\"),\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('bs-hospital-select-data').then(local => { // 客户名称\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[2].data = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bs-hospital/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tthis.forms[2].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bs-hospital-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.dataSave('project-team-selectMenu-data').then(project => { // 实验科室\r\n\t\t\tif($fn.hasArray(project)){\r\n\t\t\t\tthis.forms[3].data = project\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'project-team/selectMenu', {dataName:null}).then(data=>{\r\n\t\t\t\t\tthis.forms[3].data = data\r\n\t\t\t\t\t$fn.dataSave('project-team-selectMenu-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.dataSave('bs-area-select-data').then(bsArea => { // 区域\r\n\t\t\tif($fn.hasArray(bsArea)){\r\n\t\t\t\tthis.forms[4].data = bsArea\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bs-area/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tthis.forms[4].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bs-area-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.dataSave('bs-salesman-select-data').then(bsSalesman => {// 业务员\r\n\t\t\tif($fn.hasArray(bsSalesman)){\r\n\t\t\t\tthis.forms[5].data = bsSalesman\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bs-salesman/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tthis.forms[5].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bs-salesman-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\r\n\tfetch = param => $fn.fetch.call(this,'bill-st/detailindex', param)\r\n\tcols = [\r\n\t\t{ title: '岗位',\t\t    field: 'project_name', \twidth:130 },\r\n\t\t{ title: '接收时间',\t\tfield: 'check_time',    width:160 },\r\n\t\t{ title: '客户名称',\t\tfield: 'hosp_name', \twidth:160 },\r\n\t\t{ title: '条码号',\t\t\tfield: 'old_spec_code', width:100,render: ({text,rows})=> <span onDoubleClick={()=>{\r\n\t\t\tthis.setState({specCode: text})\r\n\t\t\tthis.refs.modal.open()\r\n\t\t}}>{text}</span>  },\r\n\t\t{ title: '自然项目', \t\tfield: 'parent_kind_name',  width:170 },\r\n\t\t{ title: '项目名称', \t\tfield: 'kind_name', \twidth:170 },\r\n\t\t{ title: '标准价格', \t\tfield: 'sprice', \t\twidth:100 },\r\n\t\t{ title: '实际价格', \t\tfield: 'price', \t\twidth:100 },\r\n\t\t{ title: '姓名', \t\t    field: 'patient_name',  width:80 },\r\n\t\t{ title: '性别', \t        field: 'sex_name',      width:80 },\r\n\t\t{ title: '年龄',            field: 'age',           width:80 },\r\n\t\t{ title: '送检科室', \t\tfield: 'department_name',width:100 },\r\n\t\t{ title: '医生',\t\t    field: 'doctor', \t    width:100 },\r\n\t\t{ title: '备注', \t\t\tfield: 'remark', \t\twidth:100 },\r\n\t\t{ title: '账单属性',\t\tfield: 'attribute_name',width:100 },\r\n\t\t{ title: '实验科室',\t\t field: 'project_parent_name', width:100 },\r\n\t\t{ title: '开票单位（NC）',\t field: 'organization_name',   width:100 },\r\n\t\t{ title: '开票单位编码（NC）',field: 'organization_code',   width:160 },\r\n\t\t{ title: '业务员',\t\t    field: 'salesman_user',\twidth:100 },\r\n\t\t{ title: '业务员编码',\t\tfield: 'salesman_code',\twidth:100 },\r\n\t\t{ title: '区域',\t\t    field: 'region_name',\twidth:100 },\r\n\t\t{ title: '区域编码',\t\tfield: 'region_num',\t\t width:100 },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'明细导出F1', code:'F1', onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否导出明细?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tlet list = {\r\n\t\t\t\t\t\t\t\texport: 1,\r\n\t\t\t\t\t\t\t\tstart_at: this.model.start_at,\r\n\t\t\t\t\t\t\t\tend_at: this.model.end_at\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$http.submit(null,'bill-st/detailindex', { param: list } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('导出成功'))\r\n\t\t\t\t\t\t\t\twindow.location.href = data.url;\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, specCode } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='收入成本明细' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange={(v, press, { name, data }) => {\r\n\r\n\t\t\t\t\t\t$fn.onChange.call(this, v, press, () => {\r\n\t\t\t\t\t\t\tif (name && name === 'device_id') {\r\n\t\t\t\t\t\t\t\treturn { device_name: data.name }\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tinit    \t= { form => { form.setFieldsValue({date:[Time.customDate(2, \"date\"), Time.customDate(\"current-date\")]}) }}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title='账单信息' width={1000} noFooter>\r\n\t\t\t\t\t<BillInfo className='fv rel ex xplr' specCode = { specCode || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\main.js",["2091"],"import React from 'react'\r\n// ===================================================================== private template\r\nimport Router from './router'\r\nconst Frame = window.$async(()=>import('#frame/frame'))\r\n// ===================================================================== 目录\r\nconst data = [\r\n\t{ title: '工作台', path:'workbench'},\r\n\t{ title: '业务管理', path:'businessList/My-hospital-clients'},\r\n]\r\n\r\n// ===================================================================== component\r\nexport default () => <Frame title='业务管理' data={data} Router={Router} />","F:\\jia-git\\react-norson-lis\\src\\views\\business\\router.js",["2092"],"/* ====================================== 模块子路由配置  ====================================== */\r\nimport React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n// ===================================================================== 异步加载\r\nimport Import from '@com/bundle'\r\n// ===================================================================== 路由配置\r\nimport Workbench from '@views/workbench/main'\r\nimport BusinessList from '@views/business/businessList'\r\n// ===================================================================== 同步路由\r\nexport default () => (\r\n\t<Switch>\r\n\t\t<Route \tpath='/business/workbench' \t\t\tcomponent={ Workbench }  />\r\n\t\t<Route \tpath='/business/businessList' \t\tcomponent={ BusinessList }  /> \r\n\t\t{/* 重定向 */}\r\n\t\t<Route path='/business' children={<Redirect to='/business/workbench/index' />}  />\r\n\t\t{/* 404 */}\r\n\t\t<Route component={ Import('404') } />\r\n\t</Switch>\r\n)","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\salesman-region.js",["2093","2094","2095","2096"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tuserUuid: '',\r\n\t\tnewUserUuid: '',\r\n\t\tid: '',\r\n\t\tsubmit: [\r\n            { label: '区域名称',\tname: 'region_name' },\r\n\t\t\t{ label: '区域编号',\tname: 'region_num' },\r\n\t\t\t{ label: '上级区域',\tname: 'pid', \t\ttype: 'select', data: [] },\r\n\t\t\t{ label: '负责人',\t\tname: 'leader_id',\ttype: 'select', data: [], },\r\n\t\t\t{ label: '排序',\t\tname: 'sort' },\r\n            { label: '状态',\t\tname: 'status', \ttype:'select', \tdata:[], nameStr:'label', idStr:'value' },\r\n\t\t],\r\n\t\tsubmit1: [\r\n            { label: '负责人',\tname: 'leader_id',\t\ttype: 'select', data: [], full:true, width: '100%' },\r\n        ],\r\n\t}\r\n\tstatus = [\r\n\t\t{ label: \"启用\", \tvalue: \"1\" },\r\n\t\t{ label: \"未启用\", \tvalue: \"0\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'区域名称',\t\tname:'region_name',\t},\r\n        { label:'区域编号',\t\tname:'region_num',\t},\r\n        { label:'状态',\t\t\tname:'status',\t\ttype:'select', \tdata:this.status, nameStr:'label', idStr:'value' },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit, submit1 } = this.state\r\n\t\tsubmit[5].data = this.status\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({ // 上级区域\r\n\t\t\t\tcache: f.default.bsareaSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tsubmit[2].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 负责人\r\n\t\t\t\tcache: f.default.employeeSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit[3].data = data\r\n\t\t\t\t\t\tsubmit1[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'employee/select').then(data => {\r\n\t\t\t\t\t\t\tdata.forEach(v => {\r\n\t\t\t\t\t\t\t\tv.empl_name = `${v.name} - ${v.number}`\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tsubmit[3].data = data\r\n\t\t\t\t\t\t\tsubmit1[0].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\r\n\tfetch = param => $fn.fetch.call(this,'bs-area/index', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '区域名称', \tfield: 'region_name', \twidth:120 },\r\n\t\t{ title: '区域编号', \tfield: 'region_num', \twidth:120 },\r\n        { title: '上级区域', \tfield: 'parent_name', \twidth:120 },\r\n\t\t{ title: '负责人', \t\tfield: 'real_name', \twidth:120 },\r\n\t\t{ title: '层级', \t\tfield: 'level', \t\twidth:120 },\r\n\t\t{ title: '状态', \t\tfield: 'status', \t\twidth:120,  \r\n\t\t\trender: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.status, rows.status, 'label', 'value')\r\n\t\t} },\r\n\t\t{ title: '操作', \t\talign:'tc',\t\t\t\twidth:120,  render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={()=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tsubmit[3].disabled = true\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t$http.submit(null,'bs-area/info', { param: { id: rows.id } } ).then(data=>{\r\n\t\t\t\t\t\t\tthis.check = data\r\n\t\t\t\t\t\t\tthis.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button label='更换负责人' className='ml20' ghost onClick={()=>{\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\tconst { submit1 } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'bs-area/info', { param: { id: rows.id } } ).then(data=>{\r\n\t\t\t\t\t\t\tthis.setState({id:data.id})\r\n\t\t\t\t\t\t\tthis.setState({userUuid:data.leader_id})\r\n\t\t\t\t\t\t\t$fn.setSubmitValues(submit1, data, ()=>{this.setState({submit1})})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)},\r\n\t\t},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加F1', code:'F1', ghost:true, onClick:()=>{\r\n\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\tthis.isEdit = false\r\n\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\tsubmit[3].disabled = false\r\n\t\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\t\tthis.setState({ submit })\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tlet ids = []\r\n\t\t\t\t\t\t\tids.push(this.state.data1.map(v=>v.id))\r\n\t\t\t\t\t\t\t$http.submit(null,'bill/endexport', { param: { ids: ids} } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\twindow.location.href = data.url;\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, submit1, userUuid, id, newUserUuid, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='业务区域' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { absurd_id: this.props.uuid, ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'bs-area/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { absurd_id: this.props.uuid, ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'bs-area/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal1' title='更换负责人' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit1 }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n\t\t\t\t\t\t\tconst { submit1 } = this.state;\r\n\t\t\t\t\t\t\tthis.setState({newUserUuid:v})\r\n                        } } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconst param = {\r\n\t\t\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\t\t\tuserUuid: userUuid,\r\n\t\t\t\t\t\t\t\tnewUserUuid: newUserUuid\r\n\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t$http.submit(null, 'bs-area/changeRegionalSuper', { param }).then(data => {\r\n\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('更换成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal1.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal1.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\salesman-manage.js",["2097","2098","2099","2100"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// const confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tsubmit: [\r\n            { label: '真实姓名',\tname: 'salesman_id', type:'select', data:[] },\r\n            { label: '籍贯',\t\tname: 'address' },\r\n            { label: '入职时间',\tname: 'entrytime', \ttype: 'date', disabled: true },\r\n            { label: '员工编码',\tname: 'number', \tdisabled: true },\r\n            { label: '年龄',\t\tname: 'age', \t\tdisabled: true },\r\n            { label: '手机号码',\tname: 'phone', \t\tdisabled: true },\r\n            { label: '在职状态',\tname: 'status', \ttype:'select', \tdata: [], nameStr:'label', idStr:'value' },\r\n            { label: '银行账号',\tname: 'bank_account' },\r\n            { label: '开户行',\t\tname: 'open_bank', },\r\n            { label: '最高学历',\tname: 'education' },\r\n            { label: '所属区域',\tname: 'area_id', \ttype:'select', \tdata:[] },\r\n        ],\r\n\t}\r\n\treal_name= ''\r\n\toptions = [\r\n\t\t{ label: \"在职\", \tvalue: 1 },\r\n\t\t{ label: \"离职\", \tvalue: -1 }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'人员姓名',\t\tname:'real_name',\t\t},\r\n\t\t{ label:'所属区域',\t\tname:'region_name',\t\ttype:'select', \tdata:[] },\r\n        { label:'在职状态',\t\tname:'status',\t\t\ttype:'select', \tdata: this.options, nameStr:'label', idStr:'value' },\r\n    ]\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\tconst { submit } = this.state\r\n\t\tsubmit[6].data = this.options\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({ // 所属区域\r\n\t\t\t\tcache: f.default.bsareaSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t\t\tsubmit[10].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t\t\t\tsubmit[10].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 真实姓名\r\n\t\t\t\tcache: f.default.employeeSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'employee/select').then(data => {\r\n\t\t\t\t\t\t\tsubmit[0].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'bs-salesman/index', param)\r\n\tcols = [\r\n\t\t{ title: '序号', \t\tfield: 'id', \t\t\twidth:60 },\r\n        { title: '员工编码', \tfield: 'empl_name', \twidth:120 },\r\n\t\t{ title: '真实姓名', \tfield: 'real_name', \twidth:120 },\r\n\t\t{ title: '年龄', \t\tfield: 'age', \t\t\twidth:60 },\r\n\t\t{ title: '籍贯', \t\tfield: 'address', \t\twidth:120 },\r\n        { title: '最高学历', \tfield: 'education', \twidth:120 },\r\n\t\t{ title: '手机号', \t\tfield: 'phone', \t\twidth:120 },\r\n\t\t{ title: '所属区域', \tfield: 'region_name', \twidth:120 },\r\n\t\t{ title: '在职状态', \tfield: 'status',\t\twidth:120,  \r\n\t\t\trender: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options, rows.status, 'label', 'value')\r\n\t\t} },\r\n\t\t{ title: '操作', \t \twidth:120,  \t\t\trender:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={()=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t$http.submit(null,'bs-salesman/info', { param: { uuid: rows.uuid } } ).then(data=>{\r\n                            this.rows = data\r\n\t\t\t\t\t\t\tthis.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)},\r\n\t\t}\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加业务员F1', code:'F1', ghost:true, onClick:()=>{\r\n\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\tthis.isEdit = false\r\n\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\t\tsubmit[2].value = ''\r\n\t\t\t\t\tsubmit[3].value = ''\r\n\t\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\t\tsubmit[6].value = ''\r\n\t\t\t\t\tsubmit[7].value = ''\r\n\t\t\t\t\tsubmit[8].value = ''\r\n\t\t\t\t\tsubmit[9].value = ''\r\n\t\t\t\t\tsubmit[10].value = ''\r\n\t\t\t\t\tthis.setState({ submit })\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='业务员管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Modal ref='modal' title='查看其他' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n\t\t\t\t\t\t\tif (name === 'salesman_id') {\r\n\t\t\t\t\t\t\t\tsubmit[0].data.map(e => {\r\n\t\t\t\t\t\t\t\t\tif (e.value === v) {\r\n\t\t\t\t\t\t\t\t\t\tsubmit[2].value = e.entrytime\r\n\t\t\t\t\t\t\t\t\t\tsubmit[3].value = e.number\r\n\t\t\t\t\t\t\t\t\t\tsubmit[4].value = e.age\r\n\t\t\t\t\t\t\t\t\t\tsubmit[5].value = e.phone\r\n\t\t\t\t\t\t\t\t\t\tthis.real_name = e.name\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            if (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = {\r\n\t\t\t\t\t\t\t\t\t...v,\r\n\t\t\t\t\t\t\t\t\tuuid: this.rows.uuid, \r\n\t\t\t\t\t\t\t\t\tid: this.rows.id,\r\n\t\t\t\t\t\t\t\t\tsort: this.rows.sort,\r\n\t\t\t\t\t\t\t\t\tcreated_at: this.rows.created_at,\r\n\t\t\t\t\t\t\t\t\tcomp_id: this.rows.comp_id,\r\n\t\t\t\t\t\t\t\t\tdetp_id: this.rows.detp_id,\r\n\t\t\t\t\t\t\t\t\treal_name: this.real_name\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'bs-salesman/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'bs-salesman/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\hospital-clients.js",["2101","2102","2103"],"import React from 'react'\r\nimport { Upload } from 'antd'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t}\r\n\toptions = [\r\n\t\t{ label: \"未审核\",\t\tvalue: \"0\" },\r\n\t\t{ label: \"审核通过\",\tvalue: \"1\" },\r\n\t\t{ label: \"审核未通过\", \tvalue: \"-1\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'医院名称',\t\tname:'hosp_name',\t },\r\n        { label:'医院性质',\t\tname:'nature',\t\ttype:'select', \tdata:[] },\r\n        { label:'医院代码',\t\tname:'hosp_code',\t },\r\n\t\t{ label:'医院级别',\t\tname:'level',\t\ttype:'select', \tdata: [] },\r\n\t\t{ label:'状态',\t\t\tname:'enabled',\t\ttype:'select', \tdata: this.options, nameStr:'label', idStr:'value' },\r\n\t]\r\n\tmodel = {\r\n\t\thosp_name: '',\r\n\t\tnature: '',\r\n\t\thosp_code: '',\r\n\t\tlevel: '',\r\n\t\tenabled: '',\r\n\t}\r\n\tasync getDataAsync() {\r\n\t\t$fn.getDisItem({ // 医院性质\r\n\t\t\tcode: 44100,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.getDisItem({ // 医院级别\r\n\t\t\tcode: 39000,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tthis.forms[3].data = data\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.getDataAsync()\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'bs-hospital/index', { param })\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '医院代码', \tfield: 'hosp_code', \twidth:120 },\r\n        { title: '医院条码', \tfield: 'hosp_spec', \twidth:120 },\r\n\t\t{ title: '医院名称', \tfield: 'hosp_name', \twidth:120 },\r\n\t\t{ title: '医院性质', \tfield: 'nature_name', \twidth:120 },\r\n\t\t{ title: '医院级别', \tfield: 'level_name', \twidth:120 },\r\n\t\t{ title: '创建时间', \tfield: 'create_at', \twidth:120 },\r\n        { title: '状态', \t\tfield: 'enabled', \t\twidth:120, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options, rows.enabled, 'label', 'value')\r\n\t\t} },\r\n\t\t{ title: '操作', \t\twidth:160,  \trender:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={()=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/LowerLevel-hospital-clients/add?id='+rows.uuid+'&isEdit=1')\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button label='物价管理' ghost onClick={()=>{\r\n\t\t\t\t\t\tconsole.log(rows);\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/hospital-clients/clients?id='+rows.uuid)\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'新增 F1',code:'F1', onClick:()=>{\r\n\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/LowerLevel-hospital-clients/add?isEdit=1')\r\n\t\t\t} },\r\n\t\t\t{ label:'审核', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst { selectedKeys } = this.state\r\n\t\t\t\tconst param = {\r\n\t\t\t\t\tuuid: selectedKeys.map(v=>v.uuid)\r\n\t\t\t\t}\r\n\t\t\t\t$http.submit(null, 'bs-hospital/exam', { param } ).then(data => {\r\n\t\t\t\t\tmessage.then(f=>f.default.success('审核成功'))\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'打印', ghost:true, onClick:()=>{\r\n\t\t\t// \tconfirm.then(f=>{\r\n\t\t\t// \t\tf.default({\r\n\t\t\t// \t\t\tmsg:'是否审核账单?',\r\n\t\t\t// \t\t\tonOk: close => {\r\n\t\t\t// \t\t\t\tconst keys = this.state.data1.map(v=>v.hosp_id)\r\n\t\t\t// \t\t\t\t$http.submit(null,'bill/endexport', { param: { hosp_ids: keys, summary_sn:this.state.data1[0].summary_sn} } ).then(data=>{\r\n\t\t\t// \t\t\t\t\tmessage.then(f=>f.default.success('导出成功'))\r\n\t\t\t// \t\t\t\t\twindow.location.href = data.url;\r\n\t\t\t// \t\t\t\t\tclose()\r\n\t\t\t// \t\t\t\t})\r\n\t\t\t// \t\t\t}\r\n\t\t\t// \t\t})\r\n\t\t\t// \t})\r\n\t\t\t} },\r\n\t\t\t{ label:'文件导入', ghost:true, onClick:()=>{// 还未完成\r\n\t\t\t\tconsole.log('upload');\r\n\t\t\t\t// <Upload accept='.xlsx' action= {window.$config.api+'bs-hospital/import'}  />\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='医院客户' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\contract-manage.js",["2104","2105","2106","2107","2108"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n\r\n// ===================================================================== component\r\nconst Enclosure = $async(()=>import('./child/enclosure'))\r\n\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tsubmit: [\r\n            { label: '合同编号',\tname: 'code',\t\t\t\tdisabled: true, },\r\n\t\t\t{ label: '合同名称',\tname: 'name',\t\t\t\tdisabled: true, },\r\n\t\t\t{ label: '折扣率',\t\tname: 'discount_rate' },\r\n\t\t\t{ label: '延期时间',\tname: 'delay' },\r\n\t\t\t{ label: '新生效时间',\tname: 'sign_at', \t\t\ttype:'date-time',},\r\n            { label: '新到期时间',\tname: 'contract_validity',\ttype:'date-time',},\r\n\t\t],\r\n\t\tids: '',\r\n\t}\r\n\tstatusList = [\r\n\t\t{ label: \"待审核\", \t\tvalue: \"0\" },\r\n        { label: \"审核成功\", \tvalue: \"1\" }\r\n\t]\r\n\tdelayOptions = [\r\n\t\t{label: '请选择',\t\tvalue: ''},\r\n\t\t{label: '7天内',\t\tvalue: '7'},\r\n\t\t{label: '15天内',\t\tvalue: '15'},\r\n\t\t{label: '1个月内',\t\tvalue: '31'}\r\n\t]\r\n\tcontractOptions = [\r\n        { label: \"全部\",\t\tvalue: \"\" },\r\n        { label: \"草稿\",\t\tvalue: \"0\" },\r\n        { label: \"正常\",\t\tvalue: \"1\" },\r\n        { label: \"已过期\", \t\tvalue: \"2\" }\r\n    ]\r\n    enabledOptions = [\r\n        { label: \"全部\", \t\tvalue: \"\" },\r\n        { label: \"待审核\", \t\tvalue: \"0\" },\r\n        { label: \"审核成功\", \tvalue: \"1\" }\r\n\t]\r\n\toptions = [\r\n\t\t{ label: \"草稿\", \t\tvalue: \"0\" },\r\n\t\t{ label: \"正常\", \t\tvalue: \"1\" },\r\n\t\t{ label: \"已过期\", \t\tvalue: \"2\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'合同编号',\t\tname:'code',\t\t },\r\n        { label:'合同名称',\t\tname:'name',\t\t },\r\n        { label:'客户名称',\t\tname:'hosp_id',\t\ttype:'select', \tdata:[] },\r\n\t\t{ label:'到期时间',\t\tname:'date',\t\ttype:'date-range', names:['start_at','end_at'] },\r\n\t\t{ label:'合同失效',\t\tname:'invalid',\t\ttype:'select', \tdata: this.delayOptions, nameStr:'label', idStr:'value' },\r\n\t\t{ label:'合同状态',\t\tname:'status',\t\ttype:'select', \tdata: this.contractOptions, nameStr:'label', idStr:'value' },\r\n\t\t{ label:'审核状态',\t\tname:'enabled',\t\ttype:'select', \tdata: this.enabledOptions, nameStr:'label', idStr:'value' },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({ // 客户名称\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'bs-contract/index', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '合同编号', \t\tfield: 'code', \t\twidth:100 },\r\n        { title: '合同名称', \t\tfield: 'name', \t\twidth:160 },\r\n\t\t{ title: '客户名称', \t\tfield: 'hosp_name', width:160 },\r\n\t\t{ title: '生效时间', \t\tfield: 'sign_at', \twidth:120 },\r\n\t\t{ title: '到期时间', \t\tfield: 'contract_validity', width:120 },\r\n        { title: '延期时间(月)', \tfield: 'delay', \twidth:80 },\r\n\t\t{ title: '合同状态', \t\tfield: 'status', \twidth:80,\r\n\t\t\trender: ({rows}) => {\r\n\t\t\t\treturn window.$fn.filterSelect(this.options, rows.status, 'label', 'value')\r\n\t\t\t} },\r\n\t\t{ title: '审核状态', \t\tfield: 'enabled', \twidth:100,\r\n\t\t\trender: ({rows}) => {\r\n\t\t\t\treturn window.$fn.filterSelect(this.statusList, rows.enabled, 'label', 'value')\r\n\t\t\t} },\r\n\t\t{ title: '创建人（系统）', \tfield: 'empl_name',\twidth:100 },\r\n\t\t{ title: '操作', \t\t\twidth:200,  \t\trender:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr5' label='编辑' ghost onClick={()=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/contract-manage/edit?uuid=' + rows.uuid)\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button className='mr5' label='查看附件' ghost onClick={()=>{\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\t// this.uuid = rows.uuid\r\n\t\t\t\t\t\tthis.setState({ids:rows.uuid})\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button className='mr5' label='续签' ghost onClick={()=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t$fn.setSubmitValues(submit, rows, ()=>{this.setState({submit})})\r\n\t\t\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\t\t\tthis.uuid = rows.uuid\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button label='合同签订记录' ghost onClick={()=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/contract-manage/record?code=' + rows.code)\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加F1', code:'F1', ghost:true, onClick:()=>{\r\n\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/contract-manage/edit')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{ label:'文件导入', ghost:true, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否导入文件？',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.data1.map(v=>v.hosp_id)\r\n\t\t\t\t\t\t\tconst summary = this.state.data1[0].summary_sn\r\n\t\t\t\t\t\t\t$http.submit(null,'bill-hosp/resettlement', { param: { hosp_ids: keys.join(','), summary_sn:summary} } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('导入成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'审核', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认审核?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tlet uid = []\r\n\t\t\t\t\t\t\tthis.state.selectedKeys.map(v=>{uid.push(v.uuid)})\r\n\t\t\t\t\t\t\tconsole.log(uid)\r\n\t\t\t\t\t\t\tconst param = { uuid: uid,}\r\n\t\t\t\t\t\t\t$http.submit(null,'bs-contract/exam', {param} ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('审核成功'))\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, selectedKeys, ids } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='合同管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Modal ref='modal' title='续签' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit } = this.state;\r\n                        } } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const param = { ...v,uuid: this.uuid, }\r\n\t\t\t\t\t\t\t$http.submit(null, 'bs-contract/renew', { param }).then(data => {\r\n\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('续签成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal1' title='查看附件' width={648} noFooter>\r\n\t\t\t\t\t<Enclosure uuid={ ids || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\price-control.js",["2109","2110","2111","2112","2113","2114","2115","2116"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tsubmit: [\r\n            { label: '医院名称',\tname: 'hosp_name',\t\tdisabled: true },\r\n            { label: '模板名称',\tname: 'qt_temp_id', \ttype:'select', data: [] },\r\n        ],\r\n        submit1: [\r\n            { label: '物价代码',\tname: 'price_code',\t\t    disabled: true },\r\n            { label: '中文简称',\tname: 'item_name_sort',\t\tdisabled: true },\r\n            { label: '项目名称',\tname: 'item_name',\t\t    disabled: true },\r\n            { label: '英文简称',\tname: 'item_name_en_sort',\tdisabled: true },\r\n            { label: '英文名称',\tname: 'item_name_en',\t\tdisabled: true },\r\n            { label: '检测方法',\tname: 'detection_method',\tdisabled: true },\r\n            { label: '结算价格',\tname: 'price', },\r\n            { label: '折扣率',\t    name: 'discount_rate',\t\tdisabled: true },\r\n            { label: '物价状态',\tname: 'enabled',\t\t\ttype:'select', data: [], nameStr: 'label', idStr: 'value', },\r\n            { label: '排序',\t    name: 'sort' },\r\n\t\t],\r\n\t}\r\n\trowList= {}\r\n\tforms = [\r\n\t\t{ label:'物价代码',\t\tname:'price_code', },\r\n        { label:'项目名称',\t\tname:'item_name', },\r\n        { label:'助记码',\t\tname:'qt_item_code', },\r\n\t]\r\n\tmodel = {\r\n\t\tprice_code: '',\r\n        item_name: '',\r\n        qt_item_code: '',\r\n        hosp_id: $fn.query('id'),\r\n\t}\r\n\tenabledOption= [\r\n        { label: \"启用\", \tvalue: \"1\" },\r\n        { label: \"待启用\", \tvalue: \"0\" },\r\n        { label: \"禁用\",  \tvalue: \"-1\" }\r\n    ]\r\n\tcomponentDidMount(){\r\n        const { submit, submit1 } = this.state\r\n        cacheApi.then(f => {\r\n\t\t\tconst d =  f.default\r\n\t\t\t$fn.getCache({ // 模板名称\r\n\t\t\t\tcache: d.qtCompTemplate, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        submit[1].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, $fn.replaceApi(d.qtCompTemplate)).then(data => {\r\n                            submit[1].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({ submit })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 医院\r\n\t\t\t\tcache: d.BsHospitalSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tdata.map(i=> {\r\n\t\t\t\t\t\t\tif(i.value ===  $fn.query('id')) {\r\n\t\t\t\t\t\t\t\tsubmit[0].value = i.name\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, $fn.replaceApi(d.BsHospitalSelect)).then(data => {\r\n                            data.map(i=> {\r\n\t\t\t\t\t\t\t\tif(i.value ===  $fn.query('id')) {\r\n\t\t\t\t\t\t\t\t\tsubmit[0].value = i.name\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({ submit })\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tsubmit1[8].data = this.enabledOption\r\n\t\tthis.fetch()\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'qt-item-hospital/index', {...param, ...this.model})\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '物价代码', \tfield: 'price_code', \t\twidth:120 },\r\n        { title: '关联物价', \tfield: 'price_rel_codes', \twidth:120 },\r\n\t\t{ title: '项目名称', \tfield: 'item_name', \t\twidth:120 },\r\n\t\t{ title: '英文简称', \tfield: 'item_name_en_sort', width:120 },\r\n\t\t{ title: '英文名称', \tfield: 'item_name_en', \t\twidth:120 },\r\n\t\t{ title: '检测方法', \tfield: 'detection_method_name', width:120 },\r\n\t\t{ title: '助记码', \t\tfield: 'qt_item_code', \t\twidth:120 },\r\n        { title: '标准价格(元)',field: 'price', \t\t\twidth:120 },\r\n\t\t{ title: '结算价格(元)',field: 'contract_price', \twidth:120 },\r\n\t\t{ title: '操作', \t\twidth:100,  \t\t\t\trender:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={()=>{\r\n                        const { submit1 } = this.state\r\n                        this.refs.modal1.open()\r\n                        const param = {\r\n                            qt_temp_id: rows.qt_temp_id,\r\n                            hosp_id: rows.hosp_id,\r\n                            source_item_id: rows.source_item_id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.rowList= rows\r\n                        $http.submit(null,'qt-item-hospital/info', { param } ).then(data=>{\r\n                            $fn.setSubmitValues(submit1, data, ()=>{this.setState({submit1})})\r\n                        })\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n            { label:'模板导入', ghost:true, onClick:()=>{ this.refs.modal.open()  }},\r\n\t\t\t{ label:'返回', ghost:true, onClick:()=>{ $fn.back(this) }},\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, submit1, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='物价管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Modal ref='modal' title='医院物价模板导入' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit } = this.state;\r\n                        } } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconst param = { ...v, hosp_id: $fn.query('id') }\r\n\t\t\t\t\t\t\tconsole.log(param);\r\n\t\t\t\t\t\t\t$http.submit(null,'qt-item-hospital/bindtemp', { param } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('导入成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n                </Modal>\r\n                <Modal ref='modal1' title='编辑' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit1 }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit1 } = this.state;\r\n                        } } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tthis.rowList.discount_rate = v.discount_rate\r\n\t\t\t\t\t\t\tthis.rowList.enabled = v.enabled\r\n\t\t\t\t\t\t\tthis.rowList.sort = v.sort\r\n\t\t\t\t\t\t\tconst param = { ...this.rowList }\r\n\t\t\t\t\t\t\t$http.submit(null,'qt-item-hospital/edit', { param } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('保存成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal1.close()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal1.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\operation-record.js",["2117","2118","2119"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\timgPath: '',\r\n\t}\r\n    forms = []\r\n    code = $fn.query('code')\r\n\tmodel = {\r\n        code: this.code,\r\n    }\r\n\tcheck = {}\r\n\tcomponentDidMount(){\r\n\t\tconsole.log(this.props);\r\n        this.model.bill_id=this.props.bill_id\r\n        this.fetch(this.model)\r\n    }\r\n\tfetch = param => $http.paging(this,'bill/salesmanabnormallists',{ param } )\r\n\tcols = [\r\n\t\t{ title: '操作时间',    field: 'created_at',       width: 100 },\r\n\t\t{ title: '操作类型',    field: 'type_name',        width: 120 },\r\n\t\t{ title: '操作人',      field: 'real_name',        width: 120 },\r\n        { title: '输入价格', \tfield: 'price', \t       width: 120 },\r\n\t\t{ title: '修改前价格',  field: 'change_old_price', width: 120, },\r\n        { title: '修改后价格', \tfield: 'change_new_price', width: 80 },\r\n\t\t{ title: '备注',        field: 'remark', \t       width: 120 },\r\n\t\t{ title: '操作',       \twidth: 120,                render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label={rows.pic_path?'查看图片':'暂无图片'} disabled={rows.pic_path?'false':'true'} ghost onClick={()=>{\r\n\t\t\t\t\t\tconsole.log(rows);\r\n\t\t\t\t\t\tif (rows.pic_path !== '') {\r\n\t\t\t\t\t\t\tconst imgUrl  = JSON.parse(window.sessionStorage.getItem('user')).img_domain\r\n\t\t\t\t\t\t\tthis.setState({imgPath: imgUrl + rows.pic_path})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} },\r\n    ] \r\n    ButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n        const { data, pullLoading, pag, imgPath } = this.state\r\n\t\treturn (\r\n            <div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr mt10'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<div>\r\n                    <img className='w' src={imgPath} />\r\n                </div>\r\n            </div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\my-hospital-child.js",["2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140"],"import { Checkbox } from 'antd'\r\nimport React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(() => import('#tp/page-container'))\r\nconst Button = $async(() => import('@antd/button'))\r\nconst Table = $async(() => import('#cpt/table'))\r\nconst SubmitForm = $async(() => import('#cpt/submit-form'))\r\n// ===================================================================== private component\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nconst HospChildTable = $async(()=>import('./hosp-child-table'))\r\n\r\nexport default class extends React.Component {\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\tpag: {},\r\n\t\tdata1: [],\r\n\t\tpag1: {},\r\n\t\tdeviceStadius: [],\r\n\t\tdepartment: [],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '医院编码', name: 'hosp_code', title: '医院基础信息', disabled: true },\r\n\t\t\t{ label: '医院条码', name: 'hosp_spec', required: true, },\r\n\t\t\t{ label: '医院全称', name: 'hosp_name', required: true, },\r\n\t\t\t{ label: '医院别称', name: 'hosp_other_name', },\r\n\t\t\t{ label: '英文名称', name: 'hosp_english_name', },\r\n\t\t\t{ label: '医院级别', name: 'level', type: 'select', data: [], },\r\n\t\t\t{ label: '医院性质', name: 'nature', required: true, type: 'select', data: [], },\r\n\t\t\t{ label: '医院电话', name: 'telephone', },\r\n\t\t\t{ label: '医院传真', name: 'fax', },\r\n\t\t\t{ label: '法人代表', name: 'legal_person', },\r\n\t\t\t{ label: '社会统一信用代码', name: 'social_credit_code', },\r\n\t\t\t{ label: '银行账号', name: 'bank_account', },\r\n\t\t\t{ label: '银行账号名称', name: 'bank_account_name', },\r\n\t\t\t{ label: '开户行', name: 'opening_bank', },\r\n\t\t\t{ label: '开户行地址', name: 'opening_address', width: '480px', },\r\n\t\t\t{ label: '医院地址信息', name: 'areaData', type: 'address', data: [], width: '480px', },\r\n\t\t\t{ label: '开票单位名称', name: 'organization_name', },\r\n\t\t\t{ label: '开票单位编码', name: 'organization_code', },\r\n\t\t\t{ label: '医院联系人', name: 'hospital_contacts', },\r\n\t\t\t{ label: '联系人电话', name: 'hospital_phone', },\r\n\t\t\t{ label: '医院详细地址', name: 'address', width: '480px', },\r\n\t\t\t{ label: '医院logo', name: 'logo', type: 'upload', params: { modular: 124 }, },\r\n\t\t],\r\n\t\tsubmit1 : [\r\n\t\t\t{ label: '业务区域', \t\tname: 'region', \t\ttype: 'select', \tdata: [], required: true, width: '500px', title: '业务信息', },\r\n\t\t\t{ label: '客户等级', \t\tname: 'customer_level', type: 'select', \tdata: [], },\r\n\t\t\t{ label: '区域经理', \t\tname: 'regional_super_id',type: 'select', \tdata: [], disabled: true, },\r\n\t\t\t{ label: '大区经理', \t\tname: 'serial_user', \ttype: 'select', \tdata: [], required: true, },\r\n\t\t\t{ label: '业务员', \t \t\tname: 'salesman', \t\ttype: 'select', \tdata: [], mode: 'multiple',required: true, width: '500px', },\r\n\t\t\t{ label: '回款方式', \t\tname: 'back_money', \ttype: 'select', \tdata: [], },\r\n\t\t\t{ label: '结算单打印要求', \tname: 'printing', \t\ttype: 'textarea', \tfull: true, width: '100%', },\r\n\t\t\t{ label: '特别注意事项', \tname: 'need_matter', \ttype: 'textarea', \tfull: true, width: '100%', },\r\n\t\t],\r\n\t\tsubmit2: [\r\n\t\t\t{ label: '标本收取人', \t\tname: 'collector', type: 'select', mode: 'multiple', width: '480px', required: true, title: '物流信息', },\r\n\t\t\t{ label: '物流区域主管', \tname: 'logistics_area_super_id',   type: 'select',   data: [],\t\t required: true, },\r\n\t\t],\r\n\t\tsubmit3: [\r\n\t\t\t{ label: '报告单大小要求', \t\tname: 'report_size', \t\t\ttype: 'select', data: [], required: true, title: '客户报告单要求信息', },\r\n\t\t\t{ label: '报告单主标题', \t\tname: 'report_rise', },\r\n\t\t\t{ label: '报告单副标题', \t\tname: 'custom_report_rise', },\r\n\t\t\t{ label: '报告单二级标题', \t\tname: 'custom_report_rise_sub', },\r\n\t\t\t{ label: '报告单是否加盖印章', \tname: 'is_stamp', \t\t\t\ttype: 'select', data: [], nameStr: 'label', idStr: 'value', },\r\n\t\t\t{ label: '报告单是否显示网页', \tname: 'is_display_web', \t\ttype: 'select', data: [], nameStr: 'label', idStr: 'value', },\r\n\t\t\t{ label: '客服热线', \t\t\tname: 'service_hotline', },\r\n\t\t\t{ label: '是否显示客服热线', \tname: 'is_cust_service_hotline',type: 'select', data: [], nameStr: 'label', idStr: 'value', },\r\n\t\t\t{ label: '物流是否配送', \t\tname: 'is_delivery', \t\t\ttype: 'select', data: [], nameStr: 'label', idStr: 'value', },\r\n\t\t\t{ label: '报告单配送份数', \t\tname: 'delivery_fraction', },\r\n\t\t\t{ label: '报告单检测方地址', \tname: 'custom_report_rise_path', type: 'textarea', full: true, width: '100%', },\r\n\t\t\t{ label: '公章', \t\t\t\tname: 'official_seal', \t\t\ttype: 'upload', params: { modular: 124 }, },\r\n\t\t\t{ label: '病人资料特殊要求', \tname: 'patient_special_request', type: 'textarea', full: true, width: '100%', },\r\n\t\t\t{ label: '检测项目特殊要求', \tname: 'project_special_request', type: 'textarea', full: true, width: '100%', },\r\n\t\t\t{ label: '客户其他特殊要求', \tname: 'customer_special_request', type: 'textarea', full: true, width: '100%', },\r\n\t\t],\r\n\t\tsubmit4: [\r\n\t\t\t{ label: '联络人名称', \t\tname: 'critical_user',},\r\n\t\t\t{ label: '危急值联络科室', \tname: 'project_id', type: 'select', data: [], required: true, },\r\n\t\t\t{ label: '联系电话', \t\tname: 'critical_phone', },\r\n\t\t\t{ label: '危急值联络人邮箱',name: 'critical_email', },\r\n\t\t\t{ label: '备注', \t\t   name: 'remark', type: 'textarea', full: true, width: '100%', },\r\n\t\t],\r\n\t\tid: $fn.query('id'),\r\n\t}\r\n\tmodel= {\r\n\t\thosp_id: $fn.query('id'),\r\n\t}\r\n\tshowEdit = $fn.query('isEdit')\r\n\tisStampList = [{ value: \"0\", label: \"否\" }, { value: \"1\", label: \"是\" }]\r\n\tasync getDataAsync() {\r\n\t\tconst { submit, submit1, submit2, submit3, id } = this.state\r\n\t\t$fn.getDisItem({ // 医院级别\r\n\t\t\tcode: 39000,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[5].data = data\r\n\t\t\t\tthis.setState({ deviceStadius: data, submit })\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.getDisItem({ // 医院性质\r\n\t\t\tcode: 44100,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[6].data = data\r\n\t\t\t\tthis.setState({ deviceStadius: data, submit })\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.getDisItem({ // 客户等级\r\n\t\t\tcode: 45100,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit1[1].data = data\r\n\t\t\t\tthis.setState({ deviceStadius: data, submit1 })\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.getDisItem({ // 回款方式\r\n\t\t\tcode: 45200,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit1[5].data = data\r\n\t\t\t\tthis.setState({ deviceStadius: data, submit1 })\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.getDisItem({ // 报告单大小要求\r\n\t\t\tcode: 38000,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit3[0].data = data\r\n\t\t\t\tthis.setState({ deviceStadius: data, submit3 })\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.getDisItem({ // 报告单大小要求\r\n\t\t\tcode: 38000,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit3[0].data = data\r\n\t\t\t\tthis.setState({ deviceStadius: data, submit3 })\r\n\t\t\t}\r\n\t\t})\r\n\t\t// 科室\r\n\t\t$fn.dataSave('project-team').then(local => {\r\n\t\t\tif ($fn.hasArray(local)) {\r\n\t\t\t\tsubmit[7].data = local\r\n\t\t\t\tthis.setState({ department: local, submit: this.state.submit })\r\n\t\t\t} else {\r\n\t\t\t\t$http.pull(null, 'project-team/select').then(data => {\r\n\t\t\t\t\tsubmit[7].data = data\r\n\t\t\t\t\tthis.setState({ department: data, submit: this.state.submit })\r\n\t\t\t\t\t$fn.dataSave('project-team', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tconst { submit, submit1, submit2, submit3, submit4, showEdit } = this.state\r\n\t\t$http.submit(null, 'bs-hospital/add').then(data => {\r\n\t\t\tconsole.log(data);\r\n\t\t\tthis.setState({id: data.uuid})\r\n\t\t\tthis.hospInfo()\r\n\t\t})\r\n\t\tif (this.showEdit == 0) {\r\n\t\t\tsubmit.map(item =>  { item.disabled = true })\r\n\t\t\tsubmit1.map(item => { item.disabled = true })\r\n\t\t\tsubmit2.map(item => { item.disabled = true })\r\n\t\t\tsubmit3.map(item => { item.disabled = true })\r\n\t\t}\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({ // 业务区域\r\n\t\t\t\tcache: f.default.bsareaSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit1[0].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tsubmit1[0].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({ submit1 })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 区域经理\r\n\t\t\t\tcache: f.default.employeeSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit1[2].data = data\r\n\t\t\t\t\t\tsubmit2[0].data = data\r\n\t\t\t\t\t\tsubmit2[1].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'employee/select').then(data => {\r\n\t\t\t\t\t\t\tsubmit1[2].data = data\r\n\t\t\t\t\t\t\tsubmit2[0].data = data\r\n\t\t\t\t\t\t\tsubmit2[1].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({ submit1 })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 大区经理\r\n\t\t\t\tcache: f.default.bssalesmanSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit1[3].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-salesman/select').then(data => {\r\n\t\t\t\t\t\t\tsubmit1[3].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({ submit1 })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 科室\r\n\t\t\t\tcache: f.default.ProjectTeamSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit4[1].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'project-team/select').then(data => {\r\n\t\t\t\t\t\t\tsubmit4[1].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({ submit1 })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tsubmit3[4].data = this.isStampList\r\n\t\tsubmit3[5].data = this.isStampList\r\n\t\tsubmit3[7].data = this.isStampList\r\n\t\tsubmit3[8].data = this.isStampList\r\n\t\tthis.getDataAsync()\r\n\t\tthis.hospInfo()\r\n\t\tthis.fetch()\r\n\t}\r\n\thospInfo() { // 请求详情\r\n\t\tconst { submit, submit1, submit2, submit3, id } = this.state\r\n\t\t$http.submit(null, 'bs-hospital/info', { param: { uuid: id } }).then(data => {\r\n\t\t\t$fn.setSubmitValues(submit, data, () => { this.setState({ submit }) })\r\n\t\t\t$fn.setSubmitValues(submit1, data, () => { this.setState({ submit1 }) })\r\n\t\t\t$fn.setSubmitValues(submit2, data, () => { this.setState({ submit2 }) })\r\n\t\t\t$fn.setSubmitValues(submit3, data, () => { this.setState({ submit3 }) })\r\n\t\t\tconst param = {area_id:submit1[0].value} // 业务员\r\n\t\t\t$http.submit(null, 'bs-salesman/select', { param }).then(data => {\r\n\t\t\t\tsubmit1[4].data = data.items\r\n\t\t\t\tthis.forceUpdate()\r\n\t\t\t\t$fn.setCache()\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this, 'bs-critical-value/index', {...this.model})\r\n\tcols = [\r\n\t\t{ type: 'checkbox' },\r\n\t\t{ title: '序号', field: 'id', width: 120 },\r\n\t\t{ title: '危急值联络人', field: 'critical_user', width: 120 },\r\n\t\t{ title: '危急值联络科室', field: 'project_name', width: 120 },\r\n\t\t{ title: '危急值联络电话', field: 'critical_phone', width: 120 },\r\n\t\t{ title: '危急值联络Email', field: 'critical_email', width: 120 },\r\n\t\t{ title: '备注', field: 'remark', width: 120 },\r\n\t\t{\r\n\t\t\ttitle: '操作', width: 120, render: ({ rows }) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t\t<Button label='编辑' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\t\tconst { submit4 } = this.state\r\n\t\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t\t$http.submit(null,'bs-critical-value/info', { param: { uuid: rows.uuid } } ).then(data=>{\r\n\t\t\t\t\t\t\t\tthis.rows = data\r\n\t\t\t\t\t\t\t\tthis.isEdit = true\r\n\t\t\t\t\t\t\t\tthis.model.comp_id = data.comp_id\r\n\t\t\t\t\t\t\t\tthis.model.uuid = data.uuid\r\n\t\t\t\t\t\t\t\tthis.model.id = data.id\r\n\t\t\t\t\t\t\t\tthis.model.enabled = 1\r\n\t\t\t\t\t\t\t\t$fn.setSubmitValues(submit4, data, ()=>{this.setState({submit4})})\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t},\r\n\t]\r\n\tvalidateServiceName = (text, value, callback) => {\r\n\t\tconst { submit1 } = this.state\r\n\t\tsubmit1.map(item => {\r\n\t\t\tif (item.name === callback.name) {\r\n\t\t\t\titem.value = text\r\n\t\t\t}\r\n\t\t})\r\n\t\tsubmit1[0].data.map(item =>{\r\n\t\t\tif (submit1[0].value === item.value) {\r\n\t\t\t\tsubmit1[2].value = item.leader_id\r\n\t\t\t\tsubmit1[3].value = item.leader_id;\r\n\t\t\t\tthis.forceUpdate()\r\n\t\t\t}\r\n\t\t})\r\n\t\tconst param = {area_id:submit1[0].value}\r\n\t\t$http.submit(null, 'bs-salesman/select', { param }).then(data => {\r\n\t\t\tsubmit1[4].data = data.items\r\n\t\t\tthis.forceUpdate()\r\n\t\t\t$fn.setCache()\r\n\t\t})\r\n\t}\r\n\tsubmitForms() {\r\n\t\tconst { submit, submit1, submit2, submit3, id } = this.state\r\n\t\tlet obj = {}\r\n\t\tsubmit.map(v => { obj[v.name] = v.value })\r\n\t\tsubmit1.map(v =>{ obj[v.name] = v.value })\r\n\t\tsubmit2.map(v =>{ obj[v.name] = v.value })\r\n\t\tsubmit3.map(v =>{ obj[v.name] = v.value })\r\n\t\tif(id) { // 编辑\r\n\t\t\tconst param = {\r\n\t\t\t\tuuid: id,\r\n\t\t\t\t...obj\r\n\t\t\t}\r\n\t\t\t$http.submit(null, 'bs-hospital/edit',{ param }).then(data => {\r\n\t\t\t\tmessage.then(f=>f.default.success('操作成功'))\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t})\r\n\t\t} else { // 新增\r\n\t\t\tconst param = { ...obj }\r\n\t\t\t$http.submit(null, 'bs-hospital/add',{ param }).then(data => {\r\n\t\t\t\tmessage.then(f=>f.default.success('操作成功'))\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { data, pullLoading, pag, submit, selectedKeys, submit1, submit2, submit3, submit4, id } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title={id ? '医院客户编辑' : '医院客户新增'}>\r\n\t\t\t\t<div className='oxys'>\r\n\t\t\t\t\t<Button label='返回' size='small' className='dkm ml30 mt10' onClick={() => $fn.back(this)} />\r\n\t\t\t\t\t<Button label='保存' size='small' disabled={this.showEdit == 1?false:true}  className='dkm ml30 mt10' onClick={() => {\r\n\t\t\t\t\t\tthis.submitForms()\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<div className='mb20 p20'>\r\n\t\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\t\tdisplay={true}\r\n\t\t\t\t\t\t\tdata={submit}\r\n\t\t\t\t\t\t\tonChange={(v, press, { name, data }) => { \r\n\t\t\t\t\t\t\t\tsubmit.map(item => {\r\n\t\t\t\t\t\t\t\t\tif (item.name === name) {\r\n\t\t\t\t\t\t\t\t\t\titem.value = v\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t\t\t\tonSubmit={v => { }}\r\n\t\t\t\t\t\t\tonClose={() => this.refs.modal.close()}\r\n\t\t\t\t\t\t\tinit={form => this.form = form}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='fxbc fxmj'>\r\n\t\t\t\t\t\t<h6 className=\"w xmlr pl20 h40 b\">危急值联络人</h6>\r\n\t\t\t\t\t\t<div className='fxbc fxmj mb10' >\r\n\t\t\t\t\t\t\t<Button label='新增' size='small' className='dkm' onClick={() => {\r\n\t\t\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t\t\tthis.isEdit = false\r\n\t\t\t\t\t\t\t }} />\r\n\t\t\t\t\t\t\t<Button label='删除' disabled={selectedKeys?false:true} size='small' className='dkm ml15 mr10' onClick={() => {\r\n\t\t\t\t\t\t\t\tconsole.log(selectedKeys);\r\n\t\t\t\t\t\t\t\tconst uuid = []\r\n\t\t\t\t\t\t\t\tselectedKeys.map(item => {\r\n\t\t\t\t\t\t\t\t\tuuid.push(item.uuid)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\tconst param={\r\n\t\t\t\t\t\t\t\t\tuuid:uuid\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'bs-critical-value/del', {param}).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tclassName='xplr'\r\n\t\t\t\t\t\tcols={this.cols}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tloading={pullLoading}\r\n\t\t\t\t\t\tonRow={current => { this.setState({selectedKeys:current}) }}\r\n\t\t\t\t\t\tpag={pag}\r\n\t\t\t\t\t\tonChange={(current, pageSize) => $fn.pageChange.call(this, { current, pageSize })}\r\n\t\t\t\t\t\tonSort={v => $fn.onSort.call(this, v)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='ex fv xplr pt10'>\r\n\t\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\t\tdisplay={true}\r\n\t\t\t\t\t\t\tdata={submit1}\r\n\t\t\t\t\t\t\tonChange={(v, press, { name, data }) => this.validateServiceName(v, press, { name, data })}\r\n\t\t\t\t\t\t\tinit={form => this.form = form}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='ex fv xplr pt10'>\r\n\t\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\t\tdisplay={true}\r\n\t\t\t\t\t\t\tdata={submit2}\r\n\t\t\t\t\t\t\tonChange={(v, press, { name, data }) => { \r\n\t\t\t\t\t\t\t\tsubmit2.map(item => {\r\n\t\t\t\t\t\t\t\t\tif (item.name === name) {\r\n\t\t\t\t\t\t\t\t\t\titem.value = v\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t\t\t\tinit={form => this.form = form}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<HospChildTable ID={ id || '' }  />\r\n\t\t\t\t\t<div className='ex fv xplr pt10'>\r\n\t\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\t\tdisplay={true}\r\n\t\t\t\t\t\t\tdata={submit3}\r\n\t\t\t\t\t\t\tonChange={(v, press, { name, data }) => { \r\n\t\t\t\t\t\t\t\tsubmit3.map(item => {\r\n\t\t\t\t\t\t\t\t\tif (item.name === name) {\r\n\t\t\t\t\t\t\t\t\t\titem.value = v\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t\t\t\tinit={form => this.form = form}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit?'编辑':'添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit4 }\r\n\t\t\t\t\t\tonChange    = {(v, press, { name, data }) => { } } \r\n\t\t\t\t\t\tonSubmit = { v => { \r\n\t\t\t\t\t\t\tconst param={\r\n\t\t\t\t\t\t\t\t...v,\r\n\t\t\t\t\t\t\t\t...this.model\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'bs-critical-value/edit', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}else {\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'bs-critical-value/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t\tinit    = { form => this.formSubmit = form }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\enclosure.js",["2141","2142","2143","2144","2145"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        imgPath:'',\r\n\t}\r\n    forms = []\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        this.model.contract_id=this.props.uuid\r\n        this.fetch(this.model)\r\n    }\r\n\tfetch = param => $http.paging(this,'bs-file/index',{ param } )\r\n\tcols = [\r\n\t\t{ title: '上传时间',field: 'update_at',     width: '180'},\r\n        { title: '上传人', \tfield: 'upload_user', \twidth: '180'},\r\n\t\t{ title: '操作',    render:({rows})=>{\r\n            const suffix = rows.file_name.substr(\r\n                rows.file_name.lastIndexOf(\".\") + 1\r\n            ); // 文件后缀名\r\n            if (suffix === \"png\" || suffix === \"jpg\" || suffix === \"pdf\") {\r\n                return <div className='plr5'>\r\n\t\t\t\t\t<Button className='mr5' label='查看' ghost onClick={()=>{\r\n                        this.setState({imgPath: rows.file_name})\r\n                    }}/>\r\n                </div>\r\n            } else {\r\n                return <div className='plr5'>\r\n\t\t\t\t\t<Button className='mr5' label='下载' ghost onClick={()=>{\r\n\t\t\t\t\t\twindow.location.href = rows.file_name;\r\n                    }}/>\r\n                </div>\r\n            }\r\n        } },\r\n\t] \r\n    ButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n        const { data, pullLoading, pag, selectedKeys, imgPath } = this.state\r\n\t\treturn (\r\n            <div>\r\n                <Table\r\n                    className\t\t= 'xplr mt10'\r\n                    cols\t\t\t= { this.cols }\r\n                    data \t\t\t= { data }\r\n                    loading \t\t= { pullLoading }\r\n                    onRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n                    pag\t\t\t\t= { pag }\r\n                    onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                />\r\n                <div>\r\n                    <img className='w' src={imgPath} />\r\n                </div>\r\n            </div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\hosp-child-table.js",["2146","2147","2148","2149","2150"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\nimport { Checkbox, DatePicker } from 'antd';\r\nimport { TimePicker } from 'antd';\r\nimport moment from 'moment';\r\nconst message = import('@antd/message')\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst { TextArea } = Input\r\nconst Select = $async(()=>import('@antd/form/select'))\r\nconst SubmitForm = $async(() => import('#cpt/submit-form'))\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            // { label: '选择地区',    name: 'areaData',       type: 'select',  data: [], },\r\n            // { label: '具体位置',    name: 'street', },\r\n            // { label: '标本收取地点',name: 'contact_name', },\r\n            // { label: '医生',        name: 'doctor_id',      type: 'select',  data: [], },\r\n            // { label: '医院科室',    name: 'depart_id',      type: 'select',  data: [], },\r\n            // { label: '联系电话',    name: 'contact_phone', },\r\n            // { label: '上门周期',    name: 'checkList',      type: 'checkbox', },\r\n            // { label: '每周上门时间',name: 'to_door_time',   type: 'time'},\r\n            // { label: '个性化要求',  name: 'require',        type: 'textarea' },\r\n            // { label: '备注',       name: 'remark',          type: 'textarea'  },\r\n        ],\r\n        uuid: [],\r\n        form: {\r\n            province: \"\",\r\n            city: \"\",\r\n            area: \"\",\r\n            areaData: {\r\n                country_id: \"100000\",\r\n                province_id: \"\",\r\n                city_id: \"\",\r\n                area_id: \"\"\r\n            },\r\n            street: \"\",\r\n            contact_name: \"\",\r\n            to_door_cycle: [],\r\n            to_door_time: \"\",\r\n            require: \"\",\r\n            remark: \"\",\r\n            hosp_id: '',\r\n            contact_phone: \"\",\r\n            doctor_id: \"\",\r\n            depart_id: \"\"\r\n        },\r\n        doctorList:[],\r\n        hospitalDepartments:[],\r\n        hosp_id: '',\r\n    }\r\n    checks = [\r\n        { label: \"周一\", value: 1 },\r\n        { label: \"周二\", value: 2 },\r\n        { label: \"周三\", value: 3 },\r\n        { label: \"周四\", value: 4 },\r\n        { label: \"周五\", value: 5 },\r\n        { label: \"周六\", value: 6 },\r\n        { label: \"周日\", value: 7 }\r\n    ]\r\n    forms = []\r\n\tmodel = {\r\n        hosp_id: '',\r\n    }\r\n    componentDidMount(){\r\n        const { submit } = this.state\r\n        cacheApi.then(f => {\r\n\t\t\t$fn.getCache({ // 医生\r\n\t\t\t\tcache: f.default.bsDocSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        this.setState({doctorList:data})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-doctor/select').then(data => {\r\n                            this.setState({doctorList:data})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({ submit })\r\n\t\t\t\t}\r\n            })\r\n            $fn.getCache({ // 医院科室\r\n\t\t\t\tcache: f.default.ProjectTeamSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        this.setState({hospitalDepartments:data})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'project-team/select').then(data => {\r\n                            this.setState({hospitalDepartments:data})\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({ submit })\r\n\t\t\t\t}\r\n\t\t\t})\r\n        })\r\n    }\r\n    onChange(checkedValues) {\r\n        console.log('checked = ', checkedValues);\r\n    }\r\n    DateOnChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    onChanges = (v) => {   \r\n\t\tconsole.log(v) \r\n        const {form} = this.state  \r\n        let d = Object.assign(form, v)\r\n\t\t// this.setState({form: d}, () => {\r\n\t\t// \tif (Object.keys(v)[0] === 'project_id') {\r\n\t\t// \t\tthis.addProject(v.project_id)\r\n\t\t// \t} \r\n        // })\r\n    }\r\n    streetOnChanges(e) { // 具体地址\r\n        const {form} = this.state \r\n        form.street = e\r\n    }\r\n    timeOnChange(time, timeString) {\r\n        console.log(time, timeString);\r\n    }\r\n\tcomponentWillReceiveProps(props) {\r\n        this.setState({hosp_id: props.ID}) \r\n        this.model.hosp_id =  props.ID\r\n        console.log(this.model);\r\n        // this.fetch(this.model)\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this, 'bs-box-address/index', { param })\r\n\tcols = [\r\n\t\t{ type: 'checkbox' },\r\n\t\t{ title: '序号',         field: 'id',           width: 120 },\r\n\t\t{ title: '标本收取地点', field: 'contact_name', width: 120 },\r\n\t\t{ title: '上门周期',     field: 'to_door_cycle',width: 120 },\r\n\t\t{ title: '每日上门时间', field: 'to_door_time', width: 120 },\r\n\t\t{ title: '个性化要求',   field: 'require',      width: 120 },\r\n\t\t{ title: '备注',         field: 'remark',       width: 120 },\r\n\t\t{ title: '操作',         width: 120,            render: ({ rows }) => {\r\n            return (\r\n                <div className='plr5'>\r\n                    <Button label='编辑' ghost className='ml15' onClick={() => {\r\n                        this.refs.modal.open()\r\n                    }} />\r\n                </div>\r\n            )\r\n\t\t} },\r\n    ] \r\n    ButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n        const { data, pullLoading, pag, selectedKeys, form, doctorList, hospitalDepartments, uuid } = this.state\r\n\t\treturn (\r\n            <div>\r\n                <div className='fxbc fxmj'>\r\n                    <h6 className=\"w xmlr pl20 h40 b\">标本收取地点</h6>\r\n                    <div className='fxbc fxmj mb10' >\r\n                        <Button label='新增' size='small' className='dkm' onClick={() => {\r\n                            this.refs.modal.open()\r\n                         }} />\r\n                        <Button label='删除' size='small' disabled={selectedKeys.length?false:true} className='dkm ml15 mr10' onClick={() => {\r\n                            const param ={uuid:uuid}\r\n                            $http.submit(null, 'bs-box-address/delete', {param}).then(data => {\r\n                                message.then(f=>f.default.success('删除成功'))\r\n                            })\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr mt10'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n                        this.setState({selectedKeys:current})\r\n                        this.setState({uuid: current.map(v=>v.uuid)})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                />\r\n                <Modal ref = 'modal' title = '编辑' width={648} noFooter >\r\n                    <div className='fxw pt10 pr10 pl10'>\r\n                        <div className='fx mt10'>\r\n                            <div className='mr10 fxm'> \r\n                                <div className='mr10' style={{width:90,textAlign:'right'}}>选择地区</div>\r\n                                <Select name='province' data={this.statusOption} p='请选择' nameStr='label' idStr='value'\r\n                                onChanged={(v) => this.onChanges(v)} width={150} />\r\n                            </div>\r\n                            <div className='fxm'> \r\n                                <div className='mr10' style={{width:90,textAlign:'right'}}>具体位置</div>\r\n                                <Input className='' style={{width:150}} value={form.street} onChange={ this.streetOnChanges } />\r\n                            </div>\r\n                        </div>\r\n                        <div className='fx mt10'>\r\n                            <div className='mr10 fxm'> \r\n                                <div className='mr10' style={{width:90,textAlign:'right'}}>标本收取地点</div>\r\n                                <Input className='' style={{width:150}} value={form.contact_name} onChange={(v) => this.onChanges(v) } />\r\n                            </div>\r\n                            <div className='fxm'> \r\n                                <div className='mr10' style={{width:90,textAlign:'right'}}>医生</div>\r\n                                <Select name='doctor_id' data={doctorList?doctorList:'暂无数据'} p='请选择' nameStr='label' idStr='value'\r\n                                onChanged={(v) => this.onChanges(v)} width={150} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='fx mt10'>\r\n                            <div className='mr10 fxm'> \r\n                                <div className='mr10' style={{width:90,textAlign:'right'}}>医院科室</div>\r\n                                <Select name='depart_id' data={hospitalDepartments} p='请选择' nameStr='name' idStr='value'\r\n                                onChanged={(v) => this.onChanges(v)} width={150} />\r\n                            </div>\r\n                            <div className='fxm'> \r\n                                <div className='mr10' style={{width:90,textAlign:'right'}}>联系电话</div>\r\n                                <Input className='' style={{width:150}} value={form.contact_phone} onChange={(v) => this.onChanges(v) } />\r\n                            </div>\r\n                        </div>\r\n                        <div className='fxm mt10'>\r\n                            <div className='mr10' style={{width:90,textAlign:'right'}}>上门周期</div>\r\n                            <Checkbox.Group options={this.checks} onChange={this.onChange} />\r\n                        </div>\r\n                        <div className='fxm w mt10'> \r\n                            <div className='mr10' style={{width:90,textAlign:'right'}}>每周上门时间</div>\r\n                            <TimePicker onChange={this.timeOnChange} defaultOpenValue={moment('00:00', 'HH:mm')} />\r\n                            {/*<DatePicker showTime onChange={this.DateOnChange} onOk={this.onOk} />*/}\r\n                        </div>\r\n                        <div className='fxm w mt10'> \r\n                            <div className='mr10' style={{width:90,textAlign:'right'}}>个性化要求</div>\r\n                            <Input mode='textarea' onChange={(v) => this.onChanges(v) } value={form.require} />\r\n                        </div>\r\n                        <div className='fxm w mt10'> \r\n                            <div className='mr10' style={{width:90,textAlign:'right'}}>备注</div>\r\n                            <Input mode='textarea' onChange={(v) => this.onChanges(v) } value={form.remark} />\r\n                        </div>\r\n                        <div className='mt10 w' style={{textAlign:'center'}}>\r\n                            <Button className='mr10' label='取消' onClick={() => {\r\n                                this.refs.modal.close()\r\n                             }} />\r\n                            <Button className='' label='确定' onClick={() => {\r\n                                console.log(form)\r\n                                this.refs.modal.close()\r\n                             }} />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\contract-signing-record.js",["2151","2152","2153","2154"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== antd\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n    forms = []\r\n    code = $fn.query('code')\r\n\tmodel = {\r\n        code: this.code,\r\n    }\r\n\tcheck = {}\r\n\tcomponentDidMount(){\r\n        this.fetch()\r\n    }\r\n\r\n\tfetch = param => $http.paging(this,'bs-contract/getContactRenew',{ param:{...param, pageSize:this.pageSize, ...this.model}, loading:false } )\r\n\r\n\tcols = [\r\n\t\t{ title: '合同编号',    field: 'code',              width: 100 },\r\n\t\t{ title: '合同名称',    field: 'name',              width: 120 },\r\n\t\t{ title: '客户名称',    field: 'hosp_name',         width: 120 },\r\n        { title: '生效时间', \tfield: 'sign_at', \t        width: 120 },\r\n\t\t{ title: '到期时间',    field: 'contract_validity', width: 120, },\r\n        { title: '折扣率', \t    field: 'discount_rate', \twidth: 80 },\r\n\t\t{ title: '操作人',      field: 'real_name', \t    width: 120 },\r\n    ] \r\n    ButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'返回', ghost:true, onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n            } },\r\n        ]\r\n\t}\r\n\trender(){\r\n        const { data, pullLoading, pag, selectedKeys } = this.state\r\n\t\treturn (\r\n            <Page title='合同签订记录' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr mt10'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\child\\contract-signing-edit.js",["2155","2156","2157","2158","2159","2160","2161","2162","2163","2164","2165","2166","2167"],"\r\nimport React from 'react'\r\nimport coms from '@/private/js/common.js'\r\nimport Modal from '@antd/modal'\r\nimport { Upload } from 'antd'\r\n// import reqwest from 'reqwest'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst Table = $async(()=>import('#cpt/table')) \r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n// ===================================================================== private component\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius: [],\r\n\t\tdepartment: [],\r\n\t\tsubmit: [\r\n\t\t\t{ label:'合同编码', \tname:'code', },\r\n\t\t\t{ label:'合同名称', \tname:'name', },\r\n\t\t\t{ label:'客户名称', \tname:'hosp_id',\t    type:'select', data:[], },\r\n\t\t\t{ label:'合同折扣率(小数点)',               name:'discount_rate', },\r\n\t\t\t{ label:'结算周期', \tname:'reckon_day',\ttype:'select', data:[],},\r\n\t\t\t{ label:'回款周期', \tname:'back_day',\ttype:'select', data:[], },\r\n\t\t\t{ label:'对票', \t    name:'right_vote',\ttype:'select', data:[], nameStr:'label', idStr:'value', },\r\n\t\t\t{ label:'信用期', \t    name:'credit', },\r\n\t\t\t{ label:'合并开票', \tname:'merge_vote',\ttype:'select', data:[], nameStr:'label', idStr:'value', },\r\n\t\t\t{ label:'状态', \t    name:'status',\t    type:'select', data:[], nameStr:'label', idStr:'value', },\r\n\t\t\t{ label:'合同生效时间', name:'sign_at',\t\t type: 'date-time', },\r\n\t\t\t{ label:'合同到期时间', name:'contract_validity', type: 'date-time',  },\r\n\t\t\t{ label:'合同延期时间', name:'delay', },\r\n            { label:'合同类型', \tname:'type',        type:'select', data:[], nameStr:'label', idStr:'value', },\r\n        ],\r\n        submit1: [\r\n\t\t\t{ label:'合同备注',\t\t\tname:'remark',\ttype:'textarea', full:true, width:'100%', },\r\n\t\t\t{ label:'其他开票特殊要求', name:'special',  type:'textarea', full:true, width:'100%', },\r\n\t\t\t{ label:'结算单打印要求', \tname:'printing', type:'textarea', full:true, width:'100%', },\r\n\t\t],\r\n        uuid: $fn.query('uuid'),\r\n\t\tfileName: '',\r\n\t\tfileList: [],\r\n    \tuploading: false,\r\n\t}\r\n\thide_edit=$fn.query('hideEdit')\r\n\tmodel = {\r\n\t\tcontract_id: $fn.query('uuid')\r\n\t}\r\n    rightVoteList = [{ label: \"是\", value: \"1\" }, { label: \"否\", value: \"0\" }] // 对票、合并开票\r\n    option = [ // 状态\r\n        { label: \"草稿\", value: \"0\" },\r\n        { label: \"正常\", value: \"1\" },\r\n        { label: \"已过期\", value: \"2\" }\r\n    ]\r\n    contractTypeOption = [ // 合同类型\r\n        { label: '预备合同', value: '1' },\r\n        { label: '正式合同', value: '2'  }\r\n    ]\r\n\tasync getDataAsync() {\r\n\t\tconst { submit } = this.state\r\n\t\t$fn.getDisItem({ // 结算周期\r\n\t\t\tcode: 44300,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[4].data = data\r\n\t\t\t\tthis.setState({deviceStadius:data, submit})\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.getDisItem({ // 回款周期\r\n\t\t\tcode: 44400,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[5].data = data\r\n\t\t\t\tthis.setState({deviceStadius:data, submit})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit, submit1, uuid, data } = this.state\r\n\t\tif (this.hide_edit == 1) {\r\n\t\t\tsubmit.map(item => {\r\n\t\t\t\titem.disabled = true\r\n\t\t\t})\r\n\t\t\tsubmit1.map(item => {\r\n\t\t\t\titem.disabled = true\r\n\t\t\t})\r\n\t\t}\r\n        submit[6].data = this.rightVoteList\r\n        submit[8].data = this.rightVoteList\r\n        submit[9].data = this.option\r\n        submit[13].data = this.contractTypeOption\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({ // 客户名称\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tsubmit[2].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.getDataAsync()\r\n\t\tif (uuid) {\r\n\t\t\t$http.submit(null, 'bs-contract/info', { param: { uuid: uuid}, loading:false}).then(data=>{\r\n\t\t\t\t$fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n\t\t\t\t$fn.setSubmitValues(submit1, data, ()=>{this.setState({submit1})})\r\n\t\t\t})\r\n\t\t\tthis.fetch()\r\n\t\t}\r\n\t}\r\n\tsubmitForms() {\r\n\t\tconst { submit, submit1, uuid } = this.state\r\n\t\tlet obj = {}\r\n\t\tsubmit.map(v =>{\r\n\t\t\tobj[v.name] = v.value\r\n\t\t})\r\n\t\tsubmit1.map(v =>{\r\n\t\t\tobj[v.name] = v.value\r\n\t\t})\r\n\t\tif(uuid) { // 编辑\r\n\t\t\tconst param = {\r\n\t\t\t\tuuid: uuid,\r\n\t\t\t\t...obj\r\n\t\t\t}\r\n\t\t\t$http.submit(null, 'bs-contract/edit',{ param }).then(data => {\r\n\t\t\t\tmessage.then(f=>f.default.success('操作成功'))\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t})\r\n\t\t} else { // 新增\r\n\t\t\tconst param = {\r\n\t\t\t\t...obj\r\n\t\t\t}\r\n\t\t\t$http.submit(null, 'bs-contract/add',{ param }).then(data => {\r\n\t\t\t\tmessage.then(f=>f.default.success('操作成功'))\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'bs-file/index', {...param, ...this.model} )\r\n\tcols = [\r\n        { title: '文件名', \t\tfield: 'img_name', \t\twidth:120 },\r\n\t\t{ title: '上传时间', \tfield: 'update_at',\t\twidth:120 },\r\n\t\t{ title: '上传人', \t\tfield: 'upload_user', \twidth:120 },\r\n\t\t{ title: '操作', \t\twidth:120, \t\t\t\trender:({rows})=>{\r\n\t\t\tlet show = rows.file_name.substr(rows.file_name.lastIndexOf(\".\") + 1)\r\n\t\t\tlet Exhibition = ''\r\n\t\t\tif (show === \"pdf\"||show === 'jpg'||show === 'png'||show === 'gif') {\r\n\t\t\t\tExhibition = true \r\n\t\t\t} else {\r\n\t\t\t\tExhibition = false\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label={Exhibition?'查看':'下载'} ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tif (Exhibition) {\r\n\t\t\t\t\t\t\tthis.setState({fileName: rows.file_name})\r\n\t\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\twindow.location.href = rows.file_name;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<Button label='删除' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\tcoms.interfaceConfirm('bs-file/del', '删除', { uuid: rows.uuid }, () => { \r\n\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t })\r\n                    }} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, selectedKeys, submit, submit1, uuid, fileName, uploading, fileList } = this.state\r\n\t\tlet that = this\r\n\t\tconst props = {\r\n\t\t\taction: window.$config.api + ('upload/img'),\r\n\t\t\theaders:{\r\n\t\t\t\tAuthorization: \"Bearer \" + window.$fn.getToken()\r\n\t\t\t},\r\n\t\t\tdata: {type: 1, modular: '132'},\r\n\t\t\tonChange({ file }) {\r\n\t\t\t\tif (file.response) {\r\n\t\t\t\t\tthat.setState({fileList: file.response.data[0]})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Page title={uuid ? '合同管理新增' : '合同管理编辑'}>\r\n\t\t\t\t<div className='oxys'>\r\n\t\t\t\t\t<Button label='返回' size='small' className='dkm ml30 mt10' onClick={()=> $fn.back(this) } />\r\n\t\t\t\t\t<Button label='保存' size='small' className='dkm ml30 mt10' disabled={this.hide_edit == 1?true:false} onClick={()=> this.submitForms() } />\r\n\t\t\t\t\t<div className='mb20 p20'>\r\n\t\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\t\tdisplay = { true }\r\n\t\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\t\tonChange = {(v, press, { name, data }) => {\r\n\t\t\t\t\t\t\t\tsubmit.map(item => {\r\n\t\t\t\t\t\t\t\t\tif (item.name === name) {\r\n\t\t\t\t\t\t\t\t\t\titem.value = v\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t\tinit    = { form => this.form = form }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Modal ref = 'modal' title = '查看' width={648} noFooter >\r\n\t\t\t\t\t\t<img className='w' style={{width: '600px'}} src={fileName} />\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t\t<div className='fxbc '>\r\n\t\t\t\t\t\t<h6 className=\"w xmlr pl20 h40 b\">附件列表</h6>\r\n\t\t\t\t\t\t<Button label='上传' size='small' disabled={ this.dis} className='dkm mb10 mr10 fxmr' onClick={()=> {\r\n\t\t\t\t\t\t\tif (!uuid) {\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.error('请在编辑中上传文件'))\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn ( this.refs.modal1.open() )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Modal ref = 'modal1' title = '上传' width={400} noFooter >\r\n\t\t\t\t\t\t<Upload {...props}>\r\n\t\t\t\t\t\t\t<Button noStop>选择文件</Button>\r\n\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t<Button label='上传文件' size='small' className='mt10' style={{position: 'absolute', top: '56px', right: '24px',}} onClick={()=> {\r\n\t\t\t\t\t\t\tconst param = {\r\n\t\t\t\t\t\t\t\timg_name: fileList.img_name,\r\n\t\t\t\t\t\t\t\timg_path: fileList.img_path,\r\n\t\t\t\t\t\t\t\tfile_name: fileList.img_url,\r\n\t\t\t\t\t\t\t\tcontract_id: $fn.query('uuid'),\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$http.submit(null, 'bs-file/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('上传成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t\tthis.refs.modal1.close()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}} />\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\t\tonRow\t\t\t= {current => {}}\r\n\t\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='ex fv xplr pt10'>\r\n\t\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\t\tdisplay = { true }\r\n\t\t\t\t\t\t\tdata = { submit1 }\r\n\t\t\t\t\t\t\tonChange = {(v, press, { name, data }) => {\r\n\t\t\t\t\t\t\t\tsubmit1.map(item => {\r\n\t\t\t\t\t\t\t\t\tif (item.name === name) {\r\n\t\t\t\t\t\t\t\t\t\titem.value = v\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t\tinit    = { form => this.form = form }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\bill-ToBeConfirmed.js",["2168","2169","2170","2171"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\nconst OperationRecord = $async(()=>import('./child/operation-record'))\r\nconst BillInfo = $async(()=>import('../../finance/finance-page/finance-list/bill-info'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tbill_id: '',\r\n\t\tsubmit: [\r\n            { label: '异常状态',\tname: 'type', \ttype: 'select', data: [] },\r\n\t\t\t{ label: '价格',\t\tname: 'price',  },\r\n\t\t\t{ label: '异常备注',\tname: 'remark', type: 'textarea' },\r\n\t\t\t{ label: '图片',\t\tname: 'pic_path',type: 'upload', params: {modular: 117} }\r\n\t\t],\r\n\t\tsspecCode: '',\r\n\t}\r\n\toptions = [\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"冲抵\", value: \"2\" }\r\n\t]\r\n\tforms = [\r\n        { label:'主条码号',\t\tname:'spec_code',\t\t},\r\n        { label:'医院',\t\t\tname:'hosp_id',\t\ttype:'select', \tdata:[] },\r\n        { label:'区域',\t\t\tname:'region_id',\ttype:'select', \tdata:[] },\r\n\t\t{ label:'账期',\t\t\tname:'summary_sn',\ttype:'select', \tdata:[] },\r\n        { label:'接收标本日期',\tname:'date', \t\ttype:'date-range',names:['start_at','end_at'] },\r\n\t\t{ label:'账单生成时间',\tname:'date', \t\ttype:'date-range',names:['bill_start_at','bill_end_at'] },\r\n\t]\r\n\tmodel = {}\r\n\tasync getDataAsync() { // 账单状态\r\n\t\tawait $fn.getDisItem({\r\n\t\t\tcode: 63000,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tconst {submit} = this.state\r\n\t\t\t\tsubmit[0].data = data\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('bill-summary-select-data').then(local => { // 账期\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[3].data = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bill-summary/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tthis.forms[3].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bill-summary-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 客户名称\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.bsareaSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t\tthis.getDataAsync()\r\n\t}\r\n\r\n\tfetch = param => $fn.fetch.call(this,'bill/salesmanauditlists', param)\r\n\tcols = [\r\n\t\t{ title: '账单编号', \tfield: 'order_sn', \t\twidth:120 },\r\n\t\t{ title: '账期', \t\tfield: 'phase_str', \twidth:120 },\r\n\t\t{ title: '条码号', \t\tfield: 'old_spec_code', width:120, render: ({text,rows})=> <span onDoubleClick={()=>{\r\n\t\t\tthis.setState({specCode: text})\r\n\t\t\tthis.refs.modal2.open()\r\n\t\t}}>{text}</span> },\r\n        { title: '标本接收时间', field: 'receive_at', \twidth:120 },\r\n\t\t{ title: '账单类型', \tfield: 'pay_type', \t\twidth:120,\r\n\t\t\trender: ({rows}) => {\r\n\t\t\t\treturn window.$fn.filterSelect(this.options, rows.pay_type, 'label', 'value')\r\n\t\t} },\r\n        { title: '医院名称', \tfield: 'hosp_name', \twidth:120 },\r\n\t\t{ title: '自然项目', \tfield: 'parent_kind_name',width:120 },\r\n        { title: '项目名称', \tfield: 'kind_name', \twidth:120 },\r\n\t\t{ title: '业务员', \t\tfield: 'salesman_user', width:120 },\r\n\t\t{ title: '标准总价', \tfield: 'sprice', \t\twidth:120 },\r\n        { title: '折扣率', \t\tfield: 'percent', \t\twidth:120 },\r\n\t\t{ title: '实际价格', \tfield: 'price', \t\twidth:120 },\r\n\t\t{ title: '折扣金额', \tfield: 'perprice', \t\twidth:120 },\r\n\t\t{ title: '账单生成', \tfield: 'created_at', \twidth:120 },\r\n\t\t{ title: '接收标本', \tfield: 'sp_check_time',\twidth:120 },\r\n\t\t{ title: '账单状态', \tfield: 'status_name', \twidth:120 },\r\n\t\t{ title: '备注', \t\tfield: 'attribute_name', width:120 },\r\n\t]\r\n\tvalidateServiceName = (value, text, callback) => {\r\n\t\tconst { submit, data1 } = this.state\r\n\t\tif (callback.name == 'type' && value == '63003') {\r\n\t\t\tconsole.log(222);\r\n\t\t\tsubmit[1].value = data1.sprice\r\n\t\t\tsubmit[1].disabled = true\r\n\t\t\tthis.forceUpdate()\r\n\t\t// } else if (callback.name == 'type'&& value !== '63003') {\r\n\t\t// \tconsole.log(111);\r\n\t\t// \tsubmit[1].value = ''\r\n\t\t// \tsubmit[1].disabled = false\r\n\t\t// \tthis.forceUpdate()\r\n\t\t}\r\n\t\tconsole.log(submit);\r\n\t}\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'确定', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确定',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.data1.map(v=>v.hosp_id)\r\n\t\t\t\t\t\t\tconst summary = this.state.data1[0].summary_sn\r\n\t\t\t\t\t\t\t$http.submit(null,'bill/salesmannormal', { param: { hosp_ids: keys.join(','), summary_sn:summary} } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('反结算成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'操作详情', ghost:true, disabled:!this.state.data1.uuid, onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { data1 } = this.state\r\n\t\t\t\tthis.setState({ bill_id: data1.uuid})\r\n\t\t\t} },\r\n\t\t\t{ label:'账单异常', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t} },\r\n\t\t\t{ label:'导出', code:'F2', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否导出?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.data1.map(v=>v.hosp_id)\r\n\t\t\t\t\t\t\t$http.submit(null,'bill/salesmanauditlists', { param: { hosp_ids: keys, summary_sn:this.state.data1[0].summary_sn} } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('导出成功'))\r\n\t\t\t\t\t\t\t\twindow.location.href = data.url;\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, specCode, bill_id } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='待确认账单' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Modal ref='modal' title='操作详情' width={1000} noFooter>\r\n\t\t\t\t\t<OperationRecord bill_id={bill_id||''} />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal1' title='异常账单' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonChange    = {(v, press, { name, data }) => this.validateServiceName(v, press, { name, data })}\r\n\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t// \tconst { submit } = this.state;\r\n\t\t\t\t\t\t// \tif (name == 'type' && v == '63003') {\r\n\t\t\t\t\t\t// \t\tconsole.log(222);\r\n\t\t\t\t\t\t// \t\tsubmit[1].value = data1.sprice\r\n\t\t\t\t\t\t// \t\tsubmit[1].disabled = true\r\n\t\t\t\t\t\t// \t} else if (name == 'type'&& v !== '63003') {\r\n\t\t\t\t\t\t// \t\tconsole.log(111);\r\n\t\t\t\t\t\t// \t\tsubmit[1].value = ''\r\n\t\t\t\t\t\t// \t\tsubmit[1].disabled = false\r\n\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t// \tconsole.log(submit);\r\n\t\t\t\t\t\t// } } \r\n\t\t\t\t\t\tonSubmit = { v => { // 还未完成\r\n\t\t\t\t\t\t\tconsole.log(v);\r\n\t\t\t\t\t\t\tconsole.log(submit);\r\n\t\t\t\t\t\t\tif (!v.pic_path) {\r\n\t\t\t\t\t\t\t\tv.pic_path = ''\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst param = { \r\n\t\t\t\t\t\t\t\t...v,\r\n\t\t\t\t\t\t\t\tid: data1.uuid,\r\n\t\t\t\t\t\t\t\told_spec_code: data1.old_spec_code\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$http.submit(null, 'bill/salesmanabnormal', { param }).then(data => {\r\n\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('保存成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal1.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal1.close() }\r\n\t\t\t\t\t\tinit    = { form => this.formSubmit = form }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal2' title='账单信息' width={1000} noFooter>\r\n\t\t\t\t\t<BillInfo className='fv rel ex xplr' specCode = { specCode || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\My-lowerLevel-salesman.js",["2172","2173","2174","2175","2176","2177","2178","2179","2180"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t}\r\n\toptions = [\r\n\t\t{ label: \"在职\", value: 1 },\r\n\t\t{ label: \"离职\", value: -1 }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'创建时间', name:'date', type:'date-range',\tnames:['start_at','end_at'] },\r\n    ]\r\n\tmodel = {\r\n\t\tstart_date: \"\",\r\n        end_date: \"\"\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\t\r\n\t\tthis.fetch()\r\n\t}\r\n\r\n\tfetch = param => $fn.fetch.call(this,'bs-salesman/lowerSalesman', param)\r\n\tcols = [\r\n\t\t{ title: '序号', \t\tfield: 'id', \t\t\twidth:60 },\r\n\t\t{ title: '员工编码', \tfield: 'empl_name', \twidth:120 },\r\n        { title: '创建时间', \tfield: 'created_at', \twidth:120 },\r\n\t\t{ title: '真实姓名', \tfield: 'real_name', \twidth:80 },\r\n\t\t{ title: '年龄', \t\tfield: 'age', \t\t\twidth:80 },\r\n\t\t{ title: '籍贯', \t\tfield: 'address', \t\twidth:120 },\r\n        { title: '最高学历', \tfield: 'education', \twidth:120 },\r\n\t\t{ title: '手机号', \t\tfield: 'phone', \t\twidth:120 },\r\n\t\t{ title: '所属区域', \tfield: 'region_name', \twidth:120 },\r\n\t\t{ title: '在职状态', \tfield: 'status',\t\twidth:120,  \r\n\t\t\trender: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options, rows.status, 'label', 'value')\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='我的下级业务员' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\My-finance-bill.js",["2181","2182"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\nconst OperationRecord = $async(()=>import('./child/operation-record'))\r\nconst BillInfo = $async(()=>import('../../finance/finance-page/finance-list/bill-info'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tsspecCode: '',\r\n\t}\r\n\tstatusList = []\r\n\tmodel ={\r\n\t\thosp_id: \"\",\r\n\t\tstatus: \"\",\r\n\t\tstart_at: \"\",\r\n\t\tend_at: \"\",\r\n\t\tspec_code: \"\",\r\n\t\tbill_phase_id: [],\r\n\t\tregion_id: \"\",\r\n\t\tpatient_name: \"\",\r\n\t\titem_name: \"\",\r\n\t\tshow_del:\"\",\r\n\t\ttype: \"my\"\r\n\t}\r\n\toptions = [\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"冲抵\", value: \"2\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'账期',\t\t\tname:'summary_sn',\ttype:'select', \tdata:[] },\r\n        { label:'条码号',\t\tname:'spec_code',\t},\r\n        { label:'接收标本日期',\tname:'date', \t\ttype:'date-range',names:['start_at','end_at'] },\r\n        { label:'账单状态',\t\tname:'status',\t\ttype:'select', \tdata:[] },\r\n        { label:'区域',\t\t\tname:'region_id',\ttype:'select', \tdata:[] },\r\n        { label:'医院名称',\t\tname:'hosp_id',\t\ttype:'select', \tdata:[] },\r\n        { label:'病人姓名',\t\tname:'patient_name',},\r\n        { label:'项目名称',\t\tname:'item_name',\t},\r\n        { label:'显示作废账单',\ttype:'checkbox', },\r\n\t]\r\n\tasync getDataAsync() { // 账单状态\r\n\t\tawait $fn.getDisItem({\r\n\t\t\tcode: 45300,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\t// this.statusList = data\r\n\t\t\t\tthis.forms[3].data = data\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('bill-summary-select-data').then(local => { // 账期\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[0].data = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bill-summary/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\tthis.forms[0].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bill-summary-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.bsareaSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 客户名称\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[5].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[5].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.getDataAsync()\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\r\n\tfetch = param => $fn.fetch.call(this,'bill/salesmanauditlists', param)\r\n\tcols = [\r\n\t\t{ title: '账单编号', \t\tfield: 'order_sn', \t\t\twidth:120 },\r\n        { title: '条码号', \t\t\tfield: 'old_spec_code', \twidth:120, render: ({text,rows})=> <span onDoubleClick={()=>{\r\n\t\t\tthis.setState({specCode: text})\r\n\t\t\tthis.refs.modal1.open()\r\n\t\t}}>{text}</span> },\r\n\t\t{ title: '接收标本日期', \tfield: 'receive_at', \t\twidth:120 },\r\n\t\t{ title: '开票单位', \t\tfield: 'organization_name', width:120 },\r\n\t\t{ title: '开票单位编码', \tfield: 'organization_code', width:120 },\r\n        { title: '姓名', \t\t\tfield: 'patient_name', \t\twidth:100 },\r\n\t\t{ title: '性别', \t\t\tfield: 'sex_name', \t\t\twidth:80 },\r\n\t\t{ title: '年龄', \t\t\tfield: 'age', \t\t\t\twidth:60 },\r\n\t\t{ title: '所属医生', \t\tfield: 'doctor',\t\t\twidth:120 },\r\n\t\t{ title: '业务员名称', \t\tfield: 'salesman_user', \twidth:120 },\r\n        { title: '账期', \t\t\tfield: 'phase_str', \t\twidth:120 },\r\n\t\t{ title: '自然项目', \t\tfield: 'parent_kind_name', \twidth:120 },\r\n\t\t{ title: '账单类型', \t\tfield: 'pay_type',\t\t\twidth:120,  \r\n\t\t\trender: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options, rows.pay_type, 'label', 'value')\r\n\t\t} },\r\n\t\t{ title: '医院名称', \t\tfield: 'hosp_name', \t\twidth:120 },\r\n        { title: '项目名称', \t\tfield: 'kind_name', \t\twidth:120 },\r\n\t\t{ title: '标准价格', \t\tfield: 'sprice', \t\t\twidth:120 },\r\n\t\t{ title: '实际价格', \t\tfield: 'price', \t\t\twidth:120 },\r\n\t\t{ title: '折扣率', \t\t\tfield: 'percent',\t\t\twidth:120 },\r\n\t\t{ title: '折扣金额', \t\tfield: 'perprice', \t\t\twidth:120,  },\r\n\t\t{ title: '帐单生成时间', \tfield: 'created_at', \t\twidth:120,  },\r\n\t\t{ title: '账单状态', \t\tfield: 'status', \t\t\twidth:120,  },\r\n\t\t{ title: '备注', \t\t\tfield: 'attribute_name', \twidth:120,  },\r\n\t\t{ title: '操作', \t\t\twidth:120, \trender:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='查看操作记录' ghost onClick={()=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'导出', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否导出我的财务账单?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\t$http.submit(null,'bill/salesmanauditlists', { param: { export: 1, ...this.model} } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('导出成功'))\r\n\t\t\t\t\t\t\t\twindow.location.href = data.url;\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, specCode } = this.state\r\n\t\tconsole.log(data)\r\n\t\treturn (\r\n\t\t\t<Page title='我的财务账单' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Modal ref='modal' title='查看操作记录' width={1000} noFooter>\r\n\t\t\t\t\t<OperationRecord model={this.model} rowdata={ data1 || [] } />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal1' title='账单信息' width={1000} noFooter>\r\n\t\t\t\t\t<BillInfo className='fv rel ex xplr' specCode = { specCode || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\My-hospital-clients.js",["2183","2184","2185","2186","2187","2188","2189","2190"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\nconst Button = $async(()=>import('@antd/button'))\r\n\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t}\r\n\toptions = [\r\n\t\t{ label: \"未审核\", \t\tvalue: \"0\" },\r\n\t\t{ label: \"审核通过\", \tvalue: \"1\" },\r\n\t\t{ label: \"审核未通过\", \tvalue: \"-1\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'医院名称',\t\tname:'hosp_name', },\r\n        { label:'医院性质',\t\tname:'nature',\t\ttype:'select', \tdata: [] },\r\n        { label:'医院代码',\t\tname:'hosp_code',\t },\r\n        { label:'医院级别',\t\tname:'level',\t\ttype:'select', \tdata: [] },\r\n\t\t{ label:'区域',\t\t\tname:'region',\t\ttype:'select', \tdata: [] },\r\n\t]\r\n\tmodel = {\r\n\t\ttype: \"my\", //type为区分自己还是下级，my：我的，sub：我的下级\r\n\t}\r\n\tasync getDataAsync() {\r\n\t\tawait $fn.getDisItem({ // 医院级别\r\n\t\t\tcode: 39000,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tthis.forms[3].data = data\r\n\t\t\t}\r\n\t\t})\r\n\t\tawait $fn.getDisItem({ // 医院性质\r\n\t\t\tcode: 44100,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tthis.forms[1].data = data\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.bsareaSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.pull(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.getDataAsync()\r\n\t\tthis.fetch()\r\n\t}\r\n\r\n\tfetch = param => $fn.fetch.call(this,'bs-hospital/businessHosp', param)\r\n\tcols = [\r\n\t\t{ title: '医院代码', \tfield: 'hosp_code', \twidth:120 },\r\n        { title: '医院名称', \tfield: 'hosp_name', \twidth:120 },\r\n\t\t{ title: '医院性质', \tfield: 'nature_name', \twidth:120 },\r\n\t\t{ title: '医院级别', \tfield: 'level_name', \twidth:120 },\r\n\t\t{ title: '业务员名称', \tfield: 'salesman_user', width:120 },\r\n        { title: '创建时间', \tfield: 'create_at', \twidth:120 },\r\n\t\t{ title: '状态', \t\tfield: 'enabled', \t\twidth:120,\r\n\t\t\trender: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options, rows.enabled, 'label', 'value')\r\n\t\t} },\r\n\t\t{ title: '操作', \t\tfield: 'status', \t\twidth:120, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n                    <Button label='查看' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/LowerLevel-hospital-clients/add?id='+rows.uuid+'&isEdit=0')\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<Button label='编辑' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/LowerLevel-hospital-clients/add?id='+rows.uuid+'&isEdit=1')\r\n                    }} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='我的医院客户' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\My-contract-manage.js",["2191","2192","2193","2194","2195"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tsubmit: [\r\n            { label: '合同编号',\tname: 'code',\t\t\t\tdisabled: true, },\r\n\t\t\t{ label: '合同名称',\tname: 'name',\t\t\t\tdisabled: true, },\r\n\t\t\t{ label: '折扣率',\t\tname: 'discount_rate' },\r\n\t\t\t{ label: '延期时间',\tname: 'delay' },\r\n\t\t\t{ label: '新生效时间',\tname: 'sign_at', \t\t\ttype:'date-time',},\r\n            { label: '新到期时间',\tname: 'contract_validity',\ttype:'date-time',},\r\n\t\t],\r\n\t}\r\n\tcontractOptions = [\r\n        { label: \"全部\", \tvalue: \"\" },\r\n        { label: \"草稿\", \tvalue: \"0\" },\r\n        { label: \"正常\", \tvalue: \"1\" },\r\n        { label: \"已过期\", \tvalue: \"2\" }\r\n\t]\r\n\tenabledOptions = [\r\n        { label: \"全部\", value: \"\" },\r\n        { label: \"待审核\", value: \"0\" },\r\n        { label: \"审核成功\", value: \"1\" }\r\n\t]\r\n\tdelayOptions = [\r\n        {label: '7天内', value: '7'},\r\n        {label: '15天内', value: '15'},\r\n        {label: '1个月内', value: '31'}\r\n    ]\r\n\toptions = [\r\n\t\t{ label: \"草稿\", value: \"0\" },\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"已过期\", value: \"2\" }\r\n\t]\r\n\toptions1 = [\r\n\t\t{ label: \"待审核\", value: \"0\" },\r\n\t\t{ label: \"审核成功\", value: \"1\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'合同编号',\t\tname:'code',},\r\n        { label:'合同名称',\t\tname:'name',},\r\n        { label:'客户名称',\t\tname:'hosp_id',\t\ttype:'select', \t\tdata:[] },\r\n\t\t{ label:'到期时间', \tname:'date', \t\ttype:'date-range',\tnames:['start_at','end_at'] },\r\n        { label:'合同失效',\t\tname:'invalid',\t\ttype:'select', \t\tdata: this.delayOptions, \tnameStr:'label', idStr:'value' },\r\n        { label:'合同状态',\t\tname:'status',\t\ttype:'select', \t\tdata: this.contractOptions, nameStr:'label', idStr:'value' },\r\n\t\t{ label:'审核状态',\t\tname:'enabled',\t\ttype:'select', \t\tdata: this.enabledOptions, \tnameStr:'label', idStr:'value' },\r\n\t]\r\n\tmodel = {\r\n\t\ttype: \"my\", //type为区分自己还是下级，my：我的，sub：我的下级\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.pull(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 客户名称\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'bs-contract/business', param)\r\n\tcols = [\r\n\t\t{ title: '合同编号', \tfield: 'code', \t\t\twidth:120 },\r\n        { title: '合同名称', \tfield: 'name', \t\t\twidth:120 },\r\n        { title: '客户名称', \tfield: 'hosp_name', \twidth:120 },\r\n\t\t{ title: '业务员名称', \tfield: 'salesman_user', width:120 },\r\n\t\t{ title: '生效时间', \tfield: 'sign_at', \t\twidth:120 },\r\n\t\t{ title: '到期时间', \tfield: 'contract_validity',width:120 },\r\n        { title: '延期时间(月)',field: 'delay', \t\twidth:120 },\r\n\t\t{ title: '合同状态', \tfield: 'status', \t\twidth:120, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options, rows.status, 'label', 'value')\r\n        } },\r\n\t\t{ title: '审核状态', \tfield: 'enabled', \t\twidth:120, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options1, rows.enabled, 'label', 'value')\r\n        } },\r\n\t\t{ title: '创建人（系统）',field: 'empl_name',\twidth:120 },\r\n\t\t{ title: '操作', \t\talign:'tc', \t\t\twidth:300, render:({rows})=>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t\t<Button className='mr5' label='查看' ghost onClick={()=>{\r\n\t\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/contract-manage/edit?uuid=' + rows.uuid)\r\n\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t<Button className='mr5' label='编辑' ghost onClick={()=>{\r\n\t\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/contract-manage/edit?uuid=' + rows.uuid)\r\n\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t<Button className='mr5' label='续签' ghost onClick={()=>{\r\n\t\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t\t$fn.setSubmitValues(submit, rows, ()=>{this.setState({submit})})\r\n\t\t\t\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\t\t\t\tthis.uuid = rows.uuid\r\n\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t<Button label='合同签订记录' ghost onClick={()=>{\r\n\t\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/contract-manage/record?code=' + rows.code)\r\n\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='我的合同管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Modal ref='modal' title='续签' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit } = this.state;\r\n                        } } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const param = { ...v,uuid: this.uuid, }\r\n\t\t\t\t\t\t\t$http.submit(null, 'bs-contract/renew', { param }).then(data => {\r\n\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('续签成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\Modify-project-price.js",["2196","2197","2198","2199","2200"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdataObj: {},\r\n\t\tsubmit: [\r\n            { label: '项目',\t\tname: 'kind_id',\trequired:true, type: 'select', data: []\t},\r\n            { label: '医院',\t\tname: 'hosp_id', \ttype: 'select', data: [] },\r\n            { label: '时间范围',\tname: 'date',\t\ttype:'date-range', names:['start_time','end_time'] },\r\n            { label: '修改价格',\tname: 'price',\t\trequired:true,\t},\r\n\t\t],\r\n\t\tsubmit1: [\r\n            { label: '用户名',\t\tname: 'account',\trequired:true, },\r\n            { label: '密码',\t\tname: 'password', \trequired:true, type: 'password' },\r\n        ],\r\n\t\tmodifyPrice:'',\r\n\t\toldPrice: '',\r\n\t}\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tconst {submit} = this.state\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({ // 项目\r\n\t\t\t\tcache: f.default.specimenkindSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'specimen-kind/selectkind').then(data => {\r\n\t\t\t\t\t\t\tsubmit[0].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 医院\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit[1].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tsubmit[1].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { submit, submit1, modifyPrice, oldPrice, dataObj } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='修改项目价格'>\r\n\t\t\t\t<div className\t= 'xmt wf'>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\twidth\t\t= {400}\r\n\t\t\t\t\t\tdata \t\t= { submit }\r\n\t\t\t\t\t\tonChange    = {(v, press, { name, data }) => {\r\n\t\t\t\t\t\t\tconst { submit } = this.state;\r\n\t\t\t\t\t\t\tif (name === 'kind_id') {\r\n\t\t\t\t\t\t\t\tthis.setState({oldPrice: press.children})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (name === 'price') {\r\n\t\t\t\t\t\t\t\tthis.modifyPrice = v\r\n\t\t\t\t\t\t\t\tthis.setState({modifyPrice: v})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} } \r\n\t\t\t\t\t\tonSubmit \t= { v => {\r\n\t\t\t\t\t\t\tconst kindName = ''\r\n\t\t\t\t\t\t\tconst param = {\r\n\t\t\t\t\t\t\t\tkindName: oldPrice,\r\n\t\t\t\t\t\t\t\thosp_id: v.hosp_id,\r\n\t\t\t\t\t\t\t\tstart_time: v.date.start,\r\n\t\t\t\t\t\t\t\tend_time: v.date.end,\r\n\t\t\t\t\t\t\t\tkind_id: v.kind_id,\r\n\t\t\t\t\t\t\t\tprice: v.price,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.setState({dataObj:param})\r\n\t\t\t\t\t\t\t$http.submit(null, 'bill/getModifyBillCount', { param }).then(data =>{\r\n\t\t\t\t\t\t\t\tthis.setState({oldPrice:data.billCount})\r\n\t\t\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tinit    \t= { form => this.formSubmit = form }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='ml30 mt10'>\r\n\t\t\t\t\t\t<div className='tc mr5' style={{color:'#fff',borderRadius:'50%',backgroundColor:'red',height: '12px',width: '12px',\r\n\t\t\t\t\t\tdisplay:'inline-block',lineHeight:'12px'}}>?</div>\r\n\t\t\t\t\t\t修改后，该项目的价格将会统一修改为 {modifyPrice}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal ref='modal' title='提示' width={648} noFooter>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t<div className='tc mr5' style={{color:'#fff',borderRadius:'50%',backgroundColor:'#E6A23C',height: '20px',width: '20px',\r\n\t\t\t\t\t\tdisplay:'inline-block',lineHeight:'20px'}}>!</div>\r\n\t\t\t\t\t是否将 的价格修改为 {modifyPrice} 元？本次操作影响的主条码数为{oldPrice}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t\t<Button label='取消' size='small' className='dkm ml30 mt10' onClick={()=>{ this.refs.modal.close() } } />\r\n\t\t\t\t\t\t<Button label='确定' size='small' className='dkm ml30 mt10' onClick={()=> {\r\n\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t\t} } />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal1' title='提示' width={400} noFooter>\r\n\t\t\t\t\t<div className='tc mb15'>\r\n\t\t\t\t\t\t<div className='tc mr5' style={{color:'#fff',borderRadius:'50%',backgroundColor:'red',height: '12px',width: '12px',\r\n\t\t\t\t\t\tdisplay:'inline-block',lineHeight:'12px'}}>!</div>\r\n\t\t\t\t\t\t请输入用户名和密码进行确认\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit1 }\r\n\t\t\t\t\t\tonChange    = {(v, press, { name, data }) => { } } \r\n\t\t\t\t\t\tonSubmit = { v => { \r\n\t\t\t\t\t\t\tconst param={\r\n\t\t\t\t\t\t\t\t...dataObj,\r\n\t\t\t\t\t\t\t\taccount: v.account,\r\n\t\t\t\t\t\t\t\tpassword: v.password\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$http.submit(null, 'bill/modifyBill', { param }).then(data => {\r\n\t\t\t\t\t\t\t\tthis.refs.modal1.close()\r\n\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('更换成功'))\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t }}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal1.close() }\r\n\t\t\t\t\t\tinit    = { form => this.formSubmit = form }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\LowerLevel-hospital-clients.js",["2201","2202","2203","2204","2205","2206","2207","2208"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\nconst Button = $async(()=>import('@antd/button'))\r\n\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tsubmit: [\r\n            { label: '原因',\tname: 'reason',\t\tdisabled: true },\r\n            { label: '图片',\tname: 'img' },\r\n        ]\r\n\t}\r\n\toptions = [\r\n\t\t{ label: \"未审核\", \t\tvalue: \"0\" },\r\n\t\t{ label: \"审核通过\", \tvalue: \"1\" },\r\n\t\t{ label: \"审核未通过\", \tvalue: \"-1\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'医院名称',\t\tname:'hosp_name', },\r\n        { label:'医院性质',\t\tname:'nature',\t\ttype:'select', \tdata: [] },\r\n        { label:'医院代码',\t\tname:'hosp_code',\t },\r\n        { label:'医院级别',\t\tname:'level',\t\ttype:'select', \tdata: [] },\r\n\t\t{ label:'区域',\t\t\tname:'region',\t\ttype:'select', \tdata: [] },\r\n\t]\r\n\tmodel = {\r\n\t\ttype: \"sub\", //type为区分自己还是下级，my：我的，sub：我的下级\r\n\t}\r\n\tasync getDataAsync() {\r\n\t\tawait $fn.getDisItem({ // 医院级别\r\n\t\t\tcode: 39000,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tthis.forms[3].data = data\r\n\t\t\t}\r\n\t\t})\r\n\t\tawait $fn.getDisItem({ // 医院性质\r\n\t\t\tcode: 44100,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tthis.forms[1].data = data\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.bsareaSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.pull(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.getDataAsync()\r\n\t\tthis.fetch()\r\n\t}\r\n\r\n\tfetch = param => $fn.fetch.call(this,'bs-hospital/businessHosp', param)\r\n\tcols = [\r\n\t\t{ title: '医院代码', \tfield: 'hosp_code', \twidth:120 },\r\n        { title: '医院名称', \tfield: 'hosp_name', \twidth:120 },\r\n\t\t{ title: '医院性质', \tfield: 'nature_name', \twidth:120 },\r\n\t\t{ title: '医院级别', \tfield: 'level_name', \twidth:120 },\r\n\t\t{ title: '业务员名称', \tfield: 'salesman_user', width:120 },\r\n        { title: '创建时间', \tfield: 'create_at', \twidth:120 },\r\n\t\t{ title: '状态', \t\tfield: 'enabled', \t\twidth:120,\r\n\t\t\trender: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options, rows.enabled, 'label', 'value')\r\n\t\t} },\r\n\t\t{ title: '操作', \t\tfield: 'status', \t\twidth:120, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='查看' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/LowerLevel-hospital-clients/add?id='+rows.uuid+'&isEdit=0')\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<Button label='编辑' ghost className='ml15' onClick={() => {\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/LowerLevel-hospital-clients/add?id='+rows.uuid+'&isEdit=1')\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} },\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\tgetChildrenMsg = (result, msg) => {\r\n\t\tif (msg.uuid) {\r\n\t\t\t$http.submit(null,'bill/viewpic', { param: { uuid: msg.uuid } } ).then(data=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].reason = data.reason\r\n\t\t\t\tsubmit[1].img\t = data.img\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t})\r\n\t\t}\r\n    }\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='下级医院客户' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\LowerLevel-finance-bill.js",["2209","2210"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\nconst OperationRecord = $async(()=>import('./child/operation-record'))\r\nconst BillInfo = $async(()=>import('../../finance/finance-page/finance-list/bill-info'))\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tsspecCode: '',\r\n\t}\r\n\tstatusList = []\r\n\tmodel ={\r\n\t\thosp_id: \"\",\r\n\t\tstatus: \"\",\r\n\t\tstart_at: \"\",\r\n\t\tend_at: \"\",\r\n\t\tspec_code: \"\",\r\n\t\tbill_phase_id: [],\r\n\t\tregion_id: \"\",\r\n\t\tpatient_name: \"\",\r\n\t\titem_name: \"\",\r\n\t\tshow_del:\"\",\r\n\t\ttype: \"sub\"\r\n\t}\r\n\toptions = [\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"冲抵\", value: \"2\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'账期',\t\t\tname:'summary_sn',\ttype:'select', \tdata:[] },\r\n        { label:'条码号',\t\tname:'spec_code',\t},\r\n        { label:'接收标本日期',\tname:'date', \t\ttype:'date-range',names:['start_at','end_at'] },\r\n        { label:'账单状态',\t\tname:'status',\t\ttype:'select', \tdata:[] },\r\n        { label:'区域',\t\t\tname:'region_id',\ttype:'select', \tdata:[] },\r\n        { label:'医院名称',\t\tname:'hosp_id',\t\ttype:'select', \tdata:[] },\r\n        { label:'病人姓名',\t\tname:'patient_name',},\r\n        { label:'项目名称',\t\tname:'item_name',\t},\r\n\t]\r\n\tasync getDataAsync() { // 账单状态\r\n\t\tawait $fn.getDisItem({\r\n\t\t\tcode: 45300,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tthis.forms[3].data = data\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\t$fn.dataSave('bill-summary-select-data').then(local => { // 账期\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t\tthis.forms[0].data = local\r\n\t\t\t}else{\r\n\t\t\t\t$http.pull(null,'bill-summary/select', {dataName:null}).then(data=>{\r\n\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\tthis.forms[0].data = data.items\r\n\t\t\t\t\t$fn.dataSave('bill-summary-select-data', data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.bsareaSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-area/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[4].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 客户名称\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[5].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[5].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.getDataAsync()\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\r\n\tfetch = param => $fn.fetch.call(this,'bill/salesmanauditlists', param)\r\n\tcols = [\r\n\t\t{ title: '账单编号', \t\tfield: 'order_sn', \t\t\twidth:120 },\r\n        { title: '条码号', \t\t\tfield: 'old_spec_code', \twidth:120, render: ({text,rows})=> <span onDoubleClick={()=>{\r\n\t\t\tthis.setState({specCode: text})\r\n\t\t\tthis.refs.modal1.open()\r\n\t\t}}>{text}</span> },\r\n\t\t{ title: '接收标本日期', \tfield: 'receive_at', \t\twidth:120 },\r\n\t\t{ title: '开票单位', \t\tfield: 'organization_name', width:120 },\r\n\t\t{ title: '开票单位编码', \tfield: 'organization_code', width:120 },\r\n        { title: '姓名', \t\t\tfield: 'patient_name', \t\twidth:100 },\r\n\t\t{ title: '性别', \t\t\tfield: 'sex_name', \t\t\twidth:80 },\r\n\t\t{ title: '年龄', \t\t\tfield: 'age', \t\t\t\twidth:60 },\r\n\t\t{ title: '所属医生', \t\tfield: 'doctor',\t\t\twidth:120 },\r\n\t\t{ title: '业务员名称', \t\tfield: 'salesman_user', \twidth:120 },\r\n        { title: '账期', \t\t\tfield: 'phase_str', \t\twidth:120 },\r\n\t\t{ title: '自然项目', \t\tfield: 'parent_kind_name', \twidth:120 },\r\n\t\t{ title: '账单类型', \t\tfield: 'pay_type',\t\t\twidth:120,  \r\n\t\t\trender: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options, rows.pay_type, 'label', 'value')\r\n\t\t} },\r\n\t\t{ title: '医院名称', \t\tfield: 'hosp_name', \t\twidth:120 },\r\n        { title: '项目名称', \t\tfield: 'kind_name', \t\twidth:120 },\r\n\t\t{ title: '标准价格', \t\tfield: 'sprice', \t\t\twidth:120 },\r\n\t\t{ title: '实际价格', \t\tfield: 'price', \t\t\twidth:120 },\r\n\t\t{ title: '折扣率', \t\t\tfield: 'percent',\t\t\twidth:120 },\r\n\t\t{ title: '折扣金额', \t\tfield: 'perprice', \t\t\twidth:120,  },\r\n\t\t{ title: '帐单生成时间', \tfield: 'created_at', \t\twidth:120,  },\r\n\t\t{ title: '账单状态', \t\tfield: 'status', \t\t\twidth:120,  },\r\n\t\t{ title: '备注', \t\t\tfield: 'attribute_name', \twidth:120,  },\r\n\t\t{ title: '操作', \t\t\twidth:120, \trender:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='查看操作记录' ghost onClick={()=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'导出', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否导出下级财务账单?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\t$http.submit(null,'bill/salesmanauditlists', { param: { export: 1, ...this.model} } ).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('导出成功'))\r\n\t\t\t\t\t\t\t\twindow.location.href = data.url;\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, specCode } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='下级财务账单' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Modal ref='modal' title='查看操作记录' width={1000} noFooter>\r\n\t\t\t\t\t<OperationRecord model={this.model} rowdata={ data1 || [] } />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal1' title='账单信息' width={1000} noFooter>\r\n\t\t\t\t\t<BillInfo className='fv rel ex xplr' specCode = { specCode || '' } />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\business\\businessList\\LowerLevel-contract-manage.js",["2211","2212","2213","2214","2215"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== component\r\n\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdata1: {},\r\n\t\tsubmit: [\r\n            { label: '合同编号',\tname: 'code',\t\t\t\tdisabled: true, },\r\n\t\t\t{ label: '合同名称',\tname: 'name',\t\t\t\tdisabled: true, },\r\n\t\t\t{ label: '折扣率',\t\tname: 'discount_rate' },\r\n\t\t\t{ label: '延期时间',\tname: 'delay' },\r\n\t\t\t{ label: '新生效时间',\tname: 'sign_at', \t\t\ttype:'date-time',},\r\n            { label: '新到期时间',\tname: 'contract_validity',\ttype:'date-time',},\r\n\t\t],\r\n\t}\r\n\tcontractOptions = [\r\n        { label: \"全部\", \tvalue: \"\" },\r\n        { label: \"草稿\", \tvalue: \"0\" },\r\n        { label: \"正常\", \tvalue: \"1\" },\r\n        { label: \"已过期\", \tvalue: \"2\" }\r\n\t]\r\n\tenabledOptions = [\r\n        { label: \"全部\", value: \"\" },\r\n        { label: \"待审核\", value: \"0\" },\r\n        { label: \"审核成功\", value: \"1\" }\r\n\t]\r\n\tdelayOptions = [\r\n        {label: '7天内', value: '7'},\r\n        {label: '15天内', value: '15'},\r\n        {label: '1个月内', value: '31'}\r\n    ]\r\n\toptions = [\r\n\t\t{ label: \"草稿\", value: \"0\" },\r\n\t\t{ label: \"正常\", value: \"1\" },\r\n\t\t{ label: \"已过期\", value: \"2\" }\r\n\t]\r\n\toptions1 = [\r\n\t\t{ label: \"待审核\", value: \"0\" },\r\n\t\t{ label: \"审核成功\", value: \"1\" }\r\n\t]\r\n\tforms = [\r\n\t\t{ label:'合同编号',\t\tname:'code',},\r\n        { label:'合同名称',\t\tname:'name',},\r\n        { label:'客户名称',\t\tname:'hosp_id',\t\ttype:'select', \t\tdata:[] },\r\n\t\t{ label:'到期时间', \tname:'date1', \t\ttype:'date-range',\tnames:['start_at','end_at'] },\r\n        { label:'合同失效',\t\tname:'invalid',\t\ttype:'select', \t\tdata: this.delayOptions, \tnameStr:'label', idStr:'value' },\r\n        { label:'合同状态',\t\tname:'status',\t\ttype:'select', \t\tdata: this.contractOptions, nameStr:'label', idStr:'value' },\r\n\t\t{ label:'审核状态',\t\tname:'enabled',\t\ttype:'select', \t\tdata: this.enabledOptions, \tnameStr:'label', idStr:'value' },\r\n\t]\r\n\tmodel = {\r\n\t\ttype: \"sub\", //type为区分自己还是下级，my：我的，sub：我的下级\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tcacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t$fn.getCache({ // 区域\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$http.pull(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({ // 客户名称\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'bs-contract/business', param)\r\n\tcols = [\r\n\t\t{ title: '合同编号', \tfield: 'code', \t\t\twidth:120 },\r\n        { title: '合同名称', \tfield: 'name', \t\t\twidth:120 },\r\n        { title: '客户名称', \tfield: 'hosp_name', \twidth:120 },\r\n\t\t{ title: '业务员名称', \tfield: 'salesman_user', width:120 },\r\n\t\t{ title: '生效时间', \tfield: 'sign_at', \t\twidth:120 },\r\n\t\t{ title: '到期时间', \tfield: 'contract_validity',width:120 },\r\n        { title: '延期时间(月)', \tfield: 'delay', \twidth:120 },\r\n\t\t{ title: '合同状态', \tfield: 'status', \t\twidth:120, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options, rows.status, 'label', 'value')\r\n        }  },\r\n\t\t{ title: '审核状态', \tfield: 'enabled', \t\twidth:120, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect(this.options1, rows.enabled, 'label', 'value')\r\n        }  },\r\n\t\t{ title: '创建人（系统）',field: 'empl_name',\twidth:120 },\r\n\t\t{ title: '操作', \t\talign:'tc', \t\t\twidth:300, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr5' label='查看' ghost onClick={()=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/contract-manage/edit?uuid=' + rows.uuid + '&hideEdit=1')\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button className='mr5' label='编辑' ghost onClick={()=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/contract-manage/edit?uuid=' + rows.uuid + '&hideEdit=0')\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button className='mr5' label='续签' ghost onClick={()=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\t$fn.setSubmitValues(submit, rows, ()=>{this.setState({submit})})\r\n\t\t\t\t\t\tsubmit[4].value = ''\r\n\t\t\t\t\t\tsubmit[5].value = ''\r\n\t\t\t\t\t\tthis.uuid = rows.uuid\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button label='合同签订记录' ghost onClick={()=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'businessList/contract-manage/record?code=' + rows.code)\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn []\r\n\t}\r\n\trender(){\r\n\t\tconst { data, data1, pullLoading, pag, submit, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='下级合同管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) }\r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Modal ref='modal' title='续签' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange    = {(v, press, { name, data }) => {\r\n                            const { submit } = this.state;\r\n                        } } \r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const param = { ...v,uuid: this.uuid, }\r\n\t\t\t\t\t\t\t$http.submit(null, 'bs-contract/renew', { param }).then(data => {\r\n\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('续签成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.formSubmit = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t{/*<Modal ref='modal1' title='查看' width={648} noFooter>\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\t\tcols\t\t\t= { this.cols1 }\r\n\t\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\t\t// this.setState({data1:current})\r\n\t\t\t\t\t\t\t// this.setState({selectedKeys:current})\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</Modal>*/}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= {current => {\r\n\t\t\t\t\t\tthis.setState({data1:current})\r\n\t\t\t\t\t\tthis.setState({selectedKeys:current})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t// sort\r\n\t\t\t\t\tonSort\t\t\t= { v => $fn.onSort.call(this, v) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\single.js",[],"F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\subordinate.js",["2216","2217","2218","2219","2220"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\nimport SubordinateForm from './tp/subordinate-form'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container-scroll'))\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面常量\r\nconst isDefaultOption = [\r\n    { name: '是', value: '1' },\r\n    { name: '否', value: '0' },\r\n]\r\nconst convFieldOption = [\r\n    { name: '结果',\t\tvalue: 'result' },\r\n    { name: '报告结果',\tvalue: 'result1' },\r\n    { name: '结果2',\tvalue: 'result2' },\r\n    { name: '结果3',\tvalue: 'result3' },\r\n]\r\nexport default class extends React.Component{\r\n\tstate = {\r\n        data1:[],\r\n        data2: [],\r\n        data3: [],\r\n        data4: [],\r\n\t\tpag1: {},\r\n\t\tpag2: {},\r\n\t\tpag3: {},\r\n\t\tpag4: {},\r\n\t\tselectedKeys1:[],\r\n\t\tselectedKeys2:[],\r\n\t\tselectedKeys3:[],\r\n        selectedKeys4:[],\r\n        submit1: [\r\n            { label: '结果代码',\t\t\t\tname:'result_code',\t\t\tfull: true,\t\twidth: '100%'},\r\n            { label: '结果内容',\t\t\t\tname:'result_content',\t\tfull: true,\t\twidth: '100%',\ttype: 'textarea',},\r\n            { label: '结果内容(英文)',\t\t\tname:'en_result_content',\tfull: true,\t\twidth: '100%',\ttype: 'textarea',},\r\n            { label: '是否默认',\t\t\t\tname:'is_default',\t\t\tfull: true,\t\twidth: '100%',\ttype: 'textarea',},\r\n        ],\r\n        submit2: [\r\n            { label: '建议与解释代码',\t\t\tname:'sugg_code',\t\t\tfull: true,\t\twidth: '100%'},\r\n            { label: '建议与解释内容',\t\t\tname:'sugg_content',\t\tfull: true,\t\twidth: '100%',\ttype: 'textarea',},\r\n            { label: '建议与解释内容(英文)',\tname:'en_sugg_content',\t\tfull: true,\t\twidth: '100%',\ttype: 'textarea'},\r\n            { label: '是否默认',\t\t\t\tname:'is_default',\t\t\tfull: true,\t\twidth: '100%',\ttype: 'switch'},\r\n        ],\r\n        submit3: [\r\n            { label: '结果转换名称',\t\t\tname:'conv_name',\t\t\tfull: true,\t\twidth: '100%'},\r\n            { label: '转换条件',\t\t\t\tname:'conv_field',\t\t\ttype: 'select',\tdata: [],\t\tplaceholder: '转化数据'},\r\n            { label: '',\t\t\t\t\t\tname:'conv_condition',\t\ttype: 'select',\tdata: [],\t\tplaceholder: '转化规则'},\r\n            { label: '',\t\t\t\t\t\tname:'conv_val',\t\t\tplaceholder: '转化条件值'},\r\n            { label: '关联结果内容',\t\t\tname:'result_info_id',\t\ttype: 'select',\tdata: [],\t\tnameStr: 'result_content',\tidStr: 'uuid',\tfull: true,\twidth: '100%'},\r\n            { label: '关联建议解释',\t\t\tname:'result_sugg_id',\t\ttype: 'select',\tdata: [],\t\tnameStr: 'sugg_content',\tidStr: 'uuid',\tfull: true,\twidth: '100%'},\r\n        ],\r\n        submit4: [\r\n            { label: '结果代码',\t\t\t\tname:'result_code',\t\t\ttype: 'textarea',\tfull: true,\twidth: '100%'},\r\n            { label: '结果内容',\t\t\t\tname:'result_content',\t\ttype: 'textarea',\tfull: true,\twidth: '100%'},\r\n            { label: '结果内容(英文)',\t\t\tname:'en_result_content',\ttype: 'textarea',\tfull: true,\twidth: '100%'},\r\n            { label: '是否默认',\t\t\t\tname:'is_default',\t\t\ttype: 'switch',\t\tfull: true,\twidth: '100%'},\r\n        ],\r\n        projectData: [],\r\n        sexOption: [],\r\n        uuid: '',\r\n        forms: {}\r\n    }\r\n    kind_status = $fn.query('kind_status')\r\n    kind_id = $fn.query('id')\r\n    kind_rel_id = ''\r\n    model = {kind_id: this.kind_id, keyword: ''}\r\n\tcomponentDidMount(){\r\n        const { submit3 } = this.state\r\n        submit3[1].data = convFieldOption\r\n        $fn.getDisItem({\r\n            code: 45700,\r\n            callback: data=>{\r\n                this.setState({sexOption: data})\r\n            }\r\n        })\r\n        $fn.getDisItem({\r\n            code: 1300,\r\n            callback: data=>{\r\n                submit3[2].data = data\r\n            }\r\n        })\r\n        // this.getResultSelect()\r\n        this.getProjectInfo({uuid: this.kind_id})\r\n        this.getResultInfo() // 报告结果字典\r\n        this.getResultSuggestion() // 建议与解释\r\n        this.getResultConvRule() // 结果转换规则\r\n        this.getReferenceRange() // 参考范围\r\n    }\r\n    getResultSelect() {\r\n        const { submit3 } = this.state\r\n        // 关联结果内容\r\n        $http.submit(null, 'report-result-info/select', { param: {kind_id: this.kind_id} }).then(data=>{\r\n            submit3[4].data = data\r\n        })\r\n        // 关联建议解释\r\n        $http.submit(null, 'report-result-suggestion/select', { param: {kind_id: this.kind_id} }).then(data=>{\r\n            submit3[5].data = data\r\n        })\r\n    }\r\n    // 报告结果字典\r\n    getResultInfo() {\r\n        this.fetch(this.model, 'report-result-info/index', 'pag1', data=>{\r\n            this.setState({data1: data})\r\n        })\r\n    }\r\n    // 建议与解释\r\n    getResultSuggestion() {\r\n        this.fetch(this.model, 'report-result-suggestion/index', 'pag2', data=>{\r\n            this.setState({data2: data})\r\n        })\r\n    }\r\n    // 结果转换规则\r\n    getResultConvRule() {\r\n        this.fetch(this.model, 'result-conv-rule/index', 'pag3', data=>{\r\n            this.setState({data3: data})\r\n        })\r\n    }\r\n    // 参考范围\r\n    getReferenceRange() {\r\n        $http.pull(null, 'kd-reference-range/index', { param: {...this.model} }).then(data=>{\r\n            this.setState({data4: data.items || []})\r\n        })\r\n    }\r\n    // 获取项目信息\r\n    getProjectInfo(param) {\r\n        $http.submit(null, 'kd-subordinate-set/info', { param }).then(data=>{\r\n            console.log(data, 'data')\r\n            this.setState({forms: data})\r\n            \r\n        })\r\n    }\r\n    // 设置表单参数\r\n    setFormParams = () => {\r\n        const { form } = this.refs.formInfo\r\n\t\tconst param = form && form.getFieldsValue()\r\n        for (let i in param) {\r\n            if (param[i] === undefined) {\r\n                param[i] = ''\r\n            }\r\n        }\r\n        return param\r\n    }\r\n    // 保存\r\n    saveData(val) {\r\n        const param = this.setFormParams()\r\n        param.result_formula = $fn.handleSymbol(param.result_formula)\r\n        if (val) {\r\n            param[val] = 1;\r\n\t\t}\r\n\t\tconsole.log(param)\r\n        // $http.submit(null, 'kd-subordinate-set/edit', { param }).then(data=>{\r\n        //     message.then(f => f.default.success('操作成功'))\r\n        // })\r\n    }\r\n    // paging\r\n    fetch = (param, api, pag, cb) => {\r\n        $http.paging(this,api,{ param:{...param, ...this.model }, loading:false, pag: pag, callback: data=>{\r\n            const result = data.items || data\r\n            this.setState({data: result})\r\n            cb&&cb(result)\r\n\t\t} } )\r\n    }\r\n\t// table - 报告结果字典\r\n\tcols1 = [\r\n        { type: 'checkbox',\t\t\twidth: 40 },\r\n\t\t{ title: '是否默认',\t\tfield: 'is_default',\t\t\twidth: 120, render: ({rows})=>{\r\n            let d = isDefaultOption.filter(i => i.value === rows.is_default)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '结果内容',\t\tfield: 'result_content',\t\twidth: 120},\r\n\t\t{ title: '结果内容(英文)',\tfield: 'en_result_content',\t\twidth: 120},\r\n\t\t{ title: '结果代码',\t\tfield: 'result_code',\t\t\twidth: 120},\r\n    ]\r\n    // table - 建议与解释\r\n    cols2 = [\r\n        { type: 'checkbox',\t\t\twidth: 40 },\r\n\t\t{ title: '是否默认',\t\tfield: 'is_default',\t\t\twidth: 120, render: ({rows})=>{\r\n            let d = isDefaultOption.filter(i => i.value === rows.is_default)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '建议与解释代码',\tfield: 'sugg_code',\t\t\t\twidth: 120},\r\n\t\t{ title: '建议与解释内容(英文)',        field: 'en_sugg_content',\t\twidth: 120},\r\n    ]\r\n    // table - 结果转换规则\r\n    cols3 = [\r\n        { type: 'checkbox',\t\t\twidth: 40 },\r\n\t\t{ title: '转换数据',\t\tfield: 'conv_field',\t\t\twidth: 120, render: ({rows})=>{\r\n            let d = convFieldOption.filter(i => i.value === rows.conv_field)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '转换符号',\t\tfield: 'conv_condition',\t\twidth: 120},\r\n\t\t{ title: '转换值',\t\t\tfield: 'conv_val',\t\t\t\twidth: 120},\r\n\t\t{ title: '关联结果内容',\tfield: 'result_content',\t\twidth: 120},\r\n\t\t{ title: '关联建议解释',\tfield: 'sugg_content',\t\t\twidth: 120},\r\n    ]\r\n    // table - 参考范围\r\n    cols4 = [\r\n        { type: 'checkbox',\t\t\t\twidth: 40 },\r\n\t\t{ title: '参考值代码',\t\t\tfield: 'reference_code',\twidth: 120},\r\n\t\t{ title: '参考别名名称',\t\tfield: 'ref_type_name',\t\twidth: 120},\r\n        { title: '参考别名名称(英文)',\tfield: 'en_ref_type_name',\twidth: 120},\r\n        { title: '性别',\t\t\t\tfield: 'sex',\t\t\t\twidth: 120, render: ({rows})=>{\r\n            let d = this.state.sexOption.filter(i => i.value === rows.sex)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '年龄值(低)',\t\t\tfield: 'age_min_val',\t\twidth: 120},\r\n\t\t{ title: '年龄值(高)',\t\t\tfield: 'age_max_val',\t\twidth: 120},\r\n\t\t{ title: '年龄单位',\t\t\tfield: 'age_unit_name',\t\twidth: 120},\r\n\t\t{ title: '危急值(低)',\t\t\tfield: 'crisis_min_val',\twidth: 120},\r\n\t\t{ title: '危急值(高)',\t\t\tfield: 'crisis_max_val',\twidth: 120},\r\n\t\t{ title: '参考值(低)',\t\t\tfield: 'reference_min_val',\twidth: 120},\r\n\t\t{ title: '参考值(高)',\t\t\tfield: 'reference_max_val',\twidth: 120},\r\n\t\t{ title: '参考值描述',\t\t\tfield: 'description',\t\twidth: 120},\r\n\t\t{ title: '参考值描述(英)',\t\tfield: 'description_en',\twidth: 120},\r\n    ]\r\n    \r\n\tButtonGroup = () => {\r\n\t\tconst arr = [\r\n\t\t\t{ label:'保存', onClick:()=>{\r\n                this.saveData()\r\n\t\t\t} },\r\n\t\t\t{ label:'审批', onClick:()=>{\r\n\t\t\t\t$http.submit(null, 'kd-subordinate-set/audit', { param: {uuid: this.kind_id} }).then(data=>{\r\n                    message.then(f => f.default.success('审批成功'))\r\n                })\r\n\t\t\t} },\r\n\t\t\t{ label:'保存并提交审批', onClick:()=>{\r\n\t\t\t\tthis.saveData('audit')\r\n\t\t\t} },\r\n\t\t\t{ label:'发布', onClick:()=>{\r\n\t\t\t\t$http.submit(null, 'kd-subordinate-set/push', { param: {uuid: this.kind_id} }).then(data=>{\r\n                    message.then(f => f.default.success('发布成功'))\r\n                    $fn.push(this, $fn.getRoot().root + `system-settings/project-settings`)\r\n                })\r\n\t\t\t} },\r\n\t\t\t{ label:'取消', ghost: true, onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t} },\r\n        ]\r\n        const arr1 = [\r\n\t\t\t{ label:'下架', onClick:()=>{\r\n\t\t\t\t$http.submit(null, 'kind-info/off', { param: {kind_id: this.kind_id} }).then(data=>{\r\n                    message.then(f => f.default.success('下架成功'))\r\n                    $fn.push(this, $fn.getRoot().root + `system-settings/project-settings/subordinate?id=${this.kind_id}&kind_status=0`)\r\n                })\r\n            } },\r\n            { label:'返回', ghost: true, onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t} },\r\n        ]\r\n\t\treturn this.kind_status === '0' || this.kind_status === '1' ? arr : arr1\r\n\t}\r\n\trender(){\r\n        const { data1, data2, data3, data4, pullLoading, pag1, pag2, pag3, pag4, forms, submit1, submit2, submit3, submit4 } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='新增从属项目' ButtonGroup={this.ButtonGroup()}>\r\n                <SubordinateForm\r\n                    ref='formInfo'\r\n                    className='fx-int'\r\n                    info={forms}\r\n                />\r\n\t\t\t\t{/* 表格 */}\r\n                <div className='fx'>\r\n                    <div className='ex fv mr15'>\r\n                        <div className='fxmj'>\r\n                            <h6 className=\"xmlr h40 b\">报告结果字典</h6>\r\n                            <div className='fxm'>\r\n                                <Button label='添加' ghost={true} size='small' className='mr15 dkm' onClick={() => {\r\n                                    this.refs.modal1.open()\r\n                                    submit1.forEach(item => {\r\n                                        item.value = ''\r\n                                    })\r\n                                    this.isEdit1 = false\r\n                                    this.setState({ submit1 })\r\n                                }} />\r\n                                <Button label='编辑' disabled={!this.rows1} ghost={true} size='small' className='mr15 dkm' onClick={() => {\r\n                                    $http.submit(null,'report-result-info/info',{ param:{uuid: this.rows1.uuid} }).then(data=>{\r\n                                        this.refs.modal1.open()\r\n                                        data.is_default = data.is_default == '1' ? true : false\r\n                                        this.rows1 = data\r\n                                        this.isEdit1 = true\r\n                                        $fn.setSubmitValues(submit1, data, ()=>{this.setState({submit1})})\r\n                                    })\r\n                                }} />\r\n                                <Button label='删除' ghost={true} disabled={!this.state.selectedKeys1.length} size='small' className='mr15 dkm' onClick={() => {\r\n                                    const param = {uuid: this.state.selectedKeys1.map(v=>v.uuid)} \r\n                                    coms.interfaceConfirm('report-result-info/del', '删除', param, () => {\r\n                                        this.getResultInfo()\r\n                                        this.setState({selectedKeys1: []})\r\n                                        this.rows1 = null\r\n                                        this.getResultSelect()\r\n                                    })\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        <Table\r\n                            cols\t\t\t= { this.cols1 }\r\n                            data \t\t\t= { data1 }\r\n                            loading \t\t= { pullLoading }\r\n                            onRow\t\t\t= { (v, rows) => {\r\n                                this.setState({ selectedKeys1: v })\r\n                                this.rows1 = rows\r\n                            } }\r\n                            pag\t\t\t\t= { pag1 }\r\n                            onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                        />\r\n                    </div>\r\n                    <div className='ex fv'>\r\n                        <div className='fxmj'>\r\n                            <h6 className=\"xmlr h40 b\">建议与解释</h6>\r\n                            <div className='fxm'>\r\n                                <Button label='添加' ghost={true} size='small' className='mr15 dkm' onClick={() => {\r\n                                    this.refs.modal2.open()\r\n                                    submit2.forEach(item => {\r\n                                        item.value = ''\r\n                                    })\r\n                                    this.isEdit2 = false\r\n                                    this.setState({ submit2 })\r\n                                }} />\r\n                                <Button label='编辑' disabled={!this.rows2} ghost={true} size='small' className='mr15 dkm' onClick={() => {\r\n                                    $http.submit(null,'report-result-suggestion/info',{ param:{uuid: this.rows2.uuid} }).then(data=>{\r\n                                        this.refs.modal2.open()\r\n                                        data.is_default = data.is_default == '1' ? true : false\r\n                                        this.rows2 = data\r\n                                        this.isEdit2 = true\r\n                                        $fn.setSubmitValues(submit2, data, ()=>{this.setState({submit2})})\r\n                                    })\r\n                                }} />\r\n                                <Button label='删除' ghost={true} disabled={!this.state.selectedKeys2.length} size='small' className='mr15 dkm' onClick={() => {\r\n                                    const param = {uuid: this.state.selectedKeys2.map(v=>v.uuid)} \r\n                                    coms.interfaceConfirm('report-result-suggestion/del', '删除', param, () => {\r\n                                        this.getResultSuggestion()\r\n                                        this.setState({selectedKeys2: []})\r\n                                        this.rows2 = null\r\n                                        this.getResultSelect()\r\n                                    })\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                        <Table\r\n                            cols\t\t\t= { this.cols2 }\r\n                            data \t\t\t= { data2 }\r\n                            loading \t\t= { pullLoading }\r\n                            onRow\t\t\t= { (v, rows) => {\r\n                                this.setState({ selectedKeys2: v })\r\n                                this.rows2 = rows\r\n                            } }\r\n                            pag\t\t\t\t= { pag2 }\r\n                            onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='ex'>\r\n                    <div className='fxmj'>\r\n                        <h6 className=\"xmlr h40 b\">结果转换规则</h6>\r\n                        <div className='fxm'>\r\n                            <Button label='添加' ghost={true} size='small' className='mr15 dkm' onClick={() => {\r\n                                this.refs.modal3.open()\r\n                                submit3.forEach(item => {\r\n                                    item.value = ''\r\n                                })\r\n                                this.isEdit3 = false\r\n                                this.setState({ submit3 })\r\n                                this.getResultSelect()\r\n                            }} />\r\n                            <Button label='编辑' disabled={!this.rows3} ghost={true} size='small' className='mr15 dkm' onClick={() => {\r\n                                $http.submit(null,'result-conv-rule/info',{ param:{uuid: this.rows3.uuid} }).then(data=>{\r\n                                    this.refs.modal3.open()\r\n                                    this.rows3 = data\r\n                                    this.isEdit3 = true\r\n                                    $fn.setSubmitValues(submit3, data, ()=>{this.setState({submit3})})\r\n                                    this.getResultSelect()\r\n                                })\r\n                            }} />\r\n                            <Button label='删除' ghost={true} disabled={!this.state.selectedKeys3.length} size='small' className='mr15 dkm' onClick={() => {\r\n                                const param = {uuid: this.state.selectedKeys3.map(v=>v.uuid)} \r\n                                coms.interfaceConfirm('result-conv-rule/del', '删除', param, () => {\r\n                                    this.getResultConvRule()\r\n                                    this.setState({selectedKeys3: []})\r\n                                    this.rows3 = null\r\n                                })\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                    <Table\r\n                        cols\t\t\t= { this.cols3 }\r\n                        data \t\t\t= { data3 }\r\n                        loading \t\t= { pullLoading }\r\n                        onRow\t\t\t= { (v, rows) => {\r\n                            this.setState({ selectedKeys3: v })\r\n                            this.rows3 = rows\r\n                        } }\r\n                        pag\t\t\t\t= { pag3 }\r\n                        onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                    />\r\n                </div>\r\n                <div className='ex'>\r\n                    <div className='fxmj'>\r\n                        <h6 className=\"xmlr h40 b\">参考范围</h6>\r\n                        <div className='fxm'>\r\n                            <Button label='添加' ghost={true} size='small' className='mr15 dkm' onClick={() => {\r\n                                $fn.push(this, $fn.getRoot().root + `system-settings/project-settings/reference-range?kind_id=${this.kind_id}`)\r\n                            }} />\r\n                            <Button label='编辑' disabled={!this.rows4} ghost={true} size='small' className='mr15 dkm' onClick={() => {\r\n                                $fn.push(this, $fn.getRoot().root + `system-settings/project-settings/reference-range?kind_id=${this.kind_id}&uuid=${this.rows4.uuid}`)\r\n                            }} />\r\n                            <Button label='删除' ghost={true} disabled={!this.state.selectedKeys4.length} size='small' className='mr15 dkm' onClick={() => {\r\n                                const param = {uuid: this.state.selectedKeys4.map(v=>v.uuid)} \r\n                                coms.interfaceConfirm('kd-reference-range/delete', '删除', param, () => {\r\n                                    this.getReferenceRange()\r\n                                    this.setState({selectedKeys4: []})\r\n                                    this.rows4 = null\r\n                                })\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                    <Table\r\n                        cols\t\t\t= { this.cols4 }\r\n                        data \t\t\t= { data4 }\r\n                        loading \t\t= { pullLoading }\r\n                        onRow\t\t\t= { (v, rows) => {\r\n                            this.setState({ selectedKeys4: v })\r\n                            this.rows4 = rows\r\n                        } }\r\n                    />\r\n                </div>\r\n                {/* 报告结果字典 */}\r\n                <Modal ref='modal1' title={this.isEdit1 ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit1 }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const d = {\r\n                                is_default: v.is_default ? '1' : '0',\r\n                                kind_id: this.kind_id\r\n                            }\r\n                            if (this.isEdit1) {\r\n                                $http.submit(null, 'report-result-info/edit', {param: {...v, ...d, uuid: this.rows1.uuid}}).then(data=>{\r\n                                    message.then(f => f.default.success('操作成功'))\r\n                                    this.refs.modal1.close()\r\n                                    this.getResultInfo()\r\n                                    this.getResultSelect()\r\n                                    this.rows1 = null\r\n                                })\r\n                            } else {\r\n                                $http.submit(null, 'report-result-info/add', {param: {...v, ...d}}).then(data=>{\r\n                                    message.then(f => f.default.success('操作成功'))\r\n                                    this.refs.modal1.close()\r\n                                    this.getResultInfo()\r\n                                    this.getResultSelect()\r\n                                    this.rows1 = null\r\n                                })\r\n                            }\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>{\r\n                            this.refs.modal1.close()\r\n                            this.isEdit1 = null\r\n                        } }\r\n                        init    = { form => this.form1 = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n                {/* 建议与解释 */}\r\n                <Modal ref='modal2' title={this.isEdit2 ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit2 }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const d = {\r\n                                is_default: v.is_default ? '1' : '0',\r\n                                kind_id: this.kind_id\r\n                            }\r\n                            if (this.isEdit2) {\r\n                                $http.submit(null, 'report-result-suggestion/edit', {param: {...v, ...d, uuid: this.rows2.uuid}}).then(data=>{\r\n                                    message.then(f => f.default.success('操作成功'))\r\n                                    this.refs.modal2.close()\r\n                                    this.getResultSuggestion()\r\n                                    this.getResultSelect()\r\n                                    this.rows2 = null\r\n                                })\r\n                            } else {\r\n                                $http.submit(null, 'report-result-suggestion/add', {param: {...v, ...d}}).then(data=>{\r\n                                    message.then(f => f.default.success('操作成功'))\r\n                                    this.refs.modal2.close()\r\n                                    this.getResultSuggestion()\r\n                                    this.getResultSelect()\r\n                                    this.rows2 = null\r\n                                })\r\n                            }\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>{\r\n                            this.refs.modal2.close()\r\n                            this.isEdit2 = null\r\n                        } }\r\n                        init    = { form => this.form2 = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n                {/* 结果转换规则 */}\r\n                <Modal ref='modal3' title={this.isEdit3 ? '编辑' : '添加'} width={800} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit3 }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const d = {\r\n                                kind_id: this.kind_id\r\n                            }\r\n                            if (this.isEdit3) {\r\n                                $http.submit(null, 'result-conv-rule/edit', {param: {...v, ...d, uuid: this.rows3.uuid}}).then(data=>{\r\n                                    message.then(f => f.default.success('操作成功'))\r\n                                    this.refs.modal3.close()\r\n                                    this.getResultConvRule()\r\n                                    this.rows3 = null\r\n                                })\r\n                            } else {\r\n                                $http.submit(null, 'result-conv-rule/add', {param: {...v, ...d}}).then(data=>{\r\n                                    message.then(f => f.default.success('操作成功'))\r\n                                    this.refs.modal3.close()\r\n                                    this.getResultConvRule()\r\n                                    this.rows3 = null\r\n                                })\r\n                            }\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>{\r\n                            this.refs.modal3.close()\r\n                            this.isEdit3 = null\r\n                        } }\r\n                        init    = { form => this.form3 = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\marketing.js",["2221"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Select = $async(()=>import('@antd/form/select'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst kindStatusOption = [\r\n    { value: '2',   name: \"开启\" },\r\n    { value: '1',   name: \"审核\" },\r\n    { value: '0',   name: \"草稿\" },\r\n    { value: '-1',   name: \"未开启\" },\r\n    { value: '-2',   name: \"预添加\" },\r\n]\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '项目中文名称',\tname: 'kind_name',      title: '项目信息'},\r\n\t\t\t{ label: '中文简称',\t    name: 'short_name', },\r\n\t\t\t{ label: '项目英文名称',\tname: 'name_en', },\r\n\t\t\t{ label: '英文简称',\t    name: 'name_short_en', },\r\n\t\t\t{ label: '组合项目代码',\tname: 'kind_code', },\r\n\t\t\t{ label: '项目助记码',\t    name: 'debit_code', },\r\n\t\t\t{ label: '绑定医院',\t    name: 'hosp_id',        type: 'select',     data: [] },\r\n        ],\r\n        projectData: [],\r\n\t\tuuid: '',\r\n    }\r\n    kind_status = $fn.query('kind_status')\r\n    kind_id = $fn.query('id')\r\n    kind_rel_id = ''\r\n    model = {kind_id: this.kind_id, keyword: ''}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t// 医院\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit[6].data = data\r\n\t\t\t\t\t\tthis.setState({submit})\r\n                    } else {\r\n                        $http.submit(null, $fn.replaceApi(d.BsHospitalSelect)).then(data => {\r\n\t\t\t\t\t\t\tsubmit[6].data = data\r\n\t\t\t\t\t\t\tthis.setState({submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 项目明细 - 项目\r\n            $fn.getCache({\r\n\t\t\t\tcache: d.kindItemSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.setState({projectData: data})\r\n                    } else {\r\n                        $http.submit(null, $fn.replaceApi(d.kindItemSelect)).then(data => {\r\n\t\t\t\t\t\t\tthis.setState({projectData: data})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n        })\r\n        this.fetch(this.model)\r\n        this.getProjectInfo(this.model)\r\n    }\r\n    // 获取项目kind_id\r\n    getProjectInfo(param) {\r\n        const { submit } = this.state\r\n        $http.submit(null, 'kd-market/info', { param }).then(data=>{\r\n            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n        })\r\n    }\r\n    getFieldValue(val) {\r\n        return this.form.getFieldValue(val) || ''\r\n    }\r\n    // 保存\r\n    saveData(val) {\r\n        const param = {\r\n            kind_id:        this.kind_id,\r\n            kind_name:      this.getFieldValue('kind_name'),\r\n            name_en:        this.getFieldValue('name_en'),\r\n            short_name:     this.getFieldValue('short_name'),\r\n            name_short_en:  this.getFieldValue('name_short_en'),\r\n            debit_code:     this.getFieldValue('debit_code'),\r\n            hosp_id:        this.getFieldValue('hosp_id'),\r\n        }\r\n        if (val) {\r\n            param[val] = 1;\r\n        }\r\n        $http.submit(null, 'kd-market/edit', { param }).then(data=>{\r\n            message.then(f => f.default.success('操作成功'))\r\n        })\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'kd-market-rel/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox',     width: 40 },\r\n\t\t{ title: '项目代码',\tfield: 'kind_code',\t\t\twidth: 120},\r\n\t\t{ title: '项目名称',\tfield: 'kind_name',\t\t\twidth: 160},\r\n\t\t{ title: '简称',        field: 'short_name',\t\twidth: 120},\r\n\t\t{ title: '检测方法',\tfield: 'check_method_name',\twidth: 160},\r\n\t\t{ title: '项目属性',\tfield: 'kind_type_name',\twidth: 160},\r\n\t\t{ title: '价格',\t\tfield: 'total_price',\t\twidth: 120},\r\n\t\t{ title: '状态',\t\tfield: 'kind_status',\t\twidth: 100,\t\trender:({rows})=>{\r\n\t\t\tlet d = kindStatusOption.filter(i => i.value === rows.kind_status)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\tconst arr = [\r\n\t\t\t{ label:'保存', onClick:()=>{\r\n                this.saveData()\r\n\t\t\t} },\r\n\t\t\t{ label:'审批', onClick:()=>{\r\n\t\t\t\t$http.submit(null, 'kd-market/audit', { param: {kind_id: this.kind_id} }).then(data=>{\r\n                    message.then(f => f.default.success('审批成功'))\r\n                })\r\n\t\t\t} },\r\n\t\t\t{ label:'保存并提交审批', onClick:()=>{\r\n\t\t\t\tthis.saveData('audit')\r\n\t\t\t} },\r\n\t\t\t{ label:'发布', onClick:()=>{\r\n\t\t\t\t$http.submit(null, 'kd-market/push', { param: {kind_id: this.kind_id} }).then(data=>{\r\n                    message.then(f => f.default.success('发布成功'))\r\n                    $fn.push(this, $fn.getRoot().root + `system-settings/project-settings`)\r\n                })\r\n\t\t\t} },\r\n\t\t\t{ label:'取消', ghost: true, onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t} },\r\n        ]\r\n        const arr1 = [\r\n\t\t\t{ label:'下架', onClick:()=>{\r\n\t\t\t\t$http.submit(null, 'kind-info/off', { param: {kind_id: this.kind_id} }).then(data=>{\r\n                    message.then(f => f.default.success('下架成功'))\r\n                    $fn.push(this, $fn.getRoot().root + `system-settings/project-settings/marketing?id=${this.kind_id}&kind_status=0`)\r\n                })\r\n            } },\r\n            { label:'返回', ghost: true, onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t} },\r\n        ]\r\n\t\treturn this.kind_status === '0' || this.kind_status === '1' ? arr : arr1\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, projectData } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='设置营销项目' ButtonGroup={this.ButtonGroup()}>\r\n                <SubmitForm\r\n                    modal\r\n                    display = { true }\r\n                    data = { submit }\r\n                    className='fx-int'\r\n                    init    = { form => this.form = form }\r\n                    />\r\n\t\t\t\t{/* 表格 */}\r\n                <div className='fxmj'>\r\n                    <h6 className=\"xmlr h40 b\">项目明细</h6>\r\n                    <div className='fxm'>\r\n                        <div className='fxm'>\r\n                            <Input size='middle' className='mr15' p='请输入关键字' width='100%' bordered={false} onChange={v=> this.model.keyword = v} />\r\n                            <Button label='查询' ghost={true} size='small' className='mr15 dkm' onClick={() => {\r\n                                this.fetch(this.model)\r\n                            }} />\r\n                            <Button label='删除' ghost={true} disabled={!this.state.selectedKeys.length} size='small' className='mr15 dkm' onClick={() => {\r\n                                const param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n                                coms.interfaceConfirm('kd-market-rel/delete', '删除', param, () => { this.fetch(this.model) })\r\n                            }} />\r\n                        </div>\r\n                        <div className='fxm'>\r\n                            <Select size='middle' p='请选择项目' data={projectData} width={200} bordered={false} onChanged={v => this.kind_rel_id = v} />\r\n                            <Button label='添加' ghost={true} size='small' className='ml15 dkm' onClick={() => {\r\n                                const param = {\r\n                                    kind_rel_id: this.kind_rel_id,\r\n                                    kind_id: this.kind_id\r\n                                }\r\n                                if (!this.kind_rel_id) {\r\n                                    message.then(f => f.default.error('请选择项目'))\r\n                                    return\r\n                                }\r\n                                $http.submit(null, 'kd-market-rel/add', {param}).then(data=>{\r\n                                    message.then(f => f.default.success('操作成功'))\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\index.js",["2222","2223"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst kindStatusOption = [\r\n    { value: '',    name: '全部' },\r\n    { value: '2',   name: \"开启\" },\r\n    { value: '1',   name: \"审核中\" },\r\n    { value: '0',   name: \"草稿\" }\r\n]\r\nconst categoryOption = [\r\n    { value: '',        name: '全部' },\r\n    { value: \"25001\",   name: \"单一项目\" },\r\n    { value: \"25002\",   name: \"从属项目\" },\r\n    { value: \"25003\",   name: \"组合项目\" },\r\n    { value: \"25004\",   name: \"营销项目\" }\r\n]\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '项目名称',\tname: 'kind_name',\t\tdisabled: true},\r\n\t\t\t{ label: '公司名称',\tname: 'comp_id',\t\trequired: true,\t\ttype: 'select',\tdata: [] },\r\n\t\t],\r\n\t\tuuid: '',\r\n\t\tkind_status: ''\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'状态',\t\t\tname:'kind_status',\t\ttype: 'select',\t\tdata: []},\r\n\t\t{ label:'项目代码',\t\tname:'kind_code'},\r\n\t\t{ label:'项目全称',\t\tname:'kind_name'},\r\n\t\t{ label:'助记码',\t\tname:'debit_code'},\r\n        { label:'项目分类',\t\tname:'category',\t\ttype:'select',      data:[]},\r\n        { label:'备注',\t\t\tname:'memo'},\r\n        { label:'岗位',\t\t\tname:'project_id',\t\ttype:'select',      data:[]},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit } = this.state\r\n\t\tthis.forms[0].data = kindStatusOption\r\n\t\tthis.forms[4].data = categoryOption\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 岗位\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.laboratoryselect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[6].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/laboratoryselect').then(data => {\r\n                            this.forms[6].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// 公司名称\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.CompanySelect, name: 'company_name', id: 'uuid', callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit[1].data = data\r\n\t\t\t\t\t\tthis.setState({submit})\r\n                    } else {\r\n                        $http.submit(null, 'company/select').then(data => {\r\n\t\t\t\t\t\t\tsubmit[1].data = data\r\n\t\t\t\t\t\t\tthis.setState({submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n        this.fetch()\r\n\t}\r\n\tgetProjectKindId(api, cb) {\r\n        $http.submit(null, api).then(data=>{\r\n\t\t\tcb && cb(data.kind_id)\r\n        })\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'kind-info/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '状态',\t\tfield: 'kind_status',\t\twidth: 100,\t\trender:({rows})=>{\r\n\t\t\tlet d = kindStatusOption.filter(i => i.value === rows.kind_status)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n\t\t}},\r\n\t\t{ title: '项目分类',\tfield: 'category_name',\t\twidth: 120},\r\n\t\t{ title: '项目代码',\tfield: 'kind_code',\t\t\twidth: 120},\r\n\t\t{ title: '项目名称',\tfield: 'kind_name',\t\t\twidth: 160},\r\n\t\t{ title: '项目属性',\tfield: 'kind_type_name',\twidth: 160},\r\n\t\t{ title: '检测方法',\tfield: 'check_method_name',\twidth: 160},\r\n\t\t{ title: '岗位',\t\tfield: 'job_name',\t\t\twidth: 120},\r\n\t\t{ title: '助记码',\t\tfield: 'debit_code',\t\twidth: 100},\r\n\t\t{ title: '价格',\t\tfield: 'total_price',\t\twidth: 100},\r\n\t\t{ title: '项目排序',\tfield: 'sort',\t\t\t\twidth: 80},\r\n\t\t{ title: '备注',\t\tfield: 'memo',\t\t\t\twidth: 200},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\tconst arr = [\r\n\t\t\t{ label:'编辑', disabled: !this.rows, onClick:()=>{\r\n\t\t\t\tconst rows = this.rows\r\n\t\t\t\tif (rows.category === '25001') { // 单一项目\r\n\t\t\t\t\t$fn.push(this, $fn.getRoot().root + `system-settings/project-settings/single?id=${rows.uuid}&kind_status=${rows.kind_status}`)\r\n\t\t\t\t} else if (rows.category === '25002') { // 从属项目\r\n\t\t\t\t\t$fn.push(this, $fn.getRoot().root + `system-settings/project-settings/subordinate?id=${rows.uuid}&kind_status=${rows.kind_status}`)\r\n\t\t\t\t} else if (rows.category === '25003') { // 组合项目\r\n\t\t\t\t\t$fn.push(this, $fn.getRoot().root + `system-settings/project-settings/combination?id=${rows.uuid}&kind_status=${rows.kind_status}`)\r\n\t\t\t\t} else if (rows.category === '25004') { // 营销项目\r\n\t\t\t\t\t$fn.push(this, $fn.getRoot().root + `system-settings/project-settings/marketing?id=${rows.uuid}&kind_status=${rows.kind_status}`)\r\n\t\t\t\t}\r\n\t\t\t} },\r\n\t\t\t{ label:'设置单一项目', onClick:()=>{\r\n\t\t\t\tthis.getProjectKindId('kd-market/add', kind_id=>{\r\n\t\t\t\t\t$fn.push(this, $fn.getRoot().root + `system-settings/project-settings/single?id=${kind_id}&kind_status=0`)\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'新增从属项目', onClick:()=>{\r\n\t\t\t\tthis.getProjectKindId('kd-subordinate-set/add', kind_id=>{\r\n\t\t\t\t\t$fn.push(this, $fn.getRoot().root + `system-settings/project-settings/subordinate?id=${kind_id}&kind_status=0`)\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'设定组合项目', onClick:()=>{\r\n\t\t\t\tthis.getProjectKindId('kd-market/add', kind_id=>{\r\n\t\t\t\t\t$fn.push(this, $fn.getRoot().root + `system-settings/project-settings/combination?id=${kind_id}&kind_status=0`)\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'设置营销项目', onClick:()=>{\r\n\t\t\t\tthis.getProjectKindId('kd-market/add', kind_id=>{\r\n\t\t\t\t\t$fn.push(this, $fn.getRoot().root + `system-settings/project-settings/marketing?id=${kind_id}&kind_status=0`)\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'导出', onClick:()=>{\r\n\t\t\t\tcoms.exportExcel({\r\n\t\t\t\t\tapi: 'kind-info/index',\r\n\t\t\t\t\tparam: {param: {...this.model, export: '1'}}\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'更新公式', onClick:()=>{\r\n\t\t\t\t$http.submit(null,'result-unit-item/changeFormula2Kind').then(data=>{\r\n\t\t\t\t\tmessage.then(f=>f.default.success('操作 成功'))\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t\t{ label:'复制项目到', disabled: !this.rows, onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = this.rows.kind_name\r\n\t\t\t\tsubmit[1].value = ''\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t]\r\n\t\tif ($fn.query('kind_code')) {\r\n\t\t\tarr.push({ label:'返回', onClick:()=>{ $fn.back(this) } },)\r\n\t\t}\r\n\t\treturn arr\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='检测项目' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (rows) => {\r\n\t\t\t\t\t\tthis.setState({ uuid: rows.uuid, kind_status: rows.kind_status })\r\n\t\t\t\t\t\tthis.rows = rows\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title='复制项目到' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconst param = { \r\n\t\t\t\t\t\t\t\tuuid: this.rows.uuid,\r\n\t\t\t\t\t\t\t\tcomp_id: v.comp_id\r\n\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t$http.submit(null, 'specimen/copykind', { param }).then(data => {\r\n\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\combination.js",["2224","2225","2226"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Select = $async(()=>import('@antd/form/select'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst Title = $async(()=>import('#tp/title'))\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst kindStatusOption = [\r\n    { value: '2',   name: \"开启\" },\r\n    { value: '1',   name: \"审核\" },\r\n    { value: '0',   name: \"草稿\" },\r\n    { value: '-1',   name: \"未开启\" },\r\n    { value: '-2',   name: \"预添加\" },\r\n]\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '项目中文名称',\tname: 'kind_name',      title: '项目信息'},\r\n\t\t\t{ label: '中文简称',\t    name: 'short_name', },\r\n\t\t\t{ label: '项目英文名称',\tname: 'name_en', },\r\n\t\t\t{ label: '英文简称',\t    name: 'name_short_en', },\r\n\t\t\t{ label: '组合项目代码',\tname: 'kind_code', },\r\n\t\t\t{ label: '项目助记码',\t    name: 'debit_code', },\r\n\t\t\t{ label: '绑定医院',\t    name: 'hosp_id',        type: 'select',     data: [] },\r\n        ],\r\n        projectData: [],\r\n        uuid: '',\r\n        forms: {\r\n            kind_name: '',\r\n            short_name: '',\r\n            name_en: '',\r\n            name_short_en: '',\r\n            kind_code: '',\r\n            debit_code: '',\r\n            report_id: '',\r\n            spec_type: '',\r\n            superiorquality: '',\r\n            memo: '',\r\n            sort: '',\r\n            printing: '',\r\n            result_formula: [],\r\n            report_time_set: [\r\n                {\r\n                    start_at: '',\r\n                    end_at: '',\r\n                    postpone: 0,\r\n                    week_at: [],\r\n                    date_at: [],\r\n                    selectDayType: 1\r\n                }\r\n            ],\r\n            project_id: '',\r\n            low_board_id: '',\r\n            tag_id: '',\r\n            careful: '',\r\n            remark: '',\r\n        }\r\n    }\r\n    kind_status = $fn.query('kind_status')\r\n    kind_id = $fn.query('id')\r\n    kind_rel_id = ''\r\n    model = {kind_id: this.kind_id, keyword: ''}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t// 医院\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.BsHospitalSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tsubmit[6].data = data\r\n\t\t\t\t\t\tthis.setState({submit})\r\n                    } else {\r\n                        $http.submit(null, $fn.replaceApi(d.BsHospitalSelect)).then(data => {\r\n\t\t\t\t\t\t\tsubmit[6].data = data\r\n\t\t\t\t\t\t\tthis.setState({submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 项目明细 - 项目\r\n            $fn.getCache({\r\n\t\t\t\tcache: d.kindItemSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.setState({projectData: data})\r\n                    } else {\r\n                        $http.submit(null, $fn.replaceApi(d.kindItemSelect)).then(data => {\r\n\t\t\t\t\t\t\tthis.setState({projectData: data})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n        })\r\n        this.fetch(this.model)\r\n        this.getProjectInfo(this.model)\r\n    }\r\n    // 获取项目kind_id\r\n    getProjectInfo(param) {\r\n        const { submit } = this.state\r\n        $http.submit(null, 'kd-market/info', { param }).then(data=>{\r\n            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n        })\r\n    }\r\n    getFieldValue(val) {\r\n        return this.form.getFieldValue(val) || ''\r\n    }\r\n    // 保存\r\n    saveData(val) {\r\n        const param = {\r\n            kind_id:        this.kind_id,\r\n            kind_name:      this.getFieldValue('kind_name'),\r\n            name_en:        this.getFieldValue('name_en'),\r\n            short_name:     this.getFieldValue('short_name'),\r\n            name_short_en:  this.getFieldValue('name_short_en'),\r\n            debit_code:     this.getFieldValue('debit_code'),\r\n            hosp_id:        this.getFieldValue('hosp_id'),\r\n        }\r\n        if (val) {\r\n            param[val] = 1;\r\n        }\r\n        $http.submit(null, 'kd-market/edit', { param }).then(data=>{\r\n            message.then(f => f.default.success('操作成功'))\r\n        })\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'kd-market-rel/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox',     width: 40 },\r\n\t\t{ title: '项目代码',\tfield: 'kind_code',\t\t\twidth: 120},\r\n\t\t{ title: '项目名称',\tfield: 'kind_name',\t\t\twidth: 160},\r\n\t\t{ title: '简称',        field: 'short_name',\t\twidth: 120},\r\n\t\t{ title: '检测方法',\tfield: 'check_method_name',\twidth: 160},\r\n\t\t{ title: '项目属性',\tfield: 'kind_type_name',\twidth: 160},\r\n\t\t{ title: '价格',\t\tfield: 'total_price',\t\twidth: 120},\r\n\t\t{ title: '状态',\t\tfield: 'kind_status',\t\twidth: 100,\t\trender:({rows})=>{\r\n\t\t\tlet d = kindStatusOption.filter(i => i.value === rows.kind_status)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\tconst arr = [\r\n\t\t\t{ label:'保存', onClick:()=>{\r\n                this.saveData()\r\n\t\t\t} },\r\n\t\t\t{ label:'审批', onClick:()=>{\r\n\t\t\t\t$http.submit(null, 'kd-market/audit', { param: {kind_id: this.kind_id} }).then(data=>{\r\n                    message.then(f => f.default.success('审批成功'))\r\n                })\r\n\t\t\t} },\r\n\t\t\t{ label:'保存并提交审批', onClick:()=>{\r\n\t\t\t\tthis.saveData('audit')\r\n\t\t\t} },\r\n\t\t\t{ label:'发布', onClick:()=>{\r\n\t\t\t\t$http.submit(null, 'kd-market/push', { param: {kind_id: this.kind_id} }).then(data=>{\r\n                    message.then(f => f.default.success('发布成功'))\r\n                    $fn.push(this, $fn.getRoot().root + `system-settings/project-settings`)\r\n                })\r\n\t\t\t} },\r\n\t\t\t{ label:'取消', ghost: true, onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t} },\r\n        ]\r\n        const arr1 = [\r\n\t\t\t{ label:'下架', onClick:()=>{\r\n\t\t\t\t$http.submit(null, 'kind-info/off', { param: {kind_id: this.kind_id} }).then(data=>{\r\n                    message.then(f => f.default.success('下架成功'))\r\n                    $fn.push(this, $fn.getRoot().root + `system-settings/project-settings/marketing?id=${this.kind_id}&kind_status=0`)\r\n                })\r\n            } },\r\n            { label:'返回', ghost: true, onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t} },\r\n        ]\r\n\t\treturn this.kind_status === '0' || this.kind_status === '1' ? arr : arr1\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, projectData } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='设定标准组合项目' ButtonGroup={this.ButtonGroup()}>\r\n                <div>\r\n                    <Title title='项目信息' />\r\n                    <div className='fx'></div>\r\n                </div>\r\n\t\t\t\t{/* 表格 */}\r\n                <div className='fxmj'>\r\n                    <h6 className=\"xmlr h40 b\">项目明细</h6>\r\n                    <div className='fxm'>\r\n                        <div className='fxm'>\r\n                            <Input size='middle' className='mr15' p='请输入关键字' width='100%' bordered={false} onChange={v=> this.model.keyword = v} />\r\n                            <Button label='查询' ghost={true} size='small' className='mr15 dkm' onClick={() => {\r\n                                this.fetch(this.model)\r\n                            }} />\r\n                            <Button label='删除' ghost={true} disabled={!this.state.selectedKeys.length} size='small' className='mr15 dkm' onClick={() => {\r\n                                const param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n                                coms.interfaceConfirm('kd-market-rel/delete', '删除', param, () => { this.fetch(this.model) })\r\n                            }} />\r\n                        </div>\r\n                        <div className='fxm'>\r\n                            <Select size='middle' p='请选择项目' data={projectData} width={200} bordered={false} onChanged={v => this.kind_rel_id = v} />\r\n                            <Button label='添加' ghost={true} size='small' className='ml15 dkm' onClick={() => {\r\n                                const param = {\r\n                                    kind_rel_id: this.kind_rel_id,\r\n                                    kind_id: this.kind_id\r\n                                }\r\n                                if (!this.kind_rel_id) {\r\n                                    message.then(f => f.default.error('请选择项目'))\r\n                                    return\r\n                                }\r\n                                $http.submit(null, 'kd-market-rel/add', {param}).then(data=>{\r\n                                    message.then(f => f.default.success('操作成功'))\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\tp\\subordinate-form.js",["2227"],"import React from 'react'\r\n// ==============================================================\r\nimport Modal from '@antd/modal'\r\nimport { Input } from 'antd';\r\nconst { $http, $fn, $async } = window\r\n// ============================================================== antd\r\nconst Form = $async(()=>import('@antd/form/form'))\r\nconst Item = $async(()=>import('@antd/form/item'))\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst Input1 = $async(()=>import('@antd/form/input'))\r\nconst Select = $async(()=>import('@antd/form/select'))\r\nconst message = import('@antd/message')\r\n// ============================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ==============================================================\r\nconst _bordered = false\r\nconst _width = '50%'\r\nconst _width2 = '25%'\r\nconst _size = 'middle'\r\nconst mb = 20\r\nexport default class extends React.Component{\r\n    state = {\r\n        checkMethodOption: [],\r\n        resultUnitOption: [],\r\n        resultTypeOption: [],\r\n        resultTipsOption: [],\r\n        resultDisOption: [],\r\n        forms: {\r\n            kind_name: '',\r\n            short_name: '',\r\n            name_en: '',\r\n            name_short_en: '',\r\n            kind_code: '',\r\n            check_method: '',\r\n            debit_code: '',\r\n            memo: '',\r\n            superiorquality: '',\r\n            result_type: '',\r\n            result_tips_temp: '',\r\n            result_default_value: '',\r\n            result_dis_code: '',\r\n            result_formula: '',\r\n            result_unit: '',\r\n            decimal_point: '',\r\n            clinical_range: '',\r\n            clinical_range_end: '',\r\n            linear_range: '',\r\n            linear_range_end: ''\r\n        },\r\n        submit: [\r\n            { label: '字典名称',\tname:'item_name',\tfull: true,\twidth: '100%'},\r\n            { label: '描述',\t\tname:'remark',\t\tfull: true,\twidth: '100%',\ttype: 'textarea'},\r\n        ]\r\n    }\r\n    componentDidMount() {\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n\t\t\t// 所属字典分类\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.dictionarySelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.setState({resultDisOption: data})\r\n                    } else {\r\n                        $http.submit(null, $fn.replaceApi(d.dictionarySelect)).then(data => {\r\n\t\t\t\t\t\t\tthis.setState({resultDisOption: data})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 结果提示类型\r\n            $fn.getCache({\r\n\t\t\t\tcache: d.resultTipsTempSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.setState({resultTipsOption: data})\r\n                    } else {\r\n                        $http.submit(null, $fn.replaceApi(d.resultTipsTempSelect)).then(data => {\r\n\t\t\t\t\t\t\tthis.setState({resultTipsOption: data})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n        })\r\n        // 检测方法\r\n        $fn.getDisItem({\r\n            code: 16000,\r\n            callback: data=>{\r\n                this.setState({checkMethodOption: data})\r\n            }\r\n        })\r\n        // 结果单位\r\n        $fn.getDisItem({\r\n            code: 18000,\r\n            callback: data=>{\r\n                this.setState({resultUnitOption: data})\r\n            }\r\n        })\r\n        // 结果类型\r\n        $fn.getDisItem({\r\n            code: 1200,\r\n            callback: data=>{\r\n                this.setState({resultTypeOption: data})\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    initForm = form => {\r\n       this.form = form\r\n       setTimeout(()=>{\r\n           if($fn.hasObject(this.props.info)){\r\n                this.form && this.form.setFieldsValue(this.props.info)\r\n                this.setState({forms: this.props.info})\r\n           }\r\n       },500)\r\n    }\r\n    onChange = (v, name) => {\r\n        const {forms} = this.state  \r\n        let d = Object.assign({}, forms, {[name]: v})\r\n        this.setState({forms: d})\r\n    }\r\n    onClick = () => {\r\n\t\tconst { submit } = this.state\r\n\t\tthis.refs.modal.open()\r\n\t\tsubmit.forEach(i=>i.value='')\r\n    }\r\n    \r\n    render() {\r\n        const { forms, submit } = this.state\r\n        return (\r\n            <>\r\n                <Form className='submit-form small-form fv fx' layout='horizontal' init={this.initForm}>\r\n                    <div className='fxw'>\r\n                        <h6 className='w xmlr h40 bbor1 mb10'>项目基本信息</h6>\r\n                        <Item label='项目全称' name='kind_name' width={_width} mb={mb}>\r\n                            <Input1 p='请输入项目全称' bordered={_bordered} size={_size} value={forms.kind_name} />\r\n                        </Item>\r\n                        <Item label='项目简称' name='short_name' width={_width} mb={mb}>\r\n                            <Input1 p='请输入项目简称' bordered={_bordered} size={_size} value={forms.short_name} />\r\n                        </Item>\r\n                        <Item label='英文全称' name='name_en' width={_width} mb={mb}>\r\n                            <Input1 p='请输入英文全称' bordered={_bordered} size={_size} value={forms.name_en} />\r\n                        </Item>\r\n                        <Item label='英文简称' name='name_short_en' width={_width} mb={mb}>\r\n                            <Input1 p='请输入英文简称' bordered={_bordered} size={_size} value={forms.name_short_en} />\r\n                        </Item>\r\n                        <Item label='项目代码' name='kind_code' width='20%' mb={mb}>\r\n                            <Input1 p='请输入项目代码' bordered={_bordered} size={_size} disabled value={forms.kind_code} />\r\n                        </Item>\r\n                        <Item label='检测方法' name='check_method' width='25%' mb={mb}>\r\n                            <Select size={_size}  bordered={_bordered} data={this.state.checkMethodOption} p={`请选择检测方法`} value={forms.check_method} onChanged={(v)=>this.onChange(v, 'check_method')} /> \r\n                        </Item>\r\n                        <Item>\r\n                            <Button type='primary' className='ml10' onClick={this.onClick}>添加</Button>\r\n                        </Item>\r\n                        <Item label='助记码' name='debit_code' width={_width} mb={mb}>\r\n                            <Input1 p='请输入助记码' bordered={_bordered} size={_size} value={forms.debit_code} />\r\n                        </Item>\r\n                        <Item label='备注' name='memo' width={_width}>\r\n                            <Input1 p='请输入备注' bordered={_bordered} size={_size} mode='textarea' value={forms.memo} />\r\n                        </Item>\r\n                        <h6 className='w xmlr h40 bbor1 mb10'>结果信息</h6>\r\n                        <Item label='上级质控' name='superiorquality' width={_width} mb={mb}>\r\n                            <Input1 p='请输入上级质控' bordered={_bordered} size={_size} suffix='%' value={forms.superiorquality} />\r\n                        </Item>\r\n                        <Item label='结果类型' name='result_type' width={_width2} mb={mb}>\r\n                            <Select size={_size}  bordered={_bordered} data={this.state.resultTypeOption} p={`请选择结果类型`} value={forms.result_type} /> \r\n                        </Item>\r\n                        <Item label='结果提示类型' name='result_tips_temp' width={_width2} mb={mb}>\r\n                            <Select size={_size}  bordered={_bordered} data={this.state.resultTipsOption} p={`请选择结果提示类型`} value={forms.result_tips_temp} nameStr='temp_name' idStr='uuid' /> \r\n                        </Item>\r\n                        <Item label='结果默认值' name='result_default_value' width={_width2} mb={mb}>\r\n                            <Input1 p='请输入结果默认值' bordered={_bordered} size={_size} value={forms.result_default_value} />\r\n                        </Item>\r\n                        <Item label='所属字典分类' name='result_dis_code' width={_width2} mb={mb}>\r\n                            <Select size={_size}  bordered={_bordered} data={this.state.resultDisOption} p={`请选择所属字典分类`} value={forms.result_dis_code}/>\r\n                        </Item>\r\n                        <Item label='结果计算公式' name='result_formula' width={_width} mb={mb}>\r\n                            <Input1 p='请输入结果计算公式' bordered={_bordered} size={_size} value={forms.result_formula} />\r\n                        </Item>\r\n                        <Item label='结果单位' name='result_unit' width={_width2} mb={mb}>\r\n                            <Select size={_size}  bordered={_bordered} data={this.state.resultUnitOption} p={`请选择结果单位`} value={forms.result_unit} /> \r\n                        </Item>\r\n                        <Item label='小数点位数' name='decimal_point' width={_width2} mb={mb}>\r\n                            <Input1 p='请输入小数点位数' bordered={_bordered} size={_size} value={forms.decimal_point} />\r\n                        </Item>\r\n                        <Item label='临床可报告范围' width={_width}>\r\n                            <Input.Group compact size={_size}>\r\n                                <Input style={{ width: 100 }} placeholder='最小范围' value={forms.clinical_range} />\r\n                                <Input\r\n                                    className='site-input-split'\r\n                                    style={{\r\n                                        width: 30,\r\n                                        borderLeft: 0,\r\n                                        borderRight: 0,\r\n                                        pointerEvents: 'none',\r\n                                    }}\r\n                                    placeholder='~'\r\n                                    disabled\r\n                                />\r\n                                <Input style={{width: 100}} placeholder='最大范围' value={forms.clinical_range_end} />\r\n                            </Input.Group>\r\n                        </Item>\r\n                        <Item label='线性范围' width={_width}>\r\n                            <Input.Group compact size={_size}>\r\n                                <Input style={{ width: 100 }} placeholder='最小范围' value={forms.linear_range} />\r\n                                <Input\r\n                                    className='site-input-split'\r\n                                    style={{\r\n                                        width: 30,\r\n                                        borderLeft: 0,\r\n                                        borderRight: 0,\r\n                                        pointerEvents: 'none',\r\n                                    }}\r\n                                    placeholder='~'\r\n                                    disabled\r\n                                />\r\n                                <Input style={{width: 100}} placeholder='最大范围' value={forms.linear_range_end} />\r\n                            </Input.Group>\r\n                        </Item>\r\n                    </div>\r\n                </Form>\r\n                <Modal ref='modal' title='字典新增' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            $http.submit(null, 'dis-item/codeAuto', {param: {...v, dis_code: 16000}}).then(data=>{\r\n                                message.then(f => f.default.success('操作成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t$fn.setCache()\r\n                            })\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>{\r\n                            this.refs.modal.close()\r\n                        } }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n            </>\r\n        )\r\n    }\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\project\\tp\\reference-range-form.js",["2228"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\n// ===================================================================== private component\r\n\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tsubmit: [\r\n\t\t\t{ label:'参考值类别名称',\t\tname:'ref_type_name'},\r\n\t\t\t{ label:'参考值类别名称(英)',\tname:'en_ref_type_name'},\r\n\t\t\t{ label:'性别',\t\t\t\t\tname:'sex',\t\t\t\t\ttype:'select',\t\t\t\tdata:[] },\r\n\t\t\t{ label:'年龄单位',\t\t\t\tname:'age_unit',\t\t\ttype:'select',\t\t\t\tdata:[] },\r\n\t\t\t{ label:'年龄(低)',\t\t\t\tname:'age_min_type',\t\ttype:'select',\t\t\t\tdata:[],\t\ttitle: '报告单特性'},\r\n            { label:'',\t\t\t\t\t\tname:'age_min_val',\t\t\tplaceholder: '年龄(低)'},\r\n            { label:'年龄(高)',\t\t\t\tname:'age_max_type',\t\ttype:'select',\t\t\t\tdata:[]},\r\n            { label:'',\t\t\t\t\t\tname:'age_max_val',\t\t\tplaceholder: '年龄(高)'},\r\n            { label:'危急值(低)',\t\t\tname:'crisis_min_type',\t\ttype:'select',\t\t\t\tdata:[]},\r\n            { label:'',\t\t\t\t\t\tname:'crisis_min_val',\t\tplaceholder: '危急值(低)'},\r\n            { label:'危急值(高)',\t\t\tname:'crisis_max_type',\t\ttype:'select',\t\t\t\tdata:[]},\r\n            { label:'',\t\t\t\t\t\tname:'crisis_max_val',\t\tplaceholder: '危急值(高)'},\r\n            { label:'参考值(低)',\t\t\tname:'reference_min_type',\ttype:'select',\t\t\t\tdata:[]},\r\n            { label:'',\t\t\t\t\t\tname:'reference_min_val',\tplaceholder: '参考值(低)'},\r\n            { label:'参考值(高)',\t\t\tname:'reference_max_type',\ttype:'select',\t\t\t\tdata:[]},\r\n            { label:'',\t\t\t\t\t\tname:'reference_max_val',\tplaceholder: '参考值(高)'},\r\n            { label:'参考值描述',\t\t\tname:'description',\t\t\ttype: 'textarea',\t\t\twidth: '480px'},\r\n            { label:'参考值描述(英)',\t\tname:'description_en',\t\ttype: 'textarea',\t\t\twidth: '480px'},\r\n            { label:'参考值报告单打印',\t\tname:'print_report',\t\ttype: 'textarea',\t\t\twidth: '480px'},\r\n            { label:'参考值报告单打印(英)',\tname:'print_report_en',\t\ttype: 'textarea',\t\t\twidth: '480px'},\r\n            { label:'危急值描述',\t\t\tname:'crisis_value_desc',\ttype: 'textarea',\t\t\twidth: '480px'},\r\n\t\t],\r\n        id:$fn.query('uuid'),\r\n        kind_id: $fn.query('kind_id'),\r\n\t\tmodel: {}\r\n\t}\r\n\tasync getDataAsync() {\r\n\t\tconst { submit, id } = this.state\r\n\t\t$fn.getDisItem({\r\n\t\t\tcode: 30000,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[3].data = data\r\n\t\t\t\tthis.setState({submit})\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.getDisItem({\r\n\t\t\tcode: 1300,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[4].data = data\r\n\t\t\t\tsubmit[6].data = data\r\n\t\t\t\tsubmit[8].data = data\r\n\t\t\t\tsubmit[10].data = data\r\n\t\t\t\tsubmit[12].data = data\r\n\t\t\t\tsubmit[14].data = data\r\n\t\t\t\tthis.setState({submit})\r\n\t\t\t}\r\n\t\t})\r\n\t\t$fn.getDisItem({\r\n\t\t\tcode: 45700,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[2].data = data\r\n\t\t\t\tthis.setState({submit})\r\n\t\t\t}\r\n        })\r\n        \r\n        submit.forEach(item=>{\r\n            item.value = ''\r\n            if (item.name === 'crisis_max_val' || item.name === 'crisis_min_val' || item.name === 'reference_max_val' || item.name === 'reference_min_val' || item.name === 'age_min_val' || item.name === 'age_max_val') {\r\n                item.value = '0.00'\r\n            }\r\n        })\r\n\t\t\r\n\t\tif (id) {\r\n\t\t\t$http.submit(null, 'kd-reference-range/info', {param: {uuid: id}}).then(data => {\r\n\t\t\t\t$fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.getDataAsync()\r\n\t}\r\n\trender(){\r\n\t\tconst { submit, id, kind_id } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='参考范围'>\r\n\t\t\t\t<div className='ex fv xplr pt10'>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tdata\t= { submit }\r\n\t\t\t\t\t\tbtnSize\t= 'large'\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            for (let i in v) {\r\n                                if (v[i] === undefined) {\r\n                                    v[i] = ''\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t\tif(id){\r\n\t\t\t\t\t\t\t\tconst param = {...v, uuid: id, kind_id}\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'kd-reference-range/edit', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('修改成功'))\r\n\t\t\t\t\t\t\t\t\t$fn.back(this)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tconst param = {...v, kind_id}\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'kd-reference-range/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\t$fn.back(this)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=> $fn.back(this) }\r\n\t\t\t\t\t\tinit\t= {form => this.form = form}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\process\\process-list.js",["2229","2230"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n    { name: '启用', value: '1' },\r\n    { name: '禁用', value: '0' },\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '流程名称',\tname: 'process_name',\trequired: true},\r\n            { label: '排序',    \tname: 'sort',\t\t\trequired: true},\r\n            { label: '流程描述',\tname: 'description',\tfull: true,\t\twidth: '100%',\ttype: 'textarea'},\r\n        ]\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'流程名称', name:'process_name'},\r\n\t\t{ label:'流程编号', name:'process_num'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'fl-process/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox',\t\twidth: 50 },\r\n\t\t{ title: '流程编号',\tfield: 'process_num',\t\twidth: 120 },\r\n\t\t{ title: '流程名称',\tfield: 'process_name',\t\twidth: 120 },\r\n\t\t{ title: '状态',\t\tfield: 'enabled',\t\t\twidth: 80,\t\trender: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '创建时间',\tfield: 'created_at',\t\twidth: 160 },\r\n\t\t{ title: '操作',    align:'tc',   width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'fl-process/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='mr10' label='查看节点' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'system-settings/node-list?id=' + rows.uuid)\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('fl-process/del', '删除', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n            { label:'启用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid), enable: '1'} \r\n\t\t\t\tcoms.interfaceConfirm('fl-process/openDis', '启用', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n            { label:'禁用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid), enable: '0'} \r\n\t\t\t\tcoms.interfaceConfirm('fl-process/openDis', '禁用', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='流程名称列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'fl-process/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'fl-process/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\process\\process-authorization.js",["2231","2232"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '授权类型',    name:'auth_type',   required: true,     type: 'select', data: [], onChange: (v) => {\r\n                this.getAuthSelect(v)\r\n            }},\r\n            { label: '选择节点',    name:'node_id',     required: true,     type: 'select', data: []},\r\n            { label: '被授权者',    name:'auth_id',     required: true,     type: 'select', data: []},\r\n        ],\r\n        forms: [\r\n            { label: '授权者名称',  name:'auth_name'},\r\n            { label: '授权类型',    name:'auth_type',   type: 'select', data: []},\r\n            { label: '流程名称',    name:'process_id',  type: 'select', data: []},\r\n            { label: '节点名称',    name:'node_id',     type: 'select', data: []},\r\n        ]\r\n\t}\r\n    id = $fn.query('id') || ''\r\n    model = {node_id: this.id}\r\n    // 被授权者\r\n    getAuthSelect(v) {\r\n        const { submit } = this.state\r\n        const node_id = submit[1].value\r\n        $http.submit(null, 'fl-process-auth/select', {param: {auth_type: v}}).then(data => {\r\n            submit[2].data = data.items\r\n            submit[1].value = node_id\r\n            submit[0].value = v\r\n            this.setState({submit})\r\n        })\r\n    }\r\n\tcomponentDidMount(){\r\n        const { submit, forms } = this.state\r\n        // 授权类型\r\n        $fn.getDisItem({\r\n\t\t\tcode: 43000,\r\n\t\t\tcallback: (data) => {\r\n                submit[0].data = data\r\n                forms[1].data = data\r\n\t\t\t\tthis.setState({submit, forms})\r\n\t\t\t}\r\n\t\t})\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 流程名称\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.flProSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        forms[2].data = data\r\n                        this.setState({forms})\r\n                    } else {\r\n                        $http.submit(null, 'fl-process/select').then(data => {\r\n                            forms[2].data = data\r\n                            this.setState({forms})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 节点名称\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.flProNodeSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[1].data = data\r\n                        forms[3].data = data\r\n                        this.setState({forms, submit})\r\n                    } else {\r\n                        $http.submit(null, 'fl-process-node/select').then(data => {\r\n                            submit[1].data = data.items\r\n                            forms[3].data = data.items\r\n                            this.setState({forms, submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'fl-process-auth/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox',     width: 50 },\r\n\t\t{ title: '授权者名称',  field: 'auth_name',         width: 120 },\r\n\t\t{ title: '授权类型',\tfield: 'auth_type_name',\twidth: 120 },\r\n        { title: '创建时间',\tfield: 'created_at',\t\twidth: 160 },\r\n\t\t{ title: '所属流程',\tfield: 'process_name',\t\twidth: 120 },\r\n\t\t{ title: '所属节点',\tfield: 'node_name',\t\t\twidth: 120 },\r\n\t\t{ title: '操作',        align:'tc',                 width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'fl-process-auth/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='mr10' label='权限关联' ghost onClick={e=>{\r\n                        $fn.push(this, $fn.getRoot().root + 'system-settings/process-authorization/associated?id=' + rows.uuid + '&type=process')\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const arr = [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n                const { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (this.id && item.name === 'node_id') {\r\n                        item.value = this.id\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('fl-process-auth/del', '删除', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n        ]\r\n        if (this.id) {\r\n            arr.push({ label:'返回', onClick:()=>{ $fn.back(this) } },)\r\n        }\r\n        return arr\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, forms } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='流程授权列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,forms) }\r\n                    loading\t\t= { pullLoading }\r\n                    init        = { form => form.setFieldsValue({node_id: this.model.node_id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v, sort: v.sort || ''}\r\n                                $http.submit(null,'fl-process-auth/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v, sort: v.sort || '' }\r\n                                console.log(param)\r\n                                $http.submit(null, 'fl-process-auth/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\process\\node-list.js",["2233","2234"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst typeOption = [\r\n    { name: '开始', value: '1' },\r\n    { name: '结束', value: '2' },\r\n    { name: '普通', value: '3' }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '节点类型',    name:'node_type',   required: true,     type: 'select', data: []},\r\n            { label: '节点名称',    name: 'node_name',  required: true},\r\n            { label: '所属流程',    name:'process_id',  required: true,     type: 'select', data: []},\r\n            { label: '节点排序',    name: 'sort'},\r\n        ],\r\n        forms: [\r\n            { label: '节点名称', name:'node_name'},\r\n            { label: '节点代码', name:'node_code'},\r\n            { label: '节点类型', name:'node_type',  type: 'select', data: []},\r\n            { label: '流程名称', name:'process_id', type: 'select', data: []},\r\n        ]\r\n\t}\r\n    id = $fn.query('id') || ''\r\n\tmodel = {process_id: this.id}\r\n\tcomponentDidMount(){\r\n        const { submit, forms } = this.state\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 流程名称\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.flProSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[2].data = data\r\n                        forms[3].data = data\r\n                        this.setState({forms, submit})\r\n                    } else {\r\n                        $http.submit(null, 'fl-process/select').then(data => {\r\n                            submit[2].data = data\r\n                            forms[3].data = data\r\n                            this.setState({forms, submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n        forms[2].data = typeOption\r\n        submit[0].data = typeOption\r\n\t\tthis.fetch(this.model)\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'fl-process-node/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox',     width: 50 },\r\n\t\t{ title: '节点代码',    field: 'node_code',     width: 120 },\r\n\t\t{ title: '节点名称',\tfield: 'node_name',     width: 120 },\r\n\t\t{ title: '所属流程',\tfield: 'process_name',  width: 120 },\r\n\t\t{ title: '排序',        field: 'sort',          width: 120 },\r\n\t\t{ title: '节点类型',    field: 'node_type',     width: 80,\t\trender: ({rows}) => {\r\n            let d = typeOption.filter(i => i.value === rows.node_type)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '创建时间',    field: 'created_at',    width: 160 },\r\n\t\t{ title: '操作',    align:'tc',   width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'fl-process-node/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='mr10' label='查看授权' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'system-settings/process-authorization?id=' + rows.uuid)\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const arr = [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n                const { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (this.id && item.name === 'process_id') {\r\n                        item.value = this.id\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('fl-process-node/del', '删除', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n        ]\r\n        if (this.id) {\r\n            arr.push({ label:'返回', onClick:()=>{ $fn.back(this) } },)\r\n        }\r\n        return arr\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, forms } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='节点名称列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,forms) }\r\n                    loading\t\t= { pullLoading }\r\n                    init        = { form => form.setFieldsValue({process_id: this.model.process_id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v, sort: v.sort || ''}\r\n                                $http.submit(null,'fl-process-node/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v, sort: v.sort || '' }\r\n                                console.log(param)\r\n                                $http.submit(null, 'fl-process-node/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\printer\\index.js",["2235","2236"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst PrinterForm = $async(() => import('#cpt/printer-settings'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst RelateForm = $async(() => import('./tp/relate'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        uuid: '',\r\n\t\tsubmit: [\r\n\t\t\t{ label: '打印机名称',\tname: 'printer_name',   full: true,     width: '100%',  required: true},\r\n\t\t\t{ label: '打印机型号',\tname: 'printer_model',  full: true,     width: '100%',  required: true},\r\n\t\t\t{ label: '打印机类型',\tname: 'printer_type',   full: true,     width: '100%',  required: true,\t\ttype: 'select',\tdata: [] },\r\n\t\t\t{ label: '打印机代码',\tname: 'printer_code',   full: true,     width: '100%',  required: true},\r\n        ],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'打印机名称', name:'keyword'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        // 打印机类型\r\n\t\t$fn.getDisItem({\r\n            code: 50000,\r\n            callback: data=>{\r\n                submit[2].data = data\r\n            }\r\n        })\r\n        this.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'printer/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '序号',        field: 'id' },\r\n\t\t{ title: '打印机名称',  field: 'printer_name'},\r\n\t\t{ title: '类型',        field: 'printer_type_name'},\r\n\t\t{ title: '打印机型号',  field: 'printer_model'},\r\n\t\t{ title: '模板名称',    field: 'printer_template_name'},\r\n\t\t{ title: '操作',        align:'tc',     width: 300,     render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n                        $http.submit(null,'printer/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button className='ml10' label='关联模板' ghost onClick={e=>{\r\n                        this.setState({uuid: rows.uuid})\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                })\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n            } },\r\n            { label:'打印机设置', onClick:()=>{\r\n\t\t\t\tthis.refs.modal2.open()\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\t\t\t\t\t\t$http.submit(null,'printer/delete',{ param:{uuid: keys} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='打印机管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'printer/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'printer/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n                <Modal ref = 'modal1' title\t= '关联模板' width = {648} noFooter >\r\n\t\t\t\t\t<RelateForm\r\n                        uuid    = { this.state.uuid }\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal1.close() }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n                <Modal ref = 'modal2' title\t= '打印机设置' width = {648} noFooter >\r\n\t\t\t\t\t<PrinterForm\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal2.close() }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\printer\\tp\\relate.js",["2237","2238"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tselectedKeys:[],\r\n\t}\r\n    model = {}\r\n\tcomponentDidMount(){\r\n        this.model = { uuid: this.props.uuid }\r\n        this.fetch(this.model).then(data => {\r\n            const arr = []\r\n            $fn.hasArray(data) && data.forEach(item=>{\r\n                if (item.assoc === '1') {\r\n                    item.rowChecked = true\r\n                }\r\n            })\r\n        })\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this, 'printer/assocTmpl', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '模板代码', \tfield: 'name' },\r\n\t\t{ title: '模板名称',\t\tfield: 'remark'},\r\n    ]\r\n\trender(){\r\n\t\tconst { data, pullLoading, selectedKeys } = this.state\r\n\t\tconst { onClose, uuid } = this.props\r\n\t\treturn (\r\n\t\t\t<>\r\n                <Table\r\n                    className\t\t= 'xplr'\r\n                    cols\t\t\t= { this.cols }\r\n                    data \t\t\t= { data }\r\n                    loading \t\t= { pullLoading }\r\n                    onRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n                    onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                />\r\n\t\t\t\t<div className='tc mt10'>\r\n\t\t\t\t\t<Button label='取消' size='middle' className='mr15 dkm' onClick={onClose} />\r\n\t\t\t\t\t<Button label='确定' ghost size='middle' className='mr15 dkm' onClick={(v) => {\r\n\t\t\t\t\t\tconst param = {\r\n                            uuid,\r\n                            tmpl_codes: selectedKeys.map(i => i.value)\r\n                        }\r\n                        $http.submit(null, 'printer/assocTmpl', { param }).then(data => {\r\n                            message.then(f => f.default.success('操作成功'))\r\n                            this.fetch(this.model)\r\n                            onClose && onClose()\r\n                        })\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\organization\\staff.js",["2239","2240"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n\t{ name: \"启用\", value: \"1\" },\r\n\t{ name: \"待启用\", value: \"0\" },\r\n\t{ name: \"禁用\", value: \"-1\" }\r\n]\r\nconst compStaffOption = [\r\n    { name: '是', value: '1'},\r\n    { name: '否', value: '0'},\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '员工编号',    name: 'empl_name',          required: true},\r\n            { label: '真实姓名',    name: 'real_name',          required: true},\r\n            { label: '英文名称',    name: 'en_name'},\r\n            { label: '密码',        name: 'password',           type: 'password'},\r\n            { label: '确认密码',    name: 'confirm_password',   type: 'password'},\r\n            { label: '手机号码',    name: 'phone',              required: true},\r\n            { label: '身份证',      name: 'idcard',             required: true},\r\n            { label: '性别',        name: 'sex',                type: 'select',     data: [],                   required: true},\r\n            { label: '电子邮件',    name: 'email',              required: true},\r\n            { label: '年龄',        name: 'age',                required: true},\r\n            { label: '入职时间',    name:'entrytime',           type:'date-time',   after:true },\r\n            { label: '所属部门',    name: 'dept_id',            type: 'select',     data: [],                   idStr: 'uuid',        nameStr: 'depart_name', required: true},\r\n            { label: '所属科室',    name: 'pgroup_ids',         type: 'select',     data: [],                   mode: 'multiple',   full: true,             width: '100%',  idStr: 'uuid', onChange: (v)=>{\r\n                this.getJob(v)\r\n            }},\r\n            { label: '所属岗位',    name: 'jobs',               type: 'select',     data: [],                   mode: 'multiple',   full: true,             width: '100%',  idStr: 'uuid'},\r\n            { label: '职位权限',    name: 'position',           type: 'select',     data: [],                   mode: 'multiple',   full: true,             width: '100%',  idStr: 'uuid'},\r\n            { label: '角色权限',    name: 'roles',              type: 'select',     data: [],                   mode: 'multiple',   full: true,             width: '100%',  idStr: 'uuid',  nameStr: 'role_name'},\r\n            { label: '分组权限',    name: 'groups',             type: 'select',     data: [],                   mode: 'multiple',   full: true,             width: '100%'},\r\n            { label: '头像',\t\tname: 'head_portrait',      type: 'upload',     params: {modular: 121}},\r\n            { label: '电子签名',    name: 'signature',          type: 'upload',     params: {modular: 121}},\r\n        ],\r\n        forms: [\r\n            { label:'岗位',         name:'uuid',                type: 'select',     data: [],                   idStr: 'uuid'},\r\n            { label:'状态',         name:'enabled',             type: 'select',     data: []},\r\n            { label:'员工姓名',     name:'real_name'},\r\n            { label:'员工编码',     name:'empl_name'},\r\n            { label:'邮箱编码',     name:'email'},\r\n            { label:'手机号码',     name:'phone'},\r\n        ],\r\n        sexOption: []\r\n\t}\r\n\tid = $fn.query('id') || ''\r\n    model = { uuid: this.id }\r\n    getJob(v){\r\n        const { submit } = this.state\r\n        $http.submit(null,'project-team/jobselect',{ param: {uuid: v} }).then(data=>{\r\n            if ($fn.hasArray(data)) {\r\n                submit[13].data = data\r\n                this.setState({submit})\r\n            }\r\n        })\r\n    }\r\n    getDicItem(selectName, api, cb) {\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            $fn.getCache({\r\n                cache: d[selectName], callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        cb && cb(data)\r\n                    } else {\r\n                        $http.submit(null, api).then(data => {\r\n                            if (data.items) {\r\n                                cb && cb(data.items)\r\n                            } else {\r\n                                cb && cb(data)\r\n                            }\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\tcomponentDidMount(){\r\n        const { forms, submit } = this.state\r\n        forms[1].data = statusOption // 状态\r\n        // 岗位\r\n        this.getDicItem('jobAllselect', 'project-team/jobAllselect', data => {\r\n            forms[0].data = data\r\n            this.setState({forms})\r\n        })\r\n        // 部门\r\n        this.getDicItem('DEPTSelect', 'department/select', data => {\r\n            submit[11].data = data\r\n            this.setState({submit})\r\n        })\r\n        // 科室\r\n        this.getDicItem('ProjectTeamSelect', 'project-team/select', data => {\r\n            submit[12].data = data\r\n            this.setState({submit})\r\n        })\r\n        // 职位权限\r\n        this.getDicItem('positionSelect', 'position/select', data => {\r\n            submit[14].data = data\r\n            this.setState({submit})\r\n        })\r\n        // 角色权限\r\n        this.getDicItem('roleSelect', 'role/select', data => {\r\n            submit[15].data = data\r\n            this.setState({submit})\r\n        })\r\n        // 分组权限\r\n        this.getDicItem('groupsSelect', 'groups/select', data => {\r\n            submit[16].data = data\r\n            this.setState({submit})\r\n        })\r\n        // 性别\r\n        $fn.getDisItem({\r\n            code: 45700,\r\n            callback: (data) => {\r\n                submit[7].data = data\r\n                this.setState({submit})\r\n            }\r\n        })\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'employee/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox' },\r\n\t\t{ title: '员工编码',\tfield: 'empl_name',      width: 120 },\r\n\t\t{ title: '员工名称',\tfield: 'real_name',      width: 150},\r\n\t\t{ title: '手机号码',\tfield: 'phone',       width: 150},\r\n        { title: '邮箱地址',        field: 'email',        width: 220 },\r\n        { title: '性别',\tfield: 'sex_name',           width: 80,},\r\n        { title: '状态',\t\tfield: 'enabled',           width: 80,      render: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '本司员工',\t\tfield: 'is_corp',           width: 80,      render: ({rows}) => {\r\n            let d = compStaffOption.filter(i => i.value === rows.is_corp)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '所属公司',\tfield: 'company_name',       width: 120},\r\n        { title: '所属部门',\tfield: 'depart_name',       width: 120},\r\n        { title: '所属科室',\tfield: 'project_name',       width: 120},\r\n\t\t{ title: '操作',        align:'tc',             width: 200,     render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n                    <Button className='mr10' label='权限关联' ghost onClick={e=>{\r\n                        $fn.push(this, $fn.getRoot().root + 'system-settings/staff/associated?id=' + rows.uuid + '&type=staff')\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n                        this.isEdit = true\r\n                        this.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'employee/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            $fn.hasArray(data.pgroup_ids) && this.getJob(data.pgroup_ids)\r\n                            this.rows = data\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='mr10' label='禁用' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst param = {uuid: rows.uuid} \r\n\t\t\t\t\t\tcoms.interfaceConfirm('employee/del', '禁用', param, () => {\r\n\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const arr = [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n                const { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'启用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('employee/open', '启用', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n            { label:'文件导入', onClick:()=>{\r\n\t\t\t\t\r\n            } },\r\n        ]\r\n        if (this.id) {\r\n            arr.push({ label:'返回', onClick:()=>{ $fn.back(this) } },)\r\n        }\r\n        return arr\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, forms } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='员工管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,forms) }\r\n                    loading\t\t= { pullLoading }\r\n                    init        = { form => form.setFieldsValue({uuid: this.id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onChange = { (v, press, {name})=>{\r\n                            submit.forEach(item=>{\r\n                                if (item.name === name) {\r\n                                    item.value = v\r\n                                }\r\n                            })\r\n                        } }\r\n                        onSubmit = { v => {\r\n                            const data = {\r\n                                head_portrait: v.head_portrait || '',\r\n                                signature: v.signature || '',\r\n                                pgroup_ids: v.pgroup_ids || [],\r\n                                position: v.position || [],\r\n                                roles: v.roles || [],\r\n                                groups: v.groups || [],\r\n                                jobs: v.jobs || []\r\n                            }\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v, ...data}\r\n                                $http.submit(null,'employee/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    $fn.setCache()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'employee/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    $fn.setCache()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => { this.form = form } }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\organization\\office.js",["2241","2242","2243"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n\t{ name: \"启用\", value: \"1\" },\r\n\t{ name: \"待启用\", value: \"0\" },\r\n\t{ name: \"禁用\", value: \"-1\" }\r\n]\r\nconst isOutsourcing = [\r\n    {id: '1', codeName: '是'},\r\n    {id: '0', codeName: '否'}\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '科室名称',    name: 'project_name',   required: true},\r\n            { label: '科室编号',    name: 'project_code'},\r\n            { label: '中文简称',    name: 'short_name'},\r\n            { label: '英文名称',    name: 'en_name'},\r\n            { label: '英文简称',    name: 'short_en_name'},\r\n            { label: '关联部门',    name: 'dept_id',        type: 'select', data: [],   nameStr: 'depart_name', idStr: 'uuid',  required: true},\r\n            { label: '排序',        name: 'sort'},\r\n            { label: '是否外包',    name: 'is_commission',  type: 'radio',  data: [],   oType: 'default',        onChange: (v) => { this.renderRadio(v) } }\r\n        ],\r\n        forms: [\r\n            { label:'部门',     name:'dept_id',     type: 'select', data: [],   nameStr: 'depart_name',  idStr: 'uuid'},\r\n            { label:'状态',     name:'enabled',     type: 'select', data: []},\r\n            { label:'科室名称', name:'keyword'},\r\n        ]\r\n\t}\r\n\tid = $fn.query('id') || ''\r\n    model = { dept_id: this.id, pid: '0' }\r\n    renderRadio(v) {\r\n        this.state.submit[7].value = v.target.value\r\n    }\r\n\tcomponentDidMount(){\r\n        const { forms, submit } = this.state\r\n        forms[1].data = statusOption // 状态\r\n        submit[7].data = isOutsourcing // 是否外包\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 部门\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.DEPTSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        forms[0].data = data\r\n                        submit[5].data = data\r\n                        this.setState({forms, submit})\r\n                    } else {\r\n                        $http.submit(null, 'department/select').then(data => {\r\n                            forms[0].data = data\r\n                            submit[5].data = data\r\n                            this.setState({forms, submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'project-team/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox' },\r\n\t\t{ title: '科室编号',\tfield: 'project_code',      width: 120 },\r\n\t\t{ title: '科室名称',\tfield: 'project_name',      width: 150},\r\n        { title: '简称',        field: 'short_name',\t    width: 100 },\r\n        { title: '英文名称',\tfield: 'en_name',           width: 100 },\r\n        { title: '英文简称',\tfield: 'short_en_name',     width: 100 },\r\n        { title: '所属部门',\tfield: 'depart_name',\t    width: 100 },\r\n        { title: '所属公司',\tfield: 'company_name',\t    width: 100 },\r\n        { title: '状态',\t\tfield: 'enabled',           width: 80,      render: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '操作',        align:'tc',             width: 200,     render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n                    <Button className='mr10' label='查看' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'system-settings/post?id=' + rows.id)\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'project-team/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='mr10' label='禁用' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst param = {uuid: rows.uuid} \r\n\t\t\t\t\t\tcoms.interfaceConfirm('project-team/del', '禁用', param, () => {\r\n\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const arr = [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n                const { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'sort') {\r\n                        item.value = '1'\r\n                    }\r\n                    if (item.name === 'is_commission'){\r\n                        item.value = '0'\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'启用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('project-team/open', '启用', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n        ]\r\n        if (this.id) {\r\n            arr.push({ label:'返回', onClick:()=>{ $fn.back(this) } },)\r\n        }\r\n        return arr\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, forms } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='科室管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,forms) }\r\n                    loading\t\t= { pullLoading }\r\n                    init        = { form => form.setFieldsValue({dept_id: this.id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            const pid = $fn.query('pid') || ''\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'project-team/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    $fn.setCache()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v, pid }\r\n                                $http.submit(null, 'project-team/addProject', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    $fn.setCache()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\organization\\post.js",["2244","2245"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n\t{ name: \"启用\", value: \"1\" },\r\n\t{ name: \"待启用\", value: \"0\" },\r\n\t{ name: \"禁用\", value: \"-1\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '岗位名称',        name: 'project_name',   required: true,     full: true,             width: '100%'},\r\n            { label: '岗位编号',        name: 'project_code',   disabled: true},\r\n            { label: '岗位类型',        name: 'p_type',         type: 'select',     data: [],               required: true},\r\n            { label: '中文简称',        name: 'short_name'},\r\n            { label: '英文名称',        name: 'en_name'},\r\n            { label: '英文简称',        name: 'short_en_name'},\r\n            { label: '上级科室',        name: 'pid',            type: 'select',     data: [],               idStr: 'id',        required: true},\r\n            { label: '结果处理模型',    name: 'result_model',   type: 'select',     data: [],               required: true},\r\n            { label: '排序',            name: 'sort'},\r\n        ],\r\n        forms: [\r\n            { label:'部门',     name:'dept_id',     type: 'select', data: [],       nameStr: 'depart_name',  idStr: 'uuid'},\r\n            { label:'科室',     name:'pid',         type: 'select', data: [],       idStr: 'id'},\r\n            { label:'状态',     name:'enabled',     type: 'select', data: []},\r\n            { label:'岗位名称', name:'keyword'},\r\n        ]\r\n\t}\r\n\tid = $fn.query('id') || ''\r\n    model = { pid: this.id, dept_id: '' }\r\n\tcomponentDidMount(){\r\n        const { forms, submit } = this.state\r\n        forms[2].data = statusOption // 状态\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 部门\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.DEPTSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        forms[0].data = data\r\n                        this.setState({forms})\r\n                    } else {\r\n                        $http.submit(null, 'department/select').then(data => {\r\n                            forms[0].data = data\r\n                            this.setState({forms})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 科室\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.ProjectTeamMenuSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        forms[1].data = data\r\n                        submit[6].data = data\r\n                        this.setState({forms, submit})\r\n                    } else {\r\n                        $http.submit(null, 'project-team/selectMenu').then(data => {\r\n                            forms[1].data = data\r\n                            submit[6].data = data\r\n                            this.setState({forms, submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n            // 岗位类型\r\n            $fn.getDisItem({\r\n                code: 62000,\r\n                callback: (data) => {\r\n                    submit[2].data = data\r\n                    this.setState({submit})\r\n                }\r\n            })\r\n            // 结果处理模型\r\n            $fn.getDisItem({\r\n                code: 44000,\r\n                callback: (data) => {\r\n                    submit[7].data = data\r\n                    this.setState({submit})\r\n                }\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'project-team/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox' },\r\n\t\t{ title: '岗位编号',\tfield: 'project_code',      width: 120 },\r\n\t\t{ title: '岗位名称',\tfield: 'project_name',      width: 150},\r\n\t\t{ title: '岗位类型',\tfield: 'p_type_name',       width: 150},\r\n        { title: '简称',        field: 'short_name',        width: 100 },\r\n        { title: '英文名称',\tfield: 'en_name',           width: 100 },\r\n        { title: '英文简称',\tfield: 'short_en_name',     width: 100 },\r\n        { title: '上级科室',\tfield: 'parent_name',       width: 100 },\r\n        { title: '所属公司',\tfield: 'company_name',\t    width: 100 },\r\n        { title: '状态',\t\tfield: 'enabled',           width: 80,      render: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '操作',        align:'tc',             width: 200,     render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n                    <Button className='mr10' label='查看' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'system-settings/staff?id=' + rows.uuid)\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'project-team/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='mr10' label='禁用' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst param = {uuid: rows.uuid} \r\n\t\t\t\t\t\tcoms.interfaceConfirm('project-team/del', '禁用', param, () => {\r\n\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const arr = [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n                const { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'sort') {\r\n                        item.value = '1'\r\n                    }\r\n                    if (item.name === 'is_commission'){\r\n                        item.value = '0'\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'启用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('project-team/open', '启用', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n            { label:'文件导入', onClick:()=>{\r\n\t\t\t\t\r\n            } },\r\n        ]\r\n        if (this.id) {\r\n            arr.push({ label:'返回', onClick:()=>{ $fn.back(this) } },)\r\n        }\r\n        return arr\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, forms } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='岗位管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,forms) }\r\n                    loading\t\t= { pullLoading }\r\n                    init        = { form => form.setFieldsValue({pid: this.id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'project-team/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    $fn.setCache()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'project-team/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    $fn.setCache()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\organization\\department.js",["2246","2247"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n\t{ name: \"启用\", value: \"1\" },\r\n\t{ name: \"待启用\", value: \"0\" },\r\n\t{ name: \"禁用\", value: \"-1\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '部门名称',\tname: 'depart_name',    required: true},\r\n            { label: '中文简称',    name: 'short_name'},\r\n            { label: '英文名称',    name: 'en_name'},\r\n            { label: '英文简称',    name: 'short_en_name'},\r\n            { label: '部门负责人',  name: 'manager'},\r\n            { label: '固定电话',    name: 'tel',            required: true},\r\n            { label: '排序',        name: 'sort'},\r\n        ],\r\n        forms: [\r\n            { label:'公司',         name:'comp_id',         type: 'select', data: [],   nameStr: 'company_name',  idStr: 'uuid'},\r\n            { label:'状态',         name:'enabled',         type: 'select', data: []},\r\n            { label:'部门名称',     name:'keyword'},\r\n        ]\r\n\t}\r\n\tid = $fn.query('id') || ''\r\n\tmodel = { comp_id: this.id }\r\n\tcomponentDidMount(){\r\n        const { forms } = this.state\r\n        forms[1].data = statusOption // 状态\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 公司\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.CompanySelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        forms[0].data = data\r\n                        this.setState({forms})\r\n                    } else {\r\n                        $http.submit(null, 'company/select').then(data => {\r\n                            forms[0].data = data\r\n                            this.setState({forms})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'department/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox' },\r\n\t\t{ title: '部门编号',\tfield: 'depart_code',     width: 120 },\r\n\t\t{ title: '部门名称',\tfield: 'depart_name',\twidth: 150},\r\n\t\t{ title: '部门负责人',\tfield: 'manager',\twidth: 150},\r\n        { title: '简称',        field: 'short_name',\twidth: 100 },\r\n        { title: '英文名称',\tfield: 'en_name',\t    width: 100 },\r\n        { title: '英文简称',\tfield: 'short_en_name',\twidth: 100 },\r\n        { title: '所属公司',\tfield: 'company_name',\twidth: 100 },\r\n        { title: '状态',\t\tfield: 'enabled',       width: 80,      render: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '操作',        align:'tc',             width: 200,     render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n                    <Button className='mr10' label='查看' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'system-settings/office?id=' + rows.uuid)\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'department/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='mr10' label='禁用' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst param = {uuid: rows.uuid} \r\n\t\t\t\t\t\tcoms.interfaceConfirm('department/del', '禁用', param, () => {\r\n\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const arr = [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n                const { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'tel') {\r\n                        item.value = '13588888888'\r\n                    }\r\n                    if (item.name === 'sort') {\r\n                        item.value = '1'\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'启用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('department/open', '启用', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n        ]\r\n        if (this.id) {\r\n            arr.push({ label:'返回', onClick:()=>{ $fn.back(this) } },)\r\n        }\r\n        return arr\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, forms } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='部门管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,forms) }\r\n                    loading\t\t= { pullLoading }\r\n                    init        = { form => form.setFieldsValue({comp_id: this.id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            const pid = ''\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'department/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                    $fn.setCache()\r\n                                })\r\n                            } else {\r\n                                const param = { ...v, pid }\r\n                                $http.submit(null, 'department/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                    $fn.setCache()\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\logs\\system-log.js",["2248"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'操作人',\t\tname:'operator_name'},\r\n        { label:'操作时间',\t\tname:'date',\t\t\ttype:'date-range',  names:['created_time_start_date','created_time_end_date'],\tvalue:[] },\r\n\t\t{ label:'类型',\t\t    name:'dtype',           type: 'select',     data: []},\r\n\t\t{ label:'描述',\t\t    name:'title',           type: 'textarea'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 类型\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.slogSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'slog/select').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'slog/sysLogs', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: 'Id',          field: 'id',            width: 50 },\r\n\t\t{ title: '模块',\t\tfield: 'dtype_str',     width: 130 },\r\n\t\t{ title: '操作人',\t\tfield: 'operator_name', width: 80 },\r\n\t\t{ title: '操作时间',\tfield: 'created_time',  width: 160,\t\talign: 'tc'},\r\n\t\t{ title: '描述',\t    field: 'title',         width: 500,    tdCss: 'wpn' },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='系统日志'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\organization\\company.js",["2249","2250"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n\t{ name: \"启用\", value: \"1\" },\r\n\t{ name: \"待启用\", value: \"0\" },\r\n\t{ name: \"禁用\", value: \"-1\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '公司名称',\tname: 'company_name',   required: true,     full: true,         width: '100%'},\r\n            { label: 'Logo',\t\tname: 'logo',           full: true,         width: '100%',      type: 'upload',     params: {modular: 118}},\r\n            { label: '公司编号',    name: 'comp_code',\t\trequired: true,     disabled: true},\r\n            { label: '中文简称',     name: 'short_name',    required: true},\r\n            { label: '英文名称',    name: 'en_name',\t\trequired: true},\r\n            { label: '英文简称',    name: 'short_en_name',  required: true},\r\n            { label: '所属集团',    name: 'group_id',\t\trequired: true,     type: 'select',     data: [],   nameStr: 'group_name',  idStr: 'uuid'},\r\n            { label: '区域',\t\tname: 'area_id',        type: 'cascader'},\r\n            { label: '地址',        name: 'address'},\r\n            { label: '英文地址',    name: 'en_address'},\r\n            { label: '法人代表',    name: 'legal_person'},\r\n            { label: '固定电话',    name: 'tel'},\r\n            { label: '注册日期',\tname:'reg_date',\t\ttype:'date-time',   after:true },\r\n\t\t\t{ label: '排序',\t\tname: 'sort'},\r\n            { label: '公司网址',    name: 'website'},\r\n            { label: '公司简介',    name: 'summary',\t\ttype: 'textarea',   full: true,         width: '100%'},\r\n\t\t\t{ label: '公司描述',    name: 'description',\ttype: 'textarea',   full: true,         width: '100%'},\r\n        ],\r\n        forms: [\r\n            { label:'集团',     name:'group_id',    type: 'select', data: [],   nameStr: 'group_name',  idStr: 'uuid'},\r\n            { label:'状态',     name:'enabled',     type: 'select', data: []},\r\n            { label:'公司名称', name:'keyword'},\r\n        ]\r\n\t}\r\n\tid = $fn.query('id') || ''\r\n\tmodel = { group_id: this.id }\r\n\tcomponentDidMount(){\r\n        const { submit, forms } = this.state\r\n        forms[1].data = statusOption // 状态\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 集团\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.CorpGroupSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[6].data = data\r\n                        forms[0].data = data\r\n                        this.setState({forms, submit})\r\n                    } else {\r\n                        $http.submit(null, 'corp-group/select').then(data => {\r\n                            submit[6].data = data\r\n                            forms[0].data = data\r\n                            this.setState({forms, submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'company/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox' },\r\n\t\t{ title: '公司编码',\tfield: 'comp_code',     width: 120 },\r\n\t\t{ title: '公司名称',\tfield: 'company_name',\twidth: 150},\r\n        { title: '简称',        field: 'short_name',\twidth: 100 },\r\n        { title: '英文名称',\tfield: 'en_name',\t    width: 100 },\r\n        { title: '英文简称',\tfield: 'short_en_name',\twidth: 100 },\r\n        { title: '所属集团',\tfield: 'group_name',\twidth: 100 },\r\n        { title: '状态',\t\tfield: 'enabled',       width: 80,      render: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '操作',        align:'tc',             width: 200,     render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n                    <Button className='mr10' label='查看' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'system-settings/department?id=' + rows.uuid)\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'company/info',{ param:{id: rows.id} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='mr10' label='禁用' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst param = {uuid: rows.uuid} \r\n\t\t\t\t\t\tcoms.interfaceConfirm('company/del', '禁用', param, () => {\r\n\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const arr = [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n                const { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (this.id && item.name === 'group_id') {\r\n                        item.value = this.id\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'启用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('company/open', '启用', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n        ]\r\n        if (this.id) {\r\n            arr.push({ label:'返回', onClick:()=>{ $fn.back(this) } },)\r\n        }\r\n        return arr\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, forms } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='公司管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,forms) }\r\n                    loading\t\t= { pullLoading }\r\n                    init        = { form => form.setFieldsValue({group_id: this.id}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'company/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\t$fn.setCache()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'company/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\logs\\login-log.js",["2251"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n        { label:'时间',\t\t\tname:'date',\t\t\ttype:'date-range',\tnames:['start_time','end_time'],\tvalue:[] },\r\n\t\t{ label:'真实姓名',\t\tname:'user_real_name'},\r\n\t\t{ label:'用户编号',\t\tname:'user_number'},\r\n\t\t{ label:'登录IP',\t\tname:'login_ip'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'lis-login-log/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '真实姓名',\t\tfield: 'user_real_name' },\r\n\t\t{ title: '用户编号',\t\tfield: 'user_number' },\r\n\t\t{ title: '登录IP',\t\t\tfield: 'login_ip' },\r\n\t\t{ title: '当前登录时间',\tfield: 'login_time',\t\talign: 'tc'},\r\n\t\t{ title: '上次登录时间',\tfield: 'last_login_time',\talign: 'tc' },\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='系统登录日志'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\group-settings\\source-config.js",["2252"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '名称',    name: 'name',\t\tfull: true, width: '100%', required: true},\r\n            { label: '内容',    name: 'content',    full: true, width: '100%', required: true, type: 'textarea'},\r\n            { label: '备注',    name: 'remark',     full: true, width: '100%', type: 'textarea'},\r\n        ]\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'编号',\t\tname:'code'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'settings-source/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '编号',    field: 'code' },\r\n\t\t{ title: '名称',\tfield: 'name' },\r\n\t\t{ title: '内容',\tfield: 'content' },\r\n\t\t{ title: '备注',\tfield: 'remark'},\r\n\t\t{ title: '操作',    align:'tc',   width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'settings-source/info',{ param:{id: rows.id} }).then(data=>{\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.forEach(item => {\r\n                    return item.value = ''\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'清除缓存', onClick:()=>{\r\n\t\t\t\t$http.submit(null, 'settings-source/clearcache').then(data => {\r\n\t\t\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t})\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='系统设置-源配置' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'settings-source/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'settings-source/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\group-settings\\price-management.js",["2253","2254"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n    { name: '启用', value: '1' },\r\n    { name: '禁用', value: '-1' },\r\n    { name: '待开启', value: '0' }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '物价代码',    \tname: 'price_code'},\r\n            { label: '项目名称',    \tname: 'item_name',\t\t\trequired: true},\r\n            { label: '标准价格',    \tname: 'price',\t\t\t\trequired: true},\r\n            { label: '三甲医院价格',    name: 'hosp_price_ta',\t\trequired: true},\r\n            { label: '三乙医院价格',    name: 'hosp_price_tb',\t\trequired: true},\r\n            { label: '二甲医院价格',    name: 'hosp_price_sa',\t\trequired: true},\r\n            { label: '二乙医院价格',    name: 'hosp_price_sb',\t\trequired: true},\r\n            { label: '检测方法',    \tname: 'detection_method',\trequired: true,\t\t\ttype: 'select',\t\tdata: []},\r\n\t\t\t{ label: '助记码',\t\t\tname: 'qt_item_code'},\r\n            { label: '物价状态',\t\tname: 'enabled',\t\t\trequired: true,\t\t\ttype: 'select', \tdata: []},\r\n            { label: '排序',\t\t\tname: 'sort',\t\t\t\trequired: true},\r\n            { label: '项目内涵',\t\tname: 'extend1',\t\t\tfull: true,\t\t\t\twidth: '100%',\t\ttype: 'textarea'},\r\n            { label: '除外内容',\t\tname: 'extend2',\t\t\tfull: true,\t\t\t\twidth: '100%',\t\ttype: 'textarea'},\r\n            { label: '备注',\t\t\tname: 'remark',\t\t\t\tfull: true,\t\t\t\twidth: '100%',\t\ttype: 'textarea'},\r\n        ]\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'状态',\t\tname:'enabled',     type: 'select',     data: []},\r\n\t\t{ label:'物价代码', name:'price_code'},\r\n\t\t{ label:'项目名称', name:'item_name'},\r\n\t\t{ label:'助记码',   name:'qt_item_code'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit } = this.state\r\n\t\tthis.forms[0].data = statusOption\r\n\t\tsubmit[9].data = statusOption.filter(i => i.value !== '0')\r\n\t\t// 检测方法\r\n\t\t$fn.getDisItem({\r\n\t\t\tcode: 16000,\r\n\t\t\tcallback: (data) => {\r\n\t\t\t\tsubmit[7].data = data\r\n\t\t\t\tthis.setState({submit})\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'qt-item-source/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '物价代码',    field: 'price_code',\t\t\t\twidth: 120 },\r\n\t\t{ title: '关联物价',\tfield: 'price_rel_codes',\t\t\twidth: 120 },\r\n\t\t{ title: '项目名称',\tfield: 'item_name',\t\t\t\t\twidth: 220 },\r\n\t\t{ title: '检测方法',\tfield: 'detection_method_name',\t\twidth: 160 },\r\n\t\t{ title: '标准价格',\tfield: 'price',\t\t\t\t\t\twidth: 100 },\r\n\t\t{ title: '三甲价格',\tfield: 'hosp_price_ta',\t\t\t\twidth: 100 },\r\n\t\t{ title: '三乙价格',\tfield: 'hosp_price_tb',\t\t\t\twidth: 100 },\r\n\t\t{ title: '二甲价格',\tfield: 'hosp_price_sa',\t\t\t\twidth: 100 },\r\n\t\t{ title: '二乙价格',\tfield: 'hosp_price_sb',\t\t\t\twidth: 100 },\r\n\t\t{ title: '项目内涵',\tfield: 'extend1',\t\t\t\t\twidth: 260 },\r\n\t\t{ title: '除外内容',\tfield: 'extend2',\t\t\t\t\twidth: 220 },\r\n\t\t{ title: '助记码',\t\tfield: 'qt_item_code',\t\t\t\twidth: 100 },\r\n\t\t{ title: '备注',\t\tfield: 'remark',\t\t\t\t\twidth: 100 },\r\n\t\t{ title: '助记码',\t\tfield: 'qt_item_code',\t\t\t\twidth: 100 },\r\n\t\t{ title: '状态', \t   field: 'enabled',\t\t\t\t\twidth: 80,\t\trender: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '操作',    align:'tc',   width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'qt-item-source/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'文件导入', onClick:()=>{\r\n\t\t\t\t\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='源物价项目' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'qt-item-source/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'qt-item-source/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\group-settings\\tp\\template-detail.js",["2255","2256"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\nimport Input from '@antd/form/input'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n    { name: '启用', value: '1' },\r\n    { name: '待启用', value: '0' },\r\n    { name: '禁用', value: '-1' }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '物价',    name:'price',       required: true, full: true, width: '100%'},\r\n\t\t    { label: '状态',    name: 'enabled',    required: true, full: true, width: '100%',  type: 'select', data: []},\r\n        ],\r\n        item_name: ''\r\n\t}\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit } = this.state\r\n        submit[1].data = statusOption.filter(i => i.value !== '-1')\r\n    }\r\n    componentWillReceiveProps(props) {\r\n        this.model = {qt_temp_id: props.qt_temp_id}\r\n        if (props.qt_temp_id) {\r\n            this.fetch(this.model)\r\n        }\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'qt-comp-item/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '物价代码',    field: 'price_code',\t\t\t\twidth: 100 },\r\n\t\t{ title: '关联物价',\tfield: 'price_rel_codes',\t\t\twidth: 100 },\r\n\t\t{ title: '中文简称',\tfield: 'item_name_sort',\t\t\twidth: 180 },\r\n\t\t{ title: '项目名称',\tfield: 'item_name',\t\t\t\t    width: 180 },\r\n\t\t{ title: '英文简称',\tfield: 'item_name_en_sort',\t\t\twidth: 100 },\r\n\t\t{ title: '英文名称',\tfield: 'item_name_en',\t\t\t\twidth: 220 },\r\n\t\t{ title: '检测方法',\tfield: 'detection_method_name',\t\twidth: 180 },\r\n\t\t{ title: '标准价格',\tfield: 'price',\t\t\t\t        width: 90 },\r\n\t\t{ title: '结算价格',\tfield: 'contract_price',\t\t\twidth: 90 },\r\n\t\t{ title: '助记码',      field: 'qt_item_code',\t\t\t\twidth: 90 },\r\n\t\t{ title: '备注',        field: 'remark',\t\t\t\t    width: 120 },\r\n\t\t{ title: '状态',        field: 'enabled',\t\t\t\t    width: 80,\t\trender: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '操作',    align:'tc',   width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n                        this.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'qt-comp-item/info',{ param:{qt_temp_id: this.props.qt_temp_id, source_item_id: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\t\r\n\trender(){\r\n        const { data, pullLoading, pag, submit } = this.state\r\n        const { qt_temp_id } = this.props\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{/* 搜索 */}\r\n                <div className='fxmj mb10'>\r\n                    <Input size='middle' p='请输入项目名称' ref='restItem' width={190} bordered={false} onChange={v=> this.state.item_name = v}  />\r\n                    <div>\r\n                        <Button label='查询' size='small' className='mr15 dkm' disabled={!qt_temp_id} onClick={() => {\r\n                            this.fetch({...this.model, item_name: this.state.item_name})\r\n                        }} />\r\n                        <Button label='重置' size='small' className='mr15 dkm' disabled={!qt_temp_id} onClick={(v) => {\r\n                            this.refs.restItem.clear()\r\n                            this.setState({item_name: ''})\r\n                            this.fetch(this.model)\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n                \r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={500} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'qt-comp-item/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {}\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\group-settings\\index.js",["2257","2258"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n\t{ name: \"启用\", value: \"1\" },\r\n\t{ name: \"禁用\", value: \"-1\" }\r\n]\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n\t\t\t{ label: '集团名称',\tname: 'group_name',\t\tfull: true, width: '100%', required: true},\r\n\t\t\t{ label: 'logo',\t\tname: 'logo',\t\t\tfull: true, width: '100%',          type: 'upload',     params: {modular: 117}},\r\n            { label: '中文简称',\tname: 'short_name'},\r\n            { label: '英文名称',    name: 'en_name'},\r\n            { label: '英文简称',    name: 'short_en_name'},\r\n            { label: '集团编号',    name: 'corp_group_code'},\r\n\t\t\t{ label: '区域',\t\tname: 'area_id',\t\ttype: 'cascader'},\r\n            { label: '地址',\t\tname: 'address'},\r\n            { label: '英文地址',    name: 'en_address'},\r\n            { label: '法人代表',    name: 'legal_person'},\r\n\t\t\t{ label: '固定电话',    name: 'tel'},\r\n\t\t\t{ label: '注册日期',\tname:'reg_date',\t\ttype:'date-time', after:true },\r\n\t\t\t{ label: '排序',\t\tname: 'sort'},\r\n\t\t\t{ label: '集团网址',    name: 'website'},\r\n\t\t\t{ label: '集团简介',    name: 'summary',\t\ttype: 'textarea', full: true, width: '100%'},\r\n\t\t\t{ label: '集团描述',    name: 'description',\ttype: 'textarea', full: true, width: '100%'},\r\n        ]\r\n\t}\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'corp-group/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type: 'checkbox' },\r\n\t\t{ title: '集团编码',    field: 'corp_group_code' },\r\n\t\t{ title: '中文名称',\tfield: 'group_name' },\r\n\t\t{ title: '简称',\t\tfield: 'short_name' },\r\n\t\t{ title: '英文名称',\tfield: 'en_name'},\r\n\t\t{ title: '英文简称',\tfield: 'short_en_name'},\r\n\t\t{ title: '状态',\t\tfield: 'enabled',           render: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '操作',    align:'tc',   width: 300, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'corp-group/info',{ param:{id: rows.id} }).then(data=>{\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button className='mr10' label='查看' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'system-settings/company?id=' + rows.uuid)\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button className='mr10' label='禁用' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst param = {uuid: rows.uuid} \r\n\t\t\t\t\t\tcoms.interfaceConfirm('corp-group/del', '禁用', param, () => {\r\n\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n\t\t\t\t\titem.value = ''\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'启用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('corp-group/open', '启用', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='集团管理' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'corp-group/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'corp-group/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\export-rule\\template.js",["2259"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n    { name: \"显示\", value: \"1\" },\r\n    { name: \"不显示\", value: \"2\" }\r\n]\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        uuid: '',\r\n\t\tsubmit: [\r\n\t\t\t{ label: '字段名称',    name: 'label_field',         required: true},\r\n\t\t\t{ label: '导出名称',        name: 'label_name', required: true},\r\n\t\t\t{ label: '排序',        name: 'sort'},\r\n\t\t\t{ label: '导出是否显示',\tname: 'display',     type: 'select',     data: [] },\r\n\t\t\t{ label: '处理方式',\tname: 'label_format_type',     type: 'select',     data: [], nameStr: 'label', onChange: (v) => {\r\n                this.handleTypeChange(v)\r\n            } },\r\n\t\t\t{ label: '',\tname: 'label_format_value1',    disabled: true },\r\n\t\t\t{ label: '',\tname: 'label_format_value2',     type: 'select',     data: [], visible: false },\r\n        ],\r\n    }\r\n    model_code= $fn.query('id') || ''\r\n    model = {model_code: this.model_code, limit: 100}\r\n    handleTypeChange(v) {\r\n        const { submit } = this.state\r\n        if (v !== '3') {\r\n            submit.forEach(item=>{\r\n                if (item.name === 'label_format_value2') {\r\n                    item.value = ''\r\n                    item.visible = false\r\n                }\r\n                if (item.name === 'label_format_value1') {\r\n                    item.value = ''\r\n                    item.visible = true\r\n                    if (v === '0') {\r\n                            item.disabled = true\r\n                    } else {\r\n                            item.disabled = false\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        if (v === '3') {\r\n            submit.forEach(item=>{\r\n                if (item.name === 'label_format_value1') {\r\n                    item.value = ''\r\n                    item.visible = false\r\n                }\r\n                if (item.name === 'label_format_value2') {\r\n                    item.value = ''\r\n                    item.visible = true\r\n                    item.disabled = false\r\n                }\r\n            })\r\n        }\r\n        this.setState({submit})\r\n      }\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        submit[3].data = statusOption\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 模板处理方式\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.labelFormatType, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[4].data = data\r\n                        this.setState({submit})\r\n                    } else {\r\n                        $http.submit(null, 'settings/getLabelFormatType').then(data => {\r\n                            submit[4].data = data\r\n                            this.setState({submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n        })\r\n        // 格式\r\n        $fn.getDisItem({\r\n            code: 66000,\r\n            callback: data=>{\r\n                submit[6].data = data\r\n                this.formatList = data\r\n            }\r\n        })\r\n        this.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'settings/getExportModelConfig', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '字段名称',    field: 'label_field' },\r\n\t\t{ title: '导出名称',    field: 'label_name'},\r\n\t\t{ title: '处理方式',    field: 'label_format',      render: ({rows})=>{\r\n            let str = rows.label_format_value\r\n            if (rows.label_format_type === '3') {\r\n                let d = $fn.hasArray(this.formatList) && this.formatList.filter(i=>i.value === rows.label_format_value)\r\n                str = $fn.hasArray(d) && d[0].name\r\n            }\r\n            return rows.label_format_type === '0' ? rows.label_format_type_name : `${rows.label_format_type_name}：${str}`\r\n        }},\r\n\t\t{ title: '排序',        field: 'sort'},\r\n\t\t{ title: '导出是否显示',        field: 'display',   render:({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.display)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '操作',        align:'tc',     render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n                        submit.forEach(item=>{\r\n                            if(item.name === 'copy_model_code'){\r\n                                item.disabled = true\r\n                            }\r\n                            if (item.name === 'copy_model_code') {\r\n                                item.visible = false\r\n                            }\r\n                            if (item.name === 'label_format_value1' || item.name === 'label_format_value2') {\r\n                                item.value = rows.label_format_value || ''\r\n                                if (rows.label_format_type !== '0') {\r\n                                    item.disabled = false\r\n                                } else {\r\n                                    item.disabled = true\r\n                                }\r\n                            }\r\n                        })\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        this.rows = rows\r\n                        this.isEdit = true\r\n                        $fn.setSubmitValues(submit, rows, ()=>{this.setState({submit})})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit, data } = this.state\r\n\t\t\t\tsubmit.forEach(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'label_format_value1') {\r\n                        item.visible = true\r\n                        item.disabled = true\r\n                    }\r\n                    if (item.name === 'label_format_value2') {\r\n                        item.visible = false\r\n                    }\r\n                    if (item.name === 'label_format_type') {\r\n                        item.value = '0'\r\n                    }\r\n                    if (item.name === 'sort') {\r\n                        item.value = `${data.length + 1}`\r\n                    }\r\n                    if (item.name === 'display') {\r\n                        item.value = '1'\r\n                    }\r\n                })\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n            } },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\t\t\t\t\t\t$http.submit(null,'settings/delExportModelConfig',{ param:{uuids: keys} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n            } },\r\n            { label:'返回', ghost:true, onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='配置导出模板' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n                        data = { submit }\r\n                        onChange = { (v, press, {name})=>{\r\n                            submit.forEach(item=>{\r\n                                if (item.name === name) {\r\n                                    item.value = v\r\n                                }\r\n                            })\r\n                        } }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n                            const data = {\r\n                                model_code: this.model_code,\r\n                                label_format_value: v.label_format_type !== '3' ? v.label_format_value1 : v.label_format_value2\r\n                            }\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid, ...data}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'settings/editExportModelConfig',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, ...data }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'settings/addExportModelConfig', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\export-rule\\index.js",["2260"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n    { name: \"启用\", value: \"1\" },\r\n    { name: \"禁用\", value: \"2\" }\r\n]\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        uuid: '',\r\n\t\tsubmit: [\r\n\t\t\t{ label: '模板名称',    name: 'model_name',         required: true},\r\n\t\t\t{ label: '状态',        name: 'status',             type: 'select',     data: []},\r\n\t\t\t{ label: '复制模板',\tname: 'copy_model_code',    disabled: true,     type: 'select',     data: [],       nameStr: 'model_name', idStr: 'uuid' },\r\n\t\t\t{ label: '描述',        name: 'model_description',  type: 'textarea',   full: true,         width: '100%'},\r\n        ],\r\n        submit1: [\r\n\r\n        ]\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'模板名称', name:'model_name'},\r\n\t\t{ label:'模板编码', name:'model_code'},\r\n\t\t{ label:'状态',     name:'status',      type: 'select',     data: []},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        submit[1].data = statusOption\r\n        this.forms[2].data = statusOption\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 模板列表\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.exportTemplate, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[2].data = data\r\n                        this.setState({submit})\r\n                    } else {\r\n                        $http.submit(null, 'lis-outsourcing-company/getExportModel4Select').then(data => {\r\n                            submit[2].data = data\r\n                            this.setState({submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n        this.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'settings/getExportModel', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '模板名称',    field: 'model_name' },\r\n\t\t{ title: '模板编码',    field: 'model_code'},\r\n\t\t{ title: '模板描述',    field: 'model_description'},\r\n\t\t{ title: '状态',        field: 'status',                width: 80,      render:({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.status)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n\t\t{ title: '创建时间',    field: 'created_at',            width: 160,     align: 'tc'},\r\n\t\t{ title: '操作',        align:'tc',                     width: 300,     render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n                        submit.forEach(item=>{\r\n                            if(item.name === 'copy_model_code'){\r\n                                item.disabled = true\r\n                            }\r\n                            if (item.name === 'copy_model_code') {\r\n                                item.visible = false\r\n                            }\r\n                        })\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        this.rows = rows\r\n                        this.isEdit = true\r\n                        $fn.setSubmitValues(submit, rows, ()=>{this.setState({submit})})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button className='ml10' label='配置模板' ghost onClick={e=>{\r\n                        $fn.push(this, $fn.getRoot().root + 'system-settings/export-rule/template?id=' + rows.model_code)\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.forEach(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'copy_model_code') {\r\n                        item.disabled = false\r\n                    }\r\n                    if (item.name === 'copy_model_code') {\r\n                        item.visible = true\r\n                    }\r\n                })\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n            } },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\t\t\t\t\t\t$http.submit(null,'settings/delExportModel',{ param:{uuids: keys} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='导出规则设置' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'settings/editExportModel',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'settings/addExportModel', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\group-settings\\company-template.js",["2261","2262","2263"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global template\r\nconst Text = $async(()=>import('@tp/text'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 页面常量\r\nconst statusOption = [\r\n    { name: '启用', value: '1' },\r\n    { name: '禁用', value: '-1' },\r\n    { name: '待开启', value: '0' }\r\n]\r\n// ===================================================================== component\r\nconst TemplateDetail = $async(()=>import('./tp/template-detail'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '中文名称',    \tname: 'temp_name',      required: true},\r\n            { label: '英文名称',    \tname: 'temp_name_en'},\r\n            { label: '模板编码',    \tname: 'temp_code',      required: true,         disabled: true},\r\n            { label: '模板状态',    \tname: 'enabled',        required: true,\t\t\ttype: 'select',\t\tdata: []},\r\n            { label: '排序',\t\t\tname: 'sort',           required: true},\r\n            { label: '备注',\t\t\tname: 'remark',         full: true,\t\t\t\twidth: '100%',\t\ttype: 'textarea'},\r\n        ],\r\n        submit1: [\r\n            { label:'被复制模板编码',   name:'from_temp_code',  required: true},\r\n\t\t    { label:'模板编码',         name:'temp_code',       required: true},\r\n\t\t    { label:'模板名称',         name:'temp_name',       required: true},\r\n\t\t    { label:'英文名称',         name:'temp_name_en',    required: true},\r\n\t\t    { label:'排序',             name:'sort',            required: true},\r\n            { label: '备注',\t\t\tname: 'remark',         full: true,\t\t\t\twidth: '100%',\t\ttype: 'textarea'},\r\n        ],\r\n        qt_temp_id: ''\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'状态',\t\tname:'enabled',     type: 'select',     data: []},\r\n\t\t{ label:'模板名称', name:'temp_name'},\r\n\t\t{ label:'模板编码', name:'temp_code'},\r\n    ]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tconst { submit } = this.state\r\n\t\tthis.forms[0].data = statusOption\r\n\t\tsubmit[3].data = statusOption\r\n\t\tthis.fetch(this.model)\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'qt-comp-template/index', param)\r\n\t// table\r\n\tcols = [\r\n        { type: 'checkbox' },\r\n\t\t{ title: '模板名称',    field: 'temp_name',\t\t\t\twidth: 120 },\r\n\t\t{ title: '英文名称',\tfield: 'temp_name_en',\t\t\twidth: 120 },\r\n\t\t{ title: '模板编码',\tfield: 'temp_code',\t\t\t\twidth: 220 },\r\n\t\t{ title: '状态', \t   field: 'enabled',\t\t\t\twidth: 80,\t\trender: ({rows}) => {\r\n            let d = statusOption.filter(i => i.value === rows.enabled)\r\n            return $fn.hasArray(d) ? d[0].name : <Text value={null}/>\r\n        }},\r\n        { title: '备注',\tfield: 'remark',\t\t\t\t\twidth: 220 },\r\n\t\t{ title: '操作',    align:'tc',   width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n                        this.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'qt-comp-template/infotemp',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{\r\n                                submit[2].disabled = true\r\n                                this.setState({submit})\r\n                            })\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n                const { submit } = this.state\r\n                this.disabled = false\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'temp_code') {\r\n                        item.disabled = false\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'复制模板', onClick:()=>{\r\n\t\t\t\tthis.refs.modal1.open()\r\n                const { submit1 } = this.state\r\n\t\t\t\tsubmit1.map(item => {\r\n                    item.value = ''\r\n\t\t\t\t})\r\n\t\t\t\tthis.setState({ submit1 })\r\n            } },\r\n            { label:'禁用', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconst param = {uuid: this.state.selectedKeys.map(v=>v.uuid)} \r\n\t\t\t\tcoms.interfaceConfirm('qt-comp-template/del', '禁用', param, () => {\r\n                    this.fetch(this.model)\r\n                    this.setState({selectedKeys: []})\r\n                })\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, submit1 } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='公司-模板' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (v, rows) => this.setState({ selectedKeys: v, qt_temp_id:  rows.uuid}) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <TemplateDetail qt_temp_id={this.state.qt_temp_id} />\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'qt-comp-template/edittemp',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'qt-comp-template/addtemp', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n                <Modal ref='modal1' title='复制模板' width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit1 }\r\n                        onSubmit = { v => {\r\n                            const param = { ...v }\r\n                            $http.submit(null, 'qt-comp-template/cptemp', { param }).then(data => {\r\n                                message.then(f => f.default.success('操作成功'))\r\n                                this.refs.modal1.close()\r\n                                this.fetch(this.model)\r\n                            })\r\n                        }}\r\n                        onClose = { ()=>this.refs.modal1.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\dictionary\\dictionary-data.js",["2264","2265"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '字典名称',    name:'item_name'},\r\n            { label: '英文名称',    name:'name_en'},\r\n            { label: '所属分类',    name:'dis_code',    type: 'select',     data: []},\r\n            { label: '描述',        name: 'remark',     type: 'textarea',   full: true, width: '100%'},\r\n        ],\r\n        forms: [\r\n            { label: '字典编码', name:'item_code'},\r\n            { label: '字典名称', name:'item_name'},\r\n            { label: '所属分类', name:'dis_code',  type: 'select', data: []},\r\n        ]\r\n\t}\r\n    id = $fn.query('id') || ''\r\n\tmodel = {dis_code: this.id}\r\n\tcomponentDidMount(){\r\n        const { submit, forms } = this.state\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 字典分类\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.dictionarySelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[2].data = data\r\n                        forms[2].data = data\r\n                        this.setState({forms, submit})\r\n                    } else {\r\n                        $http.submit(null, 'dictionary/select').then(data => {\r\n                            submit[2].data = data\r\n                            forms[2].data = data\r\n                            this.setState({forms, submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\tthis.fetch(this.model)\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'dis-item/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '字典编码',    field: 'item_code',     width: 120 },\r\n\t\t{ title: '字典名称',\tfield: 'item_name',     width: 120 },\r\n\t\t{ title: '英文名称',\tfield: 'name_en',     width: 120 },\r\n\t\t{ title: '所属分类',\tfield: 'dis_name',      width: 120 },\r\n\t\t{ title: '操作',        align:'tc',             width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'dis-item/info',{ param:{id: rows.id} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n        const arr = [\r\n            { label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n                const { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (this.id && item.name === 'dis_code') {\r\n                        item.value = this.id\r\n                    }\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'文件导入', onClick:()=>{\r\n\t\t\t\t\r\n            } },\r\n        ]\r\n        if (this.id) {\r\n            arr.push({ label:'返回', onClick:()=>{ $fn.back(this) } },)\r\n        }\r\n        return arr\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, forms } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='数据字典' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,forms) }\r\n                    loading\t\t= { pullLoading }\r\n                    init        = { form => form.setFieldsValue({dis_code: this.model.dis_code}) }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'dis-item/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v, item_code: v.item_code || '' }\r\n                                $http.submit(null, 'dis-item/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\dictionary\\dictionary-classify.js",["2266","2267"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '分类编码',\tname: 'dis_code',\t    required: true},\r\n            { label: '分类名称',    name: 'dis_name',\t\trequired: true},\r\n            { label: '描述',        name: 'dis_desc',       full: true,\t\twidth: '100%',\ttype: 'textarea'},\r\n        ]\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'分类编码', name:'dis_code'},\r\n\t\t{ label:'分类名称', name:'dis_name'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'dictionary/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '序号',        field: 'id',\t\twidth: 80 },\r\n\t\t{ title: '分类编码',\tfield: 'dis_code',\twidth: 120 },\r\n\t\t{ title: '分类名称',\tfield: 'dis_name',\twidth: 150},\r\n        { title: '分类描述',\tfield: 'dis_desc',\twidth: 500 },\r\n\t\t{ title: '操作',        align:'tc',         width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'dictionary/info',{ param:{id: rows.id} }).then(data=>{\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='mr10' label='字典内容' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'system-settings/dictionary-data?id=' + rows.dis_code)\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n\t\t\t\t})\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'文件导入', onClick:()=>{\r\n\t\t\t\t\r\n            } },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='字典分类' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'dictionary/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\t$fn.setCache()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'dictionary/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\t$fn.setCache()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\basic-settings\\list-mode.js",["2268"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '名称',    name: 'name'},\r\n            { label: '编号',    name: 'code'},\r\n            { label: '内容',    name: 'content',    full: true, width: '100%', type: 'textarea'},\r\n            { label: '备注',    name: 'remark',     full: true, width: '100%', type: 'textarea'},\r\n        ]\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'编号',\t\tname:'code'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'settings/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '编号',    field: 'code' },\r\n\t\t{ title: '名称',\tfield: 'name' },\r\n\t\t{ title: '内容',\tfield: 'content' },\r\n\t\t{ title: '备注',\tfield: 'remark'},\r\n\t\t{ title: '操作',    align:'tc',   width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'settings/info',{ param:{id: rows.id} }).then(data=>{\r\n\t\t\t\t\t\t\tthis.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='列表模式'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'settings/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'settings/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\tp\\menu-relate.js",["2269"],"import React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tdata1: [],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'关键字',\tname:'keyword'},\r\n\t\t{ label:'权限代码',\tname:'perm_code'},\r\n\t\t{ label:'权限类型',\tname:'perm_type', type: 'select', data: []},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        // 权限类型\r\n        $fn.getDisItem({\r\n            code: 900,\r\n            callback: data=>{\r\n                this.forms[2].data = data\r\n            }\r\n        })\r\n\t\tthis.getTable2()\r\n        this.fetch(this.model)\r\n    }\r\n    getTable2() {\r\n        $http.submit(null, 'permission/bindmenulists', { param: {menu_id: this.props.uuid} }).then(data => {\r\n\t\t\tthis.setState({data1: data})\r\n\t\t})\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'permission/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type: 'checkbox' },\r\n\t\t{ title: '权限代码', \tfield: 'perm_code',\t\twidth: 120, tdCss: 'wpn' },\r\n\t\t{ title: '权限名称',\tfield: 'perm_name',\t\twidth: 120, tdCss: 'wpn' },\r\n\t\t{ title: '权限类型',\tfield: 'type',          width: 80},\r\n\t]\r\n\tcols1 = [\r\n\t\t{ title: '权限代码', \tfield: 'perm_code',\t\twidth: 120, tdCss: 'wpn' },\r\n\t\t{ title: '权限名称',\tfield: 'perm_name',\t\twidth: 120, tdCss: 'wpn' },\r\n\t\t{ title: '权限类型',\tfield: 'type',\t        width: 80},\r\n\t\t{ title: '操作', align:'tc', width: 80, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='解绑' ghost onClick={e=>{\r\n\t\t\t\t\t\tconst param = {uuid: rows.uuid} \r\n\t\t\t\t\t\tcoms.interfaceConfirm('permission/unbindmenu', '解绑', param, () => {\r\n                            this.fetch(this.model)\r\n\t\t\t\t\t\t\tthis.getTable2()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, data1, pag, selectedKeys } = this.state\r\n\t\tconst { onClose, uuid } = this.props\r\n\t\t// type=1:查看，2:添加\r\n\t\treturn (\r\n\t\t\t<>\r\n                <SearchForm\r\n                    className\t= 'pb10'\r\n                    data\t\t= { this.forms } \r\n                    onChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n                    onSubmit\t= { $fn.onSubmit.bind(this) } \r\n                    onAdd\t\t= { this.onAdd } \r\n                    onReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n                    loading\t\t= { pullLoading }\r\n                />\r\n                <Table\r\n                    className\t\t= 'xplr'\r\n                    cols\t\t\t= { this.cols }\r\n                    data \t\t\t= { data }\r\n                    loading \t\t= { pullLoading }\r\n                    onRow\t\t\t= { v => {\r\n                        this.setState({ selectedKeys: v })\r\n                    } }\r\n                    pag\t\t\t\t= { pag }\r\n                    onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                />\r\n\t\t\t\t<div className='pb10 b'>已有权限</div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= ''\r\n\t\t\t\t\tcols\t\t\t= { this.cols1 }\r\n\t\t\t\t\tdata \t\t\t= { data1 }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<Button label='取消' size='middle' className='mr15 dkm' onClick={onClose} />\r\n\t\t\t\t\t<Button label='确定' ghost disabled={!selectedKeys.length} size='middle' className='mr15 dkm' onClick={(v) => {\r\n\t\t\t\t\t\tconst param = {\r\n\t\t\t\t\t\t\tmenu_id: uuid,\r\n\t\t\t\t\t\t\tper_ids: selectedKeys.map(i => i.uuid)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$http.submit(null, 'permission/bindmenu', { param }).then(data => {\r\n\t\t\t\t\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\t\t\t\t\tonClose()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\tp\\submit-form.js",["2270"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'关键字',\tname:'keyword'},\r\n\t\t{ label:'权限代码',\tname:'perm_code'},\r\n\t\t{ label:'权限类型',\tname:'perm_type', type: 'select', data: []},\r\n\t]\r\n    model = {}\r\n\tcomponentDidMount(){\r\n        // 权限类型\r\n\t\t$fn.getDisItem({\r\n            code: 900,\r\n            callback: data=>{\r\n                this.forms[2].data = data\r\n            }\r\n        })\r\n        const { type, id } = this.props\r\n        if (type === 'process') { // 流程授权列表\r\n            this.btnType = 'process_id'\r\n            this.model = {filter: 'process', process_id: id}\r\n        } else if (type === 'group') { // 分组\r\n            this.btnType = 'group'\r\n            this.model = {filter: 'groups', group_id: id}\r\n        } else if (type === 'position') { // 职位\r\n            this.btnType = 'position'\r\n            this.model = {filter: 'position', pos_id: id}\r\n        } else if (type === 'role') { // 角色\r\n            this.btnType = 'role'\r\n            this.model = {filter: 'role', role_id: id}\r\n        } else if (type === 'employee') { // 员工\r\n            this.btnType = 'employee'\r\n            this.model = {filter: 'employee', empl_id: id}\r\n        }\r\n        this.fetch(this.model)\r\n    }\r\n    addFn(api, param, onClose) {\r\n        $http.submit(null, api, { param }).then(data => {\r\n            message.then(f => f.default.success('操作成功'))\r\n            this.fetch(this.model)\r\n            onClose && onClose()\r\n        })\r\n    }\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this, 'permission/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '权限代码', \tfield: 'perm_code',\t\twidth: 150, tdCss: 'wpn' },\r\n\t\t{ title: '权限名称',\t\tfield: 'perm_name',\t\twidth: 150, tdCss: 'wpn'},\r\n\t\t{ title: '权限级别',\t\t\tfield: 'level',\twidth: 60},\r\n\t\t{ title: '权限类型',\t\t\tfield: 'type',\twidth: 60},\r\n    ]\r\n    cols1 = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '权限代码', \tfield: 'perm_code',\t\twidth: 150, tdCss: 'wpn' },\r\n\t\t{ title: '权限名称',\t\tfield: 'perm_name',\t\twidth: 150, tdCss: 'wpn'},\r\n\t\t{ title: '权限说明',\t\t\tfield: 'perm_desc',\twidth: 150, tdCss: 'wpn'},\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, selectedKeys } = this.state\r\n\t\tconst { onClose, id, type } = this.props\r\n\t\treturn (\r\n\t\t\t<>\r\n                <SearchForm\r\n                    className\t= 'pb10'\r\n                    data\t\t= { this.forms } \r\n                    onChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n                    onSubmit\t= { $fn.onSubmit.bind(this) } \r\n                    onAdd\t\t= { this.onAdd } \r\n                    onReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n                    loading\t\t= { pullLoading }\r\n                />\r\n                {\r\n                    type === 'process' && <Table\r\n                        className\t\t= 'xplr'\r\n                        cols\t\t\t= { this.cols1 }\r\n                        data \t\t\t= { data }\r\n                        loading \t\t= { pullLoading }\r\n                        onRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n                        pag\t\t\t\t= { pag }\r\n                        onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                    />\r\n                }\r\n                {\r\n                     type !== 'process' && <Table\r\n                        className\t\t= 'xplr'\r\n                        cols\t\t\t= { this.cols }\r\n                        data \t\t\t= { data }\r\n                        loading \t\t= { pullLoading }\r\n                        onRow\t\t\t= { v => { this.setState({ selectedKeys: v }) } }\r\n                        pag\t\t\t\t= { pag }\r\n                        onChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n                    />\r\n                }\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<Button label='取消' size='middle' className='mr15 dkm' onClick={onClose} />\r\n\t\t\t\t\t<Button label='确定' ghost size='middle' className='mr15 dkm' onClick={(v) => {\r\n\t\t\t\t\t\tconst param = {\r\n                            perm_id: selectedKeys.map(i => i.uuid)\r\n                        }\r\n                        param[this.btnType] = id\r\n                        if (type === 'process') { // 流程授权列表\r\n                            this.addFn('fl-process-auth/addpermission', param, onClose)\r\n                        } else if (type === 'group') { // 分组\r\n                            this.addFn('groups/addPermission', param, onClose)\r\n                        } else if (type === 'position') { // 职位\r\n                            this.addFn('position/addPermission', param, onClose)\r\n                        } else if (type === 'role') { // 角色\r\n                            this.addFn('role/addPermission', param, onClose)\r\n                        } else if (type === 'employee') { // 员工\r\n                            this.addFn('employee/addpermission', param, onClose)\r\n                        }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\system-config.js",["2271"],"import React from 'react'\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n        selectedKeys:[],\r\n        submit: [\r\n            { label: '名称',    name: 'name',\t\trequired: true},\r\n            { label: '编号',    name: 'code',\t\tdisabled: true},\r\n            { label: '内容',    name: 'content',    full: true, width: '100%', required: true, type: 'textarea'},\r\n            { label: '备注',    name: 'remark',     full: true, width: '100%', type: 'textarea'},\r\n        ]\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'编号',\t\tname:'code'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch(this.model)\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'settings/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '编号',    field: 'code' },\r\n\t\t{ title: '名称',\tfield: 'name' },\r\n\t\t{ title: '内容',\tfield: 'content' },\r\n\t\t{ title: '备注',\tfield: 'remark'},\r\n\t\t{ title: '操作',    align:'tc',   width: 200, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button className='mr10' label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n                        const { submit } = this.state\r\n\t\t\t\t\t\t$http.submit(null,'settings/info',{ param:{id: rows.id} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='系统设置-源配置'>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n                <Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n                    <SubmitForm\r\n                        modal\r\n                        data = { submit }\r\n                        onSubmit = { v => {\r\n                            if (this.isEdit) {\r\n                                const param = { ...this.rows, ...v}\r\n                                $http.submit(null,'settings/edit',{ param }).then(data=>{\r\n                                    message.then(f=>f.default.success('编辑成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            } else {\r\n                                const param = { ...v }\r\n                                $http.submit(null, 'settings/add', { param }).then(data => {\r\n                                    message.then(f => f.default.success('添加成功'))\r\n                                    this.refs.modal.close()\r\n                                    this.fetch(this.model)\r\n                                })\r\n                            }\r\n                            \r\n                        }}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n                    />\r\n                </Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\role.js",["2272","2273"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '角色名称',\tname: 'role_name',      required: true},\r\n\t\t\t{ label: '角色代码',\tname: 'role_code',      required: true},\r\n\t\t\t{ label: '角色类型',\tname: 'role_type',      required: true,\t\ttype: 'select',\tdata: [] },\r\n\t\t\t{ label: '排序',\t\tname: 'sort'},\r\n\t\t\t{ label: '角色描述',\tname: 'role_desc',\t\ttype: 'textarea',   full: true,     width: '100%' },\r\n\t\t],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'角色名称', name:'role_name'},\r\n\t\t{ label:'角色代码', name:'role_code'},\r\n\t\t{ label:'角色类型', name:'role_type',   type:'select', data:[]},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        // 角色类型\r\n\t\t$fn.getDisItem({\r\n            code: 600,\r\n            callback: data=>{\r\n                this.forms[2].data = data\r\n                submit[2].data = data\r\n            }\r\n        })\r\n        this.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'Role/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: 'ID',          field: 'id',            width: 90 },\r\n\t\t{ title: '角色名称',    field: 'role_name',       width: 300},\r\n\t\t{ title: '角色代码',    field: 'role_code',       width: 200},\r\n\t\t{ title: '角色类型',    field: 'role_type',       width: 80},\r\n\t\t{ title: '创建时间',    field: 'created_at',    width: 160, align:'tc' },\r\n\t\t{ title: '操作',        align:'tc',             width: 100, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n                        $http.submit(null,'Role/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='ml10' label='权限关联' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'system-settings/role/associated?id=' + rows.uuid + '&type=role')\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'sort') {\r\n                        item.value = '0'\r\n                    }\r\n                })\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\t\t\t\t\t\t$http.submit(null,'Role/delete',{ param:{uuid: keys} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='角色列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'Role/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'Role/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\position.js",["2274","2275"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '职位名称',\tname: 'pos_name',      required: true},\r\n\t\t\t{ label: '职位代码',\tname: 'pos_code',      required: true},\r\n\t\t\t{ label: '职位类型',\tname: 'post_type',      required: true,\t\ttype: 'select',\tdata: [] },\r\n\t\t\t{ label: '排序',\t\tname: 'sort'},\r\n\t\t\t{ label: '职位描述',\tname: 'pos_desc',\t\ttype: 'textarea',   full: true,     width: '100%' },\r\n\t\t],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'职位名称', name:'pos_name'},\r\n\t\t{ label:'职位代码', name:'pos_code'},\r\n\t\t{ label:'职位类型', name:'post_type',   type:'select', data:[]},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        // 职位类型\r\n\t\t$fn.getDisItem({\r\n            code: 700,\r\n            callback: data=>{\r\n                this.forms[2].data = data\r\n                submit[2].data = data\r\n            }\r\n        })\r\n        this.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'position/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: 'ID',          field: 'id',            width: 90 },\r\n\t\t{ title: '职位名称',    field: 'pos_name',       width: 300},\r\n\t\t{ title: '职位代码',    field: 'pos_code',       width: 200},\r\n\t\t{ title: '职位类型',    field: 'post_type',       width: 80},\r\n\t\t{ title: '所属分公司',  field: 'company_name',  width: 120},\r\n\t\t{ title: '创建时间',    field: 'created_at',    width: 160, align:'tc' },\r\n\t\t{ title: '操作',        align:'tc',             width: 100, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n                        $http.submit(null,'position/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='ml10' label='权限关联' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'system-settings/position/associated?id=' + rows.uuid + '&type=position')\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'sort') {\r\n                        item.value = '0'\r\n                    }\r\n                })\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\t\t\t\t\t\t$http.submit(null,'position/delete',{ param:{uuid: keys} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='职位列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'position/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'position/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\common\\utils\\time.js",["2276"],"import $fn from '../fn'\r\n\r\nconst formatNumber = function(n) {\r\n    n = n.toString()\r\n    return n[1] ? n : '0' + n\r\n}\r\nconst join = function(arr,split){\r\n\treturn arr.map(formatNumber).join(split)\r\n}\r\nexport default {\r\n\tfull: function(time){\r\n\t\tvar date = new Date(time);\r\n\t    return {\r\n\t    \tyear : date.getFullYear(),\r\n\t     \tmonth : date.getMonth() + 1,\r\n\t    \tday : date.getDate(),\r\n\t    \th : date.getHours(),\r\n\t   \t\tm : date.getMinutes(),\r\n\t    \ts : date.getSeconds(),\r\n\t    }\r\n\t},\r\n\tformat: function(time,option){\r\n\t\tvar opt = { s:'-', l:'en', t:'ymd', ...option }\r\n\t\tvar str = null\r\n        var date = null\r\n        if($fn.isString(time)){\r\n            date = this.getTime(time)\r\n        }else if(time instanceof Date){\r\n            date = time.getTime()\r\n        }else{\r\n\t\t\tdate = time\r\n\t\t}\r\n\r\n\t\tif(date){\r\n\t\t\tvar t = this.full(date);\r\n\t\t\tswitch(opt.t){\r\n\t\t\t\tcase 'full':\r\n\t\t\t\t\tstr = join([t.year,t.month,t.day],opt.s) + ' ' + join([t.h,t.m,t.s],':')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ymd-hm':\r\n\t\t\t\t\tstr = join([t.year,t.month,t.day],opt.s) + ' ' + join([t.h,t.m],':') + ':00'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ymd':\r\n\t\t\t\t\tstr = opt.l === 'zh' ? t.year+'年'+t.month+'月'+t.day+'日' : join([t.year,t.month,t.day],opt.s)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hms':\r\n\t\t\t\t\tstr = join([t.h,t.m,t.s],':')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hm':\r\n\t\t\t\t\tstr = join([t.h,t.m],':')\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str\r\n\t},\r\n\tgetTime(time){\r\n\t\treturn time ? new Date(time).getTime() :  new Date().getTime()\r\n\t},\r\n\t// 杜  --2020-10-15  时间的半个月组件\r\n\tcustomDate(ds, time, timeStr) { // ds:当前时间前xx天（如：1表示昨天，-1表示明天），time：显示时间，start为0时，end为23时59分59秒，否则显示当前时间，timeStr：默认传入时分秒\r\n\t\tconst current = new Date();\r\n\t\tconst y = current.getFullYear();\r\n\t\tconst m = current.getMonth() + 1 > 9 ? current.getMonth() + 1 : `0${current.getMonth() + 1}`;\r\n\t\tconst d = current.getDate() > 9 ? current.getDate() : `0${current.getDate()}`;\r\n\t\tconst hh = current.getHours() > 9 ? current.getHours() : `0${current.getHours()}`;\r\n\t\tconst mm = current.getMinutes() > 9 ? current.getMinutes() : `0${current.getMinutes()}`;\r\n\t\tconst ss = current.getSeconds() > 9 ? current.getSeconds() : `0${current.getSeconds()}`; // 赵兴英 - 2020-06-05：时间添加0补位\r\n\t\tlet d1 = ''\r\n\t\tif (ds === 1) {\r\n\t\t  const diff = d - ds > 9 ? d - ds : `0${d - ds}`\r\n\t\t  if (timeStr) {\r\n\t\t\td1 = `${y}-${m}-${diff} ${timeStr}`\r\n\t\t  } else {\r\n\t\t\tif (time === 'start') {\r\n\t\t\t  d1 = `${y}-${m}-${diff} 00:00:00`\r\n  \r\n\t\t\t} else if (time === 'end') {\r\n\t\t\t  d1 = `${y}-${m}-${diff} 23:59:59`\r\n\t\t\t} else {\r\n\t\t\t  d1 = `${y}-${m}-${diff} ${hh}:${mm}:${ss}`\r\n\t\t\t}\r\n\t\t  }\r\n\t\t} else if (ds === 2) {\r\n\t\t  // 薛 | 2020-06-05 | 返回本月1号\r\n\t\t  if (time === 'date') { // 赵 - 2020-06-28：time === date为日期格式\r\n\t\t\td1 = `${y}-${m}-01`\r\n\t\t  } else {\r\n\t\t\td1 = `${y}-${m}-01 00:00:00`\r\n\t\t  }\r\n\t\t} else if (ds === 3) {\r\n\t\t\t// 薛 | 2020-06-05 | 提前三十天\r\n\t\t\tif (time === 'date') { // 杜 - 2020-11-11：time === date为日期格式\r\n\t\t\t  d1 = `${y}-${m-1}-${d}`\r\n\t\t\t} else {\r\n\t\t\t  d1 = `${y}-${m-1}-${d} 00:00:00`\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t  if (ds === 'current-date') { // 赵 - 2020-06-28：返回当前日期\r\n\t\t\td1 = `${y}-${m}-${d}`\r\n\t\t  } else {\r\n\t\t\td1 = `${y}-${m}-${d} ${hh}:${mm}:${ss}`\r\n\t\t  }\r\n\t\t}\r\n\t\treturn d1\r\n\t},\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\permission.js",["2277","2278"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '权限名称',\tname: 'perm_name',      required: true},\r\n\t\t\t{ label: '英文名称',\tname: 'perm_name_en'},\r\n\t\t\t{ label: '权限代码',\tname: 'perm_code',      required: true},\r\n\t\t\t{ label: '排序',\t\tname: 'sort'},\r\n\t\t\t{ label: '权限级别',\tname: 'level',          required: true,\t\ttype: 'select',\tdata: [] },\r\n\t\t\t{ label: '权限类型',\tname: 'perm_type',      required: true,\t\ttype: 'select',\tdata: [] },\r\n\t\t\t{ label: '权限描述',\tname: 'perm_desc',\t\ttype: 'textarea',   full: true,     width: '100%' },\r\n\t\t],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'权限名称', name:'perm_name'},\r\n\t\t{ label:'权限代码', name:'perm_code'},\r\n\t\t{ label:'权限类型', name:'perm_type',   type:'select', data:[]},\r\n\t\t{ label:'权限级别', name:'level',       type:'select', data:[]},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        // 权限类型\r\n\t\t$fn.getDisItem({\r\n            code: 900,\r\n            callback: data=>{\r\n                this.forms[2].data = data\r\n                submit[5].data = data\r\n            }\r\n        })\r\n        // 权限级别\r\n\t\t$fn.getDisItem({\r\n            code: 800,\r\n            callback: data=>{\r\n                this.forms[3].data = data\r\n                submit[4].data = data\r\n            }\r\n        })\r\n        this.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'permission/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: 'ID',          field: 'id',            width: 90 },\r\n\t\t{ title: '权限名称',    field: 'perm_name',     width: 300},\r\n\t\t{ title: '权限代码',    field: 'perm_code',     width: 200},\r\n\t\t{ title: '权限类型',    field: 'type',          width: 80},\r\n\t\t{ title: '权限级别',    field: 'level',         width: 120},\r\n\t\t{ title: '权限描述',    field: 'perm_desc',     width: 300},\r\n\t\t{ title: '创建时间',    field: 'created_at',    width: 160, align:'tc' },\r\n\t\t{ title: '操作',        align:'tc',             width: 100, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n                        $http.submit(null,'permission/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'sort') {\r\n                        item.value = '0'\r\n                    }\r\n                })\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\t\t\t\t\t\t$http.submit(null,'permission/delete',{ param:{uuid: keys} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='权限库' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'permission/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'permission/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\menu.js",["2279","2280"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== 页面常量\r\nconst menuTypeOption = [\r\n    { name: '顶部菜单', value: '1' },\r\n    { name: '左侧菜单', value: '2' }\r\n]\r\n// ===================================================================== component\r\nconst RelateForm = $async(()=>import('./tp/menu-relate'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '菜单名称',\tname: 'menu_name',      required: true},\r\n\t\t\t{ label: '英文名称',\tname: 'menu_en',        required: true},\r\n\t\t\t{ label: '路径',\t    name: 'access_route'},\r\n\t\t\t{ label: 'web路由',\t    name: 'web_route'},\r\n\t\t\t{ label: '排序',\t\tname: 'sort'},\r\n\t\t\t{ label: '上级菜单',\tname: 'parent_id',      required: true,\t\ttype: 'select',\tdata: [], nameStr: 'menu_name', idStr: 'id' },\r\n\t\t\t{ label: '菜单类型',\tname: 'menu_type',      required: true,\t\ttype: 'select',\tdata: [] },\r\n\t\t\t{ label: '图标',\t    name: 'icon',           required: true,\t\ttype: 'select',\tdata: [] },\r\n\t\t\t{ label: '所属视图',\tname: 'system_view',\ttype: 'select',     data: [] },\r\n\t\t],\r\n\t\tuuid: ''\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'菜单名称',         name:'menu_name'},\r\n\t\t{ label:'英文名称',         name:'menu_en'},\r\n        { label:'上级菜单',         name:'parent_id',       type:'select',      data:[],        nameStr: 'menu_name',   idStr: 'id'},\r\n\t\t{ label:'路径',             name:'access_route'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        // 菜单类型\r\n        submit[6].data = menuTypeOption\r\n        // 所属视图\r\n\t\t$fn.getDisItem({\r\n            code: 400,\r\n            callback: data=>{\r\n                submit[8].data = data\r\n            }\r\n        })\r\n        cacheApi.then(f => {\r\n            const d = f.default\r\n            // 菜单列表\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: d.menuSelect, callback: (data) => {\r\n                    if ($fn.hasArray(data)) {\r\n                        submit[5].data = data\r\n                        this.forms[2].data = data\r\n                        this.setState({submit})\r\n                    } else {\r\n                        $http.submit(null, 'menu/select').then(data => {\r\n                            submit[5].data = data\r\n                            this.forms[2].data = data\r\n                            this.setState({submit})\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n        this.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'menu/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '菜单名称',    field: 'menu_name'},\r\n\t\t{ title: '英文名称',    field: 'menu_en'},\r\n\t\t{ title: '上级菜单',    field: 'parent_name'},\r\n\t\t{ title: '图标',        field: 'icon'},\r\n\t\t{ title: '排序',        field: 'sort'},\r\n\t\t{ title: '创建时间',    field: 'created_at', align:'tc' },\r\n\t\t{ title: '操作',        align:'tc',         render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n                        $http.submit(null,'menu/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n                    <Button className='ml10' label='权限关联' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.setState({uuid: rows.uuid})\r\n\t\t\t\t\t\tthis.refs.modal1.open()\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'sort') {\r\n                        item.value = '0'\r\n                    }\r\n                })\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\t\t\t\t\t\t$http.submit(null,'menu/del',{ param:{uuid: keys} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, uuid } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='菜单列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'menu/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'menu/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal1' title='权限关联' width={960} noFooter>\r\n\t\t\t\t\t<RelateForm\r\n\t\t\t\t\t\tuuid\t= { uuid }\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal1.close() }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\associated.js",["2281"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nconst SubmitForm1 = $async(() => import('./tp/submit-form'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius:[],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'权限名称',         name:'perm_name'},\r\n\t\t{ label:'权限代码',         name:'perm_code'},\r\n        { label:'权限类型',         name:'perm_type',       type:'select',      data:[]},\r\n        { label:'权限级别',         name:'level',       type:'select',      data:[]},\r\n    ]\r\n    id = $fn.query('id')\r\n    type = $fn.query('type')\r\n\tmodel = {uuid: this.id}\r\n    deleteFn(rows, api) {\r\n        const param = {uuid: rows.uuid} \r\n        coms.interfaceConfirm(api, '删除', param, () => {\r\n            this.fetch(this.type, this.model)\r\n        })\r\n    }\r\n\tcomponentDidMount(){\r\n        // 权限类型\r\n\t\t$fn.getDisItem({\r\n            code: 900,\r\n            callback: data=>{\r\n                this.forms[2].data = data\r\n            }\r\n        })\r\n        // 权限级别\r\n\t\t$fn.getDisItem({\r\n            code: 800,\r\n            callback: data=>{\r\n                this.forms[3].data = data\r\n            }\r\n        })\r\n        if (this.type === 'process') { // 流程授权列表\r\n            this.fetch('fl-process-auth/permissionlist', this.model)\r\n        } else if (this.type === 'group') { // 分组\r\n            this.fetch('groups/permissionlist', this.model)\r\n        } else if (this.type === 'position') { // 职位\r\n            this.fetch('position/permissionlist', this.model)\r\n        } else if (this.type === 'role') { // 角色\r\n            this.fetch('role/permissionlist', this.model)\r\n        } else if (this.type === 'employee') { // 员工\r\n            this.fetch('employee/permissionlist', this.model)\r\n        }\r\n\t}\r\n\t// paging\r\n\tfetch = (api, param) => $fn.fetch.call(this,api, param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ title: '权限名称',    field: 'perm_name'},\r\n\t\t{ title: '权限代码',    field: 'perm_code'},\r\n\t\t{ title: '英文名称',    field: 'perm_name_en'},\r\n\t\t{ title: '权限级别',        field: 'level_name'},\r\n\t\t{ title: '权限类型',        field: 'perm_type_name'},\r\n\t\t{ title: '操作',        align:'tc',         render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='删除' ghost onClick={e=>{\r\n\t\t\t\t\t\tif (this.type === 'process') { // 流程授权列表\r\n                            this.deleteFn(rows, 'process/delperm')\r\n                        } else if (this.type === 'group') { // 分组\r\n                            this.deleteFn(rows, 'group/delperm')\r\n                        } else if (this.type === 'position') { // 职位\r\n                            this.deleteFn(rows, 'position/delperm')\r\n                        } else if (this.type === 'role') { // 角色\r\n                            this.deleteFn(rows, 'role/delperm')\r\n                        } else if (this.type === 'employee') { // 员工\r\n                            this.deleteFn(rows, 'employee/delperm')\r\n                        }\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n                this.refs.modal.open()\r\n\t\t\t} },\r\n\t\t\t{ label:'取消', ghost:true, onClick:()=>{\r\n\t\t\t\t$fn.back(this)\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='关联权限库' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref = 'modal' title\t= '添加' width = {1000} noFooter >\r\n\t\t\t\t\t<SubmitForm1\r\n                        type    = { this.type }\r\n                        id      = { this.id }\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\system-settings\\authority\\group.js",["2282","2283"],"import React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tdeviceStadius:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label: '分组名称',\tname: 'gp_name',      required: true},\r\n\t\t\t{ label: '分组代码',\tname: 'gp_code',      required: true},\r\n\t\t\t{ label: '分组类型',\tname: 'gp_type',      required: true,\t\ttype: 'select',\tdata: [] },\r\n\t\t\t{ label: '排序',\t\tname: 'sort'},\r\n\t\t\t{ label: '分组描述',\tname: 'gp_desc',\t\ttype: 'textarea',   full: true,     width: '100%' },\r\n\t\t],\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'分组名称', name:'gp_name'},\r\n\t\t{ label:'分组代码', name:'gp_code'},\r\n\t\t{ label:'分组类型', name:'gp_type',   type:'select', data:[]},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n        const { submit } = this.state\r\n        // 分组类型\r\n\t\t$fn.getDisItem({\r\n            code: 500,\r\n            callback: data=>{\r\n                this.forms[2].data = data\r\n                submit[2].data = data\r\n            }\r\n        })\r\n        this.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'groups/index', param)\r\n\t// table\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: 'ID',          field: 'id',            width: 90 },\r\n\t\t{ title: '分组名称',    field: 'gp_name',       width: 300},\r\n\t\t{ title: '分组代码',    field: 'gp_code',       width: 200},\r\n\t\t{ title: '分组类型',    field: 'gp_type',       width: 80},\r\n\t\t{ title: '所属分公司',  field: 'company_name',  width: 120},\r\n\t\t{ title: '创建时间',    field: 'created_at',    width: 160, align:'tc' },\r\n\t\t{ title: '操作',        align:'tc',             width: 100, render:({rows})=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='plr5'>\r\n\t\t\t\t\t<Button label='编辑' ghost onClick={e=>{\r\n\t\t\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\t\t\tconst { submit } = this.state\r\n                        $http.submit(null,'groups/info',{ param:{uuid: rows.uuid} }).then(data=>{\r\n                            this.rows = data\r\n                            this.isEdit = true\r\n                            $fn.setSubmitValues(submit, data, ()=>{this.setState({submit})})\r\n                        })\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t\t<Button className='ml10' label='权限关联' ghost onClick={e=>{\r\n\t\t\t\t\t\t$fn.push(this, $fn.getRoot().root + 'system-settings/group/associated?id=' + rows.uuid + '&type=group')\r\n\t\t\t\t\t}}  />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}},\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'添加 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit.map(item => {\r\n                    item.value = ''\r\n                    if (item.name === 'sort') {\r\n                        item.value = '0'\r\n                    }\r\n                })\r\n\t\t\t\tthis.isEdit = false\r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t} },\r\n\t\t\t{ label:'删除', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:'是否确认删除?',\r\n\t\t\t\t\t\tonOk: close => {\r\n\t\t\t\t\t\t\tconst keys = this.state.selectedKeys.map(v=>v.uuid)\r\n\t\t\t\t\t\t\t$http.submit(null,'groups/delete',{ param:{uuid: keys} }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('删除成功'))\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\tthis.setState({selectedKeys: []})\r\n\t\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} },\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='分组列表' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonAdd\t\t= { this.onAdd } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>\r\n\t\t\t\t<Modal ref='modal' title={this.isEdit ? '编辑' : '添加'} width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tif (this.isEdit) {\r\n\t\t\t\t\t\t\t\tconst param = { ...v, uuid: this.rows.uuid}\r\n\t\t\t\t\t\t\t\t$http.submit(null,'groups/edit',{ param }).then(data=>{\r\n\t\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('编辑成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst param = { ...v }\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'groups/add', { param }).then(data => {\r\n\t\t\t\t\t\t\t\t\tmessage.then(f => f.default.success('添加成功'))\r\n\t\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\t\tthis.fetch(this.model)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}}\r\n                        onClose = { ()=>this.refs.modal.close() }\r\n                        init    = { form => this.form = form }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\tp\\specimens-query-child.js",["2284"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react' \r\n// ===================================================================== antd\r\nimport { Tabs } from 'antd' \r\nconst { TabPane } = Tabs\r\n// ===================================================================== global declare\r\nconst { $async } = window\r\n// ===================================================================== antd \r\nconst Button = $async(()=>import('@antd/button'))\r\n// ===================================================================== private component\r\nconst AddsubtractForm = $async(()=>import('@views/administrators/specimen-manage/tp/addsubtract-form'))\r\nconst InfochangeForm = $async(()=>import('@views/administrators/specimen-manage/tp/infochange-form'))\r\nconst AccessrecordForm = $async(()=>import('@views/administrators/specimen-manage/tp/accessrecord-form'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[], \r\n\t\trows: {},\r\n\t\tdefaultActiveKey: 'addsubtractRef'\r\n\t}  \r\n\tmodel = {}\r\n\tcomponentDidMount(){  \r\n\t\tthis.props.onRef(this)\r\n\t}  \r\n\tonChange = (v) => { \r\n\t\tthis.setState({defaultActiveKey: v}) \r\n\t}\r\n\tchangeInfo = (v) => { \r\n\t\tthis.setState({rows: v}) \r\n\t}\r\n\tsubmits = () => {\r\n\t\tthis[this.state.defaultActiveKey].submits()\r\n\t}\r\n\tclears = () => {\r\n\t\tthis[this.state.defaultActiveKey].clears()\r\n\t}\r\n\trender(){  \r\n\t\tconst { defaultActiveKey, rows } = this.state\r\n\t\treturn ( \r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Tabs defaultActiveKey={defaultActiveKey} onChange={e => this.onChange(e)} className='h specimens-query-child '>\r\n\t\t\t\t\t<TabPane tab=\"加减项\" key=\"addsubtractRef\"> \r\n\t\t\t\t\t\t<AddsubtractForm onRef={ref => this.addsubtractRef = ref} rows={rows} />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"客户反馈\" key=\"accessrecordRef\">\r\n\t\t\t\t\t\t<AccessrecordForm onRef={ref => this.accessrecordRef = ref} rows={rows} />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"信息修改\" key=\"infochangeRef\">\r\n\t\t\t\t\t\t<InfochangeForm onRef={ref => this.infochangeRef = ref} rows={rows} />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</Tabs> \r\n\t\t\t\t<div className='abs_rt' style={{padding: '8px 0'}}>\r\n\t\t\t\t\t<Button label='清空' className='mr10' ghost onClick={() => this.clears()} /> \r\n\t\t\t\t\t<Button label='保存' className='mr10' ghost onClick={() => this.submits()} /> \r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\to-break-up.js",["2285"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}\r\n\t\r\n\tforms = [\r\n\t\t{ label:'原条码',\t\tname:'old_spec_code',\ttype:'input' },\r\n\t\t{ label:'标本架',\t\tname:'sf_name',\t\t\ttype:'input' },\r\n\t\t{ label:'标本架代码',\tname:'sf_code',\t\t\ttype:'input' },\r\n\t\t{ label:'创建时间',\t\tname:'date',\t\t\tnames:['start_date','end_date'], type:'date-range' }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'spec-split/index', param)\r\n\tcols = [ \r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '原条码',\t\t\tfield: 'old_spec_code',\t\t\twidth:120 },   \r\n\t\t{ title: '新条码',\t\t\tfield: 'new_spec_code',\t\t\twidth:120 },   \r\n\t\t{ title: '标本架名称',\t\tfield: 'sf_name',\t\t\t\twidth:120 },   \r\n\t\t{ title: '标本架代码',\t\tfield: 'sf_code',\t\t\t\twidth:120 },   \r\n\t\t{ title: '标本架编号',\t\tfield: 'sf_number',\t\t\t\twidth:120 },   \r\n\t\t{ title: '岗位',\t\t\tfield: 'project_name',\t\t\twidth:120 },   \r\n\t\t{ title: '创建时间',\t\tfield: 'created_at',\t\t\twidth:140 },   \r\n\t\t{ title: '状态',\t\t\tfield: 'split_status',\t\t\twidth:100, render: ({rows}) => {\r\n\t\t\treturn window.$fn.filterSelect([{name: \"待拆分\", value: 0}], rows.split_status, 'name', 'value') \r\n\t\t} } \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'批量拆分完成 F2', code:'F2', onClick:()=>{\r\n\t\t\t\tconst param = {spec_code: this.state.selectedKeys.map(v=>v.new_spec_code)}\r\n\t\t\t\tcoms.interfaceConfirm('spec-split/split', '批量拆分完成', param, () => { this.fetch(this.model) })\r\n\t\t\t} },\r\n\t\t\t{ label:'打印', ghost:true, disabled:this.state.selectedKeys.length===0, onClick:()=>{}}\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='待拆分' ButtonGroup={this.ButtonGroup()}> \r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\to-be-distributed.js",["2286"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\nimport { ExclamationCircleTwoTone } from '@ant-design/icons';\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tsubmit: [\r\n\t\t\t{ label:'用户名',\t\tname:'account',\t\ttype: 'input',\t\trequired:true },\r\n\t\t\t{ label:'密码', \t\tname:'password',\ttype: 'password', \trequired:true }\r\n\t\t]\r\n\t}\r\n\tspec_statusSelect = [\r\n\t\t{ name: \"待分发\", value: 0 },\r\n\t\t{ name: \"不可分发\", value: -1 },\r\n\t\t{ name: \"已分发\", value: 1 }\r\n\t  ]\r\n\tforms = [  \r\n\t\t{ label:'条码号',\t\tname:'spec_code',\t\ttype:'input' },  \r\n\t\t{ label:'标本性状',\t\tname:'spec_traits',\t\ttype:'select', \t\tdata: [], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'岗位查询',\t\tname:'project_id',\t\ttype:'select',\t\tdata: [], nameStr:'name', idStr:'value' }, \r\n\t\t{ label:'接收时间',\t\tname:'date',\t\t\ttype:'date-range', \tnames:['start_date', 'end_date'] },\r\n\t\t{ label:'医院',\t\t\tname:'hosp_id',\t\t\ttype:'select', \t\tdata: [], nameStr:'name', idStr:'value' }, \r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){\r\n\t\t// 医院 \r\n\t\t$fn.dataSave('bs-hospital-select-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[4].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.pull(null,'bs-hospital/select', {dataName:null}).then(data=>{\r\n\t\t\t\tthis.forms[4].data = data.items\r\n\t\t\t\t$fn.dataSave('bs-hospital-select-data', data.items)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\t// 岗位 \r\n\t\t$fn.dataSave('project-team-laboratoryselect-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[2].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.pull(null,'project-team/laboratoryselect', {dataName:null}).then(data=>{\r\n\t\t\t\tthis.forms[2].data = data\r\n\t\t\t\t$fn.dataSave('project-team-laboratoryselect-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\t// 标本性状 \r\n\t\t$fn.dataSave('dis-item-21000-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[1].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.pull(this,'dis-item/item', { param: {dis_code: 21000}}).then(data=>{\r\n\t\t\t\tthis.forms[1].data = data\r\n\t\t\t\t$fn.dataSave('dis-item-21000-data', data)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch()\r\n\t}\r\n\t// paging\r\n\tfetch = param => $fn.fetch.call(this,'specimen/index', param)\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '条码号',\t\tfield: 'spec_code',\t\t\twidth:120 },  \r\n\t\t{ title: '标本性状',\tfield: 'spec_traits_name',\twidth:120 },  \r\n\t\t{ title: '岗位组',\t\tfield: 'project_name',\t\twidth:120 },  \r\n\t\t{ title: '项目代码',\tfield: 'kind_code',\t\t\twidth:120 },  \r\n\t\t{ title: '状态',\t\tfield: 'spec_status', \t\twidth:150, render:({rows})=>{ \r\n\t\t\treturn window.$fn.filterSelect(this.spec_statusSelect, rows.spec_status, 'name', 'value') \r\n\t\t}},    \r\n\t\t{ title: '接收时间',\tfield: 'receive_time',\t\twidth:120 },  \r\n\t\t{ title: '医院',\t\tfield: 'hosp_name',\t\t\twidth:120 }\r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'条码作废 F2', code:'F2', disabled:this.state.selectedKeys.length===0, onClick:()=>{\r\n\t\t\t\tthis.refs.modal.open()\r\n\t\t\t\tconst { submit } = this.state\r\n\t\t\t\tsubmit[0].value = ''\r\n\t\t\t\tsubmit[1].value = ''  \r\n\t\t\t\tthis.setState({ submit })\r\n\t\t\t}}\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, selectedKeys } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='待分发' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading } \r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t\t<Modal ref='modal' title='条码作废' width={648} noFooter>\r\n\t\t\t\t\t<div className=\"f12 pb20 tc\"><ExclamationCircleTwoTone twoToneColor=\"#ff4d4f\" className=\"mr5\" />请输入用户名与密码进行作废确认</div>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tlet param = { ...v, spec_code: selectedKeys.map(v=>v.spec_code) }\r\n\t\t\t\t\t\t\tlet api ='specimen/invalid' \r\n\t\t\t\t\t\t\tlet info = '条码作废'    \r\n\t\t\t\t\t\t\t$http.submit(null, api, { param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success(`${info}成功`))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t\t\t\t}) \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimens-receive.js",["2287","2288","2289"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\nimport { ExclamationCircleTwoTone } from '@ant-design/icons';\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst message = import('@antd/message')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table')) \r\nconst SpecimensReceiveChild = $async(()=>import('@views/administrators/specimen-manage/specimens-receive-child')) \r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\trows: {},\r\n\t\tsubmit: [\r\n\t\t\t{ label:'用户名',\t\tname:'account',\t\ttype: 'input',\t\trequired:true },\r\n\t\t\t{ label:'密码', \t\tname:'password',\ttype: 'password', \trequired:true },\r\n\t\t\t{ label:'跨岗位领取', \tname:'sub_all',\t\ttype: 'checkbox' }\r\n\t\t],\r\n\t\tsubmit_single: [ \r\n\t\t\t{ label:'领取科室', \tname:'team_id', \ttype:'select', data:[], nameStr:'name', idStr:'uuid', required:true, full: true, width: '100%'},\r\n\t\t\t{ label:'条码号',\t\tname:'spec_code',\ttype: 'input', required:true, maxLength: 14 },\r\n\t\t\t{ label:'条码科室',\t\tname:'team',\t\ttype: 'input', disabled: true, required:true },\r\n\t\t\t{ label:'用户名',\t\tname:'account',\t\ttype: 'input',\t\trequired:true },\r\n\t\t\t{ label:'密码', \t\tname:'password',\ttype: 'password', \trequired:true }\r\n\t\t]\r\n\t}\r\n\tsubmit_single_row = {}\r\n\tforms = [\r\n\t\t{ label:'科室', name:'project_name', type:'select', data:[], nameStr:'name', idStr:'uuid' }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\tconst { submit_single } = this.state\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.ProjectTeamSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[0].data = data\r\n\t\t\t\t\t\tsubmit_single[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n                            this.forms[0].data = data\r\n\t\t\t\t\t\t\tsubmit_single[0].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({submit_single})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t\tthis.fetch() \r\n\t}\r\n\t// paging \r\n\tfetch = (param) => $http.pull(this,'receive/pull',{ param:{...param, ...this.model}, loading:false, onSuccess: (data) => data.items && data.items || [] }) \r\n\tcols = [\r\n\t\t{ type: 'checkbox' }, \r\n\t\t{ title: '标本架代码',\t\t\tfield: 'sf_code', \t\t\twidth:120 },\r\n\t\t{ title: '可领取的标本架编号',\t field: 'un_receive_count',  width:120 },\r\n\t\t{ title: '数量',\t\t\t\tfield: 'spec_count', \t\twidth:120 },\r\n\t\t{ title: '科室',\t\t\t\tfield: 'project_name', \t\twidth:120 },\r\n\t]\r\n\tDerivedform = () => { \r\n\t\tconst params = {\r\n\t\t  team_id: this.model.team_id\r\n\t\t}\r\n\t\t$http.submit(this, 'receive/specimenReceiveExport', {param: params, submitLoading:'infoLoading'}).then(data => {\r\n\t\t\tif (data) {\r\n\t\t\t\twindow.location.href = data.url;\r\n\t\t\t} else {\r\n\t\t\t\tmessage.then(f => f.default.error('操作失败')) \r\n\t\t\t}\r\n\t\t})  \r\n\t  }\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'领取', disabled: !$fn.hasArray(this.state.selectedKeys), onClick:()=> this.refs.modal.open() },\r\n\t\t\t{ label:'导出外包清单 F2', code:'F2', ghost:true, onClick:() => this.Derivedform()},\r\n\t\t\t{ label:'快捷领取', ghost:true, onClick:()=>{ \r\n\t\t\t\t$fn.push(this, $fn.getRoot().root + 'specimen-manage/specimens-receive/quick')\r\n\t\t\t} },\r\n\t\t\t{ label:'单标本领取', ghost:true, onClick:()=> this.refs.modal_single.open() }\r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit, selectedKeys, submit_single } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='标本领取' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tonAdd       = { () => this.Derivedform() }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (select, rows) => {\r\n\t\t\t\t\t\tthis.setState({ selectedKeys: select, rows: rows })\r\n\t\t\t\t\t\t$fn.hasObject(rows) && this.receiveChildRef.fetch({team_id: rows.uuid, shelf_id: rows.shelf_id})\r\n\t\t\t\t\t} }  \r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\tnoPag       \t= { true }\r\n\t\t\t\t/> \r\n\t\t\t\t<SpecimensReceiveChild onRef={ref => this.receiveChildRef = ref} />\r\n\t\t\t\t<Modal ref='modal' title='领取' width={648} noFooter>\r\n\t\t\t\t\t<div className=\"f12 pb20 tc\"><ExclamationCircleTwoTone twoToneColor=\"#ff4d4f\" className=\"mr5\" />请输入用户名与密码进行领取确认</div>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tlet param = { \r\n\t\t\t\t\t\t\t\tshelf_id: selectedKeys.map(v=>v.uuids),\r\n\t\t\t\t\t\t\t\taccount: v.account,\r\n\t\t\t\t\t\t\t\tpassword: v.password,\r\n\t\t\t\t\t\t\t\tsub_all: v.sub_all ? 1 : 0\r\n\t\t\t\t\t\t\t}   \r\n\t\t\t\t\t\t\t$http.submit(null, 'receive/add', { param }).then(data=>{\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.success('领取成功'))\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close()\r\n\t\t\t\t\t\t\t\tthis.fetch(this.model) \r\n\t\t\t\t\t\t\t}) \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal ref='modal_single' title='单标本领取' width={648} noFooter>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit_single } \r\n\t\t\t\t\t\tonEnter\r\n\t\t\t\t\t\tonChange = {(v, press, {name}) => {   \r\n\t\t\t\t\t\t\tsubmit_single.forEach(i => {\r\n\t\t\t\t\t\t\t\tif (i.name === name) {\r\n\t\t\t\t\t\t\t\t\ti.value = v\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t}) \r\n\t\t\t\t\t\t\tif (name === 'spec_code' && (v.length === 12 || v.length === 14)) {\r\n\t\t\t\t\t\t\t\t$http.submit(null, 'receive/singlePullList', {param: {spec_code: v}, onSuccess: () => {}}).then(data => {\r\n\t\t\t\t\t\t\t\t\tthis.submit_single_row = data \r\n\t\t\t\t\t\t\t\t\t$fn.setSubmitValues(submit_single, {team: data.team}, ()=>{this.setState({submit_single})})\r\n\t\t\t\t\t\t\t\t})   \r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonSubmit = { v => {\r\n\t\t\t\t\t\t\tconsole.log(v)\r\n\t\t\t\t\t\t\tlet param = {\r\n\t\t\t\t\t\t\t\tuuid: this.submit_single_row.uuid,\r\n\t\t\t\t\t\t\t\taccount: v.account,\r\n\t\t\t\t\t\t\t\tpassword: v.password\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.submit_single_row.team_id === v.team_id) {\r\n\t\t\t\t\t\t\t\tcoms.interfaceConfirm('receive/singleAdd', '领取', param, () => { \r\n\t\t\t\t\t\t\t\t\tthis.refs.modal_single.close()\r\n\t\t\t\t\t\t\t\t\t$fn.hasObject(this.state.rows) && this.receiveChildRef.fetch({team_id: this.state.rows.uuid, shelf_id: this.state.rows.shelf_id})\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmessage.then(f=>f.default.error('科室不匹配'))\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal_single.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimens-receive-quick.js",["2290"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== antd\r\nimport Modal from '@antd/modal'\r\nimport { ExclamationCircleTwoTone } from '@ant-design/icons'; \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window \r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\trows: {},\r\n\t\tsubmit: [\r\n\t\t\t{ label:'科室',\t\t\tname:'team_id',\t\ttype: 'select', data:[], nameStr:'name', idStr:'uuid', required:true, full: true, width: '100%' },\r\n\t\t\t{ label:'用户名',\t\tname:'account',\t\ttype: 'input',\t\trequired:true },\r\n\t\t\t{ label:'密码', \t\tname:'password',\ttype: 'password', \trequired:true },\r\n\t\t]\r\n\t}\r\n\tforms = [\r\n\t\t{ label:'科室', \tname:'team_id',  type:'select', data:[], nameStr:'name', idStr:'uuid' },\r\n\t\t{ label:'标本架', \tname:'shelf_id', type:'select', data:[], nameStr:'newName', idStr:'uuid' },\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\tconst {submit} = this.state\r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.ProjectTeamSelect, name: 'name', id: 'uuid', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.forms[0].data = data\r\n\t\t\t\t\t\tsubmit[0].data = data\r\n                    } else {\r\n                        $http.submit(null, 'project-team/select').then(data => {\r\n                            this.forms[0].data = data\r\n\t\t\t\t\t\t\tsubmit[0].data = data\r\n\t\t\t\t\t\t\t$fn.setCache()\r\n                        })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({submit})\r\n\t\t\t\t}\r\n\t\t\t}) \r\n\t\t}) \r\n\t\t$fn.dataSave('shelf-quick-select-data').then(local => {\r\n\t\t\tif($fn.hasArray(local)){\r\n\t\t\t  this.forms[1].data = local\r\n\t\t\t}else{\r\n\t\t\t  $http.pull(null,'shelf/quickSelect', {dataName:null}).then(data=>{\r\n\t\t\t\tlet d = data.items\r\n\t\t\t\td.forEach(i => {\r\n\t\t\t\t  i.newName = i.name + '-' + i.sf_code + '-' + i.sf_number\r\n\t\t\t\t})  \r\n\t\t\t\tthis.forms[1].data = d\r\n\t\t\t\t$fn.dataSave('shelf-quick-select-data', d)\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.fetch() \r\n\t}\r\n\t// paging \r\n\tfetch = (param) => $http.pull(this,'receive/quickPullList', {param:{...param, ...this.model}}) \r\n\tcols = [\r\n\t\t{ type: 'checkbox' },  \r\n\t\t{ title: '标本条码',\t\t\t\tfield: 'spec_code', \t\twidth:120 },\r\n\t\t{ title: '标本架编号',\t\t\t\tfield: 'sf_number', \t\twidth:120 },\r\n\t\t{ title: '实验号',\t\t\t\t\tfield: 'lb_tpl', \t\t\twidth:120 },\r\n\t\t{ title: '创建人',\t\t\t\t\tfield: 'founder', \t\t\twidth:120 },\r\n\t\t{ title: '创建日期',\t\t\t\tfield: 'created_at', \t\twidth:150 },\r\n\t\t{ title: '领取人',\t\t\t\t\tfield: 'receive_user', \t\twidth:120 },\r\n\t\t{ title: '领取日期',\t\t\t\tfield: 'receive_time', \t\twidth:150 },\r\n\t\t{ title: '岗位',\t\t\t\t\tfield: 'job_id', \t\t\twidth:120 },\r\n\t\t{ title: '科室',\t\t\t\t\tfield: 'team_name', \t\twidth:120 }\r\n\t] \r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'返回',  onClick:()=>{ $fn.back(this) } },\r\n\t\t\t{ label:'领取 F2', code:'F2', disabled: !$fn.hasArray(this.state.selectedKeys), onClick:()=> this.refs.modal.open() }, \r\n\t\t]\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, submit } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='快捷领取' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=>$fn.onChange.call(this,v,press) } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t\tonAdd       = { () => this.refs.modal.open() }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { (v) =>  this.setState({ selectedKeys: v}) }  \r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/>  \r\n\t\t\t\t<Modal ref='modal' title='领取' width={648} noFooter>\r\n\t\t\t\t\t<div className=\"f12 pb20 tc\"><ExclamationCircleTwoTone twoToneColor=\"#ff4d4f\" className=\"mr5\" />请输入用户名与密码进行领取确认</div>\r\n\t\t\t\t\t<SubmitForm\r\n\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\tdata = { submit }\r\n\t\t\t\t\t\tonSubmit = { v => { \r\n\t\t\t\t\t\t\t$http.submit(null, 'receive/quickAdd', {param: {...v, uuid: this.state.selectedKeys.map(i => i.uuid)} }).then(data => {\r\n\t\t\t\t\t\t\t\tthis.refs.modal.close() \r\n\t\t\t\t\t\t\t\tthis.fetch()\r\n\t\t\t\t\t\t\t}) \r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClose = { ()=>this.refs.modal.close() }\r\n\t\t\t\t\t />\r\n\t\t\t\t</Modal>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimens-receive-child.js",["2291","2292","2293","2294","2295","2296","2297","2298"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}  \r\n\tcomponentDidMount(){  \r\n\t\tthis.props.onRef(this) \r\n\t}\r\n\t// paging \r\n\tfetch = param => {\r\n\t\tconsole.log(param)\r\n\t\t$fn.fetch.call(this,'receive/index', param)\r\n\t}\r\n\tcols = [ \r\n\t\t{ title: '标本条码',\t\t\tfield: 'spec_code', \twidth:120 },\r\n\t\t{ title: '标本架代码',\t \t\tfield: 'sf_code',  \t\twidth:120 },\r\n\t\t{ title: '标本架编号',\t\t\tfield: 'sf_number', \twidth:120 },\r\n\t\t{ title: '实验号',\t\t\t\tfield: 'lb_tpl', \t\twidth:120 },\r\n\t\t{ title: '创建人',\t\t\t\tfield: 'founder', \t\twidth:120 },\r\n\t\t{ title: '创建日期',\t\t\tfield: 'receive_user', \twidth:120 },\r\n\t\t{ title: '领取日期',\t\t\tfield: 'receive_time', \twidth:120 },\r\n\t\t{ title: '岗位',\t\t\t\tfield: 'job_id', \t\twidth:120 },\r\n\t\t{ title: '科室',\t\t\t\tfield: 'team_name', \twidth:120 },\r\n\t\t{ title: '状态',\t\t\t\tfield: 'handover_type', width:120 }\r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Table\r\n\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t/> \r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimens-query.js",["2299","2300","2301"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table'))\r\nconst SpecimenQueryLog = $async(()=>import('@views/administrators/specimen-manage/specimens-query-slog')) \r\nconst SpecimenQueryChild = $async(()=>import('@views/administrators/specimen-manage/tp/specimens-query-child')) \r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tlaboratoryOption: [],\r\n\t\tproject_name: ''\r\n\t} \r\n\tforms = [\r\n\t\t{ label:'标本条码',\t\tname:'spec_code', \t\ttype:'input' },\r\n\t\t{ label:'实验号',\t\tname:'experiment_num',  type:'input' }, \r\n\t\t{ label:'医院',\t\t\tname:'hosp_id', \t\ttype:'select', data:[], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'病人姓名',\t\tname:'patient_name', \ttype:'input' }, \r\n\t\t{ label:'项目名称',\t\tname:'kind_name', \t\ttype:'input' }, \r\n\t\t{ label:'接收时间', \tname:'date1', \t\t\ttype:'date-range',\tnames:['ck_start_date','ck_end_date'] },\r\n\t\t{ label:'检测时间', \tname:'date2', \t\t\ttype:'date-range',\tnames:['ts_start_date','ts_end_date'] },\r\n\t\t{ label:'报告时间', \tname:'date3', \t\t\ttype:'date-range',\tnames:['rp_start_date','rp_end_date'] },\r\n\t\t{ label:'岗位', \t\tname:'project_name_id', type:'select', data:[], nameStr:'name', idStr:'value' },\r\n\t\t{ label:'身份证', \t\tname:'card_no', \t\ttype:'input' }\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\tcacheApi.then(f => {\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.BsHospitalSelect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n                        this.forms[2].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n                            this.forms[2].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t$fn.getCache({\r\n\t\t\t\tcache: f.default.laboratoryselect, name: 'name', id: 'value', callback: (data) => {\r\n\t\t\t\t\tif ($fn.hasArray(data)) {\r\n\t\t\t\t\t\tthis.setState({laboratoryOption: data})\r\n                        this.forms[8].data = data\r\n                    } else {\r\n                        $http.submit(null, 'bs-hospital/select').then(data => {\r\n\t\t\t\t\t\tthis.setState({laboratoryOption: data})\r\n\t\t\t\t\t\tthis.forms[8].data = data\r\n                            $fn.setCache()\r\n                        })\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}) \r\n\t\tthis.fetch()\r\n\t}\r\n\tfetch = param => $fn.fetch.call(this,'specimen/views', {...param, project_name: this.state.project_name})\r\n\tcols = [ \r\n\t\t{ title: '标本条码', \t\tfield: 'spec_code', \t\twidth:120 },\r\n\t\t{ title: '医院名称', \t\tfield: 'hosp_name', \t\twidth:240 },\r\n\t\t{ title: '自然项目', \t\tfield: 'parent_kind_name', \twidth:280 },\r\n\t\t{ title: '病人姓名', \t\tfield: 'patient_name', \t\twidth:100 },\r\n\t\t{ title: '受检人类型', \t\tfield: 'case_type_name', \twidth:100 },\r\n\t\t{ title: '年龄', \t\t\tfield: 'age_first_val',\t\twidth:100, render: ({rows}) => {\r\n\t\t\treturn `${rows.age_first_val}${rows.age_first_type_name}${rows.age_second_val}${rows.age_second_type_name}` \r\n\t\t} },\r\n\t\t{ title: '性别', \t\t\tfield: 'sex_name', \t\t\twidth:70 },\r\n\t\t{ title: '项目名称', \t\tfield: 'kind_name', \t\twidth:280 },\r\n\t\t{ title: '结果', \t\t\tfield: 'result', \t\t\twidth:120 },\r\n\t\t{ title: '提示', \t\t\tfield: 'tips', \t\t\t\twidth:120 },\r\n\t\t{ title: '接收时间', \t\tfield: 'receive_time', \t\twidth:180 },\r\n\t\t{ title: '项目类型', \t\tfield: 'kind_category_name', \twidth:120 },\r\n\t\t{ title: '项目代码', \t\tfield: 'kind_code', \t\twidth:120 },\r\n\t\t{ title: '实验号', \t\t\tfield: 'experiment_num', \twidth:120 },\r\n\t\t{ title: '岗位', \t\t\tfield: 'project_name', \t\twidth:120 },\r\n\t\t{ title: '报告时间', \t\tfield: 'rp_date', \t\t\twidth:180 },\r\n\t\t{ title: '报告状态', \t\tfield: 'rp_status_name', \twidth:100 },\r\n\t\t{ title: '状态', \t\t\tfield: 'status_name', \t\twidth:80, render: ({rows}) => {\r\n\t\t\treturn rows.status === \"45006\" ? \"已迟发\" : rows.status_name\r\n\t\t} },\r\n\t\t{ title: '送检医生', \t\tfield: 'doctor', \t\t\twidth:100 },\r\n\t\t{ title: '检测时间', \t\tfield: 'ts_date', \t\t\twidth:180 },\r\n\t\t{ title: '身份证', \t\t\tfield: 'card_no', \t\t\twidth:180 },\r\n\t\t{ title: '科室', \t\t\tfield: 'department_name', \twidth:120 },\r\n\t\t{ title: '床号', \t\t\tfield: 'bed_no', \t\t\twidth:100 } \r\n\t]\r\n\tButtonGroup = () => {\r\n\t\treturn [\r\n\t\t\t{ label:'导出 F2', code:'F2', onClick: () => this.Derivedform() }\r\n\t\t]\r\n\t}\r\n\tDerivedform = () => {   \r\n\t\tconst param =  {...this.model, project_name: this.state.project_name} \r\n\t\tconfirm.then(f=>{\r\n\t\t\tf.default({\r\n\t\t\t\tmsg:'是否确认导出？',\r\n\t\t\t\tonOk: close => {    \r\n\t\t\t\t\twindow.$http.pull(this,'specimen/viewsexport',{dataName:null, param: param }).then(data=>{ \r\n\t\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t\twindow.location.href = data.url;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tmessage.then(f=>f.default.error('操作失败'))\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\tclose()\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='客服查询' ButtonGroup={this.ButtonGroup()}>\r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<SearchForm\r\n\t\t\t\t\tdata\t\t= { this.forms } \r\n\t\t\t\t\tonChange\t= { (v,press)=> {\r\n\t\t\t\t\t\tif (v.project_name_id) {\r\n\t\t\t\t\t\t\tconst project_name = window.$fn.filterSelect(this.state.laboratoryOption, v.project_name_id, 'name', 'value') \r\n\t\t\t\t\t\t\tthis.setState({project_name: project_name}, () => {\r\n\t\t\t\t\t\t\t\t$fn.onChange.call(this,v,press)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$fn.onChange.call(this,v,press)\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t} } \r\n\t\t\t\t\tonSubmit\t= { $fn.onSubmit.bind(this) } \r\n\t\t\t\t\tonReset\t\t= { $fn.onReset.bind(this,this.forms) }\r\n\t\t\t\t\tloading\t\t= { pullLoading }\r\n\t\t\t\t/>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'xplr'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => {\r\n\t\t\t\t\t\tthis.setState({ selectedKeys: v })\r\n\t\t\t\t\t\tthis.QueryLogRef.fetch(v)\r\n\t\t\t\t\t\tthis.QueryChild.changeInfo(v)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t\t<div className='fx ml10 mr10 mb10' style={{height: '350px'}}>\r\n\t\t\t\t\t<div className='bor1 ex r4px rel' style={{minWidth: '660px', width: 0}}>\r\n\t\t\t\t\t\t<SpecimenQueryChild onRef={ref => this.QueryChild = ref} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='bor1 ex r4px ml10 fx'>\r\n\t\t\t\t\t\t<SpecimenQueryLog onRef={ref => this.QueryLogRef = ref} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimens-query-slog.js",["2302","2303","2304","2305","2306","2307","2308","2309"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react' \r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SearchForm = $async(()=>import('#cpt/search-form'))\r\nconst Table = $async(()=>import('#cpt/table')) \r\n// ===================================================================== 缓存\r\nconst cacheApi = import('@/private/api/cacheApi')\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {}, \r\n\t}  \r\n\tmodel = {}\r\n\tcomponentDidMount(){  \r\n\t\tthis.props.onRef(this)\r\n\t}\r\n\tfetch = param => {\r\n\t\t$fn.fetch.call(this,'slog/index', {uuid: param.uuid, spec_code: param.spec_code}).then(data => {\r\n\t\t\tconsole.log(data)\r\n\t\t}) \r\n\t}\r\n\t\r\n\tcols = [ \r\n\t\t{ title: '描述', \t\tfield: 'spec_code',\t\trender: ({rows}) => {\r\n\t\t\treturn (<div style={{width: '100%', whiteSpace: 'normal'}}>\r\n\t\t\t\t<div className='fx' style={{borderBottom: '1px solid #e8eaec'}}>\r\n\t\t\t\t\t<div>修改前：</div>\r\n\t\t\t\t\t<div className=\"ex\">{rows.before_details}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"fx\">\r\n\t\t\t\t\t<div>修改后：</div>\r\n\t\t\t\t\t<div className=\"ex\">{rows.details}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>)\r\n\t\t} },\r\n\t\t{ title: '操作信息', \tfield: 'bed_no',\twidth:130, render: ({rows}) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{width: '100%', whiteSpace: 'normal'}}>\r\n                    <p>操作人：{rows.operator_name}</p>\r\n                    <p>时间：{rows.created_time}</p>\r\n                </div>\r\n\t\t\t)\r\n\t\t} } \r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, pag } = this.state\r\n\t\treturn (\r\n\t\t\t<Table \r\n\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t/> \r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-shelves.js",["2310"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $async } = window\r\n// ===================================================================== antd\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst SpecimenShelvesComplete = $async(()=>import('@views/administrators/specimen-manage/specimen-shelves-complete'))\r\nconst SpecimenShelvesEnter = $async(()=>import('@views/administrators/specimen-manage/specimen-shelves-enter'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[]\r\n\t}  \r\n\tcomponentDidMount(){  \r\n\t\t\r\n\t}  \r\n\t// 上架成功\r\n\tonCompletes = (data) => { \r\n\t\tthis.ShelvesEnterRef.fetch(data)\r\n\t}\r\n\t// 录入成功\r\n\tonEntering = (data) => { \r\n\t\tthis.ShelvesCompleteRef.fetch(data)\r\n\t}\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<Page title='标本上架'>  \r\n\t\t\t\t<div className='fx ex p10' > \r\n\t\t\t\t\t<div className='ex mr10 fv bor1'>\r\n\t\t\t\t\t\t<SpecimenShelvesComplete onRef={ ref => this.ShelvesCompleteRef = ref }  onCompletes={(v) => this.onCompletes(v) } />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='ex fv bor1'>\r\n\t\t\t\t\t\t<SpecimenShelvesEnter onRef={ ref => this.ShelvesEnterRef = ref } onEntering={(v) => this.onEntering(v)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-shelves-enter.js",["2311"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// =====================================================================\r\nimport ScanImage from '@img/saoma.svg'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst confirm = import('@antd/confirm')\r\n// ===================================================================== global antd\r\nconst Checkbox = $async(()=>import('@antd/form/checkbox'))\r\nconst Input = $async(()=>import('@antd/form/input'))\r\nconst Select = $async(()=>import('@antd/form/select'))\r\n// =====================================================================\r\nconst Image = $async(()=>import('@tp/image'))\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tforms: {},\r\n\t\tkeys: 0,\r\n\t\t// 搜索条件\r\n\t\tspec_code: '',\r\n\t\tsf_number: '',\r\n\t\tproject_name: '',\r\n\t\tisPrinter: false,\r\n\t\tcopies: 1,\r\n\t\t// 拆分字段\r\n\t\tshortKeyParams: '', // 用来操作左右键参数\r\n\t}\r\n\t\r\n\tforms = [] \r\n\tcopiesSelect = [\r\n        {label: '1', value: 1},\r\n        {label: '2', value: 2},\r\n        {label: '3', value: 3},\r\n    ]\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\tthis.props.onRef(this)\r\n\t\tthis.fetch()\r\n\t} \r\n\tfetch = param => $fn.fetch.call(this,'shelf/upshelflist', param)\r\n\tcols = [\r\n\t\t{ title: '序号', \t\tfield: 'sort', \t\t\twidth:100 },\r\n\t\t{ title: '标本号', \t\tfield: 'spec_code', \twidth:120 },\r\n\t\t{ title: '标本架编号',\tfield: 'sf_number', \twidth:120 },\r\n\t\t{ title: '岗位组', \t\tfield: 'project_name', \twidth:120 }\r\n\t]  \r\n\tonChanges = (v, name) => {  \r\n\t\tlet d = this.state[name]\r\n\t\td = v\r\n\t\tthis.setState({[name]: d})   \r\n\t}\r\n\tentering = () => {  \r\n\t\tconst param = {spec_code: this.state.spec_code}\r\n\t\t$http.submit(this, 'shelf/alertsplit', {param: param, loading: false}).then(data => {\r\n\t\t\t// alert_split为1就弹框，否则就走之前的流程\r\n\t\t\tif (data.alert_split === '1') {\r\n\t\t\t\tlet project_names = data.project_names ? data.project_names : ''\r\n\t\t\t\tthis.setState({shortKeyParams: data.old_spec_code})  \r\n\t\t\t\tconfirm.then(f=>{\r\n\t\t\t\t\tf.default({\r\n\t\t\t\t\t\tmsg:`是否直接拆分？${project_names}`,\r\n\t\t\t\t\t\tonOk: close => {  \r\n\t\t\t\t\t\t\tthis.splits(data.old_spec_code)\r\n\t\t\t\t\t\t\tthis.setState({shortKeyParams: ''})  \r\n\t\t\t\t\t\t\tclose()\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonCancel: close => { \r\n\t\t\t\t\t\t\tconsole.log(close)\r\n\t\t\t\t\t\t\tthis.UpperFrameEntry()\r\n\t\t\t\t\t\t\tthis.setState({shortKeyParams: ''})  \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.UpperFrameEntry()\r\n\t\t\t}\r\n\t\t}).catch(err => {\r\n\t\t\tthis.setState({sf_number: '', project_name: '', keys: this.state.keys + 1 })\r\n\t\t})  \r\n\t}\r\n\t// 直接拆分\r\n    splits(spec_code) {\r\n\t\tconst param = {old_spec_code: spec_code}\r\n\t\t$http.submit(this, 'shelf/autosplit', {param: param}).then(data => {\r\n\t\t\tmessage.then(f => f.default.success('操作成功')) \r\n\t\t\tthis.printers(spec_code) \r\n\t\t\tthis.setState({spec_code: '', keys: this.state.keys + 1})\r\n\t\t\tthis.fetch()\r\n\t\t\tthis.props.onEntering() // 调用左边的列表\r\n\t\t}).catch(err => {\r\n\t\t\tthis.setState({sf_number: '', project_name: '', keys: this.state.keys + 1})\r\n\t\t})  \r\n\t}\r\n\tUpperFrameEntry = () => { \r\n\t\tconst param = {spec_code: this.state.spec_code}\r\n\t\t// 查询 标本号详情\r\n\t\t$http.submit(this, 'shelf/getshelf', {param: param, loading: false}).then(data => {\r\n\t\t\tthis.setState({sf_number: data.sf_number, project_name: data.project_name, keys: this.state.keys + 1 })\r\n\t\t\t// 录入标本号\r\n\t\t\tconst infos = {\r\n\t\t\t\tsf_number: this.state.sf_number, // 标本架编号\r\n\t\t\t\tproject_name: this.state.project_name, // 岗位组\r\n\t\t\t\tspec_code: this.state.spec_code // 标本条码\r\n\t\t\t}\r\n\t\t\t$http.submit(this, 'shelf/upshelf', {param: infos}).then(data => {\r\n\t\t\t\tmessage.then(f => f.default.success('操作成功')) \r\n\t\t\t\tthis.printers(this.state.spec_code) // 获取要打印的数据\r\n\t\t\t\tthis.setState({spec_code: '', keys: this.state.keys + 1})\r\n\t\t\t\tthis.fetch()\r\n\t\t\t\tthis.props.onEntering() // 调用左边的列表\r\n\t\t\t})\r\n\t\t}).catch(err => {\r\n\t\t\tthis.setState({sf_number: '', project_name: '', keys: this.state.keys + 1})\r\n\t\t})  \r\n\t}\r\n\t// 是否打印 \r\n\tprinters = (spec_code) => {\r\n\t\tif (this.state.isPrinter) {\r\n\t\t\tconst param = {spec_code: spec_code}\r\n\t\t\t$http.submit(this, 'shelf/printshelf', {param: param}).then(data => {\r\n\t\t\t\t// 获取打印数据，调用打印调用方法\r\n\t\t\t})  \r\n\t\t} \r\n\t}\r\n\trender(){\r\n\t\tconst { data, pullLoading, pag, keys } = this.state\r\n\t\treturn ( \r\n\t\t\t<React.Fragment>  \r\n\t\t\t\t{/* 搜索 */}\r\n\t\t\t\t<div className='fx p10'>\r\n\t\t\t\t\t<div className='ex fxw' key={keys}>\r\n\t\t\t\t\t\t<div className='mb5 mr10 fxm'>\r\n\t\t\t\t\t\t\t标本号：\r\n\t\t\t\t\t\t\t<Input p='请输入标本号' width={120} value={this.state.spec_code} style={{borderRadius: '4px'}} className='mlr5' onChange={(v) => this.onChanges(v, 'spec_code')} onPressEnter={() => this.entering()} />\r\n\t\t\t\t\t\t\t<Image className='mr15 dkm' src={ ScanImage } height='20px' width='20px'/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='mb5 mr10'>\r\n\t\t\t\t\t\t\t标本架编号：\r\n\t\t\t\t\t\t\t<Input p='请输入标本架编号' disabled={true} width={120} value={this.state.sf_number} style={{borderRadius: '4px'}} className='mlr5' onChange={(v) => this.onChanges(v, 'sf_number')} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='mb5 mr10'>\r\n\t\t\t\t\t\t\t岗位组：\r\n\t\t\t\t\t\t\t<Input p='请输入岗位组' disabled={true} width={120} value={this.state.project_name} style={{borderRadius: '4px'}} className='mlr5' onChange={(v) => this.onChanges(v, 'project_name')} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='mb5 mr10 fxm'> \r\n\t\t\t\t\t\t\t<Checkbox value={this.state.isPrinter} onChange={(v) => this.onChanges(v, 'isPrinter')} /><span className='ml5'>打印实验号</span> \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{this.state.isPrinter && \r\n\t\t\t\t\t\t<div className='mb5 mr10 fxm'> \r\n\t\t\t\t\t\t\t打印份数：\r\n\t\t\t\t\t\t\t<Select data={this.copiesSelect} p='请选择' nameStr='label' idStr='value' value={this.state.copies} onChanged={(v) => this.onChanges(v, 'copies')} width={80} style={{borderRadius: '4px'}}  />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button label='录入' ghost className='mr10' onClick={ () => this.entering() } />\r\n\t\t\t\t\t\t<Button label='查看全部' ghost onClick={() => this.fetch()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'plr2'\r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) } \r\n\t\t\t\t/>  \r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-shelves-complete.js",["2312"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\n// ===================================================================== global antd\r\nconst Input = $async(()=>import('@antd/form/input'))\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\tpag: {},\r\n\t\tselectedKeys:[],\r\n\t\tforms: {},\r\n\t\tkeys: 0\r\n\t} \r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t\tthis.props.onRef(this)\r\n\t\tthis.fetch()\r\n\t}\r\n\tfetch = param => $http.paging(this,'shelf/myshelf',{ param:{...param, pageSize:this.pageSize, ...this.state.forms }, loading:false } )\r\n\tcols = [ \r\n\t\t{ title: '标本架编号', \t\tfield: 'sf_number', \twidth:100 },\r\n\t\t{ title: '科室', \t\tfield: 'project_name', \twidth:120 },\r\n\t\t{ title: '容量', \t\tfield: 'total_capacity', \twidth:100 },\r\n\t\t{ title: '已使用量', \t\tfield: 'use_capacity', \twidth:100 },\r\n\t\t{ title: '操作', \t\talign: 'tc', \twidth:100, render: ({rows}) => {\r\n\t\t\treturn (<Button label='上架完成' ghost onClick={() => this.onCompletion(rows.sf_number)} />)\r\n\t\t} }  \r\n\t]  \r\n    onCompletion(val) {\r\n\t\tconst param = { sf_number: val } \r\n\t\t$http.submit(this, 'shelf/upshelfadded', {param: param, submitLoading:'infoLoading'}).then(data => {\r\n\t\t\tmessage.then(f => f.default.success('操作成功')) \r\n\t\t\tthis.fetch() \r\n\t\t\tthis.props.onCompletes()\r\n\t\t}) \r\n\t}\r\n\tonReset = () => {\r\n\t\tconst {forms, keys} = this.state\r\n\t\tforms['sf_code'] = ''\r\n\t\tforms['sf_number'] = ''\r\n\t\tforms['project_name'] = ''\r\n\t\tthis.setState({forms: forms, keys: keys+1 }, () => {\r\n\t\t\tthis.fetch()\r\n\t\t})  \r\n\t}\r\n\tonChanges = (v, name) => { \r\n\t\tconst {forms} = this.state\r\n\t\tforms[name] = v\r\n\t\tthis.setState({forms: forms})  \r\n\t}\r\n\tpulldown = () => { \r\n\t\tconst {forms, keys} = this.state \r\n\t\tif (forms.sf_code) { \r\n\t\t\tconst param = { sf_code: forms.sf_code }\r\n\t\t\t$http.submit(this, 'shelf/autouse', {param: param, submitLoading:'infoLoading'}).then(data => {\r\n\t\t\t\tmessage.then(f => f.default.success('操作成功'))\r\n\t\t\t\tforms['sf_code'] = ''\r\n\t\t\t\tthis.setState({forms: forms, keys: keys+1 })\r\n\t\t\t\tthis.fetch()\r\n\t\t\t}) \r\n\t\t} else {\r\n\t\t\tmessage.then(f => f.default.error('请输入标本架代码'))\r\n\t\t}\r\n\t}\r\n\tonRow (v) {\r\n\t\tthis.setState({ selectedKeys: v })\r\n\t\tthis.props.onCompletes({sf_number: v.sf_number, project_name: v.project_name, current: 1})\r\n\t}\r\n\trender(){\r\n\t\tconst { forms, data, pullLoading, pag, keys } = this.state\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{/* 搜索 */} \r\n\t\t\t\t<div className='fx p10'>\r\n\t\t\t\t\t<div className='ex fxw' key={keys}>\r\n\t\t\t\t\t\t<div className='mb5 mr10'>\r\n\t\t\t\t\t\t\t标本架代码：\r\n\t\t\t\t\t\t\t<Input p='请输入标本架代码' width={120} value={forms.sf_code} style={{borderRadius: '4px'}} className='mlr5' onChange={(v) => this.onChanges(v, 'sf_code')} onPressEnter={() => this.pulldown()} />\r\n\t\t\t\t\t\t\t<Button label='领取' ghost className='mlr5' onClick={() => this.pulldown()} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='mb5 mr10'>\r\n\t\t\t\t\t\t\t标本架编号：\r\n\t\t\t\t\t\t\t<Input p='请输入标本架编号' width={120} value={forms.sf_number} style={{borderRadius: '4px'}} onChange={(v) => this.onChanges(v, 'sf_number')} className='mlr5' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='mb5 mr10'>\r\n\t\t\t\t\t\t\t科室：\r\n\t\t\t\t\t\t\t<Input p='请输入科室' width={120} value={forms.project_name} style={{borderRadius: '4px'}} onChange={(v) => this.onChanges(v, 'project_name')} className='mlr5' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button label='查询' ghost className='mr10' onClick={() => this.fetch()} />\r\n\t\t\t\t\t\t<Button label='重置' ghost onClick={() => this.onReset()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* 表格 */}\r\n\t\t\t\t<Table\r\n\t\t\t\t\tclassName\t\t= 'plr2' \r\n\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\tonRow\t\t\t= { v => this.onRow(v) }\r\n\t\t\t\t\tpag\t\t\t\t= { pag }\r\n\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t/> \r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\views\\administrators\\specimen-manage\\specimen-shelves-batch.js",["2313"],"// ===================================================================== 薛玉梅 | 2020-10-13 | 新增文件\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== antd\r\nconst Button = $async(()=>import('@antd/button'))\r\nconst message = import('@antd/message')\r\nconst Input = $async(()=>import('@antd/form/input'))\r\n// ===================================================================== private template\r\nconst Page = $async(()=>import('#tp/page-container'))\r\n// ===================================================================== private component\r\nconst Table = $async(()=>import('#cpt/table'))\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tdata:[],\r\n\t\tselectedKeys:[],\r\n\t\tsf_code: '',\r\n\t\tsf_data: {\r\n\t\t\tsf_number: '',\r\n\t\t\tproject_name: '',\r\n\t\t\ttotal_capacity: ''\r\n\t\t},\r\n\t\tinfoLoading: false,\r\n\t\tpullLoading: false, \r\n\t\tkey: 0\r\n\t} \r\n\tsf_list = [\r\n\t\t{name: '标本架编号', field: 'sf_number'},\r\n\t\t{name: '科室', field: 'project_name'},\r\n\t\t{name: '容量', field: 'total_capacity'},\r\n\t]\r\n\tmodel = {}\r\n\tcomponentDidMount(){ \r\n\t} \r\n\t// 标本架代码\r\n\tonChange (v) {\r\n\t\tthis.setState({sf_code: v})\r\n\t}\r\n\t// 标本架代码详情\r\n\tquerySpecPlane = () => { \r\n\t\tconst pra = { sf_code: this.state.sf_code }\r\n\t\t$http.submit(this,'shelf/use',{ param: pra, submitLoading:'infoLoading'}).then(data => {\r\n\t\t\tthis.setState({sf_data: data}) \r\n\t\t\tthis.changeTableData(this.state.data, data.project_id)\r\n\t\t\tmessage.then(f => f.default.success('操作成功')) \r\n\t\t})\r\n\t}\r\n\t// 条码录入\r\n\tonChangeSpec (v) {  \r\n\t\tthis.setState({spec_enter_value: v})\r\n\t} \r\n    setArr = (data, uuid) => {\r\n      let d = data.filter(i => i === uuid);\r\n      if (d && d.length) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\t// 校验\r\n\tfetch = () => {\r\n\t\tconst pra = {\r\n\t\t\tspec_codes: JSON.stringify(this.state.spec_enter_value) \r\n\t\t}  \r\n\t\t$http.submit(this,'shelf/validshelfbatch',{ param: pra, submitLoading:'pullLoading'}).then(data => {\r\n\t\t\tlet v = this.state.data; \r\n\t\t\tlet arr = this.state.data.map(i => i.uuid);\r\n\t\t\tdata.forEach(i => {\r\n\t\t\t\tif (!this.setArr(arr, i.uuid)) {\r\n\t\t\t\t\tarr.push(i.uuid);\r\n\t\t\t\t\tv.push(i);\r\n\t\t\t\t}\r\n\t\t\t});  \r\n\t\t\tthis.changeTableData(v, this.state.sf_data.project_id)\r\n\t\t})\r\n\t}  \r\n\t// 判断上架状态\r\n\tchangeTableData = (arr, project_id) => { \r\n\t\tconsole.log('判断上架状态')\r\n\t\tarr.forEach((i, j) => {\r\n\t\t  i._id = j + 1 // 行号\r\n\t\t  if (String(i.audit_status) !== '1' || String(i.is_receive) !== '1') { // 不能上架的格式\r\n\t\t\ti._status = '3' \r\n\t\t  } else if (String(i.spec_status) === '1') { // 已上架\r\n\t\t\ti._status = '2'  \r\n\t\t  } else if (project_id && project_id === i.job_id){ // 科室是否相同\r\n\t\t\ti._status = '1'  \r\n\t\t  } else { // 其他科室\r\n\t\t\ti._status = '0'\r\n\t\t  }\r\n\t\t})  \r\n\t\tconsole.log(arr)\r\n\t\tthis.setState({data: arr, key: this.state.key + 1}) \r\n\t}\r\n\t// 上架完成\r\n\tonCompletion = () => { \r\n\t\tlet params = this.state.data.filter(i => i._status === '1')  \r\n\t\tlet params1 = params.map(obj => {\r\n\t\t\tlet d = {} \r\n\t\t\tfor (let i in obj) {\r\n\t\t\t\tif (i === '_status' || i === 'is_checked' || i === '_id') { \r\n\t\t\t\t} else {\r\n\t\t\t\t\td[i] = obj[i]\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\treturn d\r\n\t\t  })\r\n\t\tconsole.log(params1)\r\n\t\tif (this.state.sf_data.sf_number && $fn.hasArray(params1)) {\r\n\t\t\t$http.submit(this,'shelf/upshelfbatch',{ param: {data: params1, sf_number: this.state.sf_data.sf_number}, submitLoading:'pullLoading'}).then(data => {\r\n\t\t\t\tconst d = this.state.data.filter(i => i._status !== '1')\r\n\t\t\t\tthis.setState({data: d, selectedKeys: []})\r\n\t\t\t})\r\n\t\t} else if (!this.state.sf_data.sf_number) {\r\n\t\t\tmessage.then(f => f.default.error('标本架编号不能为空'))\r\n\t\t} else if (!$fn.hasArray(params1)) {\r\n\t\t\tmessage.then(f => f.default.error('未找到与标本架匹配的条码'))\r\n\t\t}\r\n\t}\r\n\t// 清空2 删除1\r\n\tdeletes = (val) => { \r\n\t\tconst {data, selectedKeys} = this.state\r\n\t\tif (val === 1) { \r\n\t\t\tlet v = [] \r\n\t\t\tdata.forEach(i => {\r\n\t\t\t  const len = selectedKeys.filter(j => i.uuid === j.uuid)\r\n\t\t\t  if (len && len.length) { \r\n\t\t\t  } else { \r\n\t\t\t\tv.push(i)\r\n\t\t\t  }\r\n\t\t\t}) \r\n\t\t\tv.forEach((v1, i) => {\r\n\t\t\t\tv1._id = i + 1\r\n\t\t\t}); \r\n\t\t\tthis.setState({data: v, selectedKeys: []})\r\n\t\t} else {\r\n\t\t\tthis.setState({data: [], selectedKeys: []})\r\n\t\t}\r\n\t}\r\n\tcols = [\r\n\t\t{ type:'checkbox' },\r\n\t\t{ title: '行号',\t\tfield: '_id',\t\t\t\twidth:60 },  \r\n\t\t{ title: '条码号',\t\tfield: 'spec_code',\t\t\twidth:120 },  \r\n\t\t{ title: '科室',\t\tfield: 'job_name',\t\t\twidth:120 },  \r\n\t\t{ title: '岗位',\t\tfield: 'project_name',\t\twidth:120 },  \r\n\t\t{ title: '状态',\t\tfield: '_status',\t\twidth:70, render: ({rows}) => {\r\n\t\t\tconst d = [\r\n\t\t\t\t{name: '已上架',   value: '2'},\r\n\t\t\t\t{name: '不可上架', value: '3'},\r\n\t\t\t\t{name: '可以上架', value: '1'},\r\n\t\t\t\t{name: '其他科室', value: '0'},\r\n\t\t\t]\r\n\t\t\treturn $fn.filterSelect(d, rows._status, 'name', 'value')\r\n\t\t} }\r\n\t] \r\n\trender(){\r\n\t\tconst { data, pullLoading, sf_code, sf_data, infoLoading, spec_enter_value, selectedKeys, key } = this.state\r\n\t\treturn (\r\n\t\t\t<Page title='标本批量上架'> \r\n\t\t\t\t<div className='fxm p10'>\r\n\t\t\t\t\t标本架代码：<Input p='请输入标本架代码' width='160px' onChange={v => this.onChange(v)} onPressEnter={v => this.querySpecPlane(v)} value={sf_code} />\r\n\t\t\t\t\t<Button label='查询' disabled={!sf_code || infoLoading} className='ml10' ghost onClick={() => this.querySpecPlane()} /> \r\n\t\t\t\t\t<div className='ml20'> \r\n\t\t\t\t\t\t{this.sf_list.map((v, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<React.Fragment key={i}> \r\n\t\t\t\t\t\t\t\t\t<span className=\"tit\">{v.name}：</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"f13 b\">{sf_data[v.field]}</span>\r\n\t\t\t\t\t\t\t\t\t{this.sf_list.length > (i+1) && <span className=\"f13 b mlr15\">|</span>}\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='ex plr10 fx'>\r\n\t\t\t\t\t<div className='ex mr15 r4px fv'>\r\n\t\t\t\t\t\t<div className='plr5 mb5' style={{height: '28px', lineHeight: '28px', background: 'rgba(242,242,242,1)'}}>条码录入</div> \r\n\t\t\t\t\t\t<div className='ex x_ssb_t1' style={{border: '1px solid #E8EAEC'}}>\r\n\t\t\t\t\t\t\t<Input p='请输入条码' mode='textarea' onChange={v => this.onChangeSpec(v)} value={spec_enter_value} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='tc p10' style={{border: '1px solid #E8EAEC', borderTop: 'none'}}>\r\n\t\t\t\t\t\t\t<Button label='校验' onClick={() => this.fetch()} /> \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='ex r4px fv'>\r\n\t\t\t\t\t\t<div className='fxm plr5 mb5' style={{height: '28px', background: 'rgba(242,242,242,1)'}}>\r\n\t\t\t\t\t\t\t<span className='ex'>条码列表</span>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Button className='mr10' label='删除' ghost disabled={!$fn.hasArray(selectedKeys)} onClick={() => this.deletes(1)} /> \r\n\t\t\t\t\t\t\t\t<Button label='清空' ghost disabled={!$fn.hasArray(data)} onClick={() => this.deletes(2)} /> \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t{/* <div className='ex' style={{border: '1px solid #E8EAEC'}}> */}\r\n\t\t\t\t\t\t<Table\r\n\t\t\t\t\t\t\tkey             = { key }\r\n\t\t\t\t\t\t\tstyle           = {{border: '1px solid #E8EAEC',borderTop: 'none'}}\r\n\t\t\t\t\t\t\tcols\t\t\t= { this.cols }\r\n\t\t\t\t\t\t\tdata \t\t\t= { data }\r\n\t\t\t\t\t\t\tloading \t\t= { pullLoading }\r\n\t\t\t\t\t\t\tonRow\t\t\t= { v => this.setState({ selectedKeys: v }) }\r\n\t\t\t\t\t\t\tonChange\t\t= { (current, pageSize) => $fn.pageChange.call(this,{current, pageSize}) }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t\t<div className='tc p10' style={{border: '1px solid #E8EAEC', borderTop: 'none'}}>\r\n\t\t\t\t\t\t\t<Button label='上架完成' onClick={() => this.onCompletion()} /> \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>  \r\n\t\t\t</Page>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\private\\template\\page-container-scroll.js",["2314"],"import React from 'react'\r\n// ===================================================================== global template\r\nconst { $async } = window\r\nconst Page = $async(()=>import('#tp/content/content-aside'))\r\nconst Container = $async(()=>import('#tp/box/container'))\r\nconst Content = window.$async(()=>import('@tp/content'))\r\n// =====================================================================\r\nexport default ({ children, title, titleChildren, ButtonGroup, nobc, noBtGroup, className, header }) => {\r\n\treturn (\r\n\t\t<Page>\r\n\t\t\t<Container title={title} ButtonGroup={ButtonGroup} titleChildren={titleChildren} nobc={nobc} noBtGroup={noBtGroup}>\r\n\t\t\t\t{ header && header }\r\n\t\t\t\t<div className='ex rel'>\r\n\t\t\t\t\t<Content scrollY  className={className}>\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</Page>\r\n\t)\r\n}","F:\\jia-git\\react-norson-lis\\src\\private\\component\\printer-settings.js",["2315"],"import React from 'react'\r\n// ===================================================================== global declare\r\nconst { $http, $fn, $async } = window\r\n// ===================================================================== private component\r\nconst SubmitForm = $async(()=>import('#cpt/submit-form'))\r\nexport default class extends React.Component{\r\n\tstate = {\r\n\t\tsubmit: []\r\n\t}\r\n    model = {}\r\n    setPrinterInfo() {\r\n        const { submit } = this.state\r\n        let printerInfo = $fn.longSave('printer_info')\r\n        const printer = $fn.longSave('printer')\r\n        $http.pull(null, 'printer/tmplList').then(data => {\r\n            if (printerInfo) {\r\n                for (let i in data) {\r\n                    data[i].printer_code = printerInfo[i].printer_code || ''\r\n                    this.printerData = data\r\n                }\r\n            } else {\r\n                this.printerData = data\r\n            }\r\n            this.printerData = data\r\n            if (this.printerData) {\r\n                let form = {}\r\n                for (let i in this.printerData) {\r\n                    const item = this.printerData[i]\r\n                    form = {\r\n                        label: item.remark,\r\n                        name: item.name,\r\n                        data: item.printer,\r\n                        type: 'select',\r\n                        nameStr: 'printer_name',\r\n                        idStr: 'printer_code',\r\n                        full: true,\r\n                        width: '100%'\r\n                    }\r\n                    submit.push(form)\r\n                }\r\n            }\r\n            $fn.setSubmitValues(submit, printer||{}, ()=>{this.setState({submit})})\r\n            $fn.longSave('printer_info', this.printerData)\r\n        })\r\n    }\r\n\tcomponentDidMount(){\r\n        this.setPrinterInfo()\r\n\t}\r\n\trender(){\r\n        const { submit } = this.state\r\n        const { onClose } = this.props\r\n\t\treturn (\r\n            <SubmitForm\r\n                modal\r\n                data = { submit }\r\n                onChange = { (v, press, { name, data }) => {\r\n                    submit.forEach(item=>{\r\n                        if(name === item.name) {\r\n                            item.value = v\r\n                        }\r\n                    })\r\n                } }\r\n                onSubmit = { v => {\r\n                    for (let o in this.printerData) {\r\n                        for (let i in v) {\r\n                            if (i === this.printerData[o].name) {\r\n                                this.printerData[o].printer_code = v[i]\r\n                            }\r\n                        }\r\n                    }\r\n                    $fn.longSave('printer', v)\r\n                    $fn.longSave('printer_info', this.printerData)\r\n                    onClose && onClose()\r\n                }}\r\n                onClose = { ()=>onClose && onClose() }\r\n                init    = { form => this.form = form }\r\n            />\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\global\\component\\p-img.js",["2316","2317","2318"],"/* 薛玉梅 | 2020-12-28 14:45:55 | desc: 查看图片 */\r\nimport React from 'react'\r\n// ===================================================================== global declare\r\nimport { CloseCircleOutlined, PlusCircleOutlined, MinusCircleOutlined, UndoOutlined, RedoOutlined } from '@ant-design/icons';\r\n// ===================================================================== common\r\nimport coms from '@/private/js/common.js'\r\n// ===================================================================== component\r\nexport default class extends React.Component{\r\n\tstate = { \r\n        rotate: 0, \r\n        scale: 1,\r\n        offsetX: 0, \r\n        offsetY: 0\r\n\t}  \r\n\tcomponentDidMount(){ \r\n    } \r\n    handleScale (to) {\r\n        const { scale } = this.state\r\n        if (to === 'add') {\r\n            this.setState({scale: scale + 0.2}) \r\n        } else {    \r\n            if (scale <= 0.4) { // 图片最小缩小为0.2倍\r\n                this.setState({scale: 0.2}) \r\n            } else {\r\n                this.setState({scale: scale - 0.2}) \r\n            }\r\n        } \r\n    }\r\n    handleRotate (to) {\r\n        const { rotate } = this.state\r\n        if (to === 'left') {\r\n            this.setState({rotate: rotate - 90})\r\n        } else {\r\n            this.setState({rotate: rotate + 90})\r\n        }  \r\n    } \r\n    handleMove(e) {\r\n        const { offsetX, offsetY } = this.state;\r\n        const startX = e.pageX;\r\n        const startY = e.pageY; \r\n        console.log(startX, startY)  \r\n    } \r\n\trender(){\r\n\t\tconst { src } = this.props\r\n\t\tconst { scale, rotate, offsetX, offsetY } = this.state\r\n\t\treturn (\r\n            <div className='fv h oh'>\r\n                <div className='fxmr' style={{position:'relative', zIndex: 11, height: '40px', lineHeight: '40px', color: '#ffffff', borderBottom: '1px solid rgba(0,0,0,0.2)', paddingRight: '12px'}}>\r\n                    <PlusCircleOutlined className='cp' style={{fontSize: '22px', marginRight: '16px'}} onClick={() => this.handleScale('add')} />\r\n                    <MinusCircleOutlined className='cp' style={{fontSize: '22px', marginRight: '16px'}} onClick={() => this.handleScale('sub')} />\r\n                    <UndoOutlined className='cp' style={{fontSize: '22px', marginRight: '16px'}} onClick={() => this.handleRotate('left')} />\r\n                    <RedoOutlined className='cp' style={{fontSize: '22px', marginRight: '26px'}} onClick={() => this.handleRotate('right')} />\r\n                    <CloseCircleOutlined className='cp' style={{fontSize: '25px', color: '#000000'}} onClick={() => this.props.onClose()} />\r\n                </div>\r\n                <div className='ex fxc oh'>\r\n                    <img className='img-contain cp' style={{transform: `scale(${scale}) rotate(${rotate}deg)`, transition: 'transform 0.3s ease 0s', marginLeft: `${offsetX}px`, marginTop: `${offsetY}px`}}\r\n                    src={coms.img_domain_url(src)} alt='暂无图片'\r\n                    onMouseDown={e => this.handleMove(e)} />\r\n                </div>\r\n            </div>\r\n\t\t)\r\n\t}\r\n}","F:\\jia-git\\react-norson-lis\\src\\common\\plugins\\encrypt.js",["2319"],"/*\r\n * 字符串加密与解密\r\n * */\r\n\r\nconst _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\r\n\r\n// private method for UTF-8 encoding  \r\nconst _utf8_encode = string => {  \r\n    string = string.replace(/\\r\\n/g,'\\n');  \r\n    var utftext = '';  \r\n\tfor (var n = 0; n < string.length; n++) {  \r\n\t\tvar c = string.charCodeAt(n);  \r\n\t\tif (c < 128) {  \r\n\t\t\tutftext += String.fromCharCode(c);  \r\n\t\t} else if((c > 127) && (c < 2048)) {  \r\n\t\t\tutftext += String.fromCharCode((c >> 6) | 192);  \r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);  \r\n\t\t} else {  \r\n\t\t\tutftext += String.fromCharCode((c >> 12) | 224);  \r\n\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);  \r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);  \r\n\t\t}  \r\n\r\n\t}  \r\n\treturn utftext;  \r\n}  \r\nconst _utf8_decode = function (utftext) {  \r\n    var string = '';  \r\n    var i = 0;\r\n    var c = 0;\r\n    var c2 = 0;\r\n\tvar c3 = 0;\r\n    while ( i < utftext.length ) {  \r\n        c = utftext.charCodeAt(i);  \r\n        if (c < 128) {  \r\n            string += String.fromCharCode(c);  \r\n            i++;  \r\n        } else if((c > 191) && (c < 224)) {  \r\n            c2 = utftext.charCodeAt(i+1);  \r\n            string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));  \r\n            i += 2;  \r\n        } else {  \r\n            c2 = utftext.charCodeAt(i+1);  \r\n            c3 = utftext.charCodeAt(i+2);  \r\n            string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));  \r\n            i += 3;  \r\n        }  \r\n    }  \r\n    return string;  \r\n} \r\n\r\nexport default {\r\n\t// 加密\r\n\tencode(input){\r\n\t\tvar output = '';  \r\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;  \r\n        var i = 0;  \r\n        input = _utf8_encode(input);  \r\n        while (i < input.length) {  \r\n            chr1 = input.charCodeAt(i++);  \r\n            chr2 = input.charCodeAt(i++);  \r\n            chr3 = input.charCodeAt(i++);  \r\n            enc1 = chr1 >> 2;  \r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);  \r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);  \r\n            enc4 = chr3 & 63;  \r\n            if (isNaN(chr2)) {  \r\n                enc3 = enc4 = 64;  \r\n            } else if (isNaN(chr3)) {  \r\n                enc4 = 64;  \r\n            }  \r\n            output = output +  \r\n            _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +  \r\n            _keyStr.charAt(enc3) + _keyStr.charAt(enc4);  \r\n        }  \r\n        return output;\r\n\t},\r\n\t// 解密\r\n\tdecode(input){\r\n\t\tvar output = '';  \r\n        var chr1, chr2, chr3;  \r\n        var enc1, enc2, enc3, enc4;  \r\n        var i = 0;  \r\n        // input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\r\n\t\tinput = input.replace(/[^A-Za-z0-9+/=]/g, '');  \r\n        while (i < input.length) {  \r\n            enc1 = _keyStr.indexOf(input.charAt(i++));  \r\n            enc2 = _keyStr.indexOf(input.charAt(i++));  \r\n            enc3 = _keyStr.indexOf(input.charAt(i++));  \r\n            enc4 = _keyStr.indexOf(input.charAt(i++));  \r\n            chr1 = (enc1 << 2) | (enc2 >> 4);  \r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);  \r\n            chr3 = ((enc3 & 3) << 6) | enc4;  \r\n            output = output + String.fromCharCode(chr1);  \r\n            if (enc3 !== 64) {  \r\n                output = output + String.fromCharCode(chr2);  \r\n            }  \r\n            if (enc4 !== 64) {  \r\n                output = output + String.fromCharCode(chr3);  \r\n            }  \r\n        }  \r\n        output = _utf8_decode(output);  \r\n        return output;  \r\n\t}\r\n}\r\n",{"ruleId":"2320","replacedBy":"2321"},{"ruleId":"2322","replacedBy":"2323"},{"ruleId":"2324","severity":1,"message":"2325","line":3,"column":27,"nodeType":"2326","messageId":"2327","endLine":3,"endColumn":33},{"ruleId":"2320","replacedBy":"2328"},{"ruleId":"2322","replacedBy":"2329"},{"ruleId":"2330","severity":1,"message":"2331","line":18,"column":1,"nodeType":"2332","endLine":28,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":200,"column":25,"nodeType":"2335","messageId":"2336","endLine":200,"endColumn":27},{"ruleId":"2333","severity":1,"message":"2334","line":243,"column":19,"nodeType":"2335","messageId":"2336","endLine":243,"endColumn":21},{"ruleId":"2330","severity":1,"message":"2331","line":4,"column":1,"nodeType":"2332","endLine":21,"endColumn":2},{"ruleId":"2337","severity":1,"message":"2338","line":47,"column":14,"nodeType":"2335","messageId":"2339","endLine":55,"endColumn":5},{"ruleId":"2340","severity":1,"message":"2341","line":50,"column":28,"nodeType":"2342","messageId":"2343","endLine":50,"endColumn":29},{"ruleId":"2340","severity":1,"message":"2341","line":50,"column":42,"nodeType":"2342","messageId":"2343","endLine":50,"endColumn":43},{"ruleId":"2340","severity":1,"message":"2341","line":53,"column":27,"nodeType":"2342","messageId":"2343","endLine":53,"endColumn":28},{"ruleId":"2330","severity":1,"message":"2344","line":362,"column":1,"nodeType":"2332","endLine":362,"endColumn":40},{"ruleId":"2324","severity":1,"message":"2345","line":7,"column":5,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":8},{"ruleId":"2346","severity":1,"message":"2347","line":11,"column":8,"nodeType":"2326","messageId":"2348","endLine":11,"endColumn":11},{"ruleId":"2346","severity":1,"message":"2347","line":14,"column":15,"nodeType":"2326","messageId":"2348","endLine":14,"endColumn":18},{"ruleId":"2346","severity":1,"message":"2347","line":16,"column":12,"nodeType":"2326","messageId":"2348","endLine":16,"endColumn":15},{"ruleId":"2330","severity":1,"message":"2331","line":4,"column":1,"nodeType":"2332","endLine":12,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":6,"column":1,"nodeType":"2332","endLine":6,"endColumn":89},{"ruleId":"2330","severity":1,"message":"2331","line":27,"column":1,"nodeType":"2332","endLine":27,"endColumn":62},{"ruleId":"2330","severity":1,"message":"2331","line":7,"column":1,"nodeType":"2332","endLine":18,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":21,"column":1,"nodeType":"2332","endLine":21,"endColumn":73},{"ruleId":"2330","severity":1,"message":"2331","line":18,"column":1,"nodeType":"2332","endLine":36,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":66,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":79,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":23,"column":1,"nodeType":"2332","endLine":226,"endColumn":2},{"ruleId":"2350","severity":1,"message":"2351","line":83,"column":51,"nodeType":"2352","endLine":83,"endColumn":73},{"ruleId":"2330","severity":1,"message":"2349","line":16,"column":1,"nodeType":"2332","endLine":165,"endColumn":2},{"ruleId":"2350","severity":1,"message":"2351","line":155,"column":40,"nodeType":"2352","endLine":155,"endColumn":99},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":69,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":78,"column":1,"nodeType":"2332","endLine":80,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":119,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":86,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":20,"column":1,"nodeType":"2332","endLine":98,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":78,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":66,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":112,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":8,"column":1,"nodeType":"2332","endLine":58,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":26,"column":1,"nodeType":"2332","endLine":304,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":101,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":68,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":66,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":20,"column":1,"nodeType":"2332","endLine":174,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":108,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":116,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":95,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":83,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":14,"column":1,"nodeType":"2332","endLine":149,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":20,"column":1,"nodeType":"2332","endLine":532,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2353","line":195,"column":24,"nodeType":"2326","messageId":"2327","endLine":195,"endColumn":28},{"ruleId":"2330","severity":1,"message":"2349","line":8,"column":1,"nodeType":"2332","endLine":52,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":55,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2354","line":5,"column":8,"nodeType":"2326","messageId":"2327","endLine":5,"endColumn":12},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":134,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":23,"column":1,"nodeType":"2332","endLine":415,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2353","line":223,"column":48,"nodeType":"2326","messageId":"2327","endLine":223,"endColumn":52},{"ruleId":"2324","severity":1,"message":"2355","line":320,"column":9,"nodeType":"2326","messageId":"2327","endLine":320,"endColumn":10},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":66,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":14,"column":1,"nodeType":"2332","endLine":111,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2356","line":3,"column":16,"nodeType":"2326","messageId":"2327","endLine":3,"endColumn":19},{"ruleId":"2324","severity":1,"message":"2357","line":5,"column":7,"nodeType":"2326","messageId":"2327","endLine":5,"endColumn":11},{"ruleId":"2330","severity":1,"message":"2349","line":35,"column":1,"nodeType":"2332","endLine":75,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":2,"column":1,"nodeType":"2332","endLine":42,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2344","line":32,"column":1,"nodeType":"2332","endLine":76,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":11,"column":1,"nodeType":"2332","endLine":11,"endColumn":42},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":201,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2358","line":5,"column":7,"nodeType":"2326","messageId":"2327","endLine":5,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2359","line":6,"column":7,"nodeType":"2326","messageId":"2327","endLine":6,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2360","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":14},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":124,"endColumn":2},{"ruleId":"2361","severity":1,"message":"2362","line":34,"column":4,"nodeType":"2352","endLine":34,"endColumn":111},{"ruleId":"2361","severity":1,"message":"2362","line":51,"column":4,"nodeType":"2352","endLine":51,"endColumn":7},{"ruleId":"2330","severity":1,"message":"2349","line":57,"column":1,"nodeType":"2332","endLine":153,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":10,"column":1,"nodeType":"2332","endLine":19,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":89,"column":1,"nodeType":"2332","endLine":89,"endColumn":42},{"ruleId":"2330","severity":1,"message":"2331","line":12,"column":1,"nodeType":"2332","endLine":12,"endColumn":72},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":71,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":43,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2363","line":26,"column":29,"nodeType":"2326","messageId":"2327","endLine":26,"endColumn":33},{"ruleId":"2330","severity":1,"message":"2349","line":20,"column":1,"nodeType":"2332","endLine":211,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":146,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":9,"column":1,"nodeType":"2332","endLine":72,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":24,"column":1,"nodeType":"2332","endLine":24,"endColumn":42},{"ruleId":"2330","severity":1,"message":"2349","line":9,"column":1,"nodeType":"2332","endLine":72,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":9,"column":1,"nodeType":"2332","endLine":79,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2344","line":5,"column":1,"nodeType":"2332","endLine":133,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2344","line":5,"column":1,"nodeType":"2332","endLine":24,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":5,"column":1,"nodeType":"2332","endLine":39,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":6,"column":1,"nodeType":"2332","endLine":20,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":3,"column":1,"nodeType":"2332","endLine":9,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":88,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":6,"column":1,"nodeType":"2332","endLine":66,"endColumn":2},{"ruleId":"2364","severity":1,"message":"2365","line":58,"column":4,"nodeType":"2366","endLine":58,"endColumn":10,"suggestions":"2367"},{"ruleId":"2330","severity":1,"message":"2349","line":100,"column":1,"nodeType":"2332","endLine":122,"endColumn":2},{"ruleId":"2364","severity":1,"message":"2368","line":152,"column":4,"nodeType":"2366","endLine":152,"endColumn":48,"suggestions":"2369"},{"ruleId":"2330","severity":1,"message":"2349","line":371,"column":1,"nodeType":"2332","endLine":398,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":3,"column":1,"nodeType":"2332","endLine":16,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":7,"column":1,"nodeType":"2332","endLine":15,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2344","line":6,"column":1,"nodeType":"2332","endLine":93,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":5,"column":1,"nodeType":"2332","endLine":13,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":7,"column":1,"nodeType":"2332","endLine":24,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":142,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2370","line":23,"column":41,"nodeType":"2335","messageId":"2371","endLine":23,"endColumn":43},{"ruleId":"2324","severity":1,"message":"2372","line":90,"column":14,"nodeType":"2326","messageId":"2327","endLine":90,"endColumn":20},{"ruleId":"2364","severity":1,"message":"2373","line":101,"column":4,"nodeType":"2366","endLine":101,"endColumn":21,"suggestions":"2374"},{"ruleId":"2330","severity":1,"message":"2349","line":122,"column":1,"nodeType":"2332","endLine":170,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":6,"column":1,"nodeType":"2332","endLine":67,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":10,"column":1,"nodeType":"2332","endLine":19,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":12,"column":1,"nodeType":"2332","endLine":12,"endColumn":72},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":163,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":129,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2356","line":3,"column":9,"nodeType":"2326","messageId":"2327","endLine":3,"endColumn":12},{"ruleId":"2330","severity":1,"message":"2331","line":6,"column":1,"nodeType":"2332","endLine":21,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2375","line":5,"column":14,"nodeType":"2326","messageId":"2327","endLine":5,"endColumn":20},{"ruleId":"2330","severity":1,"message":"2331","line":8,"column":1,"nodeType":"2332","endLine":22,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":6,"column":1,"nodeType":"2332","endLine":21,"endColumn":2},{"ruleId":"2376","severity":1,"message":"2377","line":1,"column":1,"nodeType":"2378","messageId":"2379","fix":"2380"},{"ruleId":"2330","severity":1,"message":"2331","line":14,"column":1,"nodeType":"2332","endLine":105,"endColumn":2},{"ruleId":"2364","severity":1,"message":"2381","line":42,"column":4,"nodeType":"2366","endLine":42,"endColumn":19,"suggestions":"2382"},{"ruleId":"2330","severity":1,"message":"2331","line":7,"column":1,"nodeType":"2332","endLine":26,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":5,"column":1,"nodeType":"2332","endLine":14,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2356","line":4,"column":9,"nodeType":"2326","messageId":"2327","endLine":4,"endColumn":12},{"ruleId":"2330","severity":1,"message":"2331","line":6,"column":1,"nodeType":"2332","endLine":27,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":6,"column":1,"nodeType":"2332","endLine":10,"endColumn":9},{"ruleId":"2330","severity":1,"message":"2331","line":4,"column":1,"nodeType":"2332","endLine":14,"endColumn":2},{"ruleId":"2376","severity":1,"message":"2377","line":1,"column":1,"nodeType":"2378","messageId":"2379","fix":"2383"},{"ruleId":"2330","severity":1,"message":"2331","line":5,"column":1,"nodeType":"2332","endLine":9,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2344","line":3,"column":1,"nodeType":"2332","endLine":52,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":158,"endColumn":2},{"ruleId":"2376","severity":1,"message":"2377","line":1,"column":1,"nodeType":"2378","messageId":"2379","fix":"2384"},{"ruleId":"2330","severity":1,"message":"2331","line":6,"column":1,"nodeType":"2332","endLine":29,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":56,"column":1,"nodeType":"2332","endLine":56,"endColumn":42},{"ruleId":"2330","severity":1,"message":"2331","line":63,"column":1,"nodeType":"2332","endLine":63,"endColumn":42},{"ruleId":"2330","severity":1,"message":"2331","line":25,"column":1,"nodeType":"2332","endLine":25,"endColumn":42},{"ruleId":"2330","severity":1,"message":"2331","line":58,"column":1,"nodeType":"2332","endLine":58,"endColumn":42},{"ruleId":"2330","severity":1,"message":"2331","line":143,"column":1,"nodeType":"2332","endLine":145,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":75,"column":1,"nodeType":"2332","endLine":75,"endColumn":42},{"ruleId":"2324","severity":1,"message":"2325","line":3,"column":17,"nodeType":"2326","messageId":"2327","endLine":3,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2331","line":10,"column":1,"nodeType":"2332","endLine":110,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":10,"column":1,"nodeType":"2332","endLine":19,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":12,"column":1,"nodeType":"2332","endLine":12,"endColumn":72},{"ruleId":"2324","severity":1,"message":"2354","line":4,"column":8,"nodeType":"2326","messageId":"2327","endLine":4,"endColumn":12},{"ruleId":"2324","severity":1,"message":"2385","line":6,"column":9,"nodeType":"2326","messageId":"2327","endLine":6,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2386","line":13,"column":7,"nodeType":"2326","messageId":"2327","endLine":13,"endColumn":15},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":63,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":153,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":21,"column":1,"nodeType":"2332","endLine":288,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":116,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":135,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":14,"column":1,"nodeType":"2332","endLine":103,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":77,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":118,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2354","line":4,"column":8,"nodeType":"2326","messageId":"2327","endLine":4,"endColumn":12},{"ruleId":"2324","severity":1,"message":"2387","line":6,"column":8,"nodeType":"2326","messageId":"2327","endLine":6,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2359","line":11,"column":7,"nodeType":"2326","messageId":"2327","endLine":11,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2388","line":16,"column":7,"nodeType":"2326","messageId":"2327","endLine":16,"endColumn":17},{"ruleId":"2330","severity":1,"message":"2349","line":21,"column":1,"nodeType":"2332","endLine":135,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2389","line":45,"column":11,"nodeType":"2326","messageId":"2327","endLine":45,"endColumn":21},{"ruleId":"2324","severity":1,"message":"2354","line":6,"column":8,"nodeType":"2326","messageId":"2327","endLine":6,"endColumn":12},{"ruleId":"2324","severity":1,"message":"2359","line":11,"column":7,"nodeType":"2326","messageId":"2327","endLine":11,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2390","line":15,"column":7,"nodeType":"2326","messageId":"2327","endLine":15,"endColumn":17},{"ruleId":"2324","severity":1,"message":"2388","line":16,"column":7,"nodeType":"2326","messageId":"2327","endLine":16,"endColumn":17},{"ruleId":"2324","severity":1,"message":"2386","line":19,"column":7,"nodeType":"2326","messageId":"2327","endLine":19,"endColumn":15},{"ruleId":"2330","severity":1,"message":"2349","line":21,"column":1,"nodeType":"2332","endLine":174,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":14,"column":1,"nodeType":"2332","endLine":93,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":91,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":24,"column":1,"nodeType":"2332","endLine":301,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":126,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2353","line":76,"column":42,"nodeType":"2326","messageId":"2327","endLine":76,"endColumn":46},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":56,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":111,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2353","line":77,"column":42,"nodeType":"2326","messageId":"2327","endLine":77,"endColumn":46},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":61,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":16,"column":1,"nodeType":"2332","endLine":61,"endColumn":2},{"ruleId":"2350","severity":1,"message":"2351","line":52,"column":33,"nodeType":"2352","endLine":52,"endColumn":157},{"ruleId":"2350","severity":1,"message":"2351","line":54,"column":29,"nodeType":"2352","endLine":54,"endColumn":162},{"ruleId":"2324","severity":1,"message":"2385","line":3,"column":9,"nodeType":"2326","messageId":"2327","endLine":3,"endColumn":14},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":80,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":101,"endColumn":2},{"ruleId":"2350","severity":1,"message":"2351","line":78,"column":29,"nodeType":"2352","endLine":78,"endColumn":126},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":118,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":85,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":230,"endColumn":2},{"ruleId":"2391","severity":1,"message":"2392","line":159,"column":17,"nodeType":"2342","messageId":"2379","endLine":159,"endColumn":19},{"ruleId":"2391","severity":1,"message":"2392","line":159,"column":41,"nodeType":"2342","messageId":"2379","endLine":159,"endColumn":43},{"ruleId":"2391","severity":1,"message":"2392","line":162,"column":17,"nodeType":"2342","messageId":"2379","endLine":162,"endColumn":19},{"ruleId":"2391","severity":1,"message":"2392","line":162,"column":41,"nodeType":"2342","messageId":"2379","endLine":162,"endColumn":43},{"ruleId":"2330","severity":1,"message":"2349","line":7,"column":1,"nodeType":"2332","endLine":51,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2385","line":3,"column":9,"nodeType":"2326","messageId":"2327","endLine":3,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2393","line":5,"column":7,"nodeType":"2326","messageId":"2327","endLine":5,"endColumn":12},{"ruleId":"2324","severity":1,"message":"2394","line":6,"column":7,"nodeType":"2326","messageId":"2327","endLine":6,"endColumn":12},{"ruleId":"2324","severity":1,"message":"2358","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":13},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":69,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2385","line":4,"column":9,"nodeType":"2326","messageId":"2327","endLine":4,"endColumn":14},{"ruleId":"2330","severity":1,"message":"2331","line":27,"column":1,"nodeType":"2332","endLine":66,"endColumn":2},{"ruleId":"2364","severity":1,"message":"2395","line":49,"column":4,"nodeType":"2366","endLine":49,"endColumn":13,"suggestions":"2396"},{"ruleId":"2324","severity":1,"message":"2385","line":8,"column":9,"nodeType":"2326","messageId":"2327","endLine":8,"endColumn":14},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":116,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2385","line":3,"column":9,"nodeType":"2326","messageId":"2327","endLine":3,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2356","line":3,"column":16,"nodeType":"2326","messageId":"2327","endLine":3,"endColumn":19},{"ruleId":"2330","severity":1,"message":"2331","line":14,"column":1,"nodeType":"2332","endLine":36,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":112,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":20,"column":1,"nodeType":"2332","endLine":143,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":114,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":21,"column":1,"nodeType":"2332","endLine":203,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":26,"column":1,"nodeType":"2332","endLine":316,"endColumn":2},{"ruleId":"2397","severity":1,"message":"2398","line":58,"column":5,"nodeType":"2399","messageId":"2379","endLine":58,"endColumn":10},{"ruleId":"2397","severity":1,"message":"2400","line":58,"column":38,"nodeType":"2399","messageId":"2379","endLine":58,"endColumn":42},{"ruleId":"2397","severity":1,"message":"2401","line":58,"column":52,"nodeType":"2399","messageId":"2379","endLine":58,"endColumn":54},{"ruleId":"2397","severity":1,"message":"2402","line":58,"column":65,"nodeType":"2399","messageId":"2379","endLine":58,"endColumn":73},{"ruleId":"2330","severity":1,"message":"2349","line":26,"column":1,"nodeType":"2332","endLine":251,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":10,"column":1,"nodeType":"2332","endLine":42,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":26,"column":1,"nodeType":"2332","endLine":248,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":102,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":5,"column":1,"nodeType":"2332","endLine":13,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":114,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2344","line":18,"column":1,"nodeType":"2332","endLine":158,"endColumn":2},{"ruleId":"2350","severity":1,"message":"2351","line":27,"column":91,"nodeType":"2352","endLine":27,"endColumn":191},{"ruleId":"2350","severity":1,"message":"2351","line":29,"column":64,"nodeType":"2352","endLine":29,"endColumn":169},{"ruleId":"2350","severity":1,"message":"2351","line":31,"column":64,"nodeType":"2352","endLine":31,"endColumn":167},{"ruleId":"2403","severity":1,"message":"2404","line":34,"column":34,"nodeType":"2405","messageId":"2406","endLine":34,"endColumn":36},{"ruleId":"2403","severity":1,"message":"2404","line":35,"column":13,"nodeType":"2405","messageId":"2406","endLine":35,"endColumn":15},{"ruleId":"2391","severity":1,"message":"2392","line":35,"column":27,"nodeType":"2342","messageId":"2379","endLine":35,"endColumn":29},{"ruleId":"2391","severity":1,"message":"2392","line":35,"column":52,"nodeType":"2342","messageId":"2379","endLine":35,"endColumn":54},{"ruleId":"2391","severity":1,"message":"2392","line":35,"column":77,"nodeType":"2342","messageId":"2379","endLine":35,"endColumn":79},{"ruleId":"2391","severity":1,"message":"2392","line":35,"column":102,"nodeType":"2342","messageId":"2379","endLine":35,"endColumn":104},{"ruleId":"2391","severity":1,"message":"2392","line":35,"column":127,"nodeType":"2342","messageId":"2379","endLine":35,"endColumn":129},{"ruleId":"2391","severity":1,"message":"2392","line":35,"column":152,"nodeType":"2342","messageId":"2379","endLine":35,"endColumn":154},{"ruleId":"2391","severity":1,"message":"2392","line":36,"column":27,"nodeType":"2342","messageId":"2379","endLine":36,"endColumn":29},{"ruleId":"2391","severity":1,"message":"2392","line":36,"column":52,"nodeType":"2342","messageId":"2379","endLine":36,"endColumn":54},{"ruleId":"2391","severity":1,"message":"2392","line":36,"column":77,"nodeType":"2342","messageId":"2379","endLine":36,"endColumn":79},{"ruleId":"2350","severity":1,"message":"2351","line":37,"column":34,"nodeType":"2352","endLine":37,"endColumn":135},{"ruleId":"2350","severity":1,"message":"2351","line":40,"column":62,"nodeType":"2352","endLine":40,"endColumn":174},{"ruleId":"2350","severity":1,"message":"2351","line":42,"column":65,"nodeType":"2352","endLine":42,"endColumn":172},{"ruleId":"2350","severity":1,"message":"2351","line":51,"column":13,"nodeType":"2352","endLine":53,"endColumn":18},{"ruleId":"2350","severity":1,"message":"2351","line":111,"column":25,"nodeType":"2352","endLine":111,"endColumn":167},{"ruleId":"2330","severity":1,"message":"2349","line":23,"column":1,"nodeType":"2332","endLine":411,"endColumn":2},{"ruleId":"2391","severity":1,"message":"2392","line":98,"column":25,"nodeType":"2342","messageId":"2379","endLine":98,"endColumn":27},{"ruleId":"2391","severity":1,"message":"2392","line":102,"column":27,"nodeType":"2342","messageId":"2379","endLine":102,"endColumn":29},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":81,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2385","line":5,"column":9,"nodeType":"2326","messageId":"2327","endLine":5,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2356","line":5,"column":16,"nodeType":"2326","messageId":"2327","endLine":5,"endColumn":19},{"ruleId":"2324","severity":1,"message":"2358","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2407","line":10,"column":7,"nodeType":"2326","messageId":"2327","endLine":10,"endColumn":11},{"ruleId":"2324","severity":1,"message":"2408","line":11,"column":7,"nodeType":"2326","messageId":"2327","endLine":11,"endColumn":10},{"ruleId":"2324","severity":1,"message":"2390","line":13,"column":7,"nodeType":"2326","messageId":"2327","endLine":13,"endColumn":17},{"ruleId":"2324","severity":1,"message":"2409","line":14,"column":7,"nodeType":"2326","messageId":"2327","endLine":14,"endColumn":12},{"ruleId":"2330","severity":1,"message":"2349","line":21,"column":1,"nodeType":"2332","endLine":71,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2410","line":58,"column":17,"nodeType":"2326","messageId":"2327","endLine":58,"endColumn":28},{"ruleId":"2324","severity":1,"message":"2411","line":58,"column":30,"nodeType":"2326","messageId":"2327","endLine":58,"endColumn":33},{"ruleId":"2324","severity":1,"message":"2412","line":58,"column":35,"nodeType":"2326","messageId":"2327","endLine":58,"endColumn":40},{"ruleId":"2324","severity":1,"message":"2413","line":58,"column":42,"nodeType":"2326","messageId":"2327","endLine":58,"endColumn":46},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":81,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":81,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":81,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":81,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":104,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":104,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":107,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":109,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":81,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":11,"column":1,"nodeType":"2332","endLine":21,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":13,"column":1,"nodeType":"2332","endLine":13,"endColumn":73},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":107,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":108,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":91,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":107,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":92,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":110,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":92,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":24,"column":1,"nodeType":"2332","endLine":154,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":80,"column":21,"nodeType":"2335","messageId":"2336","endLine":80,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":25,"column":1,"nodeType":"2332","endLine":193,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":116,"column":21,"nodeType":"2335","messageId":"2336","endLine":116,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":10,"column":1,"nodeType":"2332","endLine":72,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":88,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":22,"column":1,"nodeType":"2332","endLine":113,"endColumn":2},{"ruleId":"2391","severity":1,"message":"2392","line":34,"column":39,"nodeType":"2342","messageId":"2379","endLine":34,"endColumn":41},{"ruleId":"2330","severity":1,"message":"2349","line":27,"column":1,"nodeType":"2332","endLine":173,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":107,"column":33,"nodeType":"2335","messageId":"2336","endLine":107,"endColumn":35},{"ruleId":"2330","severity":1,"message":"2349","line":25,"column":1,"nodeType":"2332","endLine":177,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":111,"column":33,"nodeType":"2335","messageId":"2336","endLine":111,"endColumn":35},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":308,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2414","line":147,"column":15,"nodeType":"2326","messageId":"2327","endLine":147,"endColumn":21},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":91,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":126,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":16,"column":1,"nodeType":"2332","endLine":148,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":90,"column":21,"nodeType":"2335","messageId":"2336","endLine":90,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":10,"column":1,"nodeType":"2332","endLine":79,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":10,"column":1,"nodeType":"2332","endLine":79,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":120,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":119,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":16,"column":1,"nodeType":"2332","endLine":131,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":112,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":153,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":78,"column":21,"nodeType":"2335","messageId":"2336","endLine":78,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":161,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":88,"column":21,"nodeType":"2335","messageId":"2336","endLine":88,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":125,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":16,"column":1,"nodeType":"2332","endLine":77,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":22,"column":1,"nodeType":"2332","endLine":132,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":145,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":16,"column":1,"nodeType":"2332","endLine":170,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":24,"column":1,"nodeType":"2332","endLine":167,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":59,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":157,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":137,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":14,"column":1,"nodeType":"2332","endLine":82,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":22,"column":1,"nodeType":"2332","endLine":120,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":23,"column":1,"nodeType":"2332","endLine":148,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":24,"column":1,"nodeType":"2332","endLine":231,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":159,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":22,"column":1,"nodeType":"2332","endLine":191,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":31,"column":1,"nodeType":"2332","endLine":345,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2357","line":5,"column":7,"nodeType":"2326","messageId":"2327","endLine":5,"endColumn":11},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":108,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2414","line":83,"column":35,"nodeType":"2326","messageId":"2327","endLine":83,"endColumn":41},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":190,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":22,"column":1,"nodeType":"2332","endLine":175,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":23,"column":1,"nodeType":"2332","endLine":236,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":14,"column":1,"nodeType":"2332","endLine":154,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":163,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":141,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":99,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2414","line":73,"column":35,"nodeType":"2326","messageId":"2327","endLine":73,"endColumn":41},{"ruleId":"2330","severity":1,"message":"2349","line":26,"column":1,"nodeType":"2332","endLine":240,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":33,"column":1,"nodeType":"2332","endLine":181,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":104,"column":21,"nodeType":"2335","messageId":"2336","endLine":104,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2331","line":24,"column":1,"nodeType":"2332","endLine":93,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":10,"column":1,"nodeType":"2332","endLine":19,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":35,"column":1,"nodeType":"2332","endLine":169,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":110,"column":45,"nodeType":"2335","messageId":"2336","endLine":110,"endColumn":47},{"ruleId":"2330","severity":1,"message":"2331","line":12,"column":1,"nodeType":"2332","endLine":12,"endColumn":72},{"ruleId":"2324","severity":1,"message":"2358","line":5,"column":7,"nodeType":"2326","messageId":"2327","endLine":5,"endColumn":13},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":167,"endColumn":2},{"ruleId":"2391","severity":1,"message":"2392","line":87,"column":19,"nodeType":"2342","messageId":"2379","endLine":87,"endColumn":21},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":233,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2414","line":193,"column":42,"nodeType":"2326","messageId":"2327","endLine":193,"endColumn":48},{"ruleId":"2324","severity":1,"message":"2415","line":193,"column":50,"nodeType":"2326","messageId":"2327","endLine":193,"endColumn":59},{"ruleId":"2324","severity":1,"message":"2416","line":193,"column":61,"nodeType":"2326","messageId":"2327","endLine":193,"endColumn":73},{"ruleId":"2324","severity":1,"message":"2358","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2388","line":8,"column":7,"nodeType":"2326","messageId":"2327","endLine":8,"endColumn":17},{"ruleId":"2324","severity":1,"message":"2359","line":9,"column":7,"nodeType":"2326","messageId":"2327","endLine":9,"endColumn":14},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":89,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":14,"column":1,"nodeType":"2332","endLine":85,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":177,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2416","line":149,"column":46,"nodeType":"2326","messageId":"2327","endLine":149,"endColumn":58},{"ruleId":"2324","severity":1,"message":"2358","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":13},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":142,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2416","line":101,"column":42,"nodeType":"2326","messageId":"2327","endLine":101,"endColumn":54},{"ruleId":"2330","severity":1,"message":"2349","line":23,"column":1,"nodeType":"2332","endLine":244,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2358","line":8,"column":7,"nodeType":"2326","messageId":"2327","endLine":8,"endColumn":13},{"ruleId":"2330","severity":1,"message":"2349","line":21,"column":1,"nodeType":"2332","endLine":210,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2414","line":177,"column":37,"nodeType":"2326","messageId":"2327","endLine":177,"endColumn":43},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":159,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":14,"column":1,"nodeType":"2332","endLine":162,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2416","line":118,"column":50,"nodeType":"2326","messageId":"2327","endLine":118,"endColumn":62},{"ruleId":"2330","severity":1,"message":"2349","line":14,"column":1,"nodeType":"2332","endLine":132,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":14,"column":1,"nodeType":"2332","endLine":116,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2387","line":2,"column":8,"nodeType":"2326","messageId":"2327","endLine":2,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2388","line":13,"column":7,"nodeType":"2326","messageId":"2327","endLine":13,"endColumn":17},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":172,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2414","line":142,"column":42,"nodeType":"2326","messageId":"2327","endLine":142,"endColumn":48},{"ruleId":"2324","severity":1,"message":"2416","line":142,"column":50,"nodeType":"2326","messageId":"2327","endLine":142,"endColumn":62},{"ruleId":"2330","severity":1,"message":"2349","line":8,"column":1,"nodeType":"2332","endLine":69,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2416","line":54,"column":41,"nodeType":"2326","messageId":"2327","endLine":54,"endColumn":53},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":79,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2414","line":52,"column":41,"nodeType":"2326","messageId":"2327","endLine":52,"endColumn":47},{"ruleId":"2324","severity":1,"message":"2416","line":52,"column":49,"nodeType":"2326","messageId":"2327","endLine":52,"endColumn":61},{"ruleId":"2324","severity":1,"message":"2360","line":10,"column":7,"nodeType":"2326","messageId":"2327","endLine":10,"endColumn":14},{"ruleId":"2330","severity":1,"message":"2349","line":21,"column":1,"nodeType":"2332","endLine":224,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2414","line":190,"column":37,"nodeType":"2326","messageId":"2327","endLine":190,"endColumn":43},{"ruleId":"2324","severity":1,"message":"2358","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":13},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":187,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":12,"column":1,"nodeType":"2332","endLine":12,"endColumn":72},{"ruleId":"2330","severity":1,"message":"2331","line":10,"column":1,"nodeType":"2332","endLine":19,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":239,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2417","line":161,"column":17,"nodeType":"2326","messageId":"2327","endLine":161,"endColumn":22},{"ruleId":"2324","severity":1,"message":"2416","line":161,"column":86,"nodeType":"2326","messageId":"2327","endLine":161,"endColumn":98},{"ruleId":"2324","severity":1,"message":"2418","line":203,"column":16,"nodeType":"2326","messageId":"2327","endLine":203,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":211,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2417","line":135,"column":17,"nodeType":"2326","messageId":"2327","endLine":135,"endColumn":22},{"ruleId":"2324","severity":1,"message":"2416","line":135,"column":50,"nodeType":"2326","messageId":"2327","endLine":135,"endColumn":62},{"ruleId":"2333","severity":1,"message":"2334","line":153,"column":30,"nodeType":"2335","messageId":"2336","endLine":153,"endColumn":32},{"ruleId":"2324","severity":1,"message":"2419","line":2,"column":10,"nodeType":"2326","messageId":"2327","endLine":2,"endColumn":16},{"ruleId":"2324","severity":1,"message":"2360","line":5,"column":7,"nodeType":"2326","messageId":"2327","endLine":5,"endColumn":14},{"ruleId":"2330","severity":1,"message":"2349","line":16,"column":1,"nodeType":"2332","endLine":152,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":21,"column":1,"nodeType":"2332","endLine":228,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":163,"column":37,"nodeType":"2335","messageId":"2336","endLine":163,"endColumn":39},{"ruleId":"2324","severity":1,"message":"2417","line":177,"column":17,"nodeType":"2326","messageId":"2327","endLine":177,"endColumn":22},{"ruleId":"2324","severity":1,"message":"2416","line":177,"column":50,"nodeType":"2326","messageId":"2327","endLine":177,"endColumn":62},{"ruleId":"2324","severity":1,"message":"2414","line":194,"column":37,"nodeType":"2326","messageId":"2327","endLine":194,"endColumn":43},{"ruleId":"2324","severity":1,"message":"2360","line":8,"column":7,"nodeType":"2326","messageId":"2327","endLine":8,"endColumn":14},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":208,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":78,"column":17,"nodeType":"2335","messageId":"2336","endLine":78,"endColumn":19},{"ruleId":"2333","severity":1,"message":"2334","line":85,"column":39,"nodeType":"2335","messageId":"2336","endLine":85,"endColumn":41},{"ruleId":"2324","severity":1,"message":"2417","line":139,"column":17,"nodeType":"2326","messageId":"2327","endLine":139,"endColumn":22},{"ruleId":"2324","severity":1,"message":"2416","line":139,"column":59,"nodeType":"2326","messageId":"2327","endLine":139,"endColumn":71},{"ruleId":"2324","severity":1,"message":"2414","line":156,"column":37,"nodeType":"2326","messageId":"2327","endLine":156,"endColumn":43},{"ruleId":"2324","severity":1,"message":"2418","line":176,"column":37,"nodeType":"2326","messageId":"2327","endLine":176,"endColumn":44},{"ruleId":"2324","severity":1,"message":"2387","line":3,"column":8,"nodeType":"2326","messageId":"2327","endLine":3,"endColumn":13},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":75,"endColumn":2},{"ruleId":"2350","severity":1,"message":"2351","line":70,"column":21,"nodeType":"2352","endLine":70,"endColumn":56},{"ruleId":"2324","severity":1,"message":"2420","line":1,"column":10,"nodeType":"2326","messageId":"2327","endLine":1,"endColumn":18},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":454,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2421","line":96,"column":28,"nodeType":"2326","messageId":"2327","endLine":96,"endColumn":35},{"ruleId":"2324","severity":1,"message":"2422","line":96,"column":46,"nodeType":"2326","messageId":"2327","endLine":96,"endColumn":48},{"ruleId":"2324","severity":1,"message":"2423","line":154,"column":55,"nodeType":"2326","messageId":"2327","endLine":154,"endColumn":63},{"ruleId":"2391","severity":1,"message":"2392","line":160,"column":21,"nodeType":"2342","messageId":"2379","endLine":160,"endColumn":23},{"ruleId":"2333","severity":1,"message":"2334","line":161,"column":20,"nodeType":"2335","messageId":"2336","endLine":161,"endColumn":22},{"ruleId":"2333","severity":1,"message":"2334","line":162,"column":21,"nodeType":"2335","messageId":"2336","endLine":162,"endColumn":23},{"ruleId":"2333","severity":1,"message":"2334","line":163,"column":21,"nodeType":"2335","messageId":"2336","endLine":163,"endColumn":23},{"ruleId":"2333","severity":1,"message":"2334","line":164,"column":21,"nodeType":"2335","messageId":"2336","endLine":164,"endColumn":23},{"ruleId":"2333","severity":1,"message":"2334","line":280,"column":20,"nodeType":"2335","messageId":"2336","endLine":280,"endColumn":22},{"ruleId":"2333","severity":1,"message":"2334","line":285,"column":28,"nodeType":"2335","messageId":"2336","endLine":285,"endColumn":30},{"ruleId":"2333","severity":1,"message":"2334","line":302,"column":16,"nodeType":"2335","messageId":"2336","endLine":302,"endColumn":18},{"ruleId":"2333","severity":1,"message":"2334","line":303,"column":17,"nodeType":"2335","messageId":"2336","endLine":303,"endColumn":19},{"ruleId":"2333","severity":1,"message":"2334","line":304,"column":17,"nodeType":"2335","messageId":"2336","endLine":304,"endColumn":19},{"ruleId":"2333","severity":1,"message":"2334","line":305,"column":17,"nodeType":"2335","messageId":"2336","endLine":305,"endColumn":19},{"ruleId":"2391","severity":1,"message":"2392","line":329,"column":62,"nodeType":"2342","messageId":"2379","endLine":329,"endColumn":64},{"ruleId":"2333","severity":1,"message":"2334","line":338,"column":25,"nodeType":"2335","messageId":"2336","endLine":338,"endColumn":27},{"ruleId":"2333","severity":1,"message":"2334","line":359,"column":31,"nodeType":"2335","messageId":"2336","endLine":359,"endColumn":33},{"ruleId":"2333","severity":1,"message":"2334","line":397,"column":26,"nodeType":"2335","messageId":"2336","endLine":397,"endColumn":28},{"ruleId":"2333","severity":1,"message":"2334","line":413,"column":26,"nodeType":"2335","messageId":"2336","endLine":413,"endColumn":28},{"ruleId":"2324","severity":1,"message":"2387","line":3,"column":8,"nodeType":"2326","messageId":"2327","endLine":3,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2424","line":8,"column":7,"nodeType":"2326","messageId":"2327","endLine":8,"endColumn":11},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":71,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2416","line":53,"column":41,"nodeType":"2326","messageId":"2327","endLine":53,"endColumn":53},{"ruleId":"2350","severity":1,"message":"2351","line":66,"column":21,"nodeType":"2352","endLine":66,"endColumn":56},{"ruleId":"2324","severity":1,"message":"2425","line":4,"column":20,"nodeType":"2326","messageId":"2327","endLine":4,"endColumn":30},{"ruleId":"2324","severity":1,"message":"2426","line":14,"column":9,"nodeType":"2326","messageId":"2327","endLine":14,"endColumn":17},{"ruleId":"2324","severity":1,"message":"2388","line":16,"column":7,"nodeType":"2326","messageId":"2327","endLine":16,"endColumn":17},{"ruleId":"2330","severity":1,"message":"2349","line":20,"column":1,"nodeType":"2332","endLine":258,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2355","line":120,"column":13,"nodeType":"2326","messageId":"2327","endLine":120,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2387","line":3,"column":8,"nodeType":"2326","messageId":"2327","endLine":3,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2358","line":9,"column":7,"nodeType":"2326","messageId":"2327","endLine":9,"endColumn":13},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":63,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2416","line":48,"column":41,"nodeType":"2326","messageId":"2327","endLine":48,"endColumn":53},{"ruleId":"2330","severity":1,"message":"2349","line":20,"column":1,"nodeType":"2332","endLine":279,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2427","line":85,"column":34,"nodeType":"2326","messageId":"2327","endLine":85,"endColumn":38},{"ruleId":"2391","severity":1,"message":"2392","line":86,"column":22,"nodeType":"2342","messageId":"2379","endLine":86,"endColumn":24},{"ruleId":"2333","severity":1,"message":"2334","line":87,"column":20,"nodeType":"2335","messageId":"2336","endLine":87,"endColumn":22},{"ruleId":"2333","severity":1,"message":"2334","line":90,"column":21,"nodeType":"2335","messageId":"2336","endLine":90,"endColumn":23},{"ruleId":"2333","severity":1,"message":"2334","line":125,"column":16,"nodeType":"2335","messageId":"2336","endLine":125,"endColumn":18},{"ruleId":"2333","severity":1,"message":"2334","line":128,"column":17,"nodeType":"2335","messageId":"2336","endLine":128,"endColumn":19},{"ruleId":"2324","severity":1,"message":"2416","line":184,"column":35,"nodeType":"2326","messageId":"2327","endLine":184,"endColumn":47},{"ruleId":"2324","severity":1,"message":"2428","line":184,"column":82,"nodeType":"2326","messageId":"2327","endLine":184,"endColumn":91},{"ruleId":"2391","severity":1,"message":"2392","line":202,"column":89,"nodeType":"2342","messageId":"2379","endLine":202,"endColumn":91},{"ruleId":"2333","severity":1,"message":"2334","line":209,"column":25,"nodeType":"2335","messageId":"2336","endLine":209,"endColumn":27},{"ruleId":"2350","severity":1,"message":"2351","line":219,"column":7,"nodeType":"2352","endLine":219,"endColumn":68},{"ruleId":"2333","severity":1,"message":"2334","line":266,"column":26,"nodeType":"2335","messageId":"2336","endLine":266,"endColumn":28},{"ruleId":"2324","severity":1,"message":"2358","line":15,"column":7,"nodeType":"2326","messageId":"2327","endLine":15,"endColumn":13},{"ruleId":"2330","severity":1,"message":"2349","line":20,"column":1,"nodeType":"2332","endLine":259,"endColumn":2},{"ruleId":"2391","severity":1,"message":"2392","line":128,"column":21,"nodeType":"2342","messageId":"2379","endLine":128,"endColumn":23},{"ruleId":"2391","severity":1,"message":"2392","line":128,"column":40,"nodeType":"2342","messageId":"2379","endLine":128,"endColumn":42},{"ruleId":"2324","severity":1,"message":"2387","line":2,"column":8,"nodeType":"2326","messageId":"2327","endLine":2,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2385","line":4,"column":9,"nodeType":"2326","messageId":"2327","endLine":4,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2359","line":6,"column":7,"nodeType":"2326","messageId":"2327","endLine":6,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2360","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2388","line":12,"column":7,"nodeType":"2326","messageId":"2327","endLine":12,"endColumn":17},{"ruleId":"2330","severity":1,"message":"2349","line":16,"column":1,"nodeType":"2332","endLine":88,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2417","line":59,"column":17,"nodeType":"2326","messageId":"2327","endLine":59,"endColumn":22},{"ruleId":"2324","severity":1,"message":"2414","line":59,"column":42,"nodeType":"2326","messageId":"2327","endLine":59,"endColumn":48},{"ruleId":"2324","severity":1,"message":"2416","line":59,"column":50,"nodeType":"2326","messageId":"2327","endLine":59,"endColumn":62},{"ruleId":"2324","severity":1,"message":"2388","line":13,"column":7,"nodeType":"2326","messageId":"2327","endLine":13,"endColumn":17},{"ruleId":"2330","severity":1,"message":"2349","line":20,"column":1,"nodeType":"2332","endLine":205,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2387","line":2,"column":8,"nodeType":"2326","messageId":"2327","endLine":2,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2359","line":6,"column":7,"nodeType":"2326","messageId":"2327","endLine":6,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2360","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2388","line":15,"column":7,"nodeType":"2326","messageId":"2327","endLine":15,"endColumn":17},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":133,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2417","line":104,"column":17,"nodeType":"2326","messageId":"2327","endLine":104,"endColumn":22},{"ruleId":"2324","severity":1,"message":"2414","line":104,"column":42,"nodeType":"2326","messageId":"2327","endLine":104,"endColumn":48},{"ruleId":"2324","severity":1,"message":"2416","line":104,"column":50,"nodeType":"2326","messageId":"2327","endLine":104,"endColumn":62},{"ruleId":"2324","severity":1,"message":"2360","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":14},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":193,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2417","line":145,"column":17,"nodeType":"2326","messageId":"2327","endLine":145,"endColumn":22},{"ruleId":"2324","severity":1,"message":"2416","line":145,"column":50,"nodeType":"2326","messageId":"2327","endLine":145,"endColumn":62},{"ruleId":"2324","severity":1,"message":"2414","line":162,"column":37,"nodeType":"2326","messageId":"2327","endLine":162,"endColumn":43},{"ruleId":"2324","severity":1,"message":"2360","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2390","line":12,"column":7,"nodeType":"2326","messageId":"2327","endLine":12,"endColumn":17},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":152,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2414","line":78,"column":16,"nodeType":"2326","messageId":"2327","endLine":78,"endColumn":22},{"ruleId":"2324","severity":1,"message":"2429","line":88,"column":14,"nodeType":"2326","messageId":"2327","endLine":88,"endColumn":22},{"ruleId":"2324","severity":1,"message":"2387","line":2,"column":8,"nodeType":"2326","messageId":"2327","endLine":2,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2359","line":6,"column":7,"nodeType":"2326","messageId":"2327","endLine":6,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2360","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2388","line":15,"column":7,"nodeType":"2326","messageId":"2327","endLine":15,"endColumn":17},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":149,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2417","line":120,"column":17,"nodeType":"2326","messageId":"2327","endLine":120,"endColumn":22},{"ruleId":"2324","severity":1,"message":"2414","line":120,"column":42,"nodeType":"2326","messageId":"2327","endLine":120,"endColumn":48},{"ruleId":"2324","severity":1,"message":"2416","line":120,"column":50,"nodeType":"2326","messageId":"2327","endLine":120,"endColumn":62},{"ruleId":"2324","severity":1,"message":"2388","line":13,"column":7,"nodeType":"2326","messageId":"2327","endLine":13,"endColumn":17},{"ruleId":"2330","severity":1,"message":"2349","line":20,"column":1,"nodeType":"2332","endLine":202,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2360","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":14},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":208,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2417","line":145,"column":17,"nodeType":"2326","messageId":"2327","endLine":145,"endColumn":22},{"ruleId":"2324","severity":1,"message":"2416","line":145,"column":50,"nodeType":"2326","messageId":"2327","endLine":145,"endColumn":62},{"ruleId":"2324","severity":1,"message":"2414","line":162,"column":37,"nodeType":"2326","messageId":"2327","endLine":162,"endColumn":43},{"ruleId":"2330","severity":1,"message":"2349","line":29,"column":1,"nodeType":"2332","endLine":543,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2430","line":265,"column":76,"nodeType":"2326","messageId":"2327","endLine":265,"endColumn":80},{"ruleId":"2324","severity":1,"message":"2431","line":265,"column":116,"nodeType":"2326","messageId":"2327","endLine":265,"endColumn":123},{"ruleId":"2391","severity":1,"message":"2392","line":290,"column":75,"nodeType":"2342","messageId":"2379","endLine":290,"endColumn":77},{"ruleId":"2391","severity":1,"message":"2392","line":334,"column":75,"nodeType":"2342","messageId":"2379","endLine":334,"endColumn":77},{"ruleId":"2330","severity":1,"message":"2349","line":27,"column":1,"nodeType":"2332","endLine":219,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2358","line":8,"column":7,"nodeType":"2326","messageId":"2327","endLine":8,"endColumn":13},{"ruleId":"2330","severity":1,"message":"2349","line":33,"column":1,"nodeType":"2332","endLine":222,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2388","line":17,"column":7,"nodeType":"2326","messageId":"2327","endLine":17,"endColumn":17},{"ruleId":"2330","severity":1,"message":"2349","line":28,"column":1,"nodeType":"2332","endLine":247,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2414","line":196,"column":35,"nodeType":"2326","messageId":"2327","endLine":196,"endColumn":41},{"ruleId":"2330","severity":1,"message":"2349","line":22,"column":1,"nodeType":"2332","endLine":245,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":121,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":23,"column":1,"nodeType":"2332","endLine":159,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":78,"column":21,"nodeType":"2335","messageId":"2336","endLine":78,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":18,"column":1,"nodeType":"2332","endLine":208,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":132,"column":21,"nodeType":"2335","messageId":"2336","endLine":132,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":25,"column":1,"nodeType":"2332","endLine":185,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":109,"column":21,"nodeType":"2335","messageId":"2336","endLine":109,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":19,"column":1,"nodeType":"2332","endLine":172,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":82,"column":21,"nodeType":"2335","messageId":"2336","endLine":82,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":10,"column":1,"nodeType":"2332","endLine":65,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2432","line":19,"column":19,"nodeType":"2326","messageId":"2327","endLine":19,"endColumn":22},{"ruleId":"2330","severity":1,"message":"2349","line":28,"column":1,"nodeType":"2332","endLine":286,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":193,"column":21,"nodeType":"2335","messageId":"2336","endLine":193,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":28,"column":1,"nodeType":"2332","endLine":207,"endColumn":2},{"ruleId":"2433","severity":1,"message":"2434","line":52,"column":9,"nodeType":"2435","endLine":52,"endColumn":29},{"ruleId":"2333","severity":1,"message":"2334","line":126,"column":21,"nodeType":"2335","messageId":"2336","endLine":126,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":24,"column":1,"nodeType":"2332","endLine":235,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":152,"column":21,"nodeType":"2335","messageId":"2336","endLine":152,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":24,"column":1,"nodeType":"2332","endLine":196,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":115,"column":21,"nodeType":"2335","messageId":"2336","endLine":115,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":79,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":24,"column":1,"nodeType":"2332","endLine":202,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":126,"column":21,"nodeType":"2335","messageId":"2336","endLine":126,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":10,"column":1,"nodeType":"2332","endLine":62,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":128,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":23,"column":1,"nodeType":"2332","endLine":172,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":109,"column":21,"nodeType":"2335","messageId":"2336","endLine":109,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":22,"column":1,"nodeType":"2332","endLine":132,"endColumn":2},{"ruleId":"2433","severity":1,"message":"2434","line":87,"column":112,"nodeType":"2435","endLine":87,"endColumn":122},{"ruleId":"2330","severity":1,"message":"2349","line":22,"column":1,"nodeType":"2332","endLine":151,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":94,"column":21,"nodeType":"2335","messageId":"2336","endLine":94,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":23,"column":1,"nodeType":"2332","endLine":258,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":24,"column":1,"nodeType":"2332","endLine":195,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":25,"column":1,"nodeType":"2332","endLine":193,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":98,"column":21,"nodeType":"2335","messageId":"2336","endLine":98,"endColumn":23},{"ruleId":"2333","severity":1,"message":"2334","line":110,"column":22,"nodeType":"2335","messageId":"2336","endLine":110,"endColumn":24},{"ruleId":"2330","severity":1,"message":"2349","line":16,"column":1,"nodeType":"2332","endLine":159,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":88,"column":21,"nodeType":"2335","messageId":"2336","endLine":88,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":131,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":66,"column":21,"nodeType":"2335","messageId":"2336","endLine":66,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":110,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":118,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":11,"column":1,"nodeType":"2332","endLine":133,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":110,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":162,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":83,"column":21,"nodeType":"2335","messageId":"2336","endLine":83,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":163,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":84,"column":21,"nodeType":"2335","messageId":"2336","endLine":84,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2344","line":10,"column":1,"nodeType":"2332","endLine":108,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":172,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":93,"column":21,"nodeType":"2335","messageId":"2336","endLine":93,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":24,"column":1,"nodeType":"2332","endLine":203,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":118,"column":21,"nodeType":"2335","messageId":"2336","endLine":118,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":138,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":163,"endColumn":2},{"ruleId":"2333","severity":1,"message":"2334","line":84,"column":21,"nodeType":"2335","messageId":"2336","endLine":84,"endColumn":23},{"ruleId":"2330","severity":1,"message":"2349","line":15,"column":1,"nodeType":"2332","endLine":59,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":79,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":144,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":22,"column":1,"nodeType":"2332","endLine":187,"endColumn":2},{"ruleId":"2403","severity":1,"message":"2436","line":68,"column":134,"nodeType":"2405","messageId":"2406","endLine":68,"endColumn":136},{"ruleId":"2403","severity":1,"message":"2436","line":68,"column":148,"nodeType":"2405","messageId":"2406","endLine":68,"endColumn":150},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":129,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2385","line":4,"column":9,"nodeType":"2326","messageId":"2327","endLine":4,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2358","line":6,"column":7,"nodeType":"2326","messageId":"2327","endLine":6,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2359","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2360","line":8,"column":7,"nodeType":"2326","messageId":"2327","endLine":8,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2424","line":10,"column":7,"nodeType":"2326","messageId":"2327","endLine":10,"endColumn":11},{"ruleId":"2324","severity":1,"message":"2390","line":12,"column":7,"nodeType":"2326","messageId":"2327","endLine":12,"endColumn":17},{"ruleId":"2324","severity":1,"message":"2386","line":15,"column":7,"nodeType":"2326","messageId":"2327","endLine":15,"endColumn":15},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":57,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2354","line":4,"column":8,"nodeType":"2326","messageId":"2327","endLine":4,"endColumn":12},{"ruleId":"2324","severity":1,"message":"2358","line":8,"column":7,"nodeType":"2326","messageId":"2327","endLine":8,"endColumn":13},{"ruleId":"2330","severity":1,"message":"2349","line":21,"column":1,"nodeType":"2332","endLine":172,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2385","line":4,"column":9,"nodeType":"2326","messageId":"2327","endLine":4,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2358","line":6,"column":7,"nodeType":"2326","messageId":"2327","endLine":6,"endColumn":13},{"ruleId":"2324","severity":1,"message":"2359","line":7,"column":7,"nodeType":"2326","messageId":"2327","endLine":7,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2360","line":8,"column":7,"nodeType":"2326","messageId":"2327","endLine":8,"endColumn":14},{"ruleId":"2324","severity":1,"message":"2424","line":10,"column":7,"nodeType":"2326","messageId":"2327","endLine":10,"endColumn":11},{"ruleId":"2324","severity":1,"message":"2390","line":12,"column":7,"nodeType":"2326","messageId":"2327","endLine":12,"endColumn":17},{"ruleId":"2324","severity":1,"message":"2386","line":15,"column":7,"nodeType":"2326","messageId":"2327","endLine":15,"endColumn":15},{"ruleId":"2330","severity":1,"message":"2349","line":17,"column":1,"nodeType":"2332","endLine":67,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":12,"column":1,"nodeType":"2332","endLine":43,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":20,"column":1,"nodeType":"2332","endLine":181,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":13,"column":1,"nodeType":"2332","endLine":115,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":14,"column":1,"nodeType":"2332","endLine":213,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2331","line":8,"column":1,"nodeType":"2332","endLine":21,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":6,"column":1,"nodeType":"2332","endLine":80,"endColumn":2},{"ruleId":"2330","severity":1,"message":"2349","line":8,"column":1,"nodeType":"2332","endLine":63,"endColumn":2},{"ruleId":"2324","severity":1,"message":"2437","line":38,"column":17,"nodeType":"2326","messageId":"2327","endLine":38,"endColumn":24},{"ruleId":"2324","severity":1,"message":"2438","line":38,"column":26,"nodeType":"2326","messageId":"2327","endLine":38,"endColumn":33},{"ruleId":"2330","severity":1,"message":"2344","line":52,"column":1,"nodeType":"2332","endLine":105,"endColumn":2},"no-native-reassign",["2439"],"no-negated-in-lhs",["2440"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar",["2439"],["2440"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'str', 'i', 'str', 'i'.","unsafeRefs","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","Assign object to a variable before exporting as module default","'apt' is assigned a value but never used.","no-self-assign","'api' is assigned to itself.","selfAssignment","Unexpected default export of anonymous class","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'keys' is assigned a value but never used.","'coms' is defined but never used.","'d' is assigned a value but never used.","'$fn' is assigned a value but never used.","'Text' is assigned a value but never used.","'Button' is assigned a value but never used.","'message' is assigned a value but never used.","'confirm' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'rows' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'init'. Either include it or remove the dependency array. If 'init' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["2441"],"React Hook React.useEffect has a missing dependency: 'idStr'. Either include it or remove the dependency array.",["2442"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'setKey' is assigned a value but never used.","React Hook React.useCallback has an unnecessary dependency: 'key'. Either exclude it or remove the dependency array.",["2443"],"'$async' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"2444","text":"2445"},"React Hook React.useCallback has a missing dependency: 'multiple'. Either include it or remove the dependency array.",["2446"],{"range":"2447","text":"2445"},{"range":"2448","text":"2445"},"'$http' is assigned a value but never used.","'cacheApi' is assigned a value but never used.","'Modal' is defined but never used.","'SubmitForm' is assigned a value but never used.","'hospSelect' is assigned a value but never used.","'SearchForm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","'Radio' is assigned a value but never used.","'Input' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'data' and 'keys'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["2449"],"no-dupe-keys","Duplicate key 'cache'.","ObjectExpression","Duplicate key 'name'.","Duplicate key 'id'.","Duplicate key 'callback'.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'Tabs' is assigned a value but never used.","'Box' is assigned a value but never used.","'Table' is assigned a value but never used.","'pullLoading' is assigned a value but never used.","'pag' is assigned a value but never used.","'forms' is assigned a value but never used.","'btns' is assigned a value but never used.","'submit' is assigned a value but never used.","'showmodel' is assigned a value but never used.","'selectedKeys' is assigned a value but never used.","'data1' is assigned a value but never used.","'submit1' is assigned a value but never used.","'Upload' is defined but never used.","'Checkbox' is defined but never used.","'submit2' is assigned a value but never used.","'id' is assigned a value but never used.","'showEdit' is assigned a value but never used.","'Page' is assigned a value but never used.","'DatePicker' is defined but never used.","'TextArea' is assigned a value but never used.","'data' is assigned a value but never used.","'uploading' is assigned a value but never used.","'kindName' is assigned a value but never used.","'pag4' is assigned a value but never used.","'submit4' is assigned a value but never used.","'arr' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","Unexpected mix of '&&' and '||'.","'offsetX' is assigned a value but never used.","'offsetY' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"2450","fix":"2451"},{"desc":"2452","fix":"2453"},{"desc":"2454","fix":"2455"},[-1,0],"",{"desc":"2456","fix":"2457"},[-1,0],[-1,0],{"desc":"2458","fix":"2459"},"Update the dependencies array to be: [form, init]",{"range":"2460","text":"2461"},"Update the dependencies array to be: [data, selectedKeys, disabledKeys, cols, move, idStr]",{"range":"2462","text":"2463"},"Update the dependencies array to be: [data, init]",{"range":"2464","text":"2465"},"Update the dependencies array to be: [multiple, onChange, name]",{"range":"2466","text":"2467"},"Update the dependencies array to be: [data, infos, keys]",{"range":"2468","text":"2469"},[1755,1761],"[form, init]",[4739,4783],"[data, selectedKeys, disabledKeys, cols, move, idStr]",[5149,5166],"[data, init]",[1584,1599],"[multiple, onChange, name]",[2276,2285],"[data, infos, keys]"]